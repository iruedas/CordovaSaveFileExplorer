<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.ServiceModel.Primitives</name>
  </assembly>
  <members>
    <member name="T:System.ServiceModel.ActionNotSupportedException">
      <summary>Questa eccezione viene solitamente generata nel client quando l'azione correlata all'operazione richiamata non corrisponde ad alcuna azione di operazioni nel server.</summary>
    </member>
    <member name="M:System.ServiceModel.ActionNotSupportedException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.ActionNotSupportedException" />. </summary>
    </member>
    <member name="M:System.ServiceModel.ActionNotSupportedException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.ActionNotSupportedException" /> con un messaggio di errore specificato.</summary>
      <param name="message">Messaggio di errore nel quale viene indicato il motivo dell’eccezione</param>
    </member>
    <member name="M:System.ServiceModel.ActionNotSupportedException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.ActionNotSupportedException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione.</summary>
      <param name="message">Messaggio di errore nel quale viene indicato il motivo dell’eccezione</param>
      <param name="innerException">Eccezione <see cref="T:System.Exception" /> che ha causato la generazione dell'eccezione corrente. </param>
    </member>
    <member name="T:System.ServiceModel.ChannelFactory">
      <summary>Crea e gestisce i canali utilizzati dai client per inviare messaggi agli endpoint del servizio.</summary>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.ChannelFactory" />.  </summary>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)">
      <summary>Inizializza la channel factory con i comportamenti forniti da un file di configurazione specificato e con quelli specificati nell'endpoint del servizio della channel factory.</summary>
      <param name="configurationName">Nome del file di configurazione.</param>
      <exception cref="T:System.InvalidOperationException">L'endpoint del servizio della channel factory è null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.CreateDescription">
      <summary>Quando viene implementato in una classe derivata, questo metodo crea una descrizione dell'endpoint del servizio associato alla channel factory.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> associato alla channel factory.</returns>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.CreateFactory">
      <summary>Compila la channel factory per l'endpoint corrente della factory.</summary>
      <returns>Interfaccia <see cref="T:System.ServiceModel.Channels.IChannelFactory" /> per l'endpoint della factory corrente.</returns>
      <exception cref="T:System.InvalidOperationException">L'endpoint del servizio al quale i canali della factory si connettono è null, l'associazione dell'endpoint è null oppure manca l'elemento con il nome di configurazione specificato.</exception>
    </member>
    <member name="P:System.ServiceModel.ChannelFactory.Credentials">
      <summary>Ottiene le credenziali utilizzate dai client per comunicare con un endpoint del servizio sui canali prodotti dalla factory.</summary>
      <returns>Credenziali <see cref="T:System.ServiceModel.Description.ClientCredentials" /> utilizzate dai client se sono configurati per la factory o se l'endpoint è diverso da null e si trova nello stato di comunicazione Created o Opening; in caso contrario null.</returns>
    </member>
    <member name="P:System.ServiceModel.ChannelFactory.DefaultCloseTimeout">
      <summary>Ottiene l'intervallo di tempo predefinito fornito per il completamento di un'operazione di chiusura.</summary>
      <returns>
        <see cref="T:System.Timespan" /> predefinito che specifica il tempo entro il quale l'operazione di chiusura deve essere completata prima di scadere.</returns>
    </member>
    <member name="P:System.ServiceModel.ChannelFactory.DefaultOpenTimeout">
      <summary>Ottiene l'intervallo di tempo predefinito fornito per il completamento di un'operazione di apertura.</summary>
      <returns>
        <see cref="T:System.Timespan" /> predefinito che specifica il tempo entro il quale l'operazione di apertura deve essere completata prima di scadere.</returns>
    </member>
    <member name="P:System.ServiceModel.ChannelFactory.Endpoint">
      <summary>Ottiene l'endpoint del servizio al quale si connettono i canali prodotti dalla factory.</summary>
      <returns>Oggetto della classe <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> a cui si connettono i canali prodotti dalla factory.</returns>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.EnsureOpened">
      <summary>Apre la channel factory corrente se non è ancora aperta.</summary>
      <exception cref="T:System.ObjectDisposedException">La factory corrente è in fase di chiusura o chiusa e pertanto non può essere aperta.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.GetProperty``1">
      <summary>Se presente, restituisce l'oggetto tipizzato richiesto dal livello appropriato nello stack dei canali; se non è presente, restituisce null.</summary>
      <returns>L'oggetto tipizzato <paramref name="T" /> richiesto se presente, null in caso contrario.</returns>
      <typeparam name="T">Oggetto tipizzato per il quale il metodo sta eseguendo una query.</typeparam>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Inizializza l'endpoint del servizio della channel factory con un'associazione e un indirizzo specificati.</summary>
      <param name="binding">Elemento <see cref="T:System.ServiceModel.Channels.Binding" /> da utilizzare per inizializzare la channel factory.</param>
      <param name="address">Elemento <see cref="T:System.ServiceModel.EndpointAddress" /> da utilizzare per inizializzare la channel factory.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Inizializza l'endpoint del servizio della channel factory con un endpoint specificato.</summary>
      <param name="endpoint">Elemento <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> utilizzato per inizializzare la channel factory.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="endpoint" /> è null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.String,System.ServiceModel.EndpointAddress)">
      <summary>Inizializza l'endpoint del servizio della channel factory con un indirizzo e una configurazione specificati.</summary>
      <param name="configurationName">Nome del file di configurazione utilizzato per inizializzare la channel factory.</param>
      <param name="address">Elemento <see cref="T:System.ServiceModel.EndpointAddress" /> da utilizzare per inizializzare la channel factory.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnAbort">
      <summary>Termina la channel factory interna della channel factory corrente.</summary>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Consente di avviare un'operazione di chiusura asincrona sulla channel factory interna della channel factory corrente a cui è associato un oggetto di stato. </summary>
      <returns>L'interfaccia <see cref="T:System.IAsyncResult" /> che fa riferimento all' operazione asincrona.</returns>
      <param name="timeout">Intervallo di tempo <see cref="T:System.Timespan" /> entro il quale l'operazione deve essere completata prima di scadere.</param>
      <param name="callback">Delegato <see cref="T:System.AsyncCallback" /> che riceve la notifica del completamento dell'operazione asincrona.</param>
      <param name="state">Oggetto, specificato dall'applicazione, che contiene le informazioni sullo stato associate all'operazione asincrona.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Consente di avviare un'operazione di apertura asincrona sulla channel factory interna della channel factory corrente a cui è associato un oggetto di stato. </summary>
      <returns>L'interfaccia <see cref="T:System.IAsyncResult" /> che fa riferimento all' operazione asincrona.</returns>
      <param name="timeout">Intervallo di tempo <see cref="T:System.Timespan" /> entro il quale l'operazione deve essere completata prima di scadere.</param>
      <param name="callback">Delegato <see cref="T:System.AsyncCallback" /> che riceve la notifica del completamento dell'operazione asincrona.</param>
      <param name="state">Oggetto, specificato dall'applicazione, che contiene le informazioni sullo stato associate all'operazione asincrona.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnClose(System.TimeSpan)">
      <summary>Chiama la chiusura sulla channel factory interna con un timeout specificato per il completamento dell'operazione.</summary>
      <param name="timeout">Intervallo di tempo <see cref="T:System.Timespan" /> entro il quale l'operazione deve essere completata prima di scadere.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnEndClose(System.IAsyncResult)">
      <summary>Completa un'operazione di chiusura asincrona sulla channel factory interna della channel factory corrente. </summary>
      <param name="result">Interfaccia <see cref="T:System.IAsyncResult" /> restituita da una chiamata al metodo <see cref="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnEndOpen(System.IAsyncResult)">
      <summary>Completa un'operazione di apertura asincrona sulla channel factory interna della channel factory corrente. </summary>
      <param name="result">Interfaccia <see cref="T:System.IAsyncResult" /> restituita da una chiamata al metodo <see cref="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnOpen(System.TimeSpan)">
      <summary>Chiama l'apertura sulla channel factory interna della channel factory corrente con un timeout specificato per il completamento dell'operazione.</summary>
      <param name="timeout">Valore <see cref="T:System.Timespan" /> che specifica il tempo entro il quale l'operazione di apertura deve essere completata prima di scadere.</param>
      <exception cref="T:System.InvalidOperationException">Il canale interno del canale corrente è null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnOpened">
      <summary>Inizializza una copia di sola lettura dell'oggetto <see cref="T:System.ServiceModel.Description.ClientCredentials" /> per la channel factory.</summary>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnOpening">
      <summary>Compila la channel factory interna per il canale corrente.</summary>
      <exception cref="T:System.InvalidOperationException">La channel factory interna della channel factory è null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.System#IDisposable#Dispose">
      <summary>Chiude la channel factory corrente.</summary>
    </member>
    <member name="T:System.ServiceModel.ChannelFactory`1">
      <summary>Factory che crea canali di tipi diversi utilizzati dai client per inviare messaggi a endpoint di servizio configurati in vari modi.</summary>
      <typeparam name="TChannel">Tipo di canale prodotto dalla channel factory.Questo tipo deve essere <see cref="T:System.ServiceModel.Channels.IOutputChannel" /> o <see cref="T:System.ServiceModel.Channels.IRequestChannel" />.</typeparam>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ServiceModel.ChannelFactory`1" /> con l'associazione e l'indirizzo endpoint specificati.</summary>
      <param name="binding">Oggetto <see cref="T:System.ServiceModel.Channels.Binding" /> utilizzato per configurare l'endpoint.</param>
      <param name="remoteAddress">Oggetto <see cref="T:System.ServiceModel.EndpointAddress" /> che fornisce la posizione del servizio.</param>
      <exception cref="T:System.ArgumentNullException">La proprietà <paramref name="binding" /> è null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.ChannelFactory`1" /> con il nome della configurazione dell'endpoint specificato.</summary>
      <param name="endpointConfigurationName">Nome di configurazione utilizzato per l'endpoint.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="endpointConfigurationName" /> è null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.#ctor(System.String,System.ServiceModel.EndpointAddress)">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ServiceModel.ChannelFactory`1" /> associata al nome specificato della configurazione dell'endpoint e dell'indirizzo remoto.</summary>
      <param name="endpointConfigurationName">Nome di configurazione utilizzato per l'endpoint.</param>
      <param name="remoteAddress">Oggetto <see cref="T:System.ServiceModel.EndpointAddress" /> che fornisce la posizione del servizio.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="endpointConfigurationName" /> o <paramref name="remoteAddress" /> è null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.#ctor(System.Type)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.ChannelFactory`1" />.  </summary>
      <param name="channelType">Tipo <see cref="T:System.Type" /> del canale creato dalla factory.</param>
      <exception cref="T:System.ArgumentNullException">La proprietà <paramref name="channelType" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">Il tipo <paramref name="channelType" /> è una classe o un tipo di valore, non un'interfaccia</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.CreateChannel">
      <summary>Crea un canale del tipo specificato in un indirizzo endpoint specificato.</summary>
      <returns>Parametro <paramref name="TChannel" /> di tipo <see cref="T:System.ServiceModel.Channels.IChannel" /> creato dalla factory.</returns>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)">
      <summary>Consente di creare un canale utilizzato per inviare messaggi a un servizio presso un indirizzo endpoint specifico.</summary>
      <returns>Parametro <paramref name="TChannel" /> di tipo <see cref="T:System.ServiceModel.Channels.IChannel" /> creato dalla factory.</returns>
      <param name="address">Oggetto <see cref="T:System.ServiceModel.EndpointAddress" /> che fornisce la posizione del servizio.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> è null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>Crea un canale utilizzato per inviare messaggi a un servizio presso un determinato indirizzo endpoint tramite l'indirizzo di trasporto specificato.</summary>
      <returns>Parametro <paramref name="TChannel" /> di tipo <see cref="T:System.ServiceModel.Channels.IChannel" /> creato dalla factory.</returns>
      <param name="address">Oggetto <see cref="T:System.ServiceModel.EndpointAddress" /> che fornisce la posizione del servizio.</param>
      <param name="via">Oggetto <see cref="T:System.Uri" /> contenente l'indirizzo di trasporto a cui il canale invia messaggi.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">L'oggetto <see cref="T:System.ServiceModel.ChannelFactory" /> presenta operazioni duplex che non supporta.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.CreateDescription">
      <summary>Crea una descrizione dell'endpoint di servizio.</summary>
      <returns>Classe <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> del servizio.</returns>
      <exception cref="T:System.InvalidOperationException">Il contratto callback è null ma l'endpoint di servizio ne richiede uno che sia diverso da null.</exception>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1">
      <summary>Fornisce l'implementazione di base utilizzata per creare oggetti client Windows Communication Foundation (WCF) che possono chiamare servizi.</summary>
      <typeparam name="TChannel">Canale da utilizzare per la connessione al servizio.</typeparam>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.ClientBase`1" /> utilizzando l'endpoint di destinazione predefinito del file di configurazione dell'applicazione. </summary>
      <exception cref="T:System.InvalidOperationException">Nel file di configurazione non sono presenti informazioni sull'endpoint predefinito o è presente più di un endpoint oppure non esiste alcun file di configurazione.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.ClientBase`1" /> utilizzando l'associazione e l'indirizzo endpoint specificati. </summary>
      <param name="binding">Associazione da utilizzare per le chiamate al servizio.</param>
      <param name="remoteAddress">Indirizzo dell'endpoint di servizio.</param>
      <exception cref="T:System.ArgumentNullException">L'associazione è null.</exception>
      <exception cref="T:System.ArgumentNullException">L'indirizzo remoto è null.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.ClientBase`1" /> utilizzando le informazioni di configurazione specificate nel file di configurazione dell'applicazione mediante il parametro <paramref name="endpointConfigurationName" />. </summary>
      <param name="endpointConfigurationName">Nome dell'endpoint nel file di configurazione dell'applicazione.</param>
      <exception cref="T:System.ArgumentNullException">Le informazioni sull'endpoint specificate sono null.</exception>
      <exception cref="T:System.InvalidOperationException">L'endpoint non è stato trovato o il contratto dell'endpoint non è valido.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.String,System.ServiceModel.EndpointAddress)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.ClientBase`1" /> utilizzando le informazioni sull'endpoint e sull'indirizzo di destinazione specificati. </summary>
      <param name="endpointConfigurationName">Nome dell'endpoint nel file di configurazione dell'applicazione.</param>
      <param name="remoteAddress">Indirizzo del servizio.</param>
      <exception cref="T:System.ArgumentNullException">L'endpoint è null.</exception>
      <exception cref="T:System.ArgumentNullException">L'indirizzo remoto è null.</exception>
      <exception cref="T:System.InvalidOperationException">L'endpoint non è stato trovato o il contratto dell'endpoint non è valido.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.String,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.ClientBase`1" />.</summary>
      <param name="endpointConfigurationName">Nome dell'endpoint nel file di configurazione dell'applicazione.</param>
      <param name="remoteAddress">Indirizzo del servizio.</param>
      <exception cref="T:System.ArgumentNullException">L'endpoint è null.</exception>
      <exception cref="T:System.ArgumentNullException">L'indirizzo remoto è null.</exception>
      <exception cref="T:System.InvalidOperationException">L'endpoint non è stato trovato o il contratto dell'endpoint non è valido.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.Abort">
      <summary>Determina la transizione immediata dell'oggetto <see cref="T:System.ServiceModel.ClientBase`1" /> dallo stato corrente allo stato di chiusura.</summary>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.Channel">
      <summary>Ottiene il canale interno utilizzato per inviare messaggi a endpoint del servizio con diverse configurazioni.</summary>
      <returns>Canale di un tipo specificato.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelFactory">
      <summary>Ottiene l'oggetto <see cref="T:System.ServiceModel.ChannelFactory`1" /> sottostante.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.ChannelFactory`1" />.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ClientCredentials">
      <summary>Ottiene le credenziali client utilizzate per chiamare un'operazione.</summary>
      <returns>Restituisce una classe <see cref="T:System.ServiceModel.Description.ClientCredentials" /> che rappresenta la prova di identità presentata dal client.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.CreateChannel">
      <summary>Restituisce un nuovo canale per il servizio.</summary>
      <returns>Canale del tipo del contratto di servizio.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.Endpoint">
      <summary>Ottiene l'endpoint di destinazione per il servizio al quale il client WCF può connettersi.</summary>
      <returns>Endpoint di destinazione.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.GetDefaultValueForInitialization``1">
      <summary>Replica il comportamento della parola chiave predefinita in C#.</summary>
      <returns>Restituisce null se T è un tipo di riferimento e zero se T è un tipo di valore numerico.</returns>
      <typeparam name="T">Tipo identificato come numerico o di riferimento dalla parola chiave.</typeparam>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.InnerChannel">
      <summary>Ottiene l'implementazione dell'interfaccia <see cref="T:System.ServiceModel.IClientChannel" /> sottostante.</summary>
      <returns>Canale client per l'oggetto client WCF.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase{`0}.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase{`0}.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)">
      <summary>Fornisce supporto per implementare il modello asincrono basato su eventiPer altre informazioni su su questo modello, vedere Cenni preliminari sul modello asincrono basato su eventi.</summary>
      <param name="beginOperationDelegate">Delegato utilizzato per chiamare l'operazione asincrona.</param>
      <param name="inValues">Valori di input per la chiamata asincrona.</param>
      <param name="endOperationDelegate">Delegato utilizzato per terminare la chiamata asincrona dopo che è stata completata.</param>
      <param name="operationCompletedCallback">Callback fornito dal client richiamato una volta completato il metodo asincrono.Il callback viene passato a <see cref="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate" />.</param>
      <param name="userState">Oggetto <paramref name="userState" /> da associare alla chiamata asincrona.</param>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.State">
      <summary>Ottiene lo stato corrente dell'oggetto <see cref="T:System.ServiceModel.ClientBase`1" />.</summary>
      <returns>Valore dello stato <see cref="T:System.ServiceModel.CommunicationState" /> dell'oggetto.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)">
      <summary>Avvia un'operazione asincrona per chiudere l'oggetto <see cref="T:System.ServiceModel.ClientBase`1" />.</summary>
      <returns>Interfaccia <see cref="T:System.IAsyncResult" /> che fa riferimento all'operazione di chiusura asincrona.</returns>
      <param name="callback">Metodo che riceve il callback al completamento.</param>
      <param name="state">Dati relativi allo stato.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Avvia un'operazione asincrona per chiudere l'oggetto <see cref="T:System.ServiceModel.ClientBase`1" /> entro un determinato intervallo di tempo.</summary>
      <returns>Interfaccia<see cref="T:System.IAsyncResult" /> che fa riferimento all'operazione di avvio chiusura asincrona.</returns>
      <param name="timeout">Periodo entro il quale la chiamata deve essere completata.</param>
      <param name="callback">Oggetto di callback richiamato al completamento dell'operazione.</param>
      <param name="state">Dati relativi allo stato.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)">
      <summary>Avvia un'operazione asincrona per aprire l'oggetto <see cref="T:System.ServiceModel.ClientBase`1" />.</summary>
      <returns>Interfaccia <see cref="T:System.IAsyncResult" /> che fa riferimento all'operazione asincrona di apertura. </returns>
      <param name="callback">Metodo che riceve il callback al completamento.</param>
      <param name="state">Dati relativi allo stato.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Avvia un'operazione asincrona per aprire l'oggetto <see cref="T:System.ServiceModel.ClientBase`1" /> entro l'intervallo di tempo specificato.</summary>
      <returns>Interfaccia <see cref="T:System.IAsyncResult" /> che fa riferimento all'operazione asincrona di apertura.</returns>
      <param name="timeout">Periodo entro il quale la chiamata deve essere completata.</param>
      <param name="callback">Metodo che riceve il callback al completamento.</param>
      <param name="state">Dati relativi allo stato.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Close"></member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)">
      <summary>Determina la transizione dell'oggetto <see cref="T:System.ServiceModel.ClientBase`1" /> dallo stato corrente allo stato di chiusura.</summary>
      <param name="timeout">Periodo entro il quale la chiamata deve essere completata.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Closed">
      <summary>Gestore eventi richiamato quando l'oggetto <see cref="T:System.ServiceModel.ClientBase`1" /> ha eseguito la transizione dallo stato corrente allo stato di chiusura.</summary>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Closing">
      <summary>Gestore eventi richiamato quando l'oggetto <see cref="T:System.ServiceModel.ClientBase`1" /> esegue la transizione dallo stato corrente allo stato di chiusura.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)">
      <summary>Completa un'operazione asincrona di chiusura dell'oggetto <see cref="T:System.ServiceModel.ClientBase`1" />.</summary>
      <param name="result">Interfaccia <see cref="T:System.IAsyncResult" /> utilizzata per completare l'operazione asincrona di chiusura.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)">
      <summary>Completa un'operazione asincrona di apertura dell'oggetto <see cref="T:System.ServiceModel.ClientBase`1" />.</summary>
      <param name="result">Interfaccia <see cref="T:System.IAsyncResult" /> utilizzata per completare l'operazione asincrona di completamento apertura.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Faulted">
      <summary>Gestore eventi richiamato quando si verifica un errore durante l'esecuzione di un'operazione sull'oggetto <see cref="T:System.ServiceModel.ClientBase`1" />.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Open"></member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)">
      <summary>Determina la transizione dell'oggetto <see cref="T:System.ServiceModel.ClientBase`1" /> dallo stato di creazione allo stato di apertura entro l'intervallo di tempo specificato.</summary>
      <param name="timeout">Periodo entro il quale la chiamata deve essere completata.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Opened">
      <summary>Gestore eventi richiamato quando l'oggetto <see cref="T:System.ServiceModel.ClientBase`1" /> esegue la transizione dallo stato di creazione allo stato di apertura.</summary>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Opening">
      <summary>Gestore eventi richiamato quando l'oggetto <see cref="T:System.ServiceModel.ClientBase`1" /> esegue la transizione dallo stato di creazione allo stato di apertura.</summary>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate">
      <summary>Delegato usato dal metodo <see cref="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" /> per chiamare operazioni asincrone sul client. </summary>
      <param name="inValues">Valori di input per la chiamata asincrona.</param>
      <param name="asyncCallback">Riferimento al metodo da chiamare quando viene completata l'operazione asincrona corrispondente.</param>
      <param name="state">Oggetto <see cref="T:System.Object" /> che consente al client di distinguere tra chiamate asincrone diverse.Viene reso disponibile al client nel parametro degli argomenti del callback di completamento evento.</param>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1.ChannelBase`1">
      <summary>Rappresenta la classe ChannelBase generica.</summary>
      <typeparam name="T">Classe generica.</typeparam>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.#ctor(System.ServiceModel.ClientBase{`1})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.ClientBase`1.ChannelBase`1" /> da un'istanza esistente della classe.</summary>
      <param name="client">Oggetto utilizzato per inizializzare la nuova istanza della classe.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
      <summary>Avvia una chiamata asincrona di un metodo specificato dal nome.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> che fa riferimento al metodo asincrono richiamato.</returns>
      <param name="methodName">Nome del metodo da chiamare in modo asincrono.</param>
      <param name="args">Matrice di argomenti per il metodo richiamato.</param>
      <param name="callback">Delegato <see cref="T:System.AsyncCallback" />.</param>
      <param name="state">Oggetto di stato.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.EndInvoke(System.String,System.Object[],System.IAsyncResult)">
      <summary>Completa una chiamata asincrona dal nome di un metodo specificato.</summary>
      <returns>
        <see cref="T:System.Object" /> restituito dal metodo richiamato.</returns>
      <param name="methodName">Nome del metodo chiamato in modo asincrono.</param>
      <param name="args">Matrice di argomenti per il metodo richiamato.</param>
      <param name="result">Risultato restituito da una chiamata.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#IDisposable#Dispose">
      <summary>Esegue attività definite dall'applicazione, ad esempio libera, rilascia o reimposta risorse non gestite associate al canale.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IChannel#GetProperty``1">
      <summary>Restituisce un oggetto tipizzato richiesto, se presente, dal livello appropriato nello stack dei canali.</summary>
      <returns>Se presente, oggetto tipizzato T richiesto oppure null in caso contrario.</returns>
      <typeparam name="TProperty">Oggetto del tipo per il quale il metodo sta eseguendo una query.</typeparam>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>Inizia un'operazione asincrona per trasmettere un messaggio alla destinazione del canale di output.</summary>
      <returns>Interfaccia <see cref="T:System.IAsyncResult" /> che fa riferimento alla trasmissione del messaggio asincrono.</returns>
      <param name="message">Messaggio inviato sul canale di output.</param>
      <param name="callback">Delegato <see cref="T:System.AsyncCallback" />.</param>
      <param name="state">Oggetto, specificato dall'applicazione, che contiene le informazioni sullo stato associate all'operazione asincrona di invio.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Inizia un'operazione asincrona per trasmettere un messaggio alla destinazione del canale di output entro l'intervallo di tempo specificato.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> fa riferimento all'operazione asincrona di invio.</returns>
      <param name="message">Messaggio inviato sul canale di output.</param>
      <param name="timeout">Periodo di tempo che specifica il tempo disponibile per il completamento prima del timeout dell'operazione di invio.</param>
      <param name="callback">Delegato <see cref="T:System.AsyncCallback" /> che riceve la notifica del completamento dell'operazione asincrona di invio.</param>
      <param name="state">Oggetto, specificato dall'applicazione, che contiene le informazioni sullo stato associate all'operazione asincrona di invio.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#EndSend(System.IAsyncResult)">
      <summary>Completa un'operazione asincrona per trasmettere un messaggio alla destinazione del canale di output.</summary>
      <param name="result">Risultato restituito da una chiamata.</param>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#RemoteAddress">
      <summary>Ottiene la destinazione del servizio alla quale vengono inviati i messaggi sul canale di output.</summary>
      <returns>Oggetto della classe <see cref="T:System.ServiceModel.EndpointAddress" /> del servizio a cui il canale di output invia messaggi.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send(System.ServiceModel.Channels.Message)">
      <summary>Trasmette un messaggio alla destinazione del canale di output.</summary>
      <param name="message">Messaggio inviato sul canale di output.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <summary>Invia un messaggio sul canale di output corrente entro l'intervallo di tempo specificato.</summary>
      <param name="message">Messaggio inviato sul canale di output.</param>
      <param name="timeout">Periodo di tempo che specifica il tempo disponibile per il completamento prima del timeout dell'operazione di invio.</param>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Via">
      <summary>Ottiene l'URI che contiene l'indirizzo di trasporto a cui vengono inviati i messaggi sul canale di output.</summary>
      <returns>Oggetto della classe <see cref="T:System.Uri" /> contenente l'indirizzo di trasporto a cui i messaggi vengono inviati sul canale di output.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>Avvia un'operazione asincrona per trasmettere un messaggio di richiesta al lato reply di uno scambio di messaggi request/reply.</summary>
      <returns>Interfaccia <see cref="T:System.IAsyncResult" /> che fa riferimento alla trasmissione del messaggio asincrono.</returns>
      <param name="message">Il messaggio di richiesta da trasmettere.</param>
      <param name="callback">Delegato <see cref="T:System.AsyncCallback" /> che riceve la notifica del completamento dell'operazione asincrona di trasmissione di un messaggio di richiesta.</param>
      <param name="state">Oggetto, specificato dall'applicazione, che contiene le informazioni sullo stato associate all'operazione asincrona di trasmissione di un messaggio di richiesta.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Avvia un'operazione asincrona per trasmettere un messaggio di richiesta al lato reply di uno scambio di messaggi request/reply entro l'intervallo di tempo specificato.</summary>
      <returns>Interfaccia <see cref="T:System.IAsyncResult" /> che fa riferimento alla trasmissione del messaggio asincrono.</returns>
      <param name="message">Il messaggio di richiesta da trasmettere.</param>
      <param name="timeout">Periodo di tempo che specifica l'intervallo di tempo entro il quale deve pervenire una risposta.</param>
      <param name="callback">Delegato <see cref="T:System.AsyncCallback" /> che riceve la notifica del completamento dell'operazione asincrona di trasmissione di un messaggio di richiesta.</param>
      <param name="state">Oggetto, specificato dall'applicazione, che contiene le informazioni sullo stato associate all'operazione asincrona di trasmissione di un messaggio di richiesta.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#EndRequest(System.IAsyncResult)">
      <summary>Completa un'operazione asincrona per restituire una risposta basata sul messaggio a una richiesta trasmessa.</summary>
      <returns>Messaggio ricevuto in risposta alla richiesta.</returns>
      <param name="result">Risultato dell'operazione.</param>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#RemoteAddress">
      <summary>Ottiene l'indirizzo remoto al quale il canale di richiesta invia i messaggi.</summary>
      <returns>
        <see cref="T:System.ServiceModel.EndpointAddress" /> al quale il canale di richiesta invia i messaggi.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request(System.ServiceModel.Channels.Message)">
      <summary>Invia una richiesta basata sul messaggio e restituisce la risposta basata sul messaggio correlata.</summary>
      <returns>Messaggio ricevuto in risposta alla richiesta.</returns>
      <param name="message">Il messaggio di richiesta da trasmettere.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <summary>Invia una richiesta basata sul messaggio e restituisce la risposta basata sul messaggio correlata, entro l'intervallo di tempo specificato.</summary>
      <returns>Messaggio ricevuto in risposta alla richiesta.</returns>
      <param name="message">Il messaggio di richiesta da trasmettere.</param>
      <param name="timeout">Periodo di tempo che specifica l'intervallo di tempo entro il quale deve pervenire una risposta.</param>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Via">
      <summary>Ottiene l'indirizzo di trasporto al quale viene inviata la richiesta.</summary>
      <returns>Oggetto della classe <see cref="T:System.Uri" /> contenente l'indirizzo di trasporto a cui viene inviato il messaggio.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#AllowInitializationUI">
      <summary>Ottiene o imposta un valore che indica se il canale del client consente un'interfaccia utente di inizializzazione.</summary>
      <returns>True se il canale client consente un'interfaccia utente (UI) di inizializzazione; in caso contrario, false.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#BeginDisplayInitializationUI(System.AsyncCallback,System.Object)">
      <summary>Chiamata asincrona per cominciare a utilizzare un'interfaccia utente al fine di ottenere informazioni sulle credenziali.</summary>
      <returns>Interfaccia <see cref="T:System.IAsyncResult" /> da utilizzare per il callback al termine dell'elaborazione.</returns>
      <param name="callback">Il metodo chiamato al termine dell'esecuzione di questo metodo.</param>
      <param name="state">Informazioni sullo stato del canale.</param>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#DidInteractiveInitialization">
      <summary>Ottiene un valore che indica se è stata eseguita una chiamata a un'interfaccia utente per ottenere informazioni sulle credenziali.</summary>
      <returns>True se è stata effettuata una chiamata a un'interfaccia utente per ottenere informazioni sulle credenziali; in caso contrario, false.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#DisplayInitializationUI">
      <summary>Specifica una chiamata a un'interfaccia utente per ottenere informazioni sulle credenziali.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#EndDisplayInitializationUI(System.IAsyncResult)">
      <summary>Chiamato quando la chiamata a BeginDisplayInitializationUI è stata completata.</summary>
      <param name="result">Risultato dell'operazione.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#UnknownMessageReceived">
      <summary>Il gestore eventi che viene richiamato quando l'oggetto ClientBase riceve un messaggio sconosciuto.</summary>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#Via">
      <summary>Ottiene l'URI contenente l'indirizzo di trasporto a cui vengono inviati i messaggi sul canale client.</summary>
      <returns>URI contenente l'indirizzo di trasporto a cui i messaggi vengono inviati sul canale.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Abort">
      <summary>Comporta la transizione immediata di un oggetto di comunicazione dallo stato corrente allo stato di chiusura.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)">
      <summary>Avvia un'operazione asincrona finalizzata a chiudere un oggetto di comunicazione.</summary>
      <returns>Interfaccia <see cref="T:System.IAsyncResult" /> che fa riferimento all'operazione di chiusura asincrona.</returns>
      <param name="callback">Delegato <see cref="T:System.AsyncCallback" /> che riceve la notifica del completamento dell'operazione di chiusura asincrona.</param>
      <param name="state">Un oggetto, specificato dall'applicazione, che contiene le informazioni di stato associate all'operazione di chiusura asincrona.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Consente di iniziare un'operazione asincrona finalizzata a chiudere un oggetto di comunicazione entro un determinato intervallo di tempo.</summary>
      <returns>Interfaccia <see cref="T:System.IAsyncResult" /> che fa riferimento all'operazione di chiusura asincrona.</returns>
      <param name="timeout">Periodo di tempo che specifica il tempo disponibile per il completamento prima del timeout dell'operazione di invio.</param>
      <param name="callback">Delegato <see cref="T:System.AsyncCallback" /> che riceve la notifica del completamento dell'operazione di chiusura asincrona.</param>
      <param name="state">Un oggetto, specificato dall'applicazione, che contiene le informazioni di stato associate all'operazione di chiusura asincrona.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)">
      <summary>Consente di iniziare un'operazione asincrona finalizzata ad aprire un oggetto di comunicazione.</summary>
      <returns>Interfaccia <see cref="T:System.IAsyncResult" /> che fa riferimento all'operazione asincrona di apertura.</returns>
      <param name="callback">Delegato <see cref="T:System.AsyncCallback" /> che riceve la notifica del completamento dell'operazione di apertura asincrona.</param>
      <param name="state">Oggetto, specificato dall'applicazione, che contiene le informazioni di stato associate all'operazione di apertura asincrona.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Consente di iniziare un'operazione asincrona finalizzata ad aprire un oggetto di comunicazione entro un determinato intervallo di tempo.</summary>
      <returns>Interfaccia <see cref="T:System.IAsyncResult" /> che fa riferimento all'operazione asincrona di apertura.</returns>
      <param name="timeout">Periodo di tempo che specifica il tempo disponibile per il completamento prima del timeout dell'operazione di invio.</param>
      <param name="callback">Delegato <see cref="T:System.AsyncCallback" /> che riceve la notifica del completamento dell'operazione di apertura asincrona.</param>
      <param name="state">Oggetto, specificato dall'applicazione, che contiene le informazioni di stato associate all'operazione di apertura asincrona.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close">
      <summary>Comporta la transizione di un oggetto di comunicazione dallo stato corrente allo stato di chiusura.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)">
      <summary>Comporta la transizione di un oggetto di comunicazione dallo stato corrente allo stato di chiusura.</summary>
      <param name="timeout">Periodo di tempo che specifica il tempo disponibile per il completamento prima del timeout dell'operazione di invio.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Closed">
      <summary>Gestore eventi richiamato quando l'oggetto ClientBase ha eseguito la transizione dallo stato corrente allo stato di chiusura.</summary>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Closing">
      <summary>Gestore eventi richiamato quando l'oggetto ClientBase esegue la transizione dallo stato corrente allo stato di chiusura.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)">
      <summary>Consente di completare un'operazione asincrona finalizzata a chiudere un oggetto di comunicazione.</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> restituita da una chiamata al metodo BeginClose().</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)">
      <summary>Consente di completare un'operazione asincrona finalizzata ad aprire un oggetto di comunicazione.</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> restituita da una chiamata al metodo BeginClose().</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Faulted">
      <summary>Gestore eventi richiamato quando si verifica un errore durante l'esecuzione di un'operazione sull'oggetto ClientBase.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open">
      <summary>Comporta la transizione di un oggetto di comunicazione dallo stato di creazione allo stato di apertura.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)">
      <summary>Comporta la transizione di un oggetto di comunicazione dallo stato di creazione allo stato di apertura entro un determinato intervallo di tempo.</summary>
      <param name="timeout">Periodo di tempo che specifica il tempo disponibile per il completamento prima del timeout dell'operazione di invio.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Opened">
      <summary>Gestore eventi richiamato quando l'oggetto ClientBase ha eseguito la transizione dallo stato Created allo stato Opened.</summary>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Opening">
      <summary>Gestore eventi richiamato quando l'oggetto ClientBase esegue la transizione dallo stato di creazione allo stato di apertura.</summary>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#State">
      <summary>Ottiene lo stato corrente dell'oggetto orientato alla comunicazione.</summary>
      <returns>Valore dello stato <see cref="T:System.ServiceModel.CommunicationState" /> dell'oggetto.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#AllowOutputBatching">
      <summary>Ottiene o imposta un valore che indica se la divisione in batch dei messaggi in uscita è consentita; in caso contrario, restituisce false.</summary>
      <returns>True se il batch dei messaggi in uscita è consentito. In caso contrario, false.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#InputSession">
      <summary>Consente di ottenere la sessione di input del canale.</summary>
      <returns>Sessione di input per il canale.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#LocalAddress">
      <summary>Consente di ottenere l'endpoint locale del canale.</summary>
      <returns>Endpoint locale del canale.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#OperationTimeout">
      <summary>Consente di ottenere o impostare il timeout di completamento di un'operazione, scaduto il quale viene generata un'eccezione.</summary>
      <returns>Periodo di tempo che specifica il timeout di completamento di un'operazione.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#OutputSession">
      <summary>Ottiene la sessione di output associata al canale, se presente.</summary>
      <returns>Implementazione <see cref="T:System.ServiceModel.Channels.IOutputSession" /> se esiste una sessione di input. In caso contrario, null.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#RemoteAddress">
      <summary>Ottiene l'indirizzo remoto associato al canale.</summary>
      <returns>Indirizzo <see cref="T:System.ServiceModel.EndpointAddress" /> remoto del canale.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#SessionId">
      <summary>Ottiene l'ID della sessione corrente, se presente.</summary>
      <returns>ID della sessione corrente, se presente.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IExtensibleObject{T}#Extensions">
      <summary>Consente di ottenere una raccolta di oggetti estensione per questo oggetto flessibile.</summary>
      <returns>
        <see cref="T:System.ServiceModel.IExtensionCollection`1" /> di oggetti estensione.</returns>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1.EndOperationDelegate">
      <summary>Rappresenta un delegato richiamato dal metodo <see cref="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" /> quando viene completata senza errori la chiamata eseguita da <see cref="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" /> a <see cref="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate" />.</summary>
      <param name="result">Risultato restituito dalla chiamata eseguita da <see cref="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" />a <see cref="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate" />.</param>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1.InvokeAsyncCompletedEventArgs">
      <summary>Archivia i risultati di una chiamata asincrona eseguita dal client.</summary>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.InvokeAsyncCompletedEventArgs.Results">
      <summary>Ottiene i risultati di una chiamata asincrona eseguita dal client.</summary>
      <returns>Matrice di <see cref="T:System.Object" /> contenente i risultati di una chiamata asincrona eseguita dal client.</returns>
    </member>
    <member name="T:System.ServiceModel.CommunicationException">
      <summary>Rappresenta un errore di comunicazione in un'applicazione lato server o lato client.</summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.CommunicationException" />. </summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationException.#ctor(System.String)">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ServiceModel.CommunicationException" /> utilizzando il messaggio specificato.</summary>
      <param name="message">Descrizione della condizione di errore.</param>
    </member>
    <member name="M:System.ServiceModel.CommunicationException.#ctor(System.String,System.Exception)">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ServiceModel.CommunicationException" /> utilizzando il messaggio e l'eccezione interna specificati.</summary>
      <param name="message">Descrizione della condizione di errore.</param>
      <param name="innerException">Eccezione interna da utilizzare.</param>
    </member>
    <member name="T:System.ServiceModel.CommunicationObjectAbortedException">
      <summary>Eccezione generata quando la chiamata riguarda un oggetto <see cref="T:System.ServiceModel.ICommunicationObject" /> interrotto.</summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.CommunicationObjectAbortedException" />.  </summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.CommunicationObjectAbortedException" /> con il messaggio specificato. </summary>
      <param name="message">Messaggio contenuto nell'eccezione.</param>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor(System.String,System.Exception)">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ServiceModel.CommunicationObjectAbortedException" /> utilizzando il messaggio e l'eccezione interna specificati. </summary>
      <param name="message">Messaggio dell'eccezione.</param>
      <param name="innerException">Eccezione interna.</param>
    </member>
    <member name="T:System.ServiceModel.CommunicationObjectFaultedException">
      <summary>Eccezione generata quando si effettua una chiamata a un oggetto di comunicazione per cui si è verificato un errore. </summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" />. </summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" /> utilizzando il messaggio specificato.</summary>
      <param name="message">Messaggio in cui viene descritta l'eccezione.</param>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor(System.String,System.Exception)">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" /> utilizzando il messaggio e l'eccezione interna specificati.</summary>
      <param name="message">Messaggio dell'eccezione.</param>
      <param name="innerException">Eccezione interna.</param>
    </member>
    <member name="T:System.ServiceModel.CommunicationState">
      <summary>Definisce gli stati in cui può trovarsi un oggetto <see cref="T:System.ServiceModel.ICommunicationObject" />. </summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Closed">
      <summary>Indica che l'oggetto di comunicazione è stato chiuso e non è più utilizzabile. </summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Closing">
      <summary>Indica che l'oggetto di comunicazione è in fase di transizione allo stato <see cref="F:System.ServiceModel.CommunicationState.Closed" />. </summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Created">
      <summary>Indica che è stata creata l'istanza dell'oggetto di comunicazione e che è possibile configurarlo, ma non aprirlo o utilizzarlo.</summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Faulted">
      <summary>Indica che per l'oggetto di comunicazione si è verificato un errore di cui è impossibile eseguire il recupero e che lo rende non più utilizzabile. </summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Opened">
      <summary>Indica che l'oggetto di comunicazione è ora aperto e pronto per l'utilizzo. </summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Opening">
      <summary>Indica che l'oggetto di comunicazione è in fase di transizione dallo stato <see cref="F:System.ServiceModel.CommunicationState.Created" /> allo stato <see cref="F:System.ServiceModel.CommunicationState.Opened" />. </summary>
    </member>
    <member name="T:System.ServiceModel.DataContractFormatAttribute">
      <summary>Consente di configurare l'infrastruttura Windows Communication Foundation (WCF) in modo che utilizzi il serializzatore <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</summary>
    </member>
    <member name="M:System.ServiceModel.DataContractFormatAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.DataContractFormatAttribute" />. </summary>
    </member>
    <member name="P:System.ServiceModel.DataContractFormatAttribute.Style">
      <summary>Ottiene o imposta lo stile SOAP dei dati serializzati.</summary>
      <returns>Uno dei valori di <see cref="T:System.ServiceModel.OperationFormatStyle" />.Il valore predefinito è <see cref="F:System.ServiceModel.OperationFormatStyle.Document" />.</returns>
    </member>
    <member name="T:System.ServiceModel.EndpointAddress">
      <summary>Fornisce un indirizzo di rete univoco che un client utilizza per comunicare con un endpoint del servizio.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.EndpointAddress" /> con la stringa URI specificata.</summary>
      <param name="uri">URI che identifica l'endpoint.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.#ctor(System.Uri,System.ServiceModel.Channels.AddressHeader[])">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.EndpointAddress" /> con l'URI e le intestazioni specificati.</summary>
      <param name="uri">Oggetto <see cref="T:System.Uri" /> che identifica la posizione dell'endpoint.</param>
      <param name="addressHeaders">Oggetto <see cref="T:System.Array" /> di tipo <see cref="T:System.ServiceModel.Channels.AddressHeader" /> contenente informazioni sull'indirizzo utilizzate per interagire con l'endpoint.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.#ctor(System.Uri,System.ServiceModel.EndpointIdentity,System.ServiceModel.Channels.AddressHeader[])">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.EndpointAddress" /> con l'URI, l'identità e le intestazioni specificate.</summary>
      <param name="uri">Oggetto <see cref="T:System.Uri" /> che identifica la posizione dell'endpoint.</param>
      <param name="identity">Oggetto <see cref="T:System.ServiceModel.EndpointIdentity" /> per l'endpoint.</param>
      <param name="addressHeaders">Oggetto <see cref="T:System.Array" /> di tipo <see cref="T:System.ServiceModel.Channels.AddressHeader" /> contenente informazioni sull'indirizzo utilizzate per interagire con l'endpoint.</param>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.AnonymousUri">
      <summary>Ottiene una rappresentazione indipendente dalla versione dell'URI anonimo.</summary>
      <returns>Oggetto <see cref="T:System.Uri" /> con il valore http://schemas.microsoft.com/2005/12/ServiceModel/Addressing/Anonymous.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.ApplyTo(System.ServiceModel.Channels.Message)">
      <summary>Assegna l'URI e le proprietà dell'indirizzo endpoint ai valori delle intestazioni di un messaggio specificato.</summary>
      <param name="message">Oggetto <see cref="T:System.ServiceModel.Channels.Message" /> di cui vengono assegnati i valori delle intestazioni.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> è null.</exception>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.Equals(System.Object)">
      <summary>Restituisce un valore che indica se un oggetto specificato è equivalente all'indirizzo endpoint corrente.</summary>
      <returns>true se l'oggetto specificato è equivalente all'indirizzo corrente; in caso contrario, false.</returns>
      <param name="obj">Oggetto <see cref="T:System.Object" /> da confrontare con l'indirizzo dell'endpoint corrente.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.GetHashCode">
      <summary>Fornisce un codice hash univoco per l'indirizzo endpoint corrente. </summary>
      <returns>Codice hash univoco per l'indirizzo endpoint corrente.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.Headers">
      <summary>Ottiene la raccolta delle intestazioni degli indirizzi relativi agli endpoint che il generatore è in grado di creare.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Channels.AddressHeaderCollection" /> contenente informazioni sull'indirizzo per l'endpoint.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.Identity">
      <summary>Ottiene l'identità per l'endpoint utilizzato per l'autenticazione.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.EndpointIdentity" /> per l'endpoint.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.IsAnonymous">
      <summary>Ottiene un valore che indica se l'endpoint è anonimo.</summary>
      <returns>true se l'endpoint è <see cref="P:System.ServiceModel.EndpointAddress.AnonymousUri" />; in caso contrario, false.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.IsNone">
      <summary>Ottiene un valore che indica se l'URI per l'endpoint è <see cref="P:System.ServiceModel.EndpointAddress.NoneUri" />.</summary>
      <returns>true se l'URI dell'endpoint è <see cref="P:System.ServiceModel.EndpointAddress.NoneUri" />; in caso contrario, false. </returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.NoneUri">
      <summary>Ottiene un URI indipendente dalla versione utilizzato per l'indirizzo di un endpoint a cui non deve essere inviato un messaggio.</summary>
      <returns>Oggetto <see cref="T:System.Uri" /> con il valore http://schemas.microsoft.com/2005/12/ServiceModel/Addressing/None.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.op_Equality(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress)">
      <summary>Restituisce un valore che indica se gli indirizzi endpoint specificati non sono equivalenti.</summary>
      <returns>true se gli indirizzi endpoint sono equivalenti; in caso contrario, false.</returns>
      <param name="address1">Uno degli oggetti <see cref="T:System.ServiceModel.EndpointAddress" /> da confrontare.</param>
      <param name="address2">Uno degli oggetti <see cref="T:System.ServiceModel.EndpointAddress" /> da confrontare.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.op_Inequality(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress)">
      <summary>Restituisce un valore che indica se gli indirizzi endpoint specificati non sono equivalenti.</summary>
      <returns>true se gli indirizzi endpoint non sono equivalenti; in caso contrario, false.</returns>
      <param name="address1">Uno degli oggetti <see cref="T:System.ServiceModel.EndpointAddress" /> da confrontare.</param>
      <param name="address2">Uno degli oggetti <see cref="T:System.ServiceModel.EndpointAddress" /> da confrontare.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.ReadFrom(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryReader)">
      <summary>Legge un indirizzo endpoint per una versione di indirizzo specificata da un lettore di dizionario XML specificato.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.EndpointAddress" /> letto dal lettore di dizionario XML.</returns>
      <param name="addressingVersion">Oggetto <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> dell'indirizzo endpoint corrente.</param>
      <param name="reader">Oggetto <see cref="T:System.Xml.XmlDictionaryReader" /> da cui viene ottenuto l'indirizzo endpoint.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.ToString">
      <summary>Restituisce una rappresentazione canonica in forma di stringa dell'URI contenuto nell'indirizzo endpoint.</summary>
      <returns>URI che identifica l'endpoint.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.Uri">
      <summary>Ottiene l'URI per l'endpoint.</summary>
      <returns>Oggetto <see cref="T:System.Uri" /> per l'endpoint.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.WriteContentsTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryWriter)">
      <summary>Salva tutti i nodi figlio del nodo nel writer di dizionario XML specificato.</summary>
      <param name="addressingVersion">Oggetto <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> dell'indirizzo endpoint corrente.</param>
      <param name="writer">Oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> in cui viene salvato l'indirizzo endpoint.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> o <paramref name="addressingVersion" /> è null.</exception>
    </member>
    <member name="T:System.ServiceModel.EndpointAddressBuilder">
      <summary>Factory per creare indirizzi endpoint nuovi (non modificabili) aventi valori di proprietà specifici.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressBuilder.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.EndpointAddressBuilder" />.  </summary>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressBuilder.#ctor(System.ServiceModel.EndpointAddress)">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ServiceModel.EndpointAddressBuilder" /> a partire da un indirizzo endpoint esistente.</summary>
      <param name="address">
        <see cref="T:System.ServiceModel.EndpointAddress" />, i cui valori di proprietà sono utilizzati per inizializzare i valori di proprietà di questa istanza.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> è null.</exception>
    </member>
    <member name="P:System.ServiceModel.EndpointAddressBuilder.Headers">
      <summary>Consente di ottenere l'elenco delle intestazioni degli indirizzi relativi agli endpoint che il generatore è in grado di creare.</summary>
      <returns>Elenco <see cref="T:System.Collections.Generic.List`1" /> di tipo <see cref="T:System.ServiceModel.Channels.AddressHeader" /> contenente le intestazioni degli indirizzi relativi agli endpoint che il generatore è in grado di creare.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddressBuilder.Identity">
      <summary>Consente di ottenere o impostare gli ID relativi agli endpoint che il generatore è in grado di creare.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.EndpointIdentity" /> per l'endpoint.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressBuilder.ToEndpointAddress">
      <summary>Consente di creare un nuovo indirizzo endpoint inizializzato con i valori di proprietà del generatore di indirizzi endpoint corrente.</summary>
      <returns>Indirizzo <see cref="T:System.ServiceModel.EndpointAddress" /> le cui proprietà sono inizializzate utilizzando i valori del generatore di indirizzi endpoint corrente.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddressBuilder.Uri">
      <summary>Consente di ottenere o impostare l'URI relativo agli endpoint che il generatore è in grado di creare.</summary>
      <returns>URI <see cref="T:System.Uri" /> che specifica l'indirizzo endpoint.</returns>
    </member>
    <member name="T:System.ServiceModel.EndpointIdentity">
      <summary>Classe astratta che, quando implementata, fornisce un'identità che consente l'autenticazione di un endpoint da parte dei client con i quali vengono scambiati messaggi.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointIdentity.#ctor">
      <summary>Crea un'istanza vuota dell'oggetto <see cref="T:System.ServiceModel.EndpointIdentity" />.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointIdentity.Equals(System.Object)">
      <summary>Restituisce un valore che determina se un oggetto specificato corrisponde all'oggetto identità corrente o se tali oggetti contengono le stesse proprietà di sicurezza.</summary>
      <returns>true se la classe <paramref name="obj" /> dell'oggetto corrisponde all'identità corrente o contiene le stesse proprietà di sicurezza; in caso contrario, false.</returns>
      <param name="obj">Classe <see cref="T:System.Object" /> confrontata con l'identità corrente per stabilirne l'uguaglianza.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointIdentity.GetHashCode">
      <summary>Fornisce un codice hash per l'istanza corrente dell'identità.</summary>
      <returns>Codice hash per l'identità corrente.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointIdentity.ToString">
      <summary>Restituisce l'identità.</summary>
      <returns>
        <see cref="T:System.String" /> nel formato "identity(string)" in cui string corrisponde a <see cref="P:System.ServiceModel.EndpointIdentity.IdentityClaim" />.</returns>
    </member>
    <member name="T:System.ServiceModel.EndpointNotFoundException">
      <summary>Eccezione generata quando risulta impossibile trovare o raggiungere un endpoint remoto.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointNotFoundException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.EndpointNotFoundException" /> con un messaggio di errore specificato.</summary>
      <param name="message">Messaggio di errore nel quale viene indicato il motivo dell’eccezione</param>
    </member>
    <member name="M:System.ServiceModel.EndpointNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ServiceModel.EndpointNotFoundException" /> con il messaggio di errore specificato e l'eccezione interna che ha generato l'eccezione corrente.</summary>
      <param name="message">Messaggio di errore nel quale viene indicato il motivo dell’eccezione</param>
      <param name="innerException">Eccezione <see cref="T:System.Exception" /> che ha causato la generazione dell'eccezione corrente.</param>
    </member>
    <member name="T:System.ServiceModel.EnvelopeVersion">
      <summary>Contiene informazioni riguardanti la versione di SOAP associata a un messaggio e al suo scambio.</summary>
    </member>
    <member name="M:System.ServiceModel.EnvelopeVersion.GetUltimateDestinationActorValues">
      <summary>Consente di ottenere una stringa contenente il nome URI del ruolo SOAP associato alla versione di messaggio corrente della destinazione finale.</summary>
      <returns>Se si utilizza SOAP 1.1, viene utilizzata una stringa vuota. Se si utilizza SOAP 1.2, viene utilizzata una stringa contenente http://www.w3.org/2003/05/soap-envelope/role/ultimateReceiver</returns>
    </member>
    <member name="P:System.ServiceModel.EnvelopeVersion.NextDestinationActorValue">
      <summary>Consente di ottenere una stringa contenente il nome URI del ruolo SOAP associato alla versione di messaggio corrente della destinazione successiva.</summary>
      <returns>Se si utilizza SOAP 1.1 viene utilizzata una stringa contenente "http://schemas.xmlsoap.org/soap/actor/next". Se si utilizza SOAP 1.2 viene utilizzata una stringa contenente "http://www.w3.org/2003/05/soap-envelope/role/next". Se si utilizza la versione di messaggio none, viene utilizzata una stringa vuota.</returns>
    </member>
    <member name="P:System.ServiceModel.EnvelopeVersion.None">
      <summary>Ottiene la versione envelope non basata su una versione di SOAP.</summary>
      <returns>Versione envelope non basata sulla formattazione SOAP.</returns>
    </member>
    <member name="P:System.ServiceModel.EnvelopeVersion.Soap11">
      <summary>Ottiene la versione envelope di SOAP 1.1.</summary>
      <returns>Oggetto SOAP1.1 <see cref="T:System.ServiceModel.EnvelopeVersion" />.</returns>
    </member>
    <member name="P:System.ServiceModel.EnvelopeVersion.Soap12">
      <summary>Ottiene la versione envelope di SOAP 1.2.</summary>
      <returns>Oggetto SOAP1.2 <see cref="T:System.ServiceModel.EnvelopeVersion" />.</returns>
    </member>
    <member name="M:System.ServiceModel.EnvelopeVersion.ToString">
      <summary>Ottiene una stringa che rappresenta la versione envelope corrente.</summary>
      <returns>Rappresentazione in forma di stringa della versione busta corrente.</returns>
    </member>
    <member name="T:System.ServiceModel.ExceptionDetail">
      <summary>Contiene le informazioni dettagliate sull'errore.</summary>
    </member>
    <member name="M:System.ServiceModel.ExceptionDetail.#ctor(System.Exception)">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ServiceModel.ExceptionDetail" /> a partire dall'eccezione. </summary>
      <param name="exception">Eccezione da serializzare come oggetto <see cref="T:System.ServiceModel.ExceptionDetail" />.</param>
      <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="exception" /> è null.</exception>
    </member>
    <member name="P:System.ServiceModel.ExceptionDetail.HelpLink">
      <summary>Consente di ottenere o impostare il collegamento al file della Guida contenuto nell'eccezione passata al costruttore.</summary>
      <returns>Informazioni contenute nel collegamento al file della Guida dell'eccezione.</returns>
    </member>
    <member name="P:System.ServiceModel.ExceptionDetail.InnerException">
      <summary>Consente di ottenere o impostare l'oggetto <see cref="T:System.ServiceModel.ExceptionDetail" /> che rappresenta l'eccezione interna.</summary>
      <returns>Informazioni sull'eccezione interna.</returns>
    </member>
    <member name="P:System.ServiceModel.ExceptionDetail.Message">
      <summary>Consente di ottenere o impostare il messaggio contenuto nell'eccezione passata al costruttore.</summary>
      <returns>Messaggio dell'eccezione.</returns>
    </member>
    <member name="P:System.ServiceModel.ExceptionDetail.StackTrace">
      <summary>Consente di ottenere o impostare le informazioni contenute nella traccia dello stack contenute nell'eccezione passata al costruttore.</summary>
      <returns>Traccia dello stack dell'eccezione.</returns>
    </member>
    <member name="M:System.ServiceModel.ExceptionDetail.ToString">
      <summary>Restituisce le informazioni dettagliate sull'eccezione passata al costruttore.</summary>
      <returns>Messaggio e traccia dello stack dell'eccezione.</returns>
    </member>
    <member name="P:System.ServiceModel.ExceptionDetail.Type">
      <summary>Consente di ottenere o impostare la stringa di tipo contenuta nell'eccezione passata al costruttore.</summary>
      <returns>Stringa di tipo contenuta nell'eccezione passata al costruttore.</returns>
    </member>
    <member name="T:System.ServiceModel.FaultCode">
      <summary>Rappresenta un codice di errore SOAP. </summary>
    </member>
    <member name="M:System.ServiceModel.FaultCode.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.FaultCode" />.  </summary>
      <param name="name">Nome del codice di errore.</param>
    </member>
    <member name="M:System.ServiceModel.FaultCode.#ctor(System.String,System.ServiceModel.FaultCode)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.FaultCode" />. </summary>
      <param name="name">Nome del codice di errore.</param>
      <param name="subCode">Codice secondario dell'errore.</param>
    </member>
    <member name="M:System.ServiceModel.FaultCode.#ctor(System.String,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.FaultCode" /> con il nome e lo spazio dei nomi specificati. </summary>
      <param name="name">Nome locale del codice di errore. </param>
      <param name="ns">Nome dello spazio dei nomi del codice di errore. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> o <paramref name="ns" /> è null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="name" /> è una stringa vuota. </exception>
    </member>
    <member name="M:System.ServiceModel.FaultCode.#ctor(System.String,System.String,System.ServiceModel.FaultCode)">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ServiceModel.FaultCode" /> con il nome, lo spazio dei nomi e il codice secondario di errore specificati. </summary>
      <param name="name">Nome locale del codice di errore. </param>
      <param name="ns">Nome dello spazio dei nomi del codice di errore. </param>
      <param name="subCode">Oggetto <see cref="T:System.ServiceModel.FaultCode" /> che rappresenta il codice secondario di errore. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> o <paramref name="ns" /> è null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="name" /> è una stringa vuota. </exception>
    </member>
    <member name="M:System.ServiceModel.FaultCode.CreateSenderFaultCode(System.ServiceModel.FaultCode)">
      <summary>Consente di creare un codice di errore di mittente contenente il codice secondario specificato. </summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.FaultCode" /> la cui proprietà <see cref="P:System.ServiceModel.FaultCode.SubCode" /> contiene il codice secondario di errore SOAP creato. </returns>
      <param name="subCode">Oggetto <see cref="T:System.ServiceModel.FaultCode" /> che rappresenta il codice secondario di errore. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="subCode" /> è null. </exception>
    </member>
    <member name="P:System.ServiceModel.FaultCode.IsPredefinedFault">
      <summary>Ottiene un valore che indica se l'errore è di SOAP 1.1 o SOAP 1.2.</summary>
      <returns>true se l'errore è di SOAP 1.1 o SOAP 1.2. In caso contrario, false.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.IsReceiverFault">
      <summary>Ottiene un valore che indica se l'errore è un errore server di SOAP 1.1 o un errore di destinatario di SOAP 1.2.</summary>
      <returns>true se l'errore è un errore server di SOAP 1.1 o un errore di destinatario di SOAP 1.2. In caso contrario, false.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.IsSenderFault">
      <summary>Ottiene un valore che indica se l'errore è un errore client di SOAP 1.1 o un errore di mittente di SOAP 1.2.</summary>
      <returns>true se l'errore è un errore client di SOAP 1.1 o un errore di mittente di SOAP 1.2. In caso contrario, false.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.Name">
      <summary>Ottiene il nome locale del codice di errore. </summary>
      <returns>Nome locale del codice di errore. </returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.Namespace">
      <summary>Consente di ottenere lo spazio dei nomi del codice di errore. </summary>
      <returns>URI (Uniform Resource Identifier) del nome dello spazio dei nomi. </returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.SubCode">
      <summary>Consente di ottenere il codice secondario dell'errore. </summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.FaultCode" /> che rappresenta il codice secondario di errore. </returns>
    </member>
    <member name="T:System.ServiceModel.FaultContractAttribute">
      <summary>Consente di specificare uno o più errori SOAP da restituire quando un'operazione di servizio rileva errori di elaborazione.</summary>
    </member>
    <member name="M:System.ServiceModel.FaultContractAttribute.#ctor(System.Type)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.FaultContractAttribute" />.  </summary>
      <param name="detailType">Tipo serializzabile contenente le informazioni sull'errore per il chiamante.</param>
      <exception cref="T:System.ArgumentNullException">L'argomento <paramref name="detailType" /> è null.</exception>
    </member>
    <member name="P:System.ServiceModel.FaultContractAttribute.Action">
      <summary>Consente di ottenere o impostare l'azione del messaggio di errore SOAP specificato come parte del contratto dell'operazione.</summary>
      <returns>Valore dell'azione del messaggio di errore SOAP.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultContractAttribute.DetailType">
      <summary>Consente di ottenere il tipo di un oggetto serializzabile contenente le informazioni sull'errore.</summary>
      <returns>Tipo che rappresenta la classe dell'errore serializzabile. </returns>
    </member>
    <member name="P:System.ServiceModel.FaultContractAttribute.Name">
      <summary>Consente di ottenere o impostare il nome del messaggio di errore in WSDL (Web Services Description Language).</summary>
      <returns>Nome del messaggio di errore .L'impostazione predefinita è il nome del tipo utilizzato come dettaglio dell'errore.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultContractAttribute.Namespace">
      <summary>Consente di ottenere o impostare lo spazio dei nomi dell'errore SOAP.</summary>
      <returns>Spazio dei nomi dell'errore SOAP.</returns>
    </member>
    <member name="T:System.ServiceModel.FaultException">
      <summary>Rappresenta un errore SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.FaultException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.FaultException" />.  </summary>
    </member>
    <member name="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.Channels.MessageFault,System.String)">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ServiceModel.FaultException" /> utilizzando i valori di messaggio di errore specificati e la stringa di azione fornita.</summary>
      <param name="fault">Messaggio di errore contenente i valori predefiniti dell'errore SOAP da utilizzare.</param>
      <param name="action">Azione dell'errore SOAP.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.FaultReason,System.ServiceModel.FaultCode,System.String)">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ServiceModel.FaultException" /> utilizzando il motivo, il codice di errore e il valore di azione specificati.</summary>
      <param name="reason">Motivo dell'errore SOAP.</param>
      <param name="code">Codice dell'errore SOAP.</param>
      <param name="action">Valore di azione dell'errore SOAP.</param>
    </member>
    <member name="P:System.ServiceModel.FaultException.Action">
      <summary>Consente di ottenere il valore di azione SOAP relativo al messaggio di errore.</summary>
      <returns>Valore di azione SOAP relativo al messaggio di errore.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultException.Code">
      <summary>Consente di ottenere il codice dell'errore SOAP.</summary>
      <returns>Codice dell'errore SOAP.</returns>
    </member>
    <member name="M:System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.String,System.Type[])">
      <summary>Restituisce un oggetto <see cref="T:System.ServiceModel.Channels.FaultException" /> a partire dal messaggio di errore, dall'azione e dalla matrice di tipi di dettaglio specificati.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.FaultException" /> che è possibile generare per segnalare la ricezione di un messaggio di errore SOAP.</returns>
      <param name="messageFault">Messaggio di errore contenente le informazioni predefinite dell'errore SOAP.</param>
      <param name="action">Valore di azione dell'errore.</param>
      <param name="faultDetailTypes">Matrice di tipi contenente i dettagli dell'errore.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.Type[])">
      <summary>Restituisce un oggetto <see cref="T:System.ServiceModel.Channels.FaultException" /> a partire dal messaggio di errore e dalla matrice di tipi di dettaglio specificati.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.FaultException" /> che è possibile generare per segnalare la ricezione di un messaggio di errore SOAP.</returns>
      <param name="messageFault">Messaggio di errore contenente le informazioni predefinite dell'errore SOAP.</param>
      <param name="faultDetailTypes">Matrice di tipi contenente i dettagli dell'errore.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException.CreateMessageFault">
      <summary>Restituisce un oggetto <see cref="T:System.ServiceModel.Channels.MessageFault" />.</summary>
      <returns>Rappresentazione in memoria di un errore SOAP che può essere passato a un <see cref="Overload:System.ServiceModel.Channels.Message.CreateMessage" /> per creare un messaggio che contiene un errore.Per gli oggetti <see cref="T:System.ServiceModel.FaultException" /> che derivano da messaggi di errore, questo oggetto <see cref="T:System.ServiceModel.Channels.MessageFault" /> rappresenta l'errore in ingresso.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultException.Message">
      <summary>Consente di ottenere il messaggio dell'eccezione.</summary>
      <returns>Messaggio dell'eccezione.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultException.Reason">
      <summary>Consente di ottenere l'oggetto <see cref="T:System.ServiceModel.FaultReason" /> relativo all'errore SOAP.</summary>
      <returns>Motivo dell'errore SOAP.</returns>
    </member>
    <member name="T:System.ServiceModel.FaultException`1">
      <summary>Utilizzata in un'applicazione client per rilevare errori SOAP specificati contrattualmente.</summary>
      <typeparam name="TDetail">Tipo di dettaglio dell'errore serializzabile.</typeparam>
    </member>
    <member name="M:System.ServiceModel.FaultException`1.#ctor(`0,System.ServiceModel.FaultReason,System.ServiceModel.FaultCode,System.String)">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ServiceModel.FaultException`1" /> che utilizza l'oggetto dettaglio, il motivo, il codice e i valori di azione dell'errore SOAP specificati. </summary>
      <param name="detail">Oggetto utilizzato come dettaglio dell'errore SOAP.</param>
      <param name="reason">Motivo dell'errore SOAP.</param>
      <param name="code">Codice dell'errore SOAP.</param>
      <param name="action">Azione dell'errore SOAP.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException`1.CreateMessageFault">
      <summary>Consente di creare un oggetto <see cref="T:System.ServiceModel.Channels.MessageFault" /> utilizzabile per creare un messaggio <see cref="T:System.ServiceModel.Channels.Message" /> che rappresenta l'errore SOAP.</summary>
      <returns>Messaggio di errore creato.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultException`1.Detail">
      <summary>Consente di ottenere un oggetto contenente le informazioni dettagliate sulla condizione di errore.</summary>
      <returns>Oggetto dettaglio che corrisponde al parametro di tipo dell'oggetto <see cref="T:System.ServiceModel.FaultException`1" />.</returns>
    </member>
    <member name="M:System.ServiceModel.FaultException`1.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto <see cref="T:System.ServiceModel.FaultException`1" />.</summary>
      <returns>Stringa dell'errore SOAP.</returns>
    </member>
    <member name="T:System.ServiceModel.FaultReason">
      <summary>Fornisce la descrizione testuale di un errore SOAP. </summary>
    </member>
    <member name="M:System.ServiceModel.FaultReason.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.FaultReasonText})">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ServiceModel.FaultReason" /> utilizzando l'elenco specificato delle traduzioni di errore. </summary>
      <param name="translations">Elenco di oggetti <see cref="T:System.ServiceModel.FaultReasonText" />, ognuno dei quali descrive l'errore in una determinata lingua. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="translations" /> è null. </exception>
      <exception cref="T:System.ArgumentException">Il parametro <paramref name="translations" /> è vuoto oppure uno o più elementi sono null. </exception>
    </member>
    <member name="M:System.ServiceModel.FaultReason.#ctor(System.ServiceModel.FaultReasonText)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.FaultReason" /> utilizzando l'elemento di testo specificato che descrive l'errore in una determinata lingua. </summary>
      <param name="translation">Matrice di oggetti <see cref="T:System.ServiceModel.FaultReasonText" /> che corrispondono alle descrizioni degli errori in varie lingue. </param>
    </member>
    <member name="M:System.ServiceModel.FaultReason.#ctor(System.String)">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ServiceModel.FaultReason" /> utilizzando la descrizione specificata dell'errore. </summary>
      <param name="text">Descrizione della causa dell'errore. </param>
    </member>
    <member name="M:System.ServiceModel.FaultReason.GetMatchingTranslation">
      <summary>Consente di ottenere la descrizione dell'errore nella lingua utilizzata dal thread corrente. </summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.FaultReasonText" /> contenente la descrizione dell'errore. </returns>
    </member>
    <member name="M:System.ServiceModel.FaultReason.GetMatchingTranslation(System.Globalization.CultureInfo)">
      <summary>Consente di ottenere la descrizione dell'errore nella lingua specificata. </summary>
      <returns>Descrizione testuale dell'errore nella lingua specificata.</returns>
      <param name="cultureInfo">Oggetto <see cref="T:System.Globalization.CultureInfo" /> che specifica la lingua utilizzata per descrivere l'errore. </param>
      <exception cref="T:System.ArgumentNullException">La proprietà <see cref="T:System.Globalization.CultureInfo" /> è null.</exception>
    </member>
    <member name="M:System.ServiceModel.FaultReason.ToString">
      <summary>Restituisce il motivo dell'errore come stringa.</summary>
      <returns>Stringa contenente la causa dell'errore.</returns>
    </member>
    <member name="T:System.ServiceModel.FaultReasonText">
      <summary>Rappresenta il testo del motivo di un errore SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.FaultReasonText.#ctor(System.String)">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ServiceModel.FaultReasonText" /> che utilizza il testo di errore specificato.</summary>
      <param name="text">Il testo che descrive il motivo dell'errore SOAP.</param>
    </member>
    <member name="M:System.ServiceModel.FaultReasonText.#ctor(System.String,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.FaultReasonText" />. </summary>
      <param name="text">Testo che descrive il motivo dell'errore.</param>
      <param name="xmlLang">Lingua in cui è descritto l'errore.</param>
    </member>
    <member name="M:System.ServiceModel.FaultReasonText.Matches(System.Globalization.CultureInfo)">
      <summary>Restituisce un valore che indica se la lingua utilizzata per descrivere l'errore corrisponde all'oggetto <see cref="T:System.Globalization.CultureInfo" />.</summary>
      <returns>true se l'oggetto <see cref="T:System.Globalization.CultureInfo" /> specificato corrisponde alla lingua utilizzata per descrivere l'errore. In caso contrario, false.</returns>
      <param name="cultureInfo">Oggetto <see cref="T:System.Globalization.CultureInfo" /> da confrontare con la lingua utilizzata per descrivere l'errore.</param>
    </member>
    <member name="P:System.ServiceModel.FaultReasonText.Text">
      <summary>Consente di ottenere il testo che descrive il motivo dell'errore SOAP.</summary>
      <returns>Testo che descrive il motivo dell'errore SOAP.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultReasonText.XmlLang">
      <summary>Consente di ottenere la lingua in cui è descritto il motivo dell'errore SOAP.</summary>
      <returns>Lingua in cui è descritto il motivo dell'errore SOAP.</returns>
    </member>
    <member name="T:System.ServiceModel.IClientChannel">
      <summary>Definisce il comportamento dei canali di richiesta e di request/reply in uscita utilizzati dalle applicazioni client.</summary>
    </member>
    <member name="P:System.ServiceModel.IClientChannel.AllowInitializationUI">
      <summary>Ottiene o imposta un valore che indica se il metodo <see cref="M:System.ServiceModel.IClientChannel.DisplayInitializationUI" /> tenta di chiamare gli oggetti <see cref="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer" /> nella proprietà <see cref="P:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers" /> o se genera un'eccezione quando tale raccolta non è vuota. </summary>
      <returns>true se al sistema Windows Communication Foundation (WCF) è consentito richiamare inizializzatori di canale interattivi. In caso contrario, false. </returns>
    </member>
    <member name="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)">
      <summary>Chiamata asincrona per cominciare a utilizzare un'interfaccia utente al fine di ottenere informazioni sulle credenziali.</summary>
      <returns>Interfaccia <see cref="T:System.IAsyncResult" /> da utilizzare per il callback al termine dell'elaborazione.</returns>
      <param name="callback">Metodo chiamato al termine dell'esecuzione di questo metodo.</param>
      <param name="state">Informazioni sullo stato del canale.</param>
    </member>
    <member name="P:System.ServiceModel.IClientChannel.DidInteractiveInitialization">
      <summary>Ottiene un valore che indica se è stata eseguita una chiamata a un'interfaccia utente per ottenere informazioni sulle credenziali. </summary>
      <returns>true se è stato chiamato il metodo <see cref="M:System.ServiceModel.IClientChannel.DisplayInitializationUI" /> o i metodi <see cref="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" /> e <see cref="M:System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)" />. In caso contrario, false.</returns>
    </member>
    <member name="M:System.ServiceModel.IClientChannel.DisplayInitializationUI">
      <summary>Chiamata a un'interfaccia utente per ottenere informazioni sulle credenziali.</summary>
    </member>
    <member name="M:System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)">
      <summary>Elemento che viene chiamato al termine della chiamata al metodo <see cref="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" />.</summary>
      <param name="result">Campo <see cref="T:System.IAsyncResult" />.</param>
    </member>
    <member name="E:System.ServiceModel.IClientChannel.UnknownMessageReceived">
      <summary>Si tratta di un evento riservato. </summary>
    </member>
    <member name="P:System.ServiceModel.IClientChannel.Via">
      <summary>Ottiene l'URI contenente l'indirizzo di trasporto a cui vengono inviati i messaggi sul canale client.</summary>
      <returns>Oggetto della classe <see cref="T:System.Uri" /> contenente l'indirizzo di trasporto a cui i messaggi vengono inviati sul canale.</returns>
    </member>
    <member name="T:System.ServiceModel.ICommunicationObject">
      <summary>Definisce il contratto del computer di stato di base relativo a tutti gli oggetti orientati alla comunicazione presenti nel sistema, compresi i canali, i gestori canali, le factory, i listener, i dispatcher e gli host di servizio.</summary>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Abort">
      <summary>Comporta la transizione immediata di un oggetto di comunicazione dallo stato corrente allo stato di chiusura.  </summary>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
      <summary>Avvia un'operazione asincrona finalizzata a chiudere un oggetto di comunicazione.</summary>
      <returns>Interfaccia <see cref="T:System.IAsyncResult" /> che fa riferimento all'operazione di chiusura asincrona. </returns>
      <param name="callback">Delegato <see cref="T:System.AsyncCallback" /> che riceve la notifica del completamento dell'operazione di chiusura asincrona.</param>
      <param name="state">Un oggetto, specificato dall'applicazione, che contiene le informazioni di stato associate all'operazione di chiusura asincrona.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Il metodo <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" /> è stato chiamato su un oggetto nello stato <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">Il timeout predefinito è scaduto prima che sia stato possibile chiudere correttamente l'oggetto <see cref="T:System.ServiceModel.ICommunicationObject" />.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Consente di iniziare un'operazione asincrona finalizzata a chiudere un oggetto di comunicazione entro un determinato intervallo di tempo.</summary>
      <returns>Interfaccia <see cref="T:System.IAsyncResult" /> che fa riferimento all'operazione di chiusura asincrona.</returns>
      <param name="timeout">L'oggetto <see cref="T:System.Timespan" /> che specifica il tempo disponibile per il completamento prima del timeout dell'operazione di invio.</param>
      <param name="callback">Delegato <see cref="T:System.AsyncCallback" /> che riceve la notifica del completamento dell'operazione di chiusura asincrona.</param>
      <param name="state">Un oggetto, specificato dall'applicazione, che contiene le informazioni di stato associate all'operazione di chiusura asincrona.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Il metodo <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" /> è stato chiamato su un oggetto nello stato <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">Il timeout specificato è scaduto prima che sia stato possibile chiudere correttamente l'oggetto <see cref="T:System.ServiceModel.ICommunicationObject" />.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
      <summary>Consente di iniziare un'operazione asincrona finalizzata ad aprire un oggetto di comunicazione.</summary>
      <returns>Interfaccia <see cref="T:System.IAsyncResult" /> che fa riferimento all'operazione asincrona di apertura. </returns>
      <param name="callback">Delegato <see cref="T:System.AsyncCallback" /> che riceve la notifica del completamento dell'operazione di apertura asincrona.</param>
      <param name="state">Oggetto, specificato dall'applicazione, che contiene le informazioni di stato associate all'operazione di apertura asincrona.</param>
      <exception cref="T:System.ServiceModel.CommunicationException">Non è stato possibile aprire l'oggetto <see cref="T:System.ServiceModel.ICommunicationObject" />. Tale oggetto è pertanto passato allo stato <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">Il timeout predefinito di apertura è scaduto prima che l'oggetto <see cref="T:System.ServiceModel.ICommunicationObject" /> sia stato in grado di passare allo stato <see cref="F:System.ServiceModel.CommunicationState.Opened" />. Tale oggetto è pertanto passato allo stato <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Consente di iniziare un'operazione asincrona finalizzata ad aprire un oggetto di comunicazione entro un determinato intervallo di tempo.</summary>
      <returns>Interfaccia <see cref="T:System.IAsyncResult" /> che fa riferimento all'operazione asincrona di apertura. </returns>
      <param name="timeout">L'oggetto <see cref="T:System.Timespan" /> che specifica il tempo disponibile per il completamento prima del timeout dell'operazione di invio.</param>
      <param name="callback">Delegato <see cref="T:System.AsyncCallback" /> che riceve la notifica del completamento dell'operazione di apertura asincrona.</param>
      <param name="state">Oggetto, specificato dall'applicazione, che contiene le informazioni di stato associate all'operazione di apertura asincrona.</param>
      <exception cref="T:System.ServiceModel.CommunicationException">Non è stato possibile aprire l'oggetto <see cref="T:System.ServiceModel.ICommunicationObject" />. Tale oggetto è pertanto passato allo stato <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">Il timeout specificato è scaduto prima che l'oggetto <see cref="T:System.ServiceModel.ICommunicationObject" /> sia stato in grado di passare allo stato <see cref="F:System.ServiceModel.CommunicationState.Opened" />. Tale oggetto è pertanto passato allo stato <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Close">
      <summary>Comporta la transizione di un oggetto di comunicazione dallo stato corrente allo stato di chiusura.  </summary>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Il metodo <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> è stato chiamato su un oggetto nello stato <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">Il timeout predefinito di chiusura è scaduto prima che sia stato possibile chiudere correttamente l'oggetto <see cref="T:System.ServiceModel.ICommunicationObject" />.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)">
      <summary>Comporta la transizione di un oggetto di comunicazione dallo stato corrente allo stato di chiusura.  </summary>
      <param name="timeout">L'oggetto <see cref="T:System.Timespan" /> che specifica il tempo disponibile per il completamento prima del timeout dell'operazione di invio.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Il metodo <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> è stato chiamato su un oggetto nello stato <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">Il timeout è scaduto prima che sia stato possibile chiudere correttamente l'oggetto <see cref="T:System.ServiceModel.ICommunicationObject" />.</exception>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Closed">
      <summary>Si verifica quando l'oggetto di comunicazione completa la transizione dallo stato di pre-chiusura allo stato di chiusura.</summary>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Closing">
      <summary>Si verifica quando l'oggetto di comunicazione passa per la prima volta allo stato di pre-chiusura.</summary>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)">
      <summary>Consente di completare un'operazione asincrona finalizzata a chiudere un oggetto di comunicazione.</summary>
      <param name="result">L'interfaccia <see cref="T:System.IAsyncResult" /> restituita da una chiamata al metodo <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" />.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Il metodo <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" /> è stato chiamato su un oggetto nello stato <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">Il timeout è scaduto prima che sia stato possibile chiudere correttamente l'oggetto <see cref="T:System.ServiceModel.ICommunicationObject" />.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)">
      <summary>Consente di completare un'operazione asincrona finalizzata ad aprire un oggetto di comunicazione.</summary>
      <param name="result">L'interfaccia <see cref="T:System.IAsyncResult" /> restituita da una chiamata al metodo <see cref="M:System.ServiceModel.ICommunicationObject.BeginOpen" />.</param>
      <exception cref="T:System.ServiceModel.CommunicationException">Non è stato possibile aprire l'oggetto <see cref="T:System.ServiceModel.ICommunicationObject" />. Tale oggetto è pertanto passato allo stato <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">Il timeout è scaduto prima che l'oggetto <see cref="T:System.ServiceModel.ICommunicationObject" /> sia stato in grado di passare allo stato <see cref="F:System.ServiceModel.CommunicationState.Opened" />. Tale oggetto è pertanto passato allo stato <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Faulted">
      <summary>Si verifica quando l'oggetto di comunicazione passa per la prima volta allo stato di errore.</summary>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Open">
      <summary>Comporta la transizione di un oggetto di comunicazione dallo stato di creazione allo stato di apertura.  </summary>
      <exception cref="T:System.ServiceModel.CommunicationException">Non è stato possibile aprire l'oggetto <see cref="T:System.ServiceModel.ICommunicationObject" />. Tale oggetto è pertanto passato allo stato <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">Il timeout predefinito di apertura è scaduto prima che l'oggetto <see cref="T:System.ServiceModel.ICommunicationObject" /> sia stato in grado di passare allo stato <see cref="F:System.ServiceModel.CommunicationState.Opened" />. Tale oggetto è pertanto passato allo stato <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)">
      <summary>Comporta la transizione di un oggetto di comunicazione dallo stato di creazione allo stato di apertura entro un determinato intervallo di tempo.</summary>
      <param name="timeout">L'oggetto <see cref="T:System.Timespan" /> che specifica il tempo disponibile per il completamento prima del timeout dell'operazione di invio.</param>
      <exception cref="T:System.ServiceModel.CommunicationException">Non è stato possibile aprire l'oggetto <see cref="T:System.ServiceModel.ICommunicationObject" />. Tale oggetto è pertanto passato allo stato <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">Il timeout specificato è scaduto prima che l'oggetto <see cref="T:System.ServiceModel.ICommunicationObject" /> sia stato in grado di passare allo stato <see cref="F:System.ServiceModel.CommunicationState.Opened" />. Tale oggetto è pertanto passato allo stato <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Opened">
      <summary>Si verifica quando l'oggetto di comunicazione completa la transizione dallo stato di pre-apertura allo stato di apertura.</summary>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Opening">
      <summary>Si verifica quando l'oggetto di comunicazione passa per la prima volta allo stato di pre-apertura.</summary>
    </member>
    <member name="P:System.ServiceModel.ICommunicationObject.State">
      <summary>Ottiene lo stato corrente dell'oggetto orientato alla comunicazione.</summary>
      <returns>Valore dello stato <see cref="T:System.ServiceModel.CommunicationState" /> dell'oggetto.</returns>
    </member>
    <member name="T:System.ServiceModel.IContextChannel">
      <summary>Definisce l'interfaccia di controllo del contesto di un canale.</summary>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.AllowOutputBatching">
      <summary>Ottiene o imposta un valore che configura Windows Communication Foundation (WCF) in modo da memorizzare un set di messaggi prima di consegnarli al trasporto.</summary>
      <returns>true se il batch dei messaggi in uscita è consentito. In caso contrario, false.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.InputSession">
      <summary>Consente di ottenere la sessione di input del canale.</summary>
      <returns>Oggetto della classe <see cref="T:System.ServiceModel.Channels.IInputSession" /> relativo al canale.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.LocalAddress">
      <summary>Consente di ottenere l'endpoint locale del canale.</summary>
      <returns>Endpoint <see cref="T:System.ServiceModel.EndpointAddress" /> locale del canale.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.OperationTimeout">
      <summary>Consente di ottenere o impostare il timeout di completamento di un'operazione, scaduto il quale viene generata un'eccezione.</summary>
      <returns>Intervallo di tempo <see cref="T:System.TimeSpan" /> che specifica il timeout di completamento di un'operazione.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.OutputSession">
      <summary>Ottiene la sessione di output associata al canale, se presente.</summary>
      <returns>Implementazione dell'interfaccia <see cref="T:System.ServiceModel.Channels.IOutputSession" /> se esiste una sessione di input. In caso contrario, null.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.RemoteAddress">
      <summary>Ottiene l'indirizzo remoto associato al canale.</summary>
      <returns>Indirizzo <see cref="T:System.ServiceModel.EndpointAddress" /> remoto del canale.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.SessionId">
      <summary>Restituisce l'ID della sessione corrente, se presente.</summary>
      <returns>ID della sessione corrente, se presente.</returns>
    </member>
    <member name="T:System.ServiceModel.IDefaultCommunicationTimeouts">
      <summary>Definisce l'interfaccia che consente di specificare i timeout di comunicazione utilizzati dai canali, dai gestori dei canali, ad esempio i listener di canale e le channel factory, e dagli host del servizio.</summary>
    </member>
    <member name="P:System.ServiceModel.IDefaultCommunicationTimeouts.CloseTimeout">
      <summary>Ottiene l'intervallo di tempo al termine del quale si verifica il timeout del metodo Close richiamato da un oggetto di comunicazione.</summary>
      <returns>Oggetto <see cref="T:System.Timespan" /> che specifica il tempo di attesa prima del timeout del metodo Close.</returns>
    </member>
    <member name="P:System.ServiceModel.IDefaultCommunicationTimeouts.OpenTimeout">
      <summary>Ottiene l'intervallo di tempo al termine del quale si verifica il timeout del metodo Open richiamato da un oggetto di comunicazione.</summary>
      <returns>Oggetto <see cref="T:System.Timespan" /> che specifica il tempo di attesa prima del timeout del metodo Open.</returns>
    </member>
    <member name="P:System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout">
      <summary>Ottiene l'intervallo di tempo al termine del quale si verifica il timeout del metodo Receive richiamato da un oggetto di comunicazione.</summary>
      <returns>Oggetto <see cref="T:System.Timespan" /> che specifica il tempo di attesa prima del timeout del metodo Receive.</returns>
    </member>
    <member name="P:System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout">
      <summary>Ottiene l'intervallo di tempo al termine del quale si verifica timeout del metodo Send richiamato da un oggetto di comunicazione.</summary>
      <returns>Oggetto <see cref="T:System.Timespan" /> che specifica il tempo di attesa prima del timeout del metodo Send.</returns>
    </member>
    <member name="T:System.ServiceModel.IExtensibleObject`1">
      <summary>Consente a un oggetto di partecipare a un comportamento personalizzato, ad esempio la registrazione per gli eventi o il controllo delle transizioni di stato.</summary>
      <typeparam name="T">Tipo della classe di estensione. </typeparam>
    </member>
    <member name="P:System.ServiceModel.IExtensibleObject`1.Extensions">
      <summary>Consente di ottenere una raccolta di oggetti estensione per questo oggetto flessibile.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.IExtensionCollection`1" /> di oggetti estensione.</returns>
    </member>
    <member name="T:System.ServiceModel.IExtension`1">
      <summary>Consente a un oggetto di estendere un altro oggetto tramite aggregazione.</summary>
      <typeparam name="T">Oggetto che partecipa al comportamento personalizzato.</typeparam>
    </member>
    <member name="M:System.ServiceModel.IExtension`1.Attach(`0)">
      <summary>Consente a un oggetto di estensione di rilevare che è stato aggregato.Questo metodo viene chiamato quando l'estensione viene aggiunta alla proprietà <see cref="P:System.ServiceModel.IExtensibleObject`1.Extensions" />.</summary>
      <param name="owner">Oggetto flessibile che aggrega questa estensione.</param>
    </member>
    <member name="M:System.ServiceModel.IExtension`1.Detach(`0)">
      <summary>Consente a un oggetto di rilevare che la propria aggregazione è stata annullata.Questo metodo viene chiamato quando un'estensione viene rimossa dalla proprietà <see cref="P:System.ServiceModel.IExtensibleObject`1.Extensions" />.</summary>
      <param name="owner">Oggetto flessibile che aggrega questa estensione.</param>
    </member>
    <member name="T:System.ServiceModel.IExtensionCollection`1">
      <summary>Raccolta degli oggetti <see cref="T:System.ServiceModel.IExtension`1" /> che consentono il recupero degli oggetti <see cref="T:System.ServiceModel.IExtension`1" /> in base al tipo.</summary>
      <typeparam name="T">Tipo degli oggetti di estensione.</typeparam>
    </member>
    <member name="M:System.ServiceModel.IExtensionCollection`1.Find``1">
      <summary>Consente di individuare all'interno della raccolta l'oggetto di estensione specificato.</summary>
      <returns>Oggetto di estensione trovato.</returns>
      <typeparam name="E">Tipo dell'oggetto di estensione.</typeparam>
    </member>
    <member name="M:System.ServiceModel.IExtensionCollection`1.FindAll``1">
      <summary>Consente di individuare tutti gli oggetti di estensione contenuti nella raccolta specificati dal parametro <paramref name="E" />.</summary>
      <returns>Raccolta contenente tutti gli oggetti di estensione contenuti nella raccolta e che implementano il tipo specificato.</returns>
      <typeparam name="E">Tipo dell'oggetto di estensione.</typeparam>
    </member>
    <member name="T:System.ServiceModel.InvalidMessageContractException">
      <summary>Rappresenta un contratto di messaggio non valido.</summary>
    </member>
    <member name="M:System.ServiceModel.InvalidMessageContractException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.InvalidMessageContractException" />. </summary>
    </member>
    <member name="M:System.ServiceModel.InvalidMessageContractException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.InvalidMessageContractException" /> utilizzando il messaggio specificato.</summary>
      <param name="message">Messaggio per l'eccezione.</param>
    </member>
    <member name="M:System.ServiceModel.InvalidMessageContractException.#ctor(System.String,System.Exception)">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ServiceModel.InvalidMessageContractException" /> che utilizza il messaggio e l'eccezione interna specificati.</summary>
      <param name="message">Messaggio dell'eccezione.</param>
      <param name="innerException">Eccezione interna.</param>
    </member>
    <member name="T:System.ServiceModel.MessageBodyMemberAttribute">
      <summary>Specifica che un membro viene serializzato come elemento all'interno del corpo SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageBodyMemberAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.MessageBodyMemberAttribute" />. </summary>
    </member>
    <member name="P:System.ServiceModel.MessageBodyMemberAttribute.Order">
      <summary>Ottiene o imposta un valore che indica la posizione in cui il membro viene serializzato nel corpo SOAP.</summary>
      <returns>Posizione dell'elemento nel corpo SOAP.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore passato al metodo di impostazione della proprietà è un numero intero negativo.</exception>
    </member>
    <member name="T:System.ServiceModel.MessageContractAttribute">
      <summary>Definisce una classe fortemente tipizzata corrispondente a un messaggio SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageContractAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.MessageContractAttribute" />. </summary>
    </member>
    <member name="P:System.ServiceModel.MessageContractAttribute.IsWrapped">
      <summary>Ottiene o imposta un valore che specifica se il corpo del messaggio contiene un elemento wrapper.</summary>
      <returns>true se il messaggio il corpo del messaggio contiene un elemento wrapper. In caso contrario, false.Il valore predefinito è true.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageContractAttribute.WrapperName">
      <summary>Ottiene o imposta il nome dell'elemento wrapper del corpo del messaggio.</summary>
      <returns>Nome dell'elemento wrapper contenuto nel corpo del messaggio.</returns>
      <exception cref="T:System.ArgumentNullException">Il valore è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore è una stringa vuota.</exception>
    </member>
    <member name="P:System.ServiceModel.MessageContractAttribute.WrapperNamespace">
      <summary>Ottiene o imposta lo spazio dei nomi dell'elemento wrapper del corpo del messaggio.</summary>
      <returns>Spazio dei nomi dell'elemento wrapper.</returns>
    </member>
    <member name="T:System.ServiceModel.MessageContractMemberAttribute">
      <summary>Consente di dichiarare i membri di base degli attributi <see cref="T:System.ServiceModel.MessageBodyMemberAttribute" /> e <see cref="T:System.ServiceModel.MessageHeaderAttribute" />.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageContractMemberAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.MessageContractMemberAttribute" />.</summary>
    </member>
    <member name="P:System.ServiceModel.MessageContractMemberAttribute.Name">
      <summary>Specifica il nome dell'elemento che corrisponde a questo membro. </summary>
      <returns>Nome dell'elemento che corrisponde a questo membro.Questa stringa deve essere un nome di elemento XML valido.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageContractMemberAttribute.Namespace">
      <summary>Specifica lo spazio dei nomi dell'elemento che corrisponde a questo membro. </summary>
      <returns>URI dello spazio dei nomi dell'elemento che corrisponde a questo membro. </returns>
    </member>
    <member name="T:System.ServiceModel.MessageCredentialType">
      <summary>Enumera i tipi di credenziali messaggio validi.</summary>
    </member>
    <member name="F:System.ServiceModel.MessageCredentialType.Certificate">
      <summary>Specifica l'autenticazione client mediante un certificato.</summary>
    </member>
    <member name="F:System.ServiceModel.MessageCredentialType.IssuedToken">
      <summary>Consente di specificare l'autenticazione client mediante un token rilasciato.</summary>
    </member>
    <member name="F:System.ServiceModel.MessageCredentialType.None">
      <summary>Specifica l'autenticazione anonima.</summary>
    </member>
    <member name="F:System.ServiceModel.MessageCredentialType.UserName">
      <summary>Consente di specificare l'autenticazione client mediante UserName.</summary>
    </member>
    <member name="F:System.ServiceModel.MessageCredentialType.Windows">
      <summary>Consente di specificare l'autenticazione client mediante Windows.</summary>
    </member>
    <member name="T:System.ServiceModel.MessageHeader`1">
      <summary>Rappresenta il contenuto di un'intestazione SOAP.</summary>
      <typeparam name="T">Tipo di intestazione del messaggio.</typeparam>
    </member>
    <member name="M:System.ServiceModel.MessageHeader`1.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.MessageHeader`1" />.  </summary>
    </member>
    <member name="M:System.ServiceModel.MessageHeader`1.#ctor(`0)">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ServiceModel.MessageHeader`1" /> con il contenuto di intestazione specificato.</summary>
      <param name="content">Contenuto della nuova intestazione.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeader`1.#ctor(`0,System.Boolean,System.String,System.Boolean)">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ServiceModel.MessageHeader`1" /> con il contenuto di intestazione e i metadati specificati. </summary>
      <param name="content">Contenuto della nuova intestazione.</param>
      <param name="mustUnderstand">Valore che indica se l'intestazione deve essere compresa.</param>
      <param name="actor">Destinatario dell'intestazione del messaggio.</param>
      <param name="relay">Valore che indica se è necessario inoltrare l'intestazione.</param>
    </member>
    <member name="P:System.ServiceModel.MessageHeader`1.Actor">
      <summary>Consente di ottenere o impostare il destinatario dell'intestazione del messaggio.</summary>
      <returns>Destinatario dell'intestazione del messaggio.Il valore predefinito è una stringa vuota ("").</returns>
    </member>
    <member name="P:System.ServiceModel.MessageHeader`1.Content">
      <summary>Consente di ottenere o impostare il contenuto dell'intestazione.</summary>
      <returns>Il contenuto dell'intestazione.</returns>
    </member>
    <member name="M:System.ServiceModel.MessageHeader`1.GetUntypedHeader(System.String,System.String)">
      <summary>Ottiene l'intestazione del messaggio avente lo spazio dei nomi e il nome locale specificati.</summary>
      <returns>Intestazione del messaggio avente lo spazio dei nomi e il nome locale specificati.</returns>
      <param name="name">Nome locale dell'elemento intestazione XML.</param>
      <param name="ns">URI dello spazio dei nomi dell'elemento intestazione XML.</param>
    </member>
    <member name="P:System.ServiceModel.MessageHeader`1.MustUnderstand">
      <summary>Ottiene o imposta il valore che indica se l'intestazione deve essere riconosciuta, come richiesto dalla specifica SOAP 1.1/1.2. </summary>
      <returns>true se l'intestazione deve essere riconosciuta. In caso contrario, false.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageHeader`1.Relay">
      <summary>Consente di ottenere un valore che indica se è possibile inoltrare l'intestazione.</summary>
      <returns>true se l'intestazione deve essere inoltrata. In caso contrario, false.</returns>
    </member>
    <member name="T:System.ServiceModel.MessageHeaderException">
      <summary>Eccezione generata quando durante l'elaborazione del messaggio si verificano situazioni impreviste relativamente alle intestazioni di un messaggio SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.MessageHeaderException" /> con il messaggio specificato.</summary>
      <param name="message">Messaggio contenuto nell'eccezione.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Boolean)">
      <summary>Inizializza un nuova istanza della classe <see cref="T:System.ServiceModel.MessageHeaderException" /> utilizzando il messaggio specificato e un valore che indica se l'intestazione del messaggio è un duplicato o è mancante.</summary>
      <param name="message">Messaggio dell'eccezione.</param>
      <param name="isDuplicate">true se il messaggio presenta intestazioni duplicate. false se il messaggio non presenta alcuna intestazione.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.MessageHeaderException" /> utilizzando il messaggio specificato e l'eccezione interna che ha causato l'eccezione.</summary>
      <param name="message">Messaggio dell'eccezione.</param>
      <param name="innerException">Oggetto della classe <see cref="T:System.Exception" /> contenente l'eccezione interna che ha causato la generazione dell'eccezione.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String)">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ServiceModel.MessageHeaderException" /> utilizzando il messaggio, il nome di intestazione e lo spazio dei nomi specificati.</summary>
      <param name="message">Messaggio dell'eccezione.</param>
      <param name="headerName">Nome dell'intestazione del messaggio.</param>
      <param name="ns">Spazio dei nomi dell'intestazione del messaggio.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean)">
      <summary>Consente di inizializzare un nuova istanza della classe <see cref="T:System.ServiceModel.MessageHeaderException" /> utilizzando il messaggio, il nome di intestazione e lo spazio dei nomi specificati nonché un valore che indica se l'intestazione del messaggio è un duplicato o se è mancante.</summary>
      <param name="message">Messaggio dell'eccezione.</param>
      <param name="headerName">Nome dell'intestazione del messaggio.</param>
      <param name="ns">Spazio dei nomi dell'intestazione del messaggio.</param>
      <param name="isDuplicate">true se il messaggio presenta intestazioni duplicate. false se il messaggio non presenta alcuna intestazione.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean,System.Exception)">
      <summary>Consente di inizializzare un nuova istanza della classe <see cref="T:System.ServiceModel.MessageHeaderException" /> utilizzando il messaggio, il nome di intestazione e lo spazio dei nomi specificati, un valore che indica se l'intestazione del messaggio è un duplicato o se è mancante nonché l'eccezione interna che ha causato l'eccezione.</summary>
      <param name="message">Messaggio dell'eccezione.</param>
      <param name="headerName">Nome dell'intestazione del messaggio.</param>
      <param name="ns">Spazio dei nomi dell'intestazione del messaggio.</param>
      <param name="isDuplicate">true se il messaggio presenta intestazioni duplicate. false se il messaggio non presenta alcuna intestazione.</param>
      <param name="innerException">Oggetto della classe <see cref="T:System.Exception" /> contenente l'eccezione interna che ha causato la generazione dell'eccezione.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.MessageHeaderException" /> utilizzando il messaggio, il nome dell'intestazione e lo spazio dei nomi specificati nonché l'eccezione interna che ha causato l'eccezione.</summary>
      <param name="message">Messaggio dell'eccezione.</param>
      <param name="headerName">Nome dell'intestazione del messaggio.</param>
      <param name="ns">Spazio dei nomi dell'intestazione del messaggio.</param>
      <param name="innerException">Oggetto della classe <see cref="T:System.Exception" /> contenente l'eccezione interna che ha causato la generazione dell'eccezione.</param>
    </member>
    <member name="P:System.ServiceModel.MessageHeaderException.HeaderName">
      <summary>Consente di ottenere il nome dell'intestazione SOAP che ha causato l'eccezione.</summary>
      <returns>Nome dell'intestazione SOAP.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageHeaderException.HeaderNamespace">
      <summary>Consente di ottenere lo spazio dei nomi dell'intestazione SOAP che ha causato l'eccezione.</summary>
      <returns>Spazio dei nomi dell'intestazione SOAP.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageHeaderException.IsDuplicate">
      <summary>Ottiene un valore che indica se il messaggio presenta intestazioni duplicate o se non presenta alcuna intestazione.</summary>
      <returns>true se il messaggio presenta intestazioni duplicate. false se il messaggio non presenta alcuna intestazione.</returns>
    </member>
    <member name="T:System.ServiceModel.MessageParameterAttribute">
      <summary>Controlla i nomi dei parametri di richiesta e di risposta.Non può essere utilizzato con la classe <see cref="T:System.ServiceModel.Channels.Message" /> o con contratti di messaggio.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageParameterAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.MessageParameterAttribute" />. </summary>
    </member>
    <member name="P:System.ServiceModel.MessageParameterAttribute.Name">
      <summary>Ottiene o imposta l'attributo del nome del parametro nello schema XML (XSD).</summary>
      <returns>Attributo del nome del parametro nell'XSD.</returns>
    </member>
    <member name="T:System.ServiceModel.OperationContext">
      <summary>Consente di accedere al contesto di esecuzione di un metodo di servizio.</summary>
    </member>
    <member name="M:System.ServiceModel.OperationContext.#ctor(System.ServiceModel.IContextChannel)">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ServiceModel.OperationContext" /> che utilizza l'interfaccia <see cref="T:System.ServiceModel.IContextChannel" /> specificata in un'applicazione client. </summary>
      <param name="channel">Interfaccia <see cref="T:System.ServiceModel.IContextChannel" /> utilizzata per creare un nuovo contesto <see cref="T:System.ServiceModel.OperationContext" /> client.</param>
      <exception cref="T:System.ArgumentNullException">Il canale è null.</exception>
    </member>
    <member name="P:System.ServiceModel.OperationContext.Current">
      <summary>Consente di ottenere o impostare il contesto di esecuzione del thread corrente.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.OperationContext" /> che rappresenta il contesto di esecuzione e dei messaggi del metodo corrente.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.Extensions">
      <summary>Consente di ottenere la raccolta delle estensioni di servizio a partire dal contesto corrente dei messaggi.</summary>
      <returns>Raccolta di estensioni del contesto <see cref="T:System.ServiceModel.OperationContext" />.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.IncomingMessageHeaders">
      <summary>Consente di ottenere le intestazioni dei messaggi in ingresso relative al contesto <see cref="T:System.ServiceModel.OperationContext" />.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> contenente le intestazioni dei messaggi in ingresso.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.IncomingMessageProperties">
      <summary>Consente di ottenere le proprietà dei messaggi in ingresso nel contesto <see cref="T:System.ServiceModel.OperationContext" />.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Channels.MessageProperties" /> contenente le proprietà del messaggio in ingresso.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.IncomingMessageVersion">
      <summary>Consente di ottenere la versione del messaggio SOAP in ingresso del contesto <see cref="T:System.ServiceModel.OperationContext" />.</summary>
      <returns>Versione SOAP del messaggio in ingresso.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.IsUserContext">
      <summary>Questa proprietà è destinata all'utilizzo da parte del sistema e non deve essere chiamata dagli utenti.</summary>
      <returns>true.</returns>
    </member>
    <member name="E:System.ServiceModel.OperationContext.OperationCompleted">
      <summary>Si verifica quando l'operazione viene completata. </summary>
    </member>
    <member name="P:System.ServiceModel.OperationContext.OutgoingMessageHeaders">
      <summary>Consente di ottenere le intestazioni dei messaggi in uscita relative al contesto <see cref="T:System.ServiceModel.OperationContext" /> attivo.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> contenente le intestazioni dei messaggi in uscita del contesto <see cref="T:System.ServiceModel.OperationContext" /> attivo.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.OutgoingMessageProperties">
      <summary>Consente di ottenere le proprietà dei messaggi in uscita nel contesto <see cref="T:System.ServiceModel.OperationContext" /> attivo.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Channels.MessageProperties" /> contenente le proprietà del messaggio in uscita.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.RequestContext">
      <summary>Ottiene o imposta l'implementazione <see cref="T:System.ServiceModel.Channels.RequestContext" /> di questo metodo.</summary>
      <returns>Implementazione del contesto <see cref="T:System.ServiceModel.Channels.RequestContext" /> oppure null se non esiste alcun contesto di richiesta.</returns>
    </member>
    <member name="T:System.ServiceModel.OperationContextScope">
      <summary>Consente di creare un blocco che definisce l'ambito di un oggetto <see cref="T:System.ServiceModel.OperationContext" />.</summary>
    </member>
    <member name="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.IContextChannel)">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ServiceModel.OperationContextScope" /> che utilizza l'interfaccia <see cref="T:System.ServiceModel.IContextChannel" /> specificata per creare un nuovo contesto <see cref="T:System.ServiceModel.OperationContext" /> dell'ambito.</summary>
      <param name="channel">Canale da utilizzare quando si crea l'ambito di un nuovo contesto <see cref="T:System.ServiceModel.OperationContext" />.</param>
    </member>
    <member name="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.OperationContext)">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ServiceModel.OperationContextScope" /> per creare un ambito dell'oggetto <see cref="T:System.ServiceModel.OperationContext" /> specificato.</summary>
      <param name="context">Contesto <see cref="T:System.ServiceModel.OperationContext" /> attivo nell'ambito creato.</param>
    </member>
    <member name="M:System.ServiceModel.OperationContextScope.Dispose">
      <summary>Consente di ripristinare il contesto <see cref="T:System.ServiceModel.OperationContext" /> originale al contesto attivo e di riciclare l'oggetto <see cref="T:System.ServiceModel.OperationContextScope" />.</summary>
    </member>
    <member name="T:System.ServiceModel.OperationContractAttribute">
      <summary>Indica che un metodo implementa un'operazione come parte di un contratto di servizio di un'applicazione Windows Communication Foundation (WCF). </summary>
    </member>
    <member name="M:System.ServiceModel.OperationContractAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.OperationContractAttribute" />. </summary>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.Action">
      <summary>Consente di ottenere o impostare l'azione WS-Addressing del messaggio di richiesta. </summary>
      <returns>Azione da utilizzare nella creazione dell'intestazione dell'azione WS-Addressing.</returns>
      <exception cref="T:System.ArgumentNullException">Il valore è null.</exception>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.AsyncPattern">
      <summary>Indica che un'operazione è implementata in modo asincrono utilizzando una coppia costituita dai metodi Begin&lt;methodName&gt; e End&lt;methodName&gt; in un contratto di servizio. </summary>
      <returns>true se il metodo Begin&lt;methodName&gt; corrisponde al metodo End&lt;methodName&gt; e se l'infrastruttura può utilizzare tale coppia per implementare un'operazione in modo asincrono nell'interfaccia di servizio. In caso contrario, false.Il valore predefinito è false.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
      <summary>Ottiene o imposta un valore che indica se l'operazione restituisce un messaggio di risposta.</summary>
      <returns>true se questo metodo riceve un messaggio di richiesta e non restituisce alcun messaggio di risposta. In caso contrario, false.Il valore predefinito è false.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.Name">
      <summary>Ottiene o imposta il nome dell'operazione.</summary>
      <returns>Nome dell'operazione.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.ServiceModel.OperationContractAttribute.Name" /> è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore è una stringa vuota.</exception>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.ReplyAction">
      <summary>Ottiene o imposta il valore dell'azione SOAP del messaggio di risposta dell'operazione.</summary>
      <returns>Valore dell'azione SOAP del messaggio di risposta.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.ServiceModel.OperationContractAttribute.ReplyAction" /> è null.</exception>
    </member>
    <member name="T:System.ServiceModel.OperationFormatStyle">
      <summary>Rappresenta lo stile SOAP che determina la modalità di formattazione dei metadati WSDL del servizio.</summary>
    </member>
    <member name="F:System.ServiceModel.OperationFormatStyle.Document">
      <summary>Imposta lo stile in modo che la rappresentazione WSDL contenga un solo elemento che rappresenta il documento scambiato nell'operazione.</summary>
    </member>
    <member name="F:System.ServiceModel.OperationFormatStyle.Rpc">
      <summary>Imposta lo stile in modo che la rappresentazione WSDL dei messaggi scambiati in un'operazione contenga parametri analoghi a quelli di una chiamata a procedura remota.</summary>
    </member>
    <member name="T:System.ServiceModel.ProtocolException">
      <summary>Eccezione vista sul client generata quando risulta impossibile comunicare con la parte remota a causa di una mancata corrispondenza fra i protocolli di trasferimento dati.</summary>
    </member>
    <member name="M:System.ServiceModel.ProtocolException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.ProtocolException" /> con un messaggio di errore specificato.</summary>
      <param name="message">Messaggio di errore nel quale viene indicato il motivo dell’eccezione</param>
    </member>
    <member name="M:System.ServiceModel.ProtocolException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.ProtocolException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione.</summary>
      <param name="message">Messaggio di errore nel quale viene indicato il motivo dell’eccezione</param>
      <param name="innerException">Eccezione <see cref="T:System.Exception" /> che ha causato la generazione dell'eccezione corrente. </param>
    </member>
    <member name="T:System.ServiceModel.QuotaExceededException">
      <summary>Eccezione generata quando viene superata una quota messaggi.</summary>
    </member>
    <member name="M:System.ServiceModel.QuotaExceededException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.QuotaExceededException" /> con un messaggio di errore specificato.</summary>
      <param name="message">Messaggio di errore nel quale viene indicato il motivo dell’eccezione</param>
    </member>
    <member name="M:System.ServiceModel.QuotaExceededException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.QuotaExceededException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione.</summary>
      <param name="message">Messaggio di errore nel quale viene indicato il motivo dell’eccezione</param>
      <param name="innerException">Eccezione <see cref="T:System.Exception" /> che ha causato la generazione dell'eccezione corrente.</param>
    </member>
    <member name="T:System.ServiceModel.SecurityMode">
      <summary>Determina le impostazioni di sicurezza per un'associazione.</summary>
    </member>
    <member name="F:System.ServiceModel.SecurityMode.Message">
      <summary>La sicurezza è fornita mediante la sicurezza dei messaggi SOAP.</summary>
    </member>
    <member name="F:System.ServiceModel.SecurityMode.None">
      <summary>La sicurezza è disabilitata.</summary>
    </member>
    <member name="F:System.ServiceModel.SecurityMode.Transport">
      <summary>La sicurezza è fornita mediante un trasporto protetto, ad esempio HTTPS.</summary>
    </member>
    <member name="F:System.ServiceModel.SecurityMode.TransportWithMessageCredential">
      <summary>Un trasporto protetto, ad esempio HTTPS, fornisce l'integrità, la riservatezza e l'autenticazione mentre la sicurezza dei messaggi SOAP fornisce l'autenticazione client.</summary>
    </member>
    <member name="T:System.ServiceModel.ServerTooBusyException">
      <summary>Eccezione generata quando un server è troppo occupato per accettare un messaggio.</summary>
    </member>
    <member name="M:System.ServiceModel.ServerTooBusyException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.ServerTooBusyException" /> con un messaggio di errore specificato.</summary>
      <param name="message">Messaggio di errore nel quale viene indicato il motivo dell’eccezione</param>
    </member>
    <member name="M:System.ServiceModel.ServerTooBusyException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.ServerTooBusyException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione.</summary>
      <param name="message">Messaggio di errore nel quale viene indicato il motivo dell’eccezione</param>
      <param name="innerException">Eccezione <see cref="T:System.Exception" /> che ha causato la generazione dell'eccezione corrente.</param>
    </member>
    <member name="T:System.ServiceModel.ServiceActivationException">
      <summary>Eccezione generata quando l'attivazione di un servizio ha esito negativo.</summary>
    </member>
    <member name="M:System.ServiceModel.ServiceActivationException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.ServiceActivationException" /> con un messaggio di errore specificato.</summary>
      <param name="message">Messaggio di errore nel quale viene indicato il motivo dell’eccezione</param>
    </member>
    <member name="M:System.ServiceModel.ServiceActivationException.#ctor(System.String,System.Exception)">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ServiceModel.ServiceActivationException" /> con il messaggio di errore e l'eccezione interna forniti.  </summary>
      <param name="message">Messaggio di errore nel quale viene indicato il motivo dell’eccezione</param>
      <param name="innerException">Eccezione <see cref="T:System.Exception" /> che ha causato la generazione dell'eccezione corrente. </param>
    </member>
    <member name="T:System.ServiceModel.ServiceContractAttribute">
      <summary>Indica che un'interfaccia o una classe definisce un contratto di servizio in un'applicazione di Windows Communication Foundation (WCF). </summary>
    </member>
    <member name="M:System.ServiceModel.ServiceContractAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.ServiceContractAttribute" />. </summary>
    </member>
    <member name="P:System.ServiceModel.ServiceContractAttribute.CallbackContract">
      <summary>Ottiene o imposta il tipo di contratto di callback quando il contratto è duplex.</summary>
      <returns>Oggetto <see cref="T:System.Type" /> che indica il contratto di callback.Il valore predefinito è null.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceContractAttribute.ConfigurationName">
      <summary>Consente di ottenere o impostare il nome utilizzato per individuare il servizio in un file di configurazione dell'applicazione.</summary>
      <returns>Nome utilizzato per individuare l'elemento di servizio in un file di configurazione dell'applicazione.Il valore predefinito è il nome della classe di implementazione di servizio.</returns>
      <exception cref="T:System.ArgumentNullException">Il valore è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore è una stringa vuota.</exception>
    </member>
    <member name="P:System.ServiceModel.ServiceContractAttribute.Name">
      <summary>Consente di ottenere o impostare il nome dell'elemento &lt;portType&gt; in WSDL (Web Services Description Language). </summary>
      <returns>Il valore predefinito è il nome della classe o dell'interfaccia a cui è applicato l'attributo <see cref="T:System.ServiceModel.ServiceContractAttribute" />. </returns>
      <exception cref="T:System.ArgumentNullException">Il valore è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore è una stringa vuota.</exception>
    </member>
    <member name="P:System.ServiceModel.ServiceContractAttribute.Namespace">
      <summary>Consente di ottenere o impostare lo spazio dei nomi dell'elemento &lt;portType&gt; in WSDL (Web Services Description Language).</summary>
      <returns>Spazio dei nomi WSDL dell'elemento &lt;portType&gt;.Il valore predefinito è "http://tempuri.org".</returns>
    </member>
    <member name="T:System.ServiceModel.ServiceKnownTypeAttribute">
      <summary>Consente di specificare i tipi conosciuti utilizzati da un servizio durante la serializzazione o la deserializzazione.</summary>
    </member>
    <member name="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.ServiceKnownTypeAttribute" /> e specifica il nome di un metodo che restituisce i tipi conosciuti.</summary>
      <param name="methodName">Nome di un metodo che restituisce i tipi conosciuti.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.String,System.Type)">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ServiceModel.ServiceKnownTypeAttribute" /> con il nome di un metodo e con il tipo contenente i metodi che restituiscono i tipi conosciuti.</summary>
      <param name="methodName">Nome di un metodo che restituisce i tipi conosciuti.</param>
      <param name="declaringType">Tipo che può utilizzare i tipi conosciuti nel proprio oggetto grafico.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.Type)">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ServiceModel.ServiceKnownTypeAttribute" /> con il tipo conosciuto specificato.</summary>
      <param name="type">Consente di specificare un tipo conosciuto utilizzabile in un parametro o in un valore restituito definito dal servizio.</param>
    </member>
    <member name="P:System.ServiceModel.ServiceKnownTypeAttribute.DeclaringType">
      <summary>Consente di ottenere il tipo contenente i metodi che restituiscono i tipi conosciuti.</summary>
      <returns>Tipo <see cref="T:System.Type" /> contenente i metodi che restituiscono i tipi conosciuti.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceKnownTypeAttribute.MethodName">
      <summary>Consente di ottenere il nome di un metodo che restituisce la raccolta di tipi conosciuti.</summary>
      <returns>Nome del metodo che restituisce i tipi conosciuti.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceKnownTypeAttribute.Type">
      <summary>Tipo conosciuto che può essere incluso in un oggetto grafico.</summary>
      <returns>Tipo <see cref="T:System.Type" /> del tipo conosciuto.</returns>
    </member>
    <member name="T:System.ServiceModel.TransferMode">
      <summary>Indica se un canale utilizza modalità di trasferimento dei messaggi di richiesta e risposta con flusso o con memorizzazione nel buffer.</summary>
    </member>
    <member name="F:System.ServiceModel.TransferMode.Buffered">
      <summary>I messaggi di richiesta e risposta vengono entrambi memorizzati nel buffer.</summary>
    </member>
    <member name="F:System.ServiceModel.TransferMode.Streamed">
      <summary>I messaggi di richiesta e risposta vengono entrambi inviati nel flusso.</summary>
    </member>
    <member name="F:System.ServiceModel.TransferMode.StreamedRequest">
      <summary>Il messaggio di richiesta viene inviato nel flusso e quello di risposta viene memorizzato nel buffer.</summary>
    </member>
    <member name="F:System.ServiceModel.TransferMode.StreamedResponse">
      <summary>Il messaggio di richiesta viene memorizzato nel buffer e quello di risposta viene inviato nel flusso.</summary>
    </member>
    <member name="T:System.ServiceModel.UnknownMessageReceivedEventArgs">
      <summary>Contiene il messaggio ricevuto da un canale. Non può essere associato ad alcuna operazione di callback né ad alcuna richiesta in sospeso.</summary>
    </member>
    <member name="P:System.ServiceModel.UnknownMessageReceivedEventArgs.Message">
      <summary>Consente di ottenere il messaggio sconosciuto che ha causato l'evento.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Channels.Message" /> che ha causato l'evento.</returns>
    </member>
    <member name="T:System.ServiceModel.XmlSerializerFormatAttribute">
      <summary>Consente di configurare l'infrastruttura Windows Communication Foundation (WCF) in modo che utilizzi l'attributo <see cref="T:System.Xml.Serialization.XmlSerializer" /> anziché l'attributo <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</summary>
    </member>
    <member name="M:System.ServiceModel.XmlSerializerFormatAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.XmlSerializerFormatAttribute" />. </summary>
    </member>
    <member name="P:System.ServiceModel.XmlSerializerFormatAttribute.Style">
      <summary>Ottiene o imposta lo stile SOAP dell'attributo <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <returns>Uno dei valori di <see cref="T:System.ServiceModel.OperationFormatStyle" />.Il valore predefinito è <see cref="F:System.ServiceModel.OperationFormatStyle.Document" />.</returns>
    </member>
    <member name="P:System.ServiceModel.XmlSerializerFormatAttribute.SupportFaults">
      <summary>Ottiene o imposta un valore che indica che è necessario utilizzare <see cref="T:System.Xml.Serialization.XmlSerializer" /> per la lettura e la scrittura degli errori. </summary>
      <returns>true se è necessario utilizzare <see cref="T:System.Xml.Serialization.XmlSerializer" /> per la lettura e la scrittura degli errori; false se è necessario utilizzare <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.Il valore predefinito è false.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.AddressHeader">
      <summary>Rappresenta un'intestazione che incapsula un elemento informazione dell'indirizzo utilizzato per identificare o interagire con un endpoint.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.AddressHeader" />.  </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.CreateAddressHeader(System.String,System.String,System.Object)">
      <summary>Crea una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.AddressHeader" /> con il valore, il nome e lo spazio dei nomi specificati.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.AddressHeader" /> con <paramref name="name" /> e <paramref name="ns" /> specificati, che contiene l'elemento informazione specificato da <paramref name="value" />.</returns>
      <param name="name">Nome dell'intestazione di indirizzo.</param>
      <param name="ns">Spazio dei nomi dell'intestazione di indirizzo.</param>
      <param name="value">Elemento di informazione per l'intestazione dell'indirizzo.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> è null oppure <paramref name="name" />.Length == 0.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.CreateAddressHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Crea una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.AddressHeader" /> con un nome e uno spazio dei nomi specificati, che utilizza un formattatore specificato per serializzare l'elemento informazione da un oggetto specificato.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.AddressHeader" /> con <paramref name="name" /> e <paramref name="ns" /> specificati, che contiene l'elemento informazione specificato da <paramref name="value" />.</returns>
      <param name="name">Nome dell'intestazione di indirizzo.</param>
      <param name="ns">Spazio dei nomi dell'intestazione di indirizzo.</param>
      <param name="value">Elemento di informazione per l'intestazione dell'indirizzo.</param>
      <param name="serializer">
        <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> utilizzato per serializzare l'oggetto specificato nel parametro <paramref name="value" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> o <paramref name="serializer" /> è null oppure <paramref name="name" />.Length == 0.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.Equals(System.Object)">
      <summary>Determina se l'elemento informazione contenuto in un oggetto specificato è uguale all'oggetto contenuto nell'intestazione di indirizzo corrente.</summary>
      <returns>true se l'elemento di informazione in un oggetto <paramref name="obj" /> specificato è equivalente all'elemento di informazione contenuto nell'intestazione di indirizzo corrente. In caso contrario, false.In particolare, restituisce false se <paramref name="obj" /> è null.</returns>
      <param name="obj">
        <see cref="T:System.Object" /> da confrontare con l'oggetto contenuto nell'intestazione dell'indirizzo corrente.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.GetAddressHeaderReader">
      <summary>Restituisce un reader XML in grado di serializzare l'oggetto intestazione dell'indirizzo corrente.</summary>
      <returns>Un'istanza di <see cref="T:System.Xml.XmlDictionaryReader" /> in grado di serializzare l'oggetto intestazione dell'indirizzo corrente.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.GetHashCode">
      <summary>Fornisce un codice hash univoco per un'intestazione dell'indirizzo. </summary>
      <returns>Codice hash univoco per l'intestazione dell'indirizzo corrente.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.GetValue``1">
      <summary>Deserializza l'elemento informazione dall'intestazione dell'indirizzo corrente in un oggetto di un tipo specificato.</summary>
      <returns>Istanza di una classe di tipo <paramref name="T" /> con campi e proprietà impostati sui valori forniti dall'oggetto intestazione dell'indirizzo corrente.</returns>
      <typeparam name="T">Classe di tipo <paramref name="T" /> con campi e proprietà impostati sui valori forniti dall'oggetto intestazione dell'indirizzo corrente.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.GetValue``1(System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Deserializza l'elemento informazione dall'intestazione dell'indirizzo corrente in un oggetto di un tipo specificato che utilizza un formattatore specificato per serializzare queste informazioni.</summary>
      <returns>Istanza di una classe di tipo <paramref name="T" /> con campi e proprietà impostati sui valori forniti dall'oggetto intestazione dell'indirizzo corrente.</returns>
      <param name="serializer">
        <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> utilizzato per deserializzare l'elemento informazione dall'oggetto intestazione dell'indirizzo corrente.</param>
      <typeparam name="T">Classe di tipo <paramref name="T" /> con campi e proprietà impostati sui valori forniti dall'oggetto intestazione dell'indirizzo corrente.</typeparam>
      <exception cref="T:System.ArgumentNullException">La proprietà <paramref name="serializer" /> è null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.AddressHeader.Name">
      <summary>In caso di implementazione, Ottiene il nome dell'intestazione dell'indirizzo.</summary>
      <returns>Nome dell'intestazione di indirizzo.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.AddressHeader.Namespace">
      <summary>In caso di implementazione, Ottiene lo spazio dei nomi dell'intestazione dell'indirizzo.</summary>
      <returns>Spazio dei nomi dell'intestazione di indirizzo.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.OnWriteAddressHeaderContents(System.Xml.XmlDictionaryWriter)">
      <summary>Quando sottoposto a override in una classe derivata, viene richiamato quando il contenuto dell'intestazione dell'indirizzo viene scritto in un flusso o in un file.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> utilizzato per scrivere il contenuto dell'intestazione dell'indirizzo in un flusso o in un file.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.OnWriteStartAddressHeader(System.Xml.XmlDictionaryWriter)">
      <summary>Quando sottoposto a override in una classe derivata, viene richiamato quando il contenuto dell'intestazione dell'indirizzo inizia a essere scritto in un flusso o in un file.</summary>
      <param name="writer">Classe <see cref="T:System.Xml.XmlDictionaryWriter" /> utilizzata per scrivere l'intestazione dell'indirizzo in un flusso o in un file.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.ToMessageHeader">
      <summary>Esegue il wrapping dell'intestazione dell'indirizzo come intestazione del messaggio.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageHeader" /> esegue il wrapping dell'intestazione dell'indirizzo corrente.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.WriteAddressHeader(System.Xml.XmlDictionaryWriter)">
      <summary>Scrive l'intestazione dell'indirizzo in un flusso o in un file utilizzando <see cref="T:System.Xml.XmlDictionaryWriter" /> specificato.</summary>
      <param name="writer">Classe <see cref="T:System.Xml.XmlDictionaryWriter" /> utilizzata per scrivere l'intestazione dell'indirizzo in un flusso o in un file.</param>
      <exception cref="T:System.ArgumentNullException">La proprietà <paramref name="writer" /> è null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.WriteAddressHeader(System.Xml.XmlWriter)">
      <summary>Scrive l'intestazione dell'indirizzo in un flusso o in un file utilizzando <see cref="T:System.Xml.XmlWriter" /> specificato.</summary>
      <param name="writer">Classe <see cref="T:System.Xml.XmlWriter" /> utilizzata per scrivere l'intestazione dell'indirizzo in un flusso o in un file.</param>
      <exception cref="T:System.ArgumentNullException">La proprietà <paramref name="writer" /> è null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.WriteAddressHeaderContents(System.Xml.XmlDictionaryWriter)">
      <summary>Scrive il contenuto dell'intestazione dell'indirizzo in un flusso o in un file.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> utilizzato per scrivere il contenuto dell'intestazione dell'indirizzo in un flusso o in un file.</param>
      <exception cref="T:System.ArgumentNullException">La proprietà <paramref name="writer" /> è null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.WriteStartAddressHeader(System.Xml.XmlDictionaryWriter)">
      <summary>Inizia a scrivere il contenuto dell'intestazione dell'indirizzo in un flusso o in un file.</summary>
      <param name="writer">Classe <see cref="T:System.Xml.XmlDictionaryWriter" /> utilizzata per scrivere l'intestazione dell'indirizzo in un flusso o in un file.</param>
      <exception cref="T:System.ArgumentNullException">La proprietà <paramref name="writer" /> è null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.AddressHeaderCollection">
      <summary>Rappresenta una raccolta di intestazioni di indirizzo thread-safe, in sola lettura.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.AddressHeaderCollection" />.  </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.Channels.AddressHeader})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.AddressHeaderCollection" /> da un set enumerabile di intestazioni di indirizzo.</summary>
      <param name="addressHeaders">Set <see cref="T:System.Collections.Generic.IEnumerable`1" /> di oggetti <see cref="T:System.ServiceModel.Channels.AddressHeader" /> utilizzati per inizializzare la raccolta.</param>
      <exception cref="T:System.ArgumentException">Una delle intestazioni di indirizzo nel parametro <paramref name="addressHeaders" /> è null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.AddHeadersTo(System.ServiceModel.Channels.Message)">
      <summary>Aggiunge le intestazioni nella raccolta alle intestazioni di un messaggio specificato.</summary>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> a cui vengono aggiunte le intestazioni.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> è null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.FindAll(System.String,System.String)">
      <summary>Trova tutte le intestazioni di indirizzo nella raccolta con il nome e lo spazio dei nomi specificati.</summary>
      <returns>
        <see cref="T:System.Array" /> di tipo <see cref="T:System.ServiceModel.Channels.AddressHeader" /> che contiene tutte le intestazioni nella raccolta con il nome e lo spazio dei nomi specificati.</returns>
      <param name="name">Nome dell'intestazione di indirizzo da trovare.</param>
      <param name="ns">Spazio dei nomi dell'intestazione di indirizzo da trovare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> o <paramref name="ns" /> è null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.FindHeader(System.String,System.String)">
      <summary>Trova la prima intestazione di indirizzo nella raccolta con un nome e un spazio dei nomi specificati.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.AddressHeader" /> nella raccolta con il nome e lo spazio dei nomi specificati.</returns>
      <param name="name">Nome dell'intestazione di indirizzo da trovare.</param>
      <param name="ns">Spazio dei nomi dell'intestazione di indirizzo da trovare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> o <paramref name="ns" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Esiste più di un'intestazione con <paramref name="name" /> e <paramref name="ns" /> specificati.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.AddressingVersion">
      <summary>La versione di WS-Addressing associata a un messaggio SOAP o compresa da un endpoint.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.AddressingVersion.None">
      <summary>Ottiene la versione Addressing non associata alla versione di WS-Addressing.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> non è associato alla una versione WS-Addressing.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressingVersion.ToString">
      <summary>Restituisce una rappresentazione di stringa della versione Addressing corrente.</summary>
      <returns>Stringa che rappresenta la versione Addressing corrente.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.AddressingVersion.WSAddressing10">
      <summary>Ottiene un identificatore per la versione dell'indirizzo associata a WS-Addressing 1.0.</summary>
      <returns>Istanza singleton che identifica <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> associata a WS-Addressing 1.0.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement">
      <summary>Elemento di associazione che specifica il formato binario .NET per XML utilizzato per codificare i messaggi.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Compila lo stack della channel factory nel client che crea un tipo di canale specificato per un contesto specificato.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> di tipo <paramref name="TChannel" /> per il contesto specificato.</returns>
      <param name="context">Classe <see cref="T:System.ServiceModel.Channels.BindingContext" /> per il canale.</param>
      <typeparam name="TChannel">Tipo di canale prodotto dalla channel factory.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.Clone">
      <summary>Consente di creare un nuovo oggetto <see cref="T:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement" /> inizializzato da quello corrente.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement" /> con valori di proprietà uguali a quelli dell'elemento corrente.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.CompressionFormat">
      <summary>Ottiene o imposta il formato di compressione per l'elemento di associazione.</summary>
      <returns>Il formato di compressione per l'elemento di associazione.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.CreateMessageEncoderFactory">
      <summary>Crea una factory per codificatori di messaggi binari che utilizzano le versioni SOAP e WS-Addressing e la codifica caratteri specificate dall'elemento di associazione della codifica corrente.</summary>
      <returns>Classe <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" /> creata da questo elemento di associazione.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Se presente, restituisce un oggetto tipizzato richiesto dal livello appropriato nello stack dell'elemento di associazione.</summary>
      <returns>L'oggetto tipizzato <paramref name="T" /> richiesto se presente, null in caso contrario.</returns>
      <param name="context">Oggetto <see cref="T:System.ServiceModel.Channels.BindingContext" /> per l'elemento di associazione.</param>
      <typeparam name="T">Oggetto tipizzato per il quale il metodo sta eseguendo una query.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.MaxSessionSize">
      <summary>Ottiene o imposta la quantità massima di memoria disponibile in una sessione per l'ottimizzazione delle procedure di trasmissione.</summary>
      <returns>Dimensione massima, in byte, di una sessione.Il valore predefinito è 2048 byte.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore è minore o uguale a zero.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.MessageVersion">
      <summary>Ottiene o imposta le versioni del messaggio SOAP e WS-Addressing utilizzate o previste.</summary>
      <returns>Elemento <see cref="T:System.ServiceModel.Channels.MessageVersion" /> utilizzato o previsto.</returns>
      <exception cref="T:System.ArgumentNullException">L'impostazione del valore è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore impostato è una versione envelope non supportata.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.ReaderQuotas">
      <summary>Ottiene i vincoli sulla complessità dei messaggi XML che possono essere elaborati da endpoint configurati con questo elemento di associazione.</summary>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> che specifica i vincoli di complessità nei messaggi SOAP scambiati.I valori predefiniti per questi vincoli sono riportati nella sezione seguente delle note.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.Binding">
      <summary>Contiene gli elementi di associazione che specificano i protocolli, i trasporti e i codificatori di messaggi utilizzati per la comunicazione tra client e servizi.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.Binding" /> con il nome e lo spazio dei nomi predefiniti. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.#ctor(System.String,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.Binding" /> dall'associazione specificata del servizio.</summary>
      <param name="name">
        <see cref="P:System.ServiceModel.Channels.Binding.Name" /> dell'associazione.</param>
      <param name="ns">
        <see cref="P:System.ServiceModel.Channels.Binding.Namespace" /> dell'associazione.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> è null o una stringa vuota.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ns" /> è null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])">
      <summary>Compila lo stack della channel factory nel client che crea un tipo specificato di canale e che soddisfa le funzionalità specificate da una matrice di oggetti.</summary>
      <returns>Elemento <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> di tipo <paramref name="TChannel" /> che soddisfa le funzionalità specificate dalla raccolta.</returns>
      <param name="parameters">Matrice di oggetti che specifica i requisiti della channel factory compilata.</param>
      <typeparam name="TChannel">Tipo di canale prodotto dalla channel factory.</typeparam>
      <exception cref="T:System.InvalidOperationException">L'elemento trasporto è mancante o non funzionante, lo schema non è valido oppure non è stata specificata la versione del messaggio.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Compila lo stack della channel factory nel client che crea un tipo specificato di canale e che soddisfa le funzionalità specificate da una raccolta di parametri di associazione.</summary>
      <returns>Elemento <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> di tipo <paramref name="TChannel" /> che soddisfa le funzionalità specificate dalla raccolta.</returns>
      <param name="parameters">Oggetto della classe <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> che specifica i requisiti della channel factory compilata.</param>
      <typeparam name="TChannel">Tipo di canale prodotto dalla channel factory.</typeparam>
      <exception cref="T:System.InvalidOperationException">L'elemento trasporto è mancante o non funzionante, lo schema non è valido oppure non è stata specificata la versione del messaggio.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])">
      <summary>Restituisce un valore che indica se l'associazione corrente può compilare uno stack della channel factory nel client che soddisfa i requisiti specificati da una matrice di oggetti.</summary>
      <returns>true se lo stack della channel factory specificato può essere compilato nel client. In caso contrario, false.</returns>
      <param name="parameters">Matrice di oggetti che specifica i requisiti della channel factory compilata.</param>
      <typeparam name="TChannel">Tipo di canale per il quale la factory è sottoposta a test.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Restituisce un valore che indica se l'associazione corrente può compilare uno stack della channel factory nel client che soddisfa la raccolta dei parametri di associazione specificati.</summary>
      <returns>true se lo stack della channel factory specificato può essere compilato nel client. In caso contrario, false.</returns>
      <param name="parameters">Classe <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> che specifica i requisiti della channel factory compilata.</param>
      <typeparam name="TChannel">Tipo di canale per il quale la factory è sottoposta a test.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.CloseTimeout">
      <summary>Ottiene o imposta l'intervallo di tempo fornito per la chiusura di una connessione prima che il trasporto generi un'eccezione.</summary>
      <returns>Intervallo di tempo <see cref="T:System.Timespan" /> entro cui l'operazione di chiusura deve essere completata prima di scadere.Il valore predefinito è 1 minuto.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore è minore di 0 o troppo grande.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.CreateBindingElements">
      <summary>In caso di override in una classe derivata, crea una raccolta che contiene gli elementi di associazione che fanno parte dell'associazione corrente. </summary>
      <returns>Oggetto <see cref="T:System.Collections.Generic.ICollection`1" /> di tipo <see cref="T:System.ServiceModel.Channels.BindingElement" /> che contiene gli elementi di associazione dall'oggetto di associazione corrente nell'ordine corretto.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Se presente, restituisce un oggetto tipizzato richiesto dal livello appropriato nello stack dell'associazione.</summary>
      <returns>L'oggetto tipizzato <paramref name="T" /> richiesto se presente, null in caso contrario.</returns>
      <param name="parameters">Oggetto della classe <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> che specifica i requisiti del listener del canale compilato.</param>
      <typeparam name="T">Oggetto tipizzato per il quale il metodo sta eseguendo una query.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.MessageVersion">
      <summary>Ottiene la versione del messaggio utilizzata dai client e dai servizi configurati con l'associazione.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageVersion" /> utilizzata dai client e dai servizi configurati con l'associazione.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.Name">
      <summary>Ottiene o imposta il nome dell'associazione.</summary>
      <returns>Il nome dell'associazione.Il nome predefinito è null.</returns>
      <exception cref="T:System.ArgumentException">Il valore impostato non può essere null o una stringa vuota.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.Namespace">
      <summary>Ottiene o imposta lo spazio dei nomi XML dell'associazione.</summary>
      <returns>Spazio dei nomi XML dell'associazione.Il valore predefinito è "http://tempuri.org/".</returns>
      <exception cref="T:System.ArgumentNullException">Il valore impostato non può essere null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.OpenTimeout">
      <summary>Ottiene o imposta l'intervallo di tempo fornito per l'apertura di una connessione prima che il trasporto generi un'eccezione.</summary>
      <returns>Valore <see cref="T:System.Timespan" /> che specifica il tempo entro il quale l'operazione di apertura deve essere completata prima di scadere.Il valore predefinito è 1 minuto.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore è minore di 0 o troppo grande.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.ReceiveTimeout">
      <summary>Ottiene o imposta l'intervallo di tempo durante il quale una connessione rimane inattiva, senza ricevere messaggi dell'applicazione, prima di essere eliminata.</summary>
      <returns>Oggetto <see cref="T:System.Timespan" /> che specifica per quanto tempo l'applicazione deve ricevere un messaggio prima del timeout.Il valore predefinito è 10 minuto.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore è minore di 0 o troppo grande.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.Scheme">
      <summary>In caso di implementazione in una classe derivata, imposta lo schema URI che specifica il trasporto utilizzato dalle channel factory e dalle listener factory create dalle associazioni.</summary>
      <returns>Lo schema URI utilizzato dai canali o dai listener creati dalle factory create dall'associazione corrente.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.SendTimeout">
      <summary>Ottiene o imposta l'intervallo di tempo fornito per il completamento di un'operazione di scrittura prima che il trasporto generi un'eccezione.</summary>
      <returns>
        <see cref="T:System.Timespan" /> specifica il tempo entro il quale l'operazione di scrittura deve essere completata prima di scadere.Il valore predefinito è 1 minuto.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore è minore di 0 o troppo grande.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.BindingContext">
      <summary>Fornisce informazioni sugli indirizzi, le associazioni, gli elementi di associazione e i parametri di associazione richiesti per compilare i listener del canale e le channel factory.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.#ctor(System.ServiceModel.Channels.CustomBinding,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.BindingContext" /> per l'associazione e la raccolta di parametri di associazione specificati.</summary>
      <param name="binding">Oggetto <see cref="T:System.ServiceModel.Channels.CustomBinding" /> relativo al canale.</param>
      <param name="parameters">Oggetto <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> relativo al canale.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binding" /> è null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.BindingContext.Binding">
      <summary>Ottiene l'associazione per il canale incorporato nel contesto corrente.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.CustomBinding" /> per il canale incorporato nel contesto corrente.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.BindingContext.BindingParameters">
      <summary>Ottiene la raccolta di parametri di associazione per il canale incorporato nel contesto corrente.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> per il canale incorporato nel contesto corrente.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.BuildInnerChannelFactory``1">
      <summary>Compila la channel factory interna per i canali di un tipo specificato sotto la channel factory corrente.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> di tipo <see cref="T:System.ServiceModel.Channels.IChannel" /> che rappresenta la channel factory interna della channel factory corrente.</returns>
      <typeparam name="TChannel">Tipo di oggetto <see cref="T:System.ServiceModel.Channels.IChannel" /> prodotto dalla channel factory interna.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.CanBuildInnerChannelFactory``1">
      <summary>Restituisce un valore che indica se la channel factory interna può produrre un tipo di canale specificato.</summary>
      <returns>true se la channel factory interna può produrre il <paramref name="TChannel" /> specificato. In caso contrario, false.</returns>
      <typeparam name="TChannel">Tipo di oggetto <see cref="T:System.ServiceModel.Channels.IChannel" /> prodotto dalla channel factory interna.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.Clone">
      <summary>Restituisce una copia del contesto di compilazione del canale corrente.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Channels.BindingContext" /> che è una copia del contesto di compilazione del canale corrente.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.GetInnerProperty``1">
      <summary>Se presente, restituisce un oggetto tipizzato richiesto dal livello appropriato nello stack dell'associazione.</summary>
      <returns>L'oggetto tipizzato <paramref name="T" /> richiesto se presente, null in caso contrario.</returns>
      <typeparam name="T">Oggetto tipizzato per il quale il metodo sta eseguendo una query.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.BindingContext.RemainingBindingElements">
      <summary>Ottiene gli elementi di associazione utilizzati da altri elementi di associazione per costruire lo stack dei canali.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> che contiene gli elementi di associazione utilizzati da altri elementi di associazione per costruire lo stack dei canali.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.BindingElement">
      <summary>Elementi delle associazioni che compilano le channel factory e i listener di canale per vari tipi di canali utilizzati per elaborare messaggi in uscita e in arrivo.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.BindingElement" />.  </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.#ctor(System.ServiceModel.Channels.BindingElement)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.BindingElement" /> da un elemento di associazione specificato.</summary>
      <param name="elementToBeCloned">Oggetto <see cref="T:System.ServiceModel.Channels.BindingElement" /> da duplicare.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Inizializza una channel factory per la creazione di canali di un tipo specificato dal contesto dell'associazione.</summary>
      <returns>Interfaccia <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> di tipo <paramref name="TChannel" /> inizializzata da <paramref name="context" />.</returns>
      <param name="context">Classe <see cref="T:System.ServiceModel.Channels.BindingContext" /> che fornisce il contesto per l'elemento di associazione. </param>
      <typeparam name="TChannel">Tipo di canale compilato dalla factory.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> è null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Restituisce un valore che indica se l'elemento di associazione può compilare una channel factory per un tipo di canale specifico.</summary>
      <returns>true se l'interfaccia <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> di tipo <paramref name="TChannel" /> può essere compilata dall'elemento di associazione. In caso contrario, false.</returns>
      <param name="context">Classe <see cref="T:System.ServiceModel.Channels.BindingContext" /> che fornisce il contesto per l'elemento di associazione. </param>
      <typeparam name="TChannel">Tipo di canale prodotto dalla channel factory.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> è null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.Clone">
      <summary>Quando sottoposto a override in una classe derivata, restituisce una copia dell'oggetto dell'elemento di associazione.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Channels.BindingElement" /> che costituisce un clone completo dell'originale.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Quando sottoposto a override in una classe derivata, restituisce un oggetto tipizzato richiesto, se presente, dal livello appropriato nello stack dell'associazione.</summary>
      <returns>Oggetto tipizzato <paramref name="T" /> richiesto, se presente, oppure null in caso contrario.</returns>
      <param name="context">Oggetto <see cref="T:System.ServiceModel.Channels.BindingContext" /> per l'elemento di associazione.</param>
      <typeparam name="T">Oggetto tipizzato per il quale il metodo sta eseguendo una query.</typeparam>
    </member>
    <member name="T:System.ServiceModel.Channels.BindingElementCollection">
      <summary>Rappresenta la raccolta di elementi di associazione utilizzati in un'associazione.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.BindingElementCollection" />.  </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.Channels.BindingElement})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> da un set enumerabile di elementi di associazione.</summary>
      <param name="elements">Interfaccia <see cref="T:System.Collections.Generic.IEnumerable`1" /> di tipo generico <see cref="T:System.ServiceModel.Channels.BindingElement" /> utilizzata per inizializzare la raccolta.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elements" /> è null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.#ctor(System.ServiceModel.Channels.BindingElement[])">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> da una matrice di elementi di associazione.</summary>
      <param name="elements">Oggetto <see cref="T:System.Array" /> di tipo <see cref="T:System.ServiceModel.Channels.BindingElement" /> utilizzato per inizializzare la raccolta.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elements" /> è null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.AddRange(System.ServiceModel.Channels.BindingElement[])">
      <summary>Aggiunge elementi di associazione da una matrice alla raccolta di elementi di associazione.</summary>
      <param name="elements">Oggetto <see cref="T:System.Array" /> di tipo <see cref="T:System.ServiceModel.Channels.BindingElement" /> da aggiungere alla raccolta.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elements" /> è null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.Clone">
      <summary>Crea una copia della raccolta di elementi di associazione.</summary>
      <returns>Una copia di <see cref="T:System.ServiceModel.Channels.BindingElementCollection" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.Contains(System.Type)">
      <summary>Restituisce un valore che indica se un tipo specificato di elemento di associazione appartiene alla raccolta di elementi di associazione.</summary>
      <returns>true se il tipo di elemento di associazione specificato è contenuto nella raccolta. In caso contrario, false.</returns>
      <param name="bindingElementType">Tipo di elemento di associazione sottoposto a controllo per l'inclusione nella raccolta.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bindingElementType" /> è null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.Find``1">
      <summary>Restituisce il primo elemento del tipo specificato dalla raccolta degli elementi di associazione.</summary>
      <returns>L'elemento di tipo <see cref="T:System.Type" /> se trovato. In caso contrario, 0 se <paramref name="T" /> è un tipo di valore e null se <paramref name="T" /> è un tipo di riferimento.</returns>
      <typeparam name="T">Oggetto della classe <see cref="T:System.Type" /> dell'elemento da cercare.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.FindAll``1">
      <summary>Restituisce tutti gli elementi del tipo specificato dalla raccolta degli elementi di associazione.</summary>
      <returns>
        <see cref="T:System.Collections.ObjectModel.Collection`1" /> di tutti gli elementi di tipo <see cref="T:System.Type" /> se trovati. In caso contrario, 0 se <paramref name="T" /> è un tipo di valore e null se <paramref name="T" /> è un tipo di riferimento.</returns>
      <typeparam name="T">Oggetto della classe <see cref="T:System.Type" /> dell'elemento da cercare.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.InsertItem(System.Int32,System.ServiceModel.Channels.BindingElement)">
      <summary>Inserisce un elemento di associazione in una posizione specificata all'interno di una raccolta di elementi di associazione.</summary>
      <param name="index">Posizione in cui inserire l'elemento di associazione nella raccolta.</param>
      <param name="item">Oggetto <see cref="T:System.ServiceModel.Channels.BindingElement" /> da inserire.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> è null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.Remove``1">
      <summary>Rimuove un elemento di associazione del tipo specificato dalla raccolta degli elementi di associazione.</summary>
      <returns>Elemento rimosso del tipo <see cref="T:System.Type" />.</returns>
      <typeparam name="T">Oggetto della classe <see cref="T:System.Type" /> dell'elemento da cercare.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.RemoveAll``1">
      <summary>Rimuove tutti gli elementi di associazione del tipo specificato dalla raccolta degli elementi di associazione.</summary>
      <returns>
        <see cref="T:System.Collections.ObjectModel.Collection`1" /> di tutti gli elementi del tipo <see cref="T:System.Type" /> trovati.</returns>
      <typeparam name="T">Oggetto della classe <see cref="T:System.Type" /> dell'elemento da cercare.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.SetItem(System.Int32,System.ServiceModel.Channels.BindingElement)">
      <summary>Sostituisce un elemento di associazione sull'indice specificato nella raccolta di elementi di associazione.</summary>
      <param name="index">Indice in base zero dell'elemento da sostituire.</param>
      <param name="item">Il nuovo valore dell'elemento <see cref="T:System.ServiceModel.Channels.BindingElement" /> nell'<paramref name="index" /> specificato.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> è null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.BindingParameterCollection">
      <summary>Rappresenta una raccolta di parametri di associazione nei quali sono memorizzate le informazioni utilizzate dagli elementi di associazione per compilare le factory.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingParameterCollection.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingParameterCollection.GetKeyForItem(System.Object)">
      <summary>Ottiene la chiave di un elemento contenuto nella raccolta. </summary>
      <returns>Oggetto <see cref="T:System.Type" /> che rappresenta il tasto nell'oggetto <paramref name="item" /> specificato nella raccolta.</returns>
      <param name="item">Elemento della raccolta di cui deve essere recuperata la chiave.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingParameterCollection.InsertItem(System.Int32,System.Object)">
      <summary>Inserisce un elemento in corrispondenza dell'indice specificato di questa raccolta.</summary>
      <param name="index">Indice in base zero della raccolta nel quale deve essere inserito <paramref name="item" />.</param>
      <param name="item">Oggetto da inserire nella raccolta.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingParameterCollection.SetItem(System.Int32,System.Object)">
      <summary>Sostituisce l'elemento nell'indice specificato con un nuovo oggetto.</summary>
      <param name="index">Indice in base zero in corrispondenza del quale impostare il nuovo <paramref name="item" />.</param>
      <param name="item">Oggetto da impostare nella raccolta.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.BodyWriter">
      <summary>Rappresenta il writer del corpo del messaggio.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BodyWriter.#ctor(System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.BodyWriter" /> che indica in modo esplicito se memorizzare nel buffer.</summary>
      <param name="isBuffered">true se il writer del corpo può essere chiamato più volte. In caso contrario, false.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.BodyWriter.CreateBufferedCopy(System.Int32)">
      <summary>Crea una copia del corpo memorizzata nel buffer.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.BodyWriter" /> contiene una copia di questo oggetto.</returns>
      <param name="maxBufferSize">Dimensione massima del buffer per il corpo.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="maxBufferSize" /> è minore di zero.</exception>
      <exception cref="T:System.InvalidOperationException">Il corpo è già stato scritto e non può essere scritto di nuovo, oppure il body writer non è memorizzato nel buffer.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.BodyWriter.IsBuffered">
      <summary>Ottiene un valore che indica se il metodo di scrittura può essere chiamato più volte.</summary>
      <returns>true se il writer del corpo può essere chiamato più volte. In caso contrario, false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BodyWriter.OnCreateBufferedCopy(System.Int32)">
      <summary>Fornisce un punto di estensibilità quando viene scritto il contenuto del corpo.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.BodyWriter" /> con le dimensioni massime specificate per il buffer.</returns>
      <param name="maxBufferSize">Dimensione massima del buffer per il corpo.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.BodyWriter.OnWriteBodyContents(System.Xml.XmlDictionaryWriter)">
      <summary>Se implementato, fornisce un punto di estensibilità quando viene scritto il contenuto del corpo.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> utilizzato per scrivere il corpo del messaggio.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.BodyWriter.WriteBodyContents(System.Xml.XmlDictionaryWriter)">
      <summary>Scrive il contenuto del corpo del messaggio.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> utilizzato per scrivere il corpo del messaggio.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> è null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.BufferManager">
      <summary>Molte funzionalità di Windows Communication Foundation (WCF) richiedono l'utilizzo di buffer, risorse la cui creazione ed eliminazione risulta particolarmente costosa.Per gestire un pool di buffer è possibile utilizzare la classe <see cref="T:System.ServiceModel.Channels.BufferManager" />.Il pool e i relativi buffer vengono creati quando si crea un'istanza di questa classe ed eliminati quando il pool di buffer viene recuperato dal processo Garbage Collection.Ogni volta che è necessario utilizzare un buffer, questo viene estratto dal buffer, utilizzato e quindi restituito al buffer al termine dell'operazione.Questo processo è molto più veloce rispetto alla creazione e all'eliminazione di un buffer ogni volta che è necessario utilizzarne uno.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.BufferManager" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.Clear">
      <summary>Rilascia i buffer attualmente memorizzati nella cache del gestore buffer.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.CreateBufferManager(System.Int64,System.Int32)">
      <summary>Crea un nuovo gestore buffer con una specifica dimensione pool di buffer massima e una specifica dimensione massima per ogni singolo buffer incluso nel pool.</summary>
      <returns>Restituisce un oggetto <see cref="T:System.ServiceModel.Channels.BufferManager" /> con i parametri specificati.</returns>
      <param name="maxBufferPoolSize">Dimensione massima del pool.</param>
      <param name="maxBufferSize">Dimensione massima di un singolo buffer.</param>
      <exception cref="T:System.InsufficientMemoryException">Nell'API.NET per le applicazioni Windows o nella Libreria di classi portabile, rilevare piuttosto l'eccezione della classe di base <see cref="T:System.OutOfMemoryException" />.La memoria disponibile non è sufficiente per creare il pool di buffer richiesto.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="maxBufferPoolSize" /> o <paramref name="maxBufferSize" /> è minore di zero.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.ReturnBuffer(System.Byte[])">
      <summary>Restituisce un buffer al pool.</summary>
      <param name="buffer">Riferimento al buffer che viene restituito.</param>
      <exception cref="T:System.ArgumentNullException">Il riferimento a <paramref name="buffer" /> non può essere null.</exception>
      <exception cref="T:System.ArgumentException">La lunghezza del <paramref name="buffer" /> non corrisponde alla proprietà relativa alla lunghezza del buffer del pool.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.TakeBuffer(System.Int32)">
      <summary>Ottiene dal pool un buffer di dimensione uguale o superiore a quella specificata. </summary>
      <returns>Matrice di byte che rappresenta la dimensione richiesta del buffer.</returns>
      <param name="bufferSize">Dimensione, in byte, del buffer richiesto.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="bufferSize" /> non può essere minore di zero.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelBase">
      <summary>Fornisce l'implementazione di base per i canali personalizzati.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelBase.#ctor(System.ServiceModel.Channels.ChannelManagerBase)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.ChannelBase" />.  </summary>
      <param name="channelManager">Classe <see cref="T:System.ServiceModel.Channels.ChannelManagerBase" /> che fornisce i timeout predefiniti per le operazioni del canale (invio, ricezione, apertura e chiusura).</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="channelManager" /> è null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.DefaultCloseTimeout">
      <summary>Ottiene l'intervallo di tempo predefinito fornito per il completamento di un'operazione di chiusura.</summary>
      <returns>
        <see cref="T:System.Timespan" /> predefinito che specifica il tempo entro il quale l'operazione di chiusura deve essere completata prima di scadere.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.DefaultOpenTimeout">
      <summary>Ottiene l'intervallo di tempo predefinito fornito per il completamento di un'operazione di apertura.</summary>
      <returns>
        <see cref="T:System.Timespan" /> predefinito che specifica il tempo entro il quale l'operazione di apertura deve essere completata prima di scadere.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.DefaultReceiveTimeout">
      <summary>Ottiene l'intervallo di tempo predefinito fornito per il completamento di un'operazione di ricezione.</summary>
      <returns>
        <see cref="T:System.Timespan" /> predefinito che specifica il tempo entro il quale l'operazione di ricezione deve essere completata prima di scadere.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.DefaultSendTimeout">
      <summary>Ottiene l'intervallo di tempo predefinito fornito per il completamento di un'operazione di invio.</summary>
      <returns>
        <see cref="T:System.Timespan" /> predefinito che specifica il tempo entro il quale l'operazione di invio deve essere completata prima di scadere.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelBase.GetProperty``1">
      <summary>Restituisce l'oggetto tipizzato richiesto, se disponibile, dal livello appropriato nello stack dei canali.</summary>
      <returns>Oggetto tipizzato <paramref name="T" /> richiesto, se presente, null in caso contrario.</returns>
      <typeparam name="T">Oggetto tipizzato per il quale il metodo sta eseguendo una query.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.Manager">
      <summary>Ottiene il gestore canali associato al canale corrente.</summary>
      <returns>Classe <see cref="T:System.ServiceModel.Channels.ChannelManagerBase" /> associata al canale corrente.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelBase.OnClosed">
      <summary>Utilizza la traccia diagnostica durante la transizione allo stato di prechiusura.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#CloseTimeout">
      <summary>Ottiene l'intervallo di tempo al termine del quale si verifica il timeout del metodo Close richiamato da un oggetto di comunicazione.</summary>
      <returns>Oggetto <see cref="T:System.Timespan" /> che specifica il tempo di attesa prima del timeout del metodo Close.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#OpenTimeout">
      <summary>Ottiene l'intervallo di tempo al termine del quale si verifica il timeout del metodo Open richiamato da un oggetto di comunicazione.</summary>
      <returns>Oggetto <see cref="T:System.Timespan" /> che specifica il tempo di attesa prima del timeout del metodo Open.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#ReceiveTimeout">
      <summary>Ottiene l'intervallo di tempo al termine del quale si verifica il timeout del metodo Receive richiamato da un oggetto di comunicazione.</summary>
      <returns>Oggetto <see cref="T:System.Timespan" /> che specifica il tempo di attesa prima del timeout del metodo Receive.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#SendTimeout">
      <summary>Ottiene l'intervallo di tempo al termine del quale si verifica timeout del metodo Send richiamato da un oggetto di comunicazione.</summary>
      <returns>Oggetto <see cref="T:System.Timespan" /> che specifica il tempo di attesa prima del timeout del metodo Send.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelFactoryBase">
      <summary>Fornisce un'implementazione di base comune per tutte le channel factory personalizzate.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.ChannelFactoryBase" />.  </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.ChannelFactoryBase" /> con i timeout delle comunicazioni predefiniti specificati.</summary>
      <param name="timeouts">
        <see cref="T:System.ServiceModel.IDefaultCommunicationTimeouts" /> specifica i timeout predefiniti per operazioni di apertura, invio, ricezione e chiusura quando si scambiano messaggi. </param>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelFactoryBase.DefaultCloseTimeout">
      <summary>Ottiene l'intervallo di tempo predefinito fornito per il completamento di un'operazione di chiusura.</summary>
      <returns>
        <see cref="T:System.Timespan" /> predefinito che specifica il tempo entro il quale l'operazione di chiusura deve essere completata prima di scadere.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelFactoryBase.DefaultOpenTimeout">
      <summary>Ottiene l'intervallo di tempo predefinito fornito per il completamento di un'operazione di apertura.</summary>
      <returns>
        <see cref="T:System.Timespan" /> predefinito che specifica il tempo entro il quale l'operazione di apertura deve essere completata prima di scadere.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelFactoryBase.DefaultReceiveTimeout">
      <summary>Ottiene l'intervallo di tempo predefinito fornito per il completamento di un'operazione di ricezione.</summary>
      <returns>
        <see cref="T:System.Timespan" /> predefinito che specifica il tempo entro il quale l'operazione di ricezione deve essere completata prima di scadere.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelFactoryBase.DefaultSendTimeout">
      <summary>Ottiene l'intervallo di tempo predefinito fornito per il completamento di un'operazione di invio.</summary>
      <returns>
        <see cref="T:System.Timespan" /> predefinito che specifica il tempo entro il quale l'operazione di invio deve essere completata prima di scadere.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.GetProperty``1">
      <summary>Se presente, restituisce un oggetto tipizzato richiesto dal livello appropriato nello stack dei canali.</summary>
      <returns>Se presente, l'oggetto tipizzato T richiesto. In caso contrario, null.</returns>
      <typeparam name="T">Oggetto tipizzato per il quale il metodo sta eseguendo una query.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.OnAbort">
      <summary>Inserisce l'elaborazione in un oggetto di comunicazione dopo che ha eseguito la transizione allo stato di chiusura a causa della chiamata di un'operazione di interruzione sincrona.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Inizia un'operazione asincrona per chiudere tutti i canali creati dalla factory.</summary>
      <returns>Interfaccia <see cref="T:System.IAsyncResult" /> che fa riferimento all'operazione di chiusura asincrona. </returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> specifica il tempo entro il quale l'operazione di chiusura deve essere completata prima di scadere.</param>
      <param name="callback">Delegato <see cref="T:System.AsyncCallback" /> che riceve la notifica del completamento dell'operazione di chiusura asincrona.</param>
      <param name="state">Oggetto, specificato dall'applicazione, che contiene le informazioni sullo stato associate all'operazione di chiusura asincrona.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.OnClose(System.TimeSpan)">
      <summary>Inserisce l'elaborazione in un oggetto di comunicazione dopo che ha eseguito la transizione allo stato di apertura che deve essere completato entro l'intervallo di tempo specificato.</summary>
      <param name="timeout">
        <see cref="T:System.Timespan" /> specifica il tempo entro il quale l'operazione di chiusura deve essere completata prima di scadere.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.OnEndClose(System.IAsyncResult)">
      <summary>Completa un'operazione asincrona per chiudere i canali aperti dalla factory.</summary>
      <param name="result">Interfaccia <see cref="T:System.IAsyncResult" /> restituita da una chiamata al metodo <see cref="M:System.ServiceModel.Channels.ChannelFactoryBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelFactoryBase`1">
      <summary>Fornisce un'implementazione di base comune per le channel factory nel client per creare canali di un tipo specificato connessi a un indirizzo specificato.</summary>
      <typeparam name="TChannel">Tipo di canale prodotto dalla channel factory.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.ChannelFactoryBase`1" />.  </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.ChannelFactoryBase`1" /> con i timeout di comunicazione predefiniti specificati.</summary>
      <param name="timeouts">
        <see cref="T:System.ServiceModel.IDefaultCommunicationTimeouts" /> specifica i timeout predefiniti per operazioni di apertura, invio, ricezione e chiusura quando si scambiano messaggi.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.CreateChannel(System.ServiceModel.EndpointAddress)">
      <summary>Crea un tipo particolare di canale con un indirizzo endpoint specificato.</summary>
      <returns>Canale di tipo <paramref name="TChannel" /> con <paramref name="address" /> specificato.</returns>
      <param name="address">Oggetto della classe <see cref="T:System.ServiceModel.EndpointAddress" /> dell'endpoint remoto a cui il canale invia messaggi.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> è null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>Crea un tipo particolare di canale con gli indirizzi endpoint e di trasporto specificati.</summary>
      <returns>Canale di tipo <paramref name="TChannel" /> con gli indirizzi di trasporto e remoto specificati.</returns>
      <param name="address">Oggetto della classe <see cref="T:System.ServiceModel.EndpointAddress" /> dell'endpoint remoto a cui il canale invia messaggi.</param>
      <param name="via">Oggetto della classe <see cref="T:System.Uri" /> contenente l'indirizzo di trasporto a cui i messaggi vengono inviati sul canale di output.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnAbort">
      <summary>Interrompe ogni canale gestito dalla channel factory.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Inizia un'operazione asincrona per chiudere tutti i canali associati alla channel factory entro l'intervallo di tempo specificato.</summary>
      <returns>Interfaccia <see cref="T:System.IAsyncResult" /> che fa riferimento all'operazione di chiusura asincrona. </returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> specifica il tempo entro il quale l'operazione di chiusura deve essere completata prima di scadere.</param>
      <param name="callback">Delegato <see cref="T:System.AsyncCallback" /> che riceve la notifica del completamento asincrono dell'operazione di chiusura.</param>
      <param name="state">Oggetto, specificato dall'applicazione, che contiene le informazioni sullo stato associate all'operazione di chiusura asincrona.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnClose(System.TimeSpan)">
      <summary>Chiude tutti i canali associati alla channel factory entro un intervallo di tempo specificato.</summary>
      <param name="timeout">
        <see cref="T:System.Timespan" /> specifica il tempo entro il quale l'operazione di chiusura deve essere completata prima di scadere.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnCreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>In caso di implementazione in una classe derivata, fornisce un punto di estensibilità durante la creazione di canali.</summary>
      <returns>Canale di tipo <paramref name="TChannel" /> con gli indirizzi specificati</returns>
      <param name="address">Oggetto della classe <see cref="T:System.ServiceModel.EndpointAddress" /> dell'endpoint remoto a cui il canale invia messaggi.</param>
      <param name="via">Oggetto della classe <see cref="T:System.Uri" /> contenente l'indirizzo di trasporto a cui i messaggi vengono inviati sul canale di output.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnEndClose(System.IAsyncResult)">
      <summary>Completa un'operazione asincrona per chiudere tutti i canali associati alla channel factory entro l'intervallo di tempo specificato.</summary>
      <param name="result">Interfaccia <see cref="T:System.IAsyncResult" /> restituita da una chiamata al metodo <see cref="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.ValidateCreateChannel">
      <summary>Controlla che la channel factory sia aperta e pronta per creare canali.</summary>
      <exception cref="T:System.ObjectDisposedException">L'oggetto di comunicazione si trova in uno stato <see cref="F:System.ServiceModel.CommunicationState.Closing" /> o <see cref="F:System.ServiceModel.CommunicationState.Closed" />.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">L'oggetto di comunicazione si trova in uno stato <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.InvalidOperationException">La channel factory corrente non si trova nello stato <see cref="F:System.ServiceModel.CommunicationState.Opened" />.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelManagerBase">
      <summary>Fornisce un'implementazione di base per la gestione dei timeout predefiniti associati alle channel factory e ai listener di canale.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelManagerBase.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.ChannelManagerBase" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.DefaultReceiveTimeout">
      <summary>Quando sottoposto a override in una classe derivata, ottiene l'intervallo di tempo predefinito entro il quale il canale deve completare la ricezione di un messaggio.</summary>
      <returns>Valore <see cref="T:System.Timespan" /> predefinito che specifica l'intervallo di tempo concesso al canale per completare la ricezione di un messaggio prima del timeout dopo che è stato richiamato il metodo di ricezione.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.DefaultSendTimeout">
      <summary>Quando sottoposto a override in una classe derivata, ottiene l'intervallo di tempo predefinito entro il quale un canale deve completare l'invio di un messaggio.</summary>
      <returns>Valore <see cref="T:System.Timespan" /> predefinito che specifica l'intervallo di tempo concesso al canale per completare l'invio di un messaggio prima del timeout dopo che è stato richiamato il metodo di invio.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#CloseTimeout">
      <summary>Ottiene l'intervallo di tempo al termine del quale si verifica il timeout del metodo Close richiamato da un oggetto di comunicazione.</summary>
      <returns>Oggetto <see cref="T:System.Timespan" /> che specifica il tempo di attesa prima del timeout del metodo Close.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#OpenTimeout">
      <summary>Ottiene l'intervallo di tempo al termine del quale si verifica il timeout del metodo Open richiamato da un oggetto di comunicazione.</summary>
      <returns>Oggetto <see cref="T:System.Timespan" /> che specifica il tempo di attesa prima del timeout del metodo Open.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#ReceiveTimeout">
      <summary>Ottiene l'intervallo di tempo al termine del quale si verifica il timeout del metodo Receive richiamato da un oggetto di comunicazione.</summary>
      <returns>Oggetto <see cref="T:System.Timespan" /> che specifica il tempo di attesa prima del timeout del metodo Receive.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#SendTimeout">
      <summary>Ottiene l'intervallo di tempo al termine del quale si verifica timeout del metodo Send richiamato da un oggetto di comunicazione.</summary>
      <returns>Oggetto <see cref="T:System.Timespan" /> che specifica il tempo di attesa prima del timeout del metodo Send.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelParameterCollection">
      <summary>Rappresenta una raccolta di parametri del canale.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.ChannelParameterCollection" />.  </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.#ctor(System.ServiceModel.Channels.IChannel)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.ChannelParameterCollection" />.  </summary>
      <param name="channel">Canale i cui parametri si trovano in questa raccolta.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelParameterCollection.Channel">
      <summary>Ottiene il canale i cui parametri si trovano in questa raccolta. </summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.IChannel" /> i cui parametri si trovano in questa raccolta.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.ClearItems">
      <summary>Cancella la raccolta di parametri.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.InsertItem(System.Int32,System.Object)">
      <summary>Inserisce nella raccolta l'elemento specificato utilizzando l'indice specificato.</summary>
      <param name="index">Indice dell'elemento nella raccolta.</param>
      <param name="item">Elemento da aggiungere all'insieme.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.PropagateChannelParameters(System.ServiceModel.Channels.IChannel)">
      <summary>Aggiunge i parametri nella raccolta corrente a un <see cref="T:System.ServiceModel.Channels.ChannelParameterCollection" /> del canale specificato.</summary>
      <param name="innerChannel">Canale che riceve i parametri della raccolta corrente.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.RemoveItem(System.Int32)">
      <summary>Rimuove un parametro dalla raccolta.</summary>
      <param name="index">Indice del parametro da rimuovere.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.SetItem(System.Int32,System.Object)">
      <summary>Sostituisce un elemento nella raccolta in un indice specificato.</summary>
      <param name="index">Indice dell'elemento da sostituire.</param>
      <param name="item">Valore dell'elemento sostitutivo.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.CommunicationObject">
      <summary>Fornisce un'implementazione di base comune per la macchina a stati di base comune a tutti gli oggetti orientati alla comunicazione presenti nel sistema, compresi canali, listener, nonché channel e listener factory.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.CommunicationObject" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.#ctor(System.Object)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.CommunicationObject" /> con il blocco a esclusione reciproca per proteggere le transizioni di stato specificate.</summary>
      <param name="mutex">Blocco a esclusione reciproca che protegge l'istanza della classe durante una transizione di stato.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Abort">
      <summary>Determina la transizione immediata di un oggetto di comunicazione dallo stato corrente allo stato di chiusura.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
      <summary>Avvia un'operazione asincrona finalizzata a chiudere un oggetto di comunicazione.</summary>
      <returns>Interfaccia <see cref="T:System.IAsyncResult" /> che fa riferimento all'operazione di chiusura asincrona. </returns>
      <param name="callback">Delegato <see cref="T:System.AsyncCallback" /> che riceve la notifica del completamento dell'operazione di chiusura asincrona.</param>
      <param name="state">Un oggetto, specificato dall'applicazione, che contiene le informazioni di stato associate all'operazione di chiusura asincrona.</param>
      <exception cref="T:System.InvalidOperationException">L'oggetto di comunicazione non si trova in uno stato <see cref="F:System.ServiceModel.CommunicationState.Opened" /> o <see cref="F:System.ServiceModel.CommunicationState.Opening" /> e non può essere modificato.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto di comunicazione si trova in uno stato <see cref="F:System.ServiceModel.CommunicationState.Closing" /> o <see cref="F:System.ServiceModel.CommunicationState.Closed" /> e non può essere modificato.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">L'oggetto di comunicazione si trova in uno stato <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> e non può essere modificato.</exception>
      <exception cref="T:System.TimeoutException">L'intervallo di tempo predefinito assegnato per l'operazione è stato superato prima del completamento dell'operazione.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Consente di iniziare un'operazione asincrona finalizzata a chiudere un oggetto di comunicazione entro un determinato intervallo di tempo.</summary>
      <returns>Interfaccia <see cref="T:System.IAsyncResult" /> che fa riferimento all'operazione di chiusura asincrona.</returns>
      <param name="timeout">Intervallo di tempo <see cref="T:System.Timespan" /> entro cui l'operazione di chiusura deve essere completata prima di scadere.</param>
      <param name="callback">Delegato <see cref="T:System.AsyncCallback" /> che riceve la notifica del completamento dell'operazione di chiusura asincrona.</param>
      <param name="state">Un oggetto, specificato dall'applicazione, che contiene le informazioni di stato associate all'operazione di chiusura asincrona.</param>
      <exception cref="T:System.InvalidOperationException">L'oggetto di comunicazione non si trova in uno stato <see cref="F:System.ServiceModel.CommunicationState.Opened" /> o <see cref="F:System.ServiceModel.CommunicationState.Opening" /> e non può essere modificato.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto di comunicazione si trova in uno stato <see cref="F:System.ServiceModel.CommunicationState.Closing" /> o <see cref="F:System.ServiceModel.CommunicationState.Closed" /> e non può essere modificato.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">L'oggetto di comunicazione si trova in uno stato <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> e non può essere modificato.</exception>
      <exception cref="T:System.TimeoutException">L'intervallo di tempo predefinito assegnato per l'operazione è stato superato prima del completamento dell'operazione.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
      <summary>Consente di iniziare un'operazione asincrona finalizzata ad aprire un oggetto di comunicazione.</summary>
      <returns>Interfaccia <see cref="T:System.IAsyncResult" /> che fa riferimento all'operazione asincrona di apertura. </returns>
      <param name="callback">Delegato <see cref="T:System.AsyncCallback" /> che riceve la notifica del completamento dell'operazione di apertura asincrona.</param>
      <param name="state">Oggetto, specificato dall'applicazione, che contiene le informazioni di stato associate all'operazione di apertura asincrona.</param>
      <exception cref="T:System.InvalidOperationException">L'oggetto di comunicazione non si trova in uno stato <see cref="F:System.ServiceModel.CommunicationState.Opened" /> o <see cref="F:System.ServiceModel.CommunicationState.Opening" /> e non può essere modificato.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto di comunicazione si trova in uno stato <see cref="F:System.ServiceModel.CommunicationState.Closing" /> o <see cref="F:System.ServiceModel.CommunicationState.Closed" /> e non può essere modificato.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">L'oggetto di comunicazione si trova in uno stato <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> e non può essere modificato.</exception>
      <exception cref="T:System.TimeoutException">L'intervallo di tempo predefinito assegnato per l'operazione è stato superato prima del completamento dell'operazione.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Consente di iniziare un'operazione asincrona finalizzata ad aprire un oggetto di comunicazione entro un determinato intervallo di tempo.</summary>
      <returns>Interfaccia <see cref="T:System.IAsyncResult" /> che fa riferimento all'operazione asincrona di apertura. </returns>
      <param name="timeout">L'oggetto <see cref="T:System.Timespan" /> che specifica il tempo disponibile per il completamento prima del timeout dell'operazione di invio.</param>
      <param name="callback">Delegato <see cref="T:System.AsyncCallback" /> che riceve la notifica del completamento dell'operazione di apertura asincrona.</param>
      <param name="state">Oggetto, specificato dall'applicazione, che contiene le informazioni di stato associate all'operazione di apertura asincrona.</param>
      <exception cref="T:System.InvalidOperationException">L'oggetto di comunicazione non si trova in uno stato <see cref="F:System.ServiceModel.CommunicationState.Opened" /> o <see cref="F:System.ServiceModel.CommunicationState.Opening" /> e non può essere modificato.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto di comunicazione si trova in uno stato <see cref="F:System.ServiceModel.CommunicationState.Closing" /> o <see cref="F:System.ServiceModel.CommunicationState.Closed" /> e non può essere modificato.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">L'oggetto di comunicazione si trova in uno stato <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> e non può essere modificato.</exception>
      <exception cref="T:System.TimeoutException">L'intervallo di tempo predefinito assegnato per l'operazione è stato superato prima del completamento dell'operazione.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Close">
      <summary>Comporta la transizione di un oggetto di comunicazione dallo stato corrente allo stato di chiusura.</summary>
      <exception cref="T:System.InvalidOperationException">L'oggetto di comunicazione non si trova in uno stato <see cref="F:System.ServiceModel.CommunicationState.Opened" /> o <see cref="F:System.ServiceModel.CommunicationState.Opening" /> e non può essere modificato.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto di comunicazione si trova in uno stato <see cref="F:System.ServiceModel.CommunicationState.Closing" /> o <see cref="F:System.ServiceModel.CommunicationState.Closed" /> e non può essere modificato.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">L'oggetto di comunicazione si trova in uno stato <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> e non può essere modificato.</exception>
      <exception cref="T:System.TimeoutException">L'intervallo di tempo predefinito assegnato per l'operazione è stato superato prima del completamento dell'operazione.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)">
      <summary>Determina la transizione di un oggetto di comunicazione dallo stato corrente allo stato chiuso entro un intervallo di tempo specificato.</summary>
      <param name="timeout">Intervallo di tempo <see cref="T:System.Timespan" /> entro cui l'operazione di chiusura deve essere completata prima di scadere.</param>
      <exception cref="T:System.InvalidOperationException">L'oggetto di comunicazione non si trova in uno stato <see cref="F:System.ServiceModel.CommunicationState.Opened" /> o <see cref="F:System.ServiceModel.CommunicationState.Opening" /> e non può essere modificato.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto di comunicazione si trova in uno stato <see cref="F:System.ServiceModel.CommunicationState.Closing" /> o <see cref="F:System.ServiceModel.CommunicationState.Closed" /> e non può essere modificato.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">L'oggetto di comunicazione si trova in uno stato <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> e non può essere modificato.</exception>
      <exception cref="T:System.TimeoutException">L'intervallo di tempo predefinito assegnato per l'operazione è stato superato prima del completamento dell'operazione.</exception>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Closed">
      <summary>Si verifica quando un oggetto di comunicazione esegue la transizione allo stato Closed.</summary>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Closing">
      <summary>Si verifica quando un oggetto di comunicazione esegue la transizione allo stato Closing.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.DefaultCloseTimeout">
      <summary>Quando sottoposto a override in una classe derivata, ottiene l'intervallo di tempo predefinito fornito per il completamento di un'operazione di chiusura.</summary>
      <returns>
        <see cref="T:System.Timespan" /> predefinito che specifica il tempo entro il quale l'operazione di chiusura deve essere completata prima di scadere.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.DefaultOpenTimeout">
      <summary>Quando sottoposto a override in una classe derivata, ottiene l'intervallo di tempo predefinito fornito per il completamento di un'operazione di apertura.</summary>
      <returns>
        <see cref="T:System.Timespan" /> predefinito che specifica il tempo entro il quale l'operazione di apertura deve essere completata prima di scadere.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)">
      <summary>Consente di completare un'operazione asincrona finalizzata a chiudere un oggetto di comunicazione.</summary>
      <param name="result">Interfaccia <see cref="T:System.IAsyncResult" /> restituita da una chiamata al metodo <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.BeginClose" />.</param>
      <exception cref="T:System.InvalidOperationException">L'oggetto di comunicazione non si trova in uno stato <see cref="F:System.ServiceModel.CommunicationState.Opened" /> o <see cref="F:System.ServiceModel.CommunicationState.Opening" /> e non può essere modificato.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto di comunicazione si trova in uno stato <see cref="F:System.ServiceModel.CommunicationState.Closing" /> o <see cref="F:System.ServiceModel.CommunicationState.Closed" /> e non può essere modificato.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">L'oggetto di comunicazione si trova in uno stato <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> e non può essere modificato.</exception>
      <exception cref="T:System.TimeoutException">L'intervallo di tempo predefinito assegnato per l'operazione è stato superato prima del completamento dell'operazione.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)">
      <summary>Consente di completare un'operazione asincrona finalizzata ad aprire un oggetto di comunicazione.</summary>
      <param name="result">Interfaccia <see cref="T:System.IAsyncResult" /> restituita da una chiamata al metodo <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.BeginClose" />.</param>
      <exception cref="T:System.InvalidOperationException">L'oggetto di comunicazione non si trova in uno stato <see cref="F:System.ServiceModel.CommunicationState.Opened" /> o <see cref="F:System.ServiceModel.CommunicationState.Opening" /> e non può essere modificato.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto di comunicazione si trova in uno stato <see cref="F:System.ServiceModel.CommunicationState.Closing" /> o <see cref="F:System.ServiceModel.CommunicationState.Closed" /> e non può essere modificato.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">L'oggetto di comunicazione si trova in uno stato <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> e non può essere modificato.</exception>
      <exception cref="T:System.TimeoutException">L'intervallo di tempo predefinito assegnato per l'operazione è stato superato prima del completamento dell'operazione.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Fault">
      <summary>Determina la transizione di un oggetto di comunicazione dallo stato corrente allo stato Faulted.</summary>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Faulted">
      <summary>Si verifica quando un oggetto di comunicazione esegue la transizione allo stato Faulted.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType">
      <summary>Ottiene il tipo di oggetto di comunicazione.</summary>
      <returns>Tipo di oggetto di comunicazione.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.IsDisposed">
      <summary>Ottiene un valore che indica se l'oggetto di comunicazione è stato eliminato.</summary>
      <returns>true se l'oggetto di comunicazione è in uno stato chiuso. In caso contrario, false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnAbort">
      <summary>Inserisce l'elaborazione in un oggetto di comunicazione dopo che ha eseguito la transizione allo stato di chiusura a causa della chiamata di un'operazione di interruzione sincrona.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Inserisce istruzioni di elaborazione dopo che un oggetto di comunicazione esegue la transizione allo stato Closing in seguito alla chiamata di un'operazione di chiusura asincrona.</summary>
      <returns>Interfaccia <see cref="T:System.IAsyncResult" /> che fa riferimento all'operazione di chiusura asincrona. </returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> specifica il tempo entro il quale l'operazione di chiusura deve essere completata prima di scadere.</param>
      <param name="callback">Delegato <see cref="T:System.AsyncCallback" /> che riceve la notifica del completamento dell'operazione di chiusura asincrona.</param>
      <param name="state">Oggetto, specificato dall'applicazione, che contiene le informazioni sullo stato associate all'operazione di chiusura asincrona.</param>
      <exception cref="T:System.InvalidOperationException">L'oggetto di comunicazione non si trova in uno stato <see cref="F:System.ServiceModel.CommunicationState.Opened" /> o <see cref="F:System.ServiceModel.CommunicationState.Opening" /> e non può essere modificato.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto di comunicazione si trova in uno stato <see cref="F:System.ServiceModel.CommunicationState.Closing" /> o <see cref="F:System.ServiceModel.CommunicationState.Closed" /> e non può essere modificato.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">L'oggetto di comunicazione si trova in uno stato <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> e non può essere modificato.</exception>
      <exception cref="T:System.TimeoutException">L'intervallo di tempo predefinito assegnato per l'operazione è stato superato prima del completamento dell'operazione.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Inserisce l'elaborazione in un oggetto di comunicazione dopo che l'oggetto ha eseguito la transizione allo stato Opening in seguito alla chiamata di un'operazione di apertura asincrona.</summary>
      <returns>Interfaccia <see cref="T:System.IAsyncResult" /> che fa riferimento all'operazione di apertura asincrona. </returns>
      <param name="timeout">Valore <see cref="T:System.Timespan" /> che specifica l'intervallo di tempo entro il quale l'operazione di apertura deve essere completata prima di scadere.</param>
      <param name="callback">Delegato <see cref="T:System.AsyncCallback" /> che riceve la notifica del completamento dell'operazione di apertura asincrona.</param>
      <param name="state">Oggetto, specificato dall'applicazione, contenente le informazioni di stato associate all'operazione di apertura asincrona.</param>
      <exception cref="T:System.InvalidOperationException">L'oggetto di comunicazione non si trova in uno stato <see cref="F:System.ServiceModel.CommunicationState.Opened" /> o <see cref="F:System.ServiceModel.CommunicationState.Opening" /> e non può essere modificato.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto di comunicazione si trova in uno stato <see cref="F:System.ServiceModel.CommunicationState.Closing" /> o <see cref="F:System.ServiceModel.CommunicationState.Closed" /> e non può essere modificato.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">L'oggetto di comunicazione si trova in uno stato <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> e non può essere modificato.</exception>
      <exception cref="T:System.TimeoutException">L'intervallo di tempo predefinito assegnato per l'operazione è stato superato prima del completamento dell'operazione.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)">
      <summary>Inserisce l'elaborazione in un oggetto di comunicazione dopo che l'oggetto ha eseguito la transizione allo stato Closing in seguito alla chiamata di un'operazione di chiusura sincrona.</summary>
      <param name="timeout">
        <see cref="T:System.Timespan" /> specifica il tempo entro il quale l'operazione di chiusura deve essere completata prima di scadere.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Il metodo <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.Close" /> è stato chiamato su un oggetto nello stato <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">L'intervallo di tempo predefinito assegnato per l'operazione è stato superato prima del completamento dell'operazione.</exception>
      <exception cref="T:System.ServiceModel.CommunicationException">Si verificato un errore di comunicazione durante la chiusura dell'oggetto.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnClosed">
      <summary>Viene chiamato durante la transizione di un oggetto di comunicazione allo stato di chiusura.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnClosing">
      <summary>Viene chiamato durante la transizione di un oggetto di comunicazione allo stato di chiusura.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)">
      <summary>Consente di completare un'operazione asincrona alla chiusura di un oggetto di comunicazione.</summary>
      <param name="result">Interfaccia <see cref="T:System.IAsyncResult" /> restituita da una chiamata al metodo <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)" />.</param>
      <exception cref="T:System.InvalidOperationException">L'oggetto di comunicazione non si trova in uno stato <see cref="F:System.ServiceModel.CommunicationState.Opened" /> o <see cref="F:System.ServiceModel.CommunicationState.Opening" /> e non può essere modificato.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto di comunicazione si trova in uno stato <see cref="F:System.ServiceModel.CommunicationState.Closing" /> o <see cref="F:System.ServiceModel.CommunicationState.Closed" /> e non può essere modificato.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">L'oggetto di comunicazione si trova in uno stato <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> e non può essere modificato.</exception>
      <exception cref="T:System.TimeoutException">L'intervallo di tempo predefinito assegnato per l'operazione è stato superato prima del completamento dell'operazione.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)">
      <summary>Consente di completare un'operazione asincrona all'apertura di un oggetto di comunicazione.</summary>
      <param name="result">Interfaccia <see cref="T:System.IAsyncResult" /> restituita da una chiamata al metodo <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)" />.</param>
      <exception cref="T:System.InvalidOperationException">L'oggetto di comunicazione non si trova in uno stato <see cref="F:System.ServiceModel.CommunicationState.Opened" /> o <see cref="F:System.ServiceModel.CommunicationState.Opening" /> e non può essere modificato.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto di comunicazione si trova in uno stato <see cref="F:System.ServiceModel.CommunicationState.Closing" /> o <see cref="F:System.ServiceModel.CommunicationState.Closed" /> e non può essere modificato.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">L'oggetto di comunicazione si trova in uno stato <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> e non può essere modificato.</exception>
      <exception cref="T:System.TimeoutException">L'intervallo di tempo predefinito assegnato per l'operazione è stato superato prima del completamento dell'operazione.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnFaulted">
      <summary>Inserisce l'elaborazione in un oggetto di comunicazione dopo che ha eseguito la transizione allo stato Faulted in seguito alla chiamata di un'operazione di errore sincrona.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)">
      <summary>Inserisce l'elaborazione in un oggetto di comunicazione dopo che ha eseguito la transizione allo stato di apertura che deve essere completato entro l'intervallo di tempo specificato.</summary>
      <param name="timeout">Valore <see cref="T:System.Timespan" /> che specifica l'intervallo di tempo entro il quale l'operazione di apertura deve essere completata prima di scadere.</param>
      <exception cref="T:System.InvalidOperationException">L'oggetto di comunicazione non si trova in uno stato <see cref="F:System.ServiceModel.CommunicationState.Opened" /> o <see cref="F:System.ServiceModel.CommunicationState.Opening" /> e non può essere modificato.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto di comunicazione si trova in uno stato <see cref="F:System.ServiceModel.CommunicationState.Closing" /> o <see cref="F:System.ServiceModel.CommunicationState.Closed" /> e non può essere modificato.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">L'oggetto di comunicazione si trova in uno stato <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> e non può essere modificato.</exception>
      <exception cref="T:System.TimeoutException">L'intervallo di tempo predefinito assegnato per l'operazione è stato superato prima del completamento dell'operazione.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnOpened">
      <summary>Viene chiamato durante la transizione di un oggetto di comunicazione allo stato Opened.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnOpening">
      <summary>Viene chiamato durante la transizione di un oggetto di comunicazione allo stato Opening.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Open">
      <summary>Comporta la transizione di un oggetto di comunicazione dallo stato di creazione allo stato di apertura.</summary>
      <exception cref="T:System.InvalidOperationException">L'oggetto di comunicazione non si trova in uno stato <see cref="F:System.ServiceModel.CommunicationState.Opened" /> o <see cref="F:System.ServiceModel.CommunicationState.Opening" /> e non può essere modificato.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto di comunicazione si trova in uno stato <see cref="F:System.ServiceModel.CommunicationState.Closing" /> o <see cref="F:System.ServiceModel.CommunicationState.Closed" /> e non può essere modificato.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">L'oggetto di comunicazione si trova in uno stato <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> e non può essere modificato.</exception>
      <exception cref="T:System.TimeoutException">L'intervallo di tempo predefinito assegnato per l'operazione è stato superato prima del completamento dell'operazione.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)">
      <summary>Comporta la transizione di un oggetto di comunicazione dallo stato di creazione allo stato di apertura entro un determinato intervallo di tempo.</summary>
      <param name="timeout">Valore <see cref="T:System.Timespan" /> che specifica il tempo entro il quale l'operazione di apertura deve essere completata prima di scadere.</param>
      <exception cref="T:System.InvalidOperationException">L'oggetto di comunicazione non si trova in uno stato <see cref="F:System.ServiceModel.CommunicationState.Opened" /> o <see cref="F:System.ServiceModel.CommunicationState.Opening" /> e non può essere modificato.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto di comunicazione si trova in uno stato <see cref="F:System.ServiceModel.CommunicationState.Closing" /> o <see cref="F:System.ServiceModel.CommunicationState.Closed" /> e non può essere modificato.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">L'oggetto di comunicazione si trova in uno stato <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> e non può essere modificato.</exception>
      <exception cref="T:System.TimeoutException">L'intervallo di tempo predefinito assegnato per l'operazione è stato superato prima del completamento dell'operazione.</exception>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Opened">
      <summary>Si verifica quando un oggetto di comunicazione esegue la transizione allo stato Opened.</summary>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Opening">
      <summary>Si verifica quando un oggetto di comunicazione esegue la transizione allo stato Opening.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.State">
      <summary>Ottiene un valore che indica lo stato corrente dell'oggetto di comunicazione.</summary>
      <returns>Valore dall'enumerazione <see cref="T:System.ServiceModel.CommunicationState" /> che indica lo stato corrente dell'oggetto.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.ThisLock">
      <summary>Ottiene il blocco a esclusione reciproca che protegge l'istanza della classe durante una transizione di stato.</summary>
      <returns>Blocco a esclusione reciproca che protegge l'istanza della classe durante una transizione di stato.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.CompressionFormat">
      <summary>Specifica il formato di compressione dei canali.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.CompressionFormat.Deflate">
      <summary>Il formato di compressione Deflate.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.CompressionFormat.GZip">
      <summary>Formato di compressione GZip.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.CompressionFormat.None">
      <summary>Nessun formato di compressione.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.CustomBinding">
      <summary>Definisce un'associazione da un elenco di elementi di associazione. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.CustomBinding" />.  </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.Channels.BindingElement})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.CustomBinding" /> con gli elementi di associazione da un stack dei canali completo.</summary>
      <param name="bindingElementsInTopDownChannelStackOrder">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> di tipo <see cref="T:System.ServiceModel.Channels.BindingElement" /> che contiene gli elementi di associazione dello stack dei canali in ordine dall'alto in basso.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bindingElementsInTopDownChannelStackOrder" /> è null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor(System.ServiceModel.Channels.Binding)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.CustomBinding" /> dai valori di un'associazione specificata.</summary>
      <param name="binding">
        <see cref="T:System.ServiceModel.Channels.Binding" /> utilizzata per inizializzare l'associazione personalizzata.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binding" /> è null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor(System.ServiceModel.Channels.BindingElement[])">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.CustomBinding" /> da una matrice di elementi di associazione.</summary>
      <param name="bindingElementsInTopDownChannelStackOrder">
        <see cref="T:System.Array" /> di tipo <see cref="T:System.ServiceModel.Channels.BindingElement" /> utilizzato per inizializzare l'associazione personalizzata.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bindingElementsInTopDownChannelStackOrder" /> è null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor(System.String,System.String,System.ServiceModel.Channels.BindingElement[])">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.CustomBinding" /> da una matrice di elementi di associazione con un nome e uno spazio dei nomi specificati.</summary>
      <param name="name">Il nome dell'associazione.</param>
      <param name="ns">Spazio dei nomi dell'associazione.</param>
      <param name="bindingElementsInTopDownChannelStackOrder">
        <see cref="T:System.Array" /> di tipo <see cref="T:System.ServiceModel.Channels.BindingElement" /> utilizzato per inizializzare l'associazione personalizzata.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bindingElementsInTopDownChannelStackOrder" /> è null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.CreateBindingElements">
      <summary>Restituisce una raccolta generica degli elementi di associazione dell'associazione personalizzata.</summary>
      <returns>Oggetto <see cref="T:System.Collections.Generic.ICollection`1" /> di tipo <see cref="T:System.ServiceModel.Channels.BindingElement" /> che contiene gli elementi di associazione da un'associazione personalizzata.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CustomBinding.Elements">
      <summary>Ottiene gli elementi di associazione dell'associazione personalizzata.</summary>
      <returns>Classe <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> che contiene gli elementi di associazione da un'associazione personalizzata.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CustomBinding.Scheme">
      <summary>Ottiene lo schema URI per il trasporto utilizzato dall'associazione personalizzata.</summary>
      <returns>Schema URI per trasporto utilizzato dall'associazione personalizzata o una stringa vuota se non c'è trasporto (<see cref="T:System.ServiceModel.Channels.TransportBindingElement" /> è null).</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.FaultConverter">
      <summary>Converte le eccezioni generate da un canale in messaggi di errore SOAP conformi al protocollo del canale.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.FaultConverter" />.  </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.GetDefaultFaultConverter(System.ServiceModel.Channels.MessageVersion)">
      <summary>Ottiene il convertitore di errori predefinito.</summary>
      <returns>Un'istanza di <see cref="T:System.ServiceModel.Channels.FaultConverter" />.</returns>
      <param name="version">Versione del messaggio.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)">
      <summary>Tenta di creare l'eccezione.</summary>
      <returns>true se l'errore è stato convertito. In caso contrario, false.Il valore predefinito è false.</returns>
      <param name="message">Messaggio di errore.</param>
      <param name="fault">Errore.</param>
      <param name="exception">Se la conversione viene eseguita correttamente, l'eccezione SOAP restituita come parametro out.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)">
      <summary>Tenta di creare il messaggio di errore dopo che l'errore è stato convertito in un'eccezione SOAP.</summary>
      <returns>true se è stato creato il messaggio di errore. In caso contrario, false.Il valore predefinito è false.</returns>
      <param name="exception">Eccezione SOAP.</param>
      <param name="message">Messaggio di errore restituito come parametro out.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.TryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)">
      <summary>Esegue il wrapping del metodo <see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" /> con il controllo degli errori.</summary>
      <returns>true se l'errore è stato convertito. In caso contrario, false.Il valore predefinito è false.</returns>
      <param name="message">Messaggio di errore.</param>
      <param name="fault">Errore.</param>
      <param name="exception">Se la conversione viene eseguita correttamente, l'eccezione SOAP restituita come parametro out.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> o <paramref name="fault" /> è null.</exception>
      <exception cref="T:System.ArgumentNullException">Il metodo <see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" /> ha restituito true ma <paramref name="exception" /> è null.</exception>
      <exception cref="T:System.ArgumentNullException">Il metodo <see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" /> ha restituito false ma <paramref name="exception" /> non è null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.IChannel">
      <summary>Definisce l'interfaccia di base che tutti gli oggetti canale devono implementare.Richiede che implementino l'interfaccia della macchina a stati condivisa da tutti gli oggetti di comunicazione e che implementino un metodo per recuperare oggetti dallo stack dei canali.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannel.GetProperty``1">
      <summary>Se presente, restituisce un oggetto tipizzato richiesto dal livello appropriato nello stack dei canali.</summary>
      <returns>L'oggetto tipizzato <paramref name="T" /> richiesto se presente, null in caso contrario.</returns>
      <typeparam name="T">Oggetto tipizzato per il quale il metodo sta eseguendo una query.</typeparam>
    </member>
    <member name="T:System.ServiceModel.Channels.IChannelFactory">
      <summary>Definisce l'interfaccia che deve essere implementata da una channel factory per produrre canali.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannelFactory.GetProperty``1">
      <summary>Se presente, restituisce un oggetto tipizzato richiesto dal livello appropriato nello stack dei canali.</summary>
      <returns>L'oggetto tipizzato <paramref name="T" /> richiesto se presente, null in caso contrario.</returns>
      <typeparam name="T">Oggetto tipizzato per il quale il metodo sta eseguendo una query.</typeparam>
    </member>
    <member name="T:System.ServiceModel.Channels.IChannelFactory`1">
      <summary>Definisce l'interfaccia che deve essere implementata dalle channel factory per creare canali di tipo specifico.</summary>
      <typeparam name="TChannel">Tipo di canale creato dalla channel factory.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)">
      <summary>Crea un canale del tipo specificato in un indirizzo endpoint specificato.</summary>
      <returns>Canale di tipo <paramref name="TChannel" /> nell'indirizzo endpoint specificato.</returns>
      <param name="to">Oggetto <see cref="T:System.ServiceModel.EndpointAddress" /> che fornisce la posizione del servizio.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>Crea un canale del tipo specificato in un indirizzo endpoint specificato e un indirizzo di trasporto al quale vengono inviati i messaggi.</summary>
      <returns>Canale di tipo <paramref name="TChannel" /> nell'indirizzo endpoint e nell'indirizzo di trasporto specificati.</returns>
      <param name="to">Oggetto <see cref="T:System.ServiceModel.EndpointAddress" /> che fornisce la posizione del servizio.</param>
      <param name="via">Oggetto della classe <see cref="T:System.Uri" /> contenente l'indirizzo di trasporto a cui viene inviato il messaggio.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.IDuplexChannel">
      <summary>Definisce l'interfaccia che un canale deve implementare per inviare e ricevere messaggi. </summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IDuplexSession">
      <summary>Definisce l'interfaccia per la sessione implementata su ogni lato di una comunicazione bidirezionale tra endpoint di messaggistica. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession(System.AsyncCallback,System.Object)">
      <summary>Avvia un'operazione asincrona per terminare la sessione in uscita.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> che fa riferimento all'interruzione asincrona della sessione in uscita. </returns>
      <param name="callback">Delegato <see cref="T:System.AsyncCallback" />. </param>
      <param name="state">object contiene informazioni sullo stato per la richiesta. </param>
    </member>
    <member name="M:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Inizia un'operazione asincrona per terminare la sessione in uscita con un timeout specificato entro il quale l'operazione deve essere completata.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> che fa riferimento all'interruzione asincrona della sessione in uscita. </returns>
      <param name="timeout">
        <see cref="T:System.TimeSpan" /> che specifica l'intervallo di tempo entro il quale l'operazione deve essere completata.</param>
      <param name="callback">Delegato <see cref="T:System.AsyncCallback" />. </param>
      <param name="state">object contiene informazioni sullo stato per la richiesta. </param>
    </member>
    <member name="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession">
      <summary>Termina la sessione in uscita che indica che non verranno più inviati messaggi da questo endpoint nel canale associato alla sessione. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession(System.TimeSpan)">
      <summary>Termina la sessione in uscita che indica che non verranno più inviati messaggi da questo endpoint nel canale associato alla sessione entro l'intervallo di tempo specificato.</summary>
      <param name="timeout">
        <see cref="T:System.TimeSpan" /> che specifica l'intervallo di tempo entro il quale l'operazione deve essere completata.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IDuplexSession.EndCloseOutputSession(System.IAsyncResult)">
      <summary>Completa un'operazione asincrona per terminare la sessione in uscita che indica che non verranno più inviati messaggi da questo endpoint nel canale associato alla sessione. </summary>
      <param name="result">Interfaccia <see cref="T:System.IAsyncResult" /> restituita da una chiamata a uno dei metodi <see cref="Overload:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession" />.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.IDuplexSessionChannel">
      <summary>Definisce l'interfaccia che associa un canale duplex a una sessione.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IInputChannel">
      <summary>Definisce l'interfaccia che un canale deve implementare per ricevere un messaggio. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.BeginReceive(System.AsyncCallback,System.Object)">
      <summary>Inizia un'operazione asincrona per ricevere un messaggio al quale è associato un oggetto di stato. </summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> fa riferimento alla ricezione asincrona del messaggio. </returns>
      <param name="callback">Delegato <see cref="T:System.AsyncCallback" /> che riceve la notifica del completamento dell'operazione asincrona.</param>
      <param name="state">Oggetto, specificato dall'applicazione, che contiene le informazioni sullo stato associate all'operazione asincrona.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.BeginReceive(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Avvia un'operazione asincrona per ricevere un messaggio al quale sono associati un timeout e un oggetto di stato specificati. </summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> fa riferimento all'operazione di ricezione asincrona.</returns>
      <param name="timeout">Oggetto della classe <see cref="T:System.Timespan" /> che indica il tempo di attesa necessario affinché un messaggio diventi disponibile.</param>
      <param name="callback">Delegato <see cref="T:System.AsyncCallback" /> che riceve la notifica del completamento dell'operazione asincrona.</param>
      <param name="state">Oggetto, specificato dall'applicazione, che contiene le informazioni sullo stato associate all'operazione asincrona.</param>
      <exception cref="T:System.TimeoutException">Il parametro <paramref name="timeout" /> specificato è stato superato prima del completamento dell'operazione.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il timeout specificato è minore di zero.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.BeginTryReceive(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Avvia un'operazione asincrona per ricevere un messaggio al quale sono associati un timeout e un oggetto di stato specificati. </summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> fa riferimento all'operazione di ricezione asincrona.</returns>
      <param name="timeout">Oggetto della classe <see cref="T:System.Timespan" /> che indica il tempo di attesa necessario affinché un messaggio diventi disponibile.</param>
      <param name="callback">Delegato <see cref="T:System.AsyncCallback" /> che riceve la notifica del completamento dell'operazione asincrona.</param>
      <param name="state">Oggetto, specificato dall'applicazione, che contiene le informazioni sullo stato associate all'operazione asincrona.</param>
      <exception cref="T:System.TimeoutException">Il parametro <paramref name="timeout" /> specificato è stato superato prima del completamento dell'operazione.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il timeout specificato è minore di zero.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Avvia un'operazione asincrona di attesa dell'arrivo di un messaggio al quale sono associati un timeout e un oggetto di stato specificati. </summary>
      <returns>Interfaccia <see cref="T:System.IAsyncResult" /> che fa riferimento all'operazione asincrona per attendere l'arrivo di un messaggio.</returns>
      <param name="timeout">Oggetto della classe <see cref="T:System.Timespan" /> che indica il tempo di attesa necessario affinché un messaggio diventi disponibile.</param>
      <param name="callback">Delegato <see cref="T:System.AsyncCallback" /> che riceve la notifica del completamento dell'operazione asincrona.</param>
      <param name="state">Oggetto, specificato dall'applicazione, che contiene le informazioni sullo stato associate all'operazione asincrona.</param>
      <exception cref="T:System.TimeoutException">Il parametro <paramref name="timeout" /> specificato è stato superato prima del completamento dell'operazione.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il timeout specificato è minore di zero.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.EndReceive(System.IAsyncResult)">
      <summary>Completa un'operazione asincrona per ricevere un messaggio. </summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Message" /> ricevuto. </returns>
      <param name="result">Interfaccia <see cref="T:System.IAsyncResult" /> restituita da una chiamata a uno dei metodi <see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.EndTryReceive(System.IAsyncResult,System.ServiceModel.Channels.Message@)">
      <summary>Completa l'operazione asincrona specificata per ricevere un messaggio.</summary>
      <returns>true se il messaggio viene ricevuto prima della scadenza dell'intervallo di tempo specificato; in caso contrario false.</returns>
      <param name="result">Interfaccia <see cref="T:System.IAsyncResult" /> restituita da una chiamata al metodo <see cref="M:System.ServiceModel.Channels.IInputChannel.BeginTryReceive(System.TimeSpan,System.AsyncCallback,System.Object)" />.</param>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> ricevuto. </param>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.EndWaitForMessage(System.IAsyncResult)">
      <summary>Completa l'operazione asincrona specificata di attesa di un messaggio.</summary>
      <returns>true se un messaggio arriva prima che il <paramref name="timeout" /> sia scaduto. In caso contrario false.</returns>
      <param name="result">Interfaccia <see cref="T:System.IAsyncResult" /> che identifica l'operazione <see cref="M:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage(System.TimeSpan,System.AsyncCallback,System.Object)" /> da completare e da cui recuperare un risultato finale.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.IInputChannel.LocalAddress">
      <summary>Ottiene l'indirizzo sul quale il canale di input riceve i messaggi. </summary>
      <returns>
        <see cref="T:System.ServiceModel.EndpointAddress" /> sul quale il canale di input riceve i messaggi. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.Receive">
      <summary>Se disponibile, restituisce il messaggio ricevuto.Se un messaggio non è disponibile, il thread si blocca per un intervallo di tempo predefinito.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Message" /> ricevuto. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.Receive(System.TimeSpan)">
      <summary>Se disponibile, restituisce il messaggio ricevuto.Se un messaggio non è disponibile, il thread si blocca per l'intervallo di tempo specificato.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Message" /> ricevuto. </returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> specifica il tempo entro il quale l'operazione di ricezione deve essere completata, prima di scadere e restituire <see cref="T:System.TimeoutException" />.</param>
      <exception cref="T:System.TimeoutException">Il parametro <paramref name="timeout" /> specificato è stato superato prima del completamento dell'operazione.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il timeout specificato è minore di zero.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.TryReceive(System.TimeSpan,System.ServiceModel.Channels.Message@)">
      <summary>Tenta di ricevere un messaggio entro l'intervallo di tempo specificato. </summary>
      <returns>true se un messaggio viene ricevuto prima che il <paramref name="timeout" /> sia scaduto. In caso contrario false.</returns>
      <param name="timeout">Interfaccia <see cref="T:System.IAsyncResult" /> restituita da una chiamata a uno dei metodi <see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" />.</param>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> ricevuto. </param>
      <exception cref="T:System.TimeoutException">Il parametro <paramref name="timeout" /> specificato è stato superato prima del completamento dell'operazione.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il timeout specificato è minore di zero.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.WaitForMessage(System.TimeSpan)">
      <summary>Restituisce un valore che indica se un messaggio è arrivato entro l'intervallo di tempo specificato.</summary>
      <returns>true se un messaggio arriva prima che il <paramref name="timeout" /> sia scaduto. In caso contrario false.</returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> specifica l'intervallo di tempo di attesa massimo per l'arrivo di un messaggio prima del timeout.</param>
      <exception cref="T:System.TimeoutException">Il parametro <paramref name="timeout" /> specificato è stato superato prima del completamento dell'operazione.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il timeout specificato è minore di zero.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.IInputSession">
      <summary>Definisce l'interfaccia per la sessione implementata sul lato di ricezione di una comunicazione unidirezionale tra endpoint di messaggistica. </summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IInputSessionChannel">
      <summary>Definisce l'interfaccia che associa un canale di input a una sessione.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IMessageProperty">
      <summary>Definisce un'interfaccia che è possibile implementare per descrivere un set di proprietà per un messaggio.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IMessageProperty.CreateCopy">
      <summary>Crea una copia dell'istanza corrente.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Channels.IMessageProperty" /> che consiste in una copia dell'istanza corrente.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.IOutputChannel">
      <summary>Definisce l'interfaccia che un canale deve implementare per inviare un messaggio. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>Inizia un'operazione asincrona per trasmettere un messaggio alla destinazione del canale di output. </summary>
      <returns>Interfaccia <see cref="T:System.IAsyncResult" /> che fa riferimento alla trasmissione del messaggio asincrono. </returns>
      <param name="message">Oggetto della classe <see cref="T:System.ServiceModel.Channels.Message" /> inviato sul canale di output. </param>
      <param name="callback">Delegato <see cref="T:System.AsyncCallback" />. </param>
      <param name="state">Oggetto, specificato dall'applicazione, che contiene le informazioni sullo stato associate all'operazione asincrona di invio.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Inizia un'operazione asincrona per trasmettere un messaggio alla destinazione del canale di output entro l'intervallo di tempo specificato.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> fa riferimento all'operazione asincrona di invio.</returns>
      <param name="message">Oggetto della classe <see cref="T:System.ServiceModel.Channels.Message" /> inviato sul canale di output.</param>
      <param name="timeout">L'oggetto <see cref="T:System.Timespan" /> che specifica il tempo disponibile per il completamento prima del timeout dell'operazione di invio.</param>
      <param name="callback">Delegato <see cref="T:System.AsyncCallback" /> che riceve la notifica del completamento dell'operazione asincrona di invio.</param>
      <param name="state">Oggetto, specificato dall'applicazione, che contiene le informazioni sullo stato associate all'operazione asincrona di invio.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IOutputChannel.EndSend(System.IAsyncResult)">
      <summary>Completa un'operazione asincrona per trasmettere un messaggio alla destinazione del canale di output. </summary>
      <param name="result">Interfaccia <see cref="T:System.IAsyncResult" /> restituita da una chiamata al metodo <see cref="Overload:System.ServiceModel.Channels.IOutputChannel.BeginSend" />. </param>
    </member>
    <member name="P:System.ServiceModel.Channels.IOutputChannel.RemoteAddress">
      <summary>Ottiene la destinazione del servizio alla quale vengono inviati i messaggi sul canale di output. </summary>
      <returns>Oggetto della classe <see cref="T:System.ServiceModel.EndpointAddress" /> del servizio a cui il canale di output invia messaggi. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message)">
      <summary>Trasmette un messaggio alla destinazione del canale di output. </summary>
      <param name="message">Oggetto della classe <see cref="T:System.ServiceModel.Channels.Message" /> inviato sul canale di output.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <summary>Invia un messaggio sul canale di output corrente entro l'intervallo di tempo specificato.</summary>
      <param name="message">Oggetto della classe <see cref="T:System.ServiceModel.Channels.Message" /> inviato sul canale di output.</param>
      <param name="timeout">L'oggetto <see cref="T:System.Timespan" /> che specifica il tempo disponibile per il completamento prima del timeout dell'operazione di invio.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.IOutputChannel.Via">
      <summary>Ottiene l'URI che contiene l'indirizzo di trasporto a cui vengono inviati i messaggi sul canale di output.</summary>
      <returns>Oggetto della classe <see cref="T:System.Uri" /> contenente l'indirizzo di trasporto a cui i messaggi vengono inviati sul canale di output.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.IOutputSession">
      <summary>Definisce l'interfaccia per la sessione implementata sul lato di invio di una comunicazione unidirezionale tra endpoint di messaggistica. </summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IOutputSessionChannel">
      <summary>Definisce l'interfaccia che associa un canale di output a una sessione. </summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IRequestChannel">
      <summary>Definisce il contratto che un canale deve implementare per essere sul lato richiedente di una comunicazione request-reply tra gli endpoint della messaggistica. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>Avvia un'operazione asincrona per trasmettere un messaggio di richiesta al lato reply di uno scambio di messaggi request/reply. </summary>
      <returns>Interfaccia <see cref="T:System.IAsyncResult" /> che fa riferimento alla trasmissione del messaggio asincrono. </returns>
      <param name="message">Richiesta <see cref="T:System.ServiceModel.Channels.Message" /> da trasmettere.</param>
      <param name="callback">Delegato <see cref="T:System.AsyncCallback" /> che riceve la notifica del completamento dell'operazione asincrona di trasmissione di un messaggio di richiesta.</param>
      <param name="state">Oggetto, specificato dall'applicazione, che contiene le informazioni sullo stato associate all'operazione asincrona di trasmissione di un messaggio di richiesta.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Avvia un'operazione asincrona per trasmettere un messaggio di richiesta al lato reply di uno scambio di messaggi request/reply entro l'intervallo di tempo specificato.</summary>
      <returns>Interfaccia <see cref="T:System.IAsyncResult" /> che fa riferimento alla trasmissione del messaggio asincrono. </returns>
      <param name="message">Richiesta <see cref="T:System.ServiceModel.Channels.Message" /> da trasmettere.</param>
      <param name="timeout">
        <see cref="T:System.TimeSpan" /> specifica l'intervallo di tempo entro il quale deve pervenire una risposta. Per i valori predefiniti, vedere la sezione Osservazioni.</param>
      <param name="callback">Delegato <see cref="T:System.AsyncCallback" /> che riceve la notifica del completamento dell'operazione asincrona di trasmissione di un messaggio di richiesta.</param>
      <param name="state">Oggetto, specificato dall'applicazione, che contiene le informazioni sullo stato associate all'operazione asincrona di trasmissione di un messaggio di richiesta.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IRequestChannel.EndRequest(System.IAsyncResult)">
      <summary>Completa un'operazione asincrona per restituire una risposta basata sul messaggio a una richiesta trasmessa. </summary>
      <returns>Oggetto della classe <see cref="T:System.ServiceModel.Channels.Message" /> ricevuto in risposta alla richiesta. </returns>
      <param name="result">Interfaccia <see cref="T:System.IAsyncResult" /> restituita da una chiamata al metodo <see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" />. </param>
    </member>
    <member name="P:System.ServiceModel.Channels.IRequestChannel.RemoteAddress">
      <summary>Ottiene l'indirizzo remoto al quale il canale di richiesta invia i messaggi. </summary>
      <returns>
        <see cref="T:System.ServiceModel.EndpointAddress" /> al quale il canale di richiesta invia i messaggi. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message)">
      <summary>Invia una richiesta basata sul messaggio e restituisce la risposta basata sul messaggio correlata. </summary>
      <returns>Oggetto della classe <see cref="T:System.ServiceModel.Channels.Message" /> ricevuto in risposta alla richiesta. </returns>
      <param name="message">Richiesta <see cref="T:System.ServiceModel.Channels.Message" /> da trasmettere.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <summary>Invia una richiesta basata sul messaggio e restituisce la risposta basata sul messaggio correlata, entro l'intervallo di tempo specificato.</summary>
      <returns>Oggetto della classe <see cref="T:System.ServiceModel.Channels.Message" /> ricevuto in risposta alla richiesta. </returns>
      <param name="message">Richiesta <see cref="T:System.ServiceModel.Channels.Message" /> da trasmettere.</param>
      <param name="timeout">
        <see cref="T:System.TimeSpan" /> specifica l'intervallo di tempo entro il quale deve pervenire una risposta.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.IRequestChannel.Via">
      <summary>Ottiene l'indirizzo di trasporto al quale viene inviata la richiesta.</summary>
      <returns>Oggetto della classe <see cref="T:System.Uri" /> contenente l'indirizzo di trasporto a cui viene inviato il messaggio.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.IRequestSessionChannel">
      <summary>Definisce l'interfaccia per associare un canale di richiesta a una sessione.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.ISession">
      <summary>Definisce l'interfaccia per stabilire un contesto condiviso tra le parti che si scambiano messaggi fornendo un ID per la sessione di comunicazione. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.ISession.Id">
      <summary>Ottiene l'ID che identifica in modo univoco la sessione. </summary>
      <returns>ID che identifica in modo univoco la sessione. </returns>
    </member>
    <member name="T:System.ServiceModel.Channels.ISessionChannel`1">
      <summary>Definisce l'interfaccia che associa un canale a un tipo specifico di sessione.</summary>
      <typeparam name="TSession">Tipo di <see cref="T:System.ServiceModel.Channels.ISession" /> associato al canale.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.ISessionChannel`1.Session">
      <summary>Ottiene il tipo di sessione associato a questo canale. </summary>
      <returns>Tipo di <see cref="T:System.ServiceModel.Channels.ISession" /> associato a questo canale. </returns>
    </member>
    <member name="T:System.ServiceModel.Channels.Message">
      <summary>Rappresenta l'unità di comunicazione tra endpoint in un ambiente distribuito. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.Message" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.Close">
      <summary>Chiude l'oggetto <see cref="T:System.ServiceModel.Channels.Message" /> e rilascia qualsiasi risorsa. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateBufferedCopy(System.Int32)">
      <summary>Archivia un intero oggetto <see cref="T:System.ServiceModel.Channels.Message" /> in un buffer di memoria per l'accesso futuro.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> appena creato.</returns>
      <param name="maxBufferSize">Dimensione massima del buffer da creare.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="maxBufferSize " /> è minore di zero.</exception>
      <exception cref="T:System.ObjectDisposedException">Il messaggio è chiuso.</exception>
      <exception cref="T:System.InvalidOperationException">Il messaggio è stato copiato, letto o scritto.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String)">
      <summary>Crea un messaggio che contiene una versione e un'azione.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Channels.Message" /> per il messaggio creato. </returns>
      <param name="version">Oggetto <see cref="T:System.ServiceModel.Channels.MessageVersion" /> che specifica la versione SOAP da utilizzare per il messaggio.</param>
      <param name="action">Descrizione della modalità di elaborazione da utilizzare per il messaggio.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" /> o <paramref name="action" /> è null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.Object)">
      <summary>Crea un messaggio con la versione, l'azione e il corpo specificati. </summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Channels.Message" /> per il messaggio creato. </returns>
      <param name="version">Oggetto <see cref="T:System.ServiceModel.Channels.MessageVersion" /> che specifica la versione SOAP da utilizzare per il messaggio. </param>
      <param name="action">Descrizione della modalità di elaborazione da utilizzare per il messaggio. </param>
      <param name="body">Corpo del messaggio.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" />, <paramref name="action" /> o <paramref name="body" /> è null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Crea un messaggio utilizzando la versione, l'azione, il corpo del messaggio e il serializzatore specificati.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Channels.Message" /> per il messaggio creato. </returns>
      <param name="version">Oggetto <see cref="T:System.ServiceModel.Channels.MessageVersion" /> che specifica la versione SOAP da utilizzare per il messaggio. </param>
      <param name="action">Descrizione della modalità di elaborazione da utilizzare per il messaggio. </param>
      <param name="body">Corpo del messaggio. </param>
      <param name="serializer">Oggetto <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> utilizzato per serializzare il messaggio.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" />, <paramref name="fault" /> o <paramref name="action" /> è null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.ServiceModel.Channels.BodyWriter)">
      <summary>Crea un messaggio con un corpo costituito da una matrice di byte.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Channels.Message" /> per il messaggio creato. </returns>
      <param name="version">Oggetto <see cref="T:System.ServiceModel.Channels.MessageVersion" /> che specifica la versione SOAP da utilizzare per il messaggio. </param>
      <param name="action">Descrizione della modalità di elaborazione da utilizzare per il messaggio. </param>
      <param name="body">Oggetto <see cref="T:System.ServiceModel.Channels.BodyWriter" /> di tipo byte. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Version" />, <paramref name="action" /> o <paramref name="body" /> è null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.Xml.XmlDictionaryReader)">
      <summary>Crea un messaggio con la versione, l'azione e il corpo specificati.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Channels.Message" /> per il messaggio creato. </returns>
      <param name="version">Oggetto <see cref="T:System.ServiceModel.Channels.MessageVersion" /> che specifica la versione SOAP da utilizzare per il messaggio. </param>
      <param name="action">Descrizione della modalità di elaborazione da utilizzare per il messaggio. </param>
      <param name="body">Corpo del messaggio.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" />, <paramref name="action" /> o <paramref name="body" /> è null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.Xml.XmlReader)">
      <summary>Crea un messaggio utilizzando il lettore, l'azione e la versione specificati.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Channels.Message" /> per il messaggio creato. </returns>
      <param name="version">Oggetto <see cref="T:System.ServiceModel.Channels.MessageVersion" /> che specifica la versione SOAP da utilizzare per il messaggio. </param>
      <param name="action">Descrizione della modalità di elaborazione da utilizzare per il messaggio. </param>
      <param name="body">Oggetto <see cref="T:System.Xml.XmlReader" /> da utilizzare per la lettura del messaggio SOAP.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" />, <paramref name="action" /> o <paramref name="body" /> è null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.Xml.XmlDictionaryReader,System.Int32,System.ServiceModel.Channels.MessageVersion)">
      <summary>Crea un messaggio utilizzando il lettore, l'azione e la versione specificati.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Channels.Message" /> per il messaggio creato. </returns>
      <param name="envelopeReader">Oggetto <see cref="T:System.Xml.XmlDictionaryReader" /> da utilizzare per la lettura del messaggio SOAP.</param>
      <param name="maxSizeOfHeaders">Dimensione massima, in byte, di un'intestazione. </param>
      <param name="version">Valore <see cref="T:System.ServiceModel.Channels.MessageVersion" /> valido che specifica la versione SOAP da utilizzare per il messaggio. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="envelopeReader" /> o <paramref name="version" /> è null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.Xml.XmlReader,System.Int32,System.ServiceModel.Channels.MessageVersion)">
      <summary>Crea un messaggio utilizzando il lettore, l'azione e la versione specificati.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Channels.Message" /> per il messaggio creato. </returns>
      <param name="envelopeReader">Oggetto <see cref="T:System.Xml.XmlReader" /> da utilizzare per la lettura del messaggio SOAP.</param>
      <param name="maxSizeOfHeaders">Dimensione massima, in byte, di un'intestazione. </param>
      <param name="version">Oggetto <see cref="T:System.ServiceModel.Channels.MessageVersion" /> che specifica la versione SOAP da utilizzare per il messaggio. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="envelopeReader" /> o <paramref name="version" /> è null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.GetBody``1">
      <summary>Recupera il corpo di questa istanza <see cref="T:System.ServiceModel.Channels.Message" />.</summary>
      <returns>Oggetto di tipo <paramref name="T" /> che contiene il corpo di questo messaggio.</returns>
      <typeparam name="T">Corpo del messaggio.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.GetBody``1(System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Recupera il corpo di questo oggetto <see cref="T:System.ServiceModel.Channels.Message" /> utilizzando il serializzatore specificato.</summary>
      <returns>Oggetto di tipo <paramref name="T" /> che contiene il corpo di questo messaggio.</returns>
      <param name="serializer">Oggetto <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> utilizzato per leggere il corpo del messaggio.</param>
      <typeparam name="T">Corpo del messaggio.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serializer" /> è null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.GetBodyAttribute(System.String,System.String)">
      <summary>Recupera gli attributi del corpo del messaggio.</summary>
      <returns>Attributi del corpo del messaggio.</returns>
      <param name="localName">Nome locale del nodo XML.Nome dell'elemento che corrisponde a questo membro.Questa stringa deve essere un nome di elemento XML valido.</param>
      <param name="ns">Spazio dei nomi a cui appartiene questo elemento XML.URI dello spazio dei nomi dell'elemento che corrisponde a questo membro.Il sistema non convalida indirizzi URI, ad eccezione degli indirizzi di trasporto.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localName" /> o <paramref name="ns" /> è null. </exception>
      <exception cref="T:System.ObjectDisposedException">Il messaggio è chiuso.</exception>
      <exception cref="T:System.InvalidOperationException">Il messaggio è stato copiato, letto o scritto.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.GetReaderAtBodyContents">
      <summary>Ottiene il lettore di dizionario XML che accede al contenuto del corpo di questo messaggio.</summary>
      <returns>Oggetto <see cref="T:System.Xml.XmlDictionaryReader" /> che consente di accedere al contenuto del corpo del messaggio.</returns>
      <exception cref="T:System.ObjectDisposedException">Il messaggio è chiuso.</exception>
      <exception cref="T:System.InvalidOperationException">Il messaggio è vuoto oppure è stato copiato, letto o scritto.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.Headers">
      <summary>Quando sottoposto a override in una classe derivata, recupera le intestazioni del messaggio. </summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> che rappresenta le intestazioni del messaggio. </returns>
      <exception cref="T:System.ObjectDisposedException">Il messaggio è stato eliminato.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.IsDisposed">
      <summary>Restituisce un valore che indica se l'oggetto <see cref="T:System.ServiceModel.Channels.Message" /> è stato eliminato. </summary>
      <returns>true se il messaggio è stato eliminato. In caso contrario, false. </returns>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.IsEmpty">
      <summary>Restituisce un valore che indica se l'oggetto <see cref="T:System.ServiceModel.Channels.Message" /> è vuoto. </summary>
      <returns>true se il messaggio è vuoto. In caso contrario, false. </returns>
      <exception cref="T:System.ObjectDisposedException">Il messaggio è stato eliminato.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.IsFault">
      <summary>Ottiene un valore che indica se il messaggio genera errori SOAP.</summary>
      <returns>true se il messaggio genera errori SOAP. In caso contrario, false.</returns>
      <exception cref="T:System.ObjectDisposedException">Il messaggio è stato eliminato.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnBodyToString(System.Xml.XmlDictionaryWriter)">
      <summary>Viene chiamato quando il corpo del messaggio viene convertito in una stringa.</summary>
      <param name="writer">Oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> utilizzato per convertire il corpo del messaggio in una stringa. </param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnClose">
      <summary>Viene chiamato quando il messaggio viene chiuso.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnCreateBufferedCopy(System.Int32)">
      <summary>Viene chiamato quando viene creato un buffer dei messaggi per archiviare questo messaggio.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> per la copia del messaggio appena creato.</returns>
      <param name="maxBufferSize">Dimensione massima del buffer da creare.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnGetBody``1(System.Xml.XmlDictionaryReader)">
      <summary>Viene chiamato quando viene recuperato il corpo del messaggio.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> che rappresenta il corpo del messaggio.</returns>
      <param name="reader">Oggetto <see cref="T:System.Xml.XmlDictionaryReader)" /> utilizzato per leggere il corpo del messaggio.</param>
      <typeparam name="T">Tipo di corpo del messaggio.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnGetBodyAttribute(System.String,System.String)">
      <summary>Viene chiamato quando vengono recuperati gli attributi del corpo del messaggio.</summary>
      <returns>Attributi del corpo del messaggio.</returns>
      <param name="localName">Nome locale del nodo XML.Nome dell'elemento che corrisponde a questo membro.Questa stringa deve essere un nome di elemento XML valido.</param>
      <param name="ns">Spazio dei nomi a cui appartiene questo elemento XML.URI dello spazio dei nomi dell'elemento che corrisponde a questo membro.Il sistema non convalida indirizzi URI, ad eccezione degli indirizzi di trasporto.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnGetReaderAtBodyContents">
      <summary>Viene chiamato quando è possibile recuperare un lettore di dizionario XML in grado di accedere al contenuto del corpo di questo messaggio.</summary>
      <returns>Oggetto <see cref="T:System.Xml.XmlDictionaryReader" /> che consente di accedere al contenuto del corpo del messaggio.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnWriteBodyContents(System.Xml.XmlDictionaryWriter)">
      <summary>Viene chiamato quando il corpo del messaggio viene scritto in un file XML.</summary>
      <param name="writer">Oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> utilizzato per scrivere il corpo del messaggio in un file XML.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnWriteMessage(System.Xml.XmlDictionaryWriter)">
      <summary>Viene chiamato quando l'intero messaggio viene scritto in un file XML.</summary>
      <param name="writer">Oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> utilizzato per scrivere il messaggio in un file XML.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnWriteStartBody(System.Xml.XmlDictionaryWriter)">
      <summary>Viene chiamato quando il corpo iniziale viene scritto in un file XML.</summary>
      <param name="writer">Oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> utilizzato per scrivere il corpo iniziale in un file XML.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnWriteStartEnvelope(System.Xml.XmlDictionaryWriter)">
      <summary>Viene chiamato quando l'elemento envelope iniziale viene scritto in un file XML.</summary>
      <param name="writer">Oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> utilizzato per scrivere l'elemento envelope iniziale in un file XML.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnWriteStartHeaders(System.Xml.XmlDictionaryWriter)">
      <summary>Viene chiamato quando l'intestazione iniziale viene scritta in un file XML.</summary>
      <param name="writer">Oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> utilizzato per scrivere l'intestazione iniziale in un file XML.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.Properties">
      <summary>Quando sottoposto a override in una classe derivata, ottiene un set di annotazioni a livello di elaborazione associate al messaggio. </summary>
      <returns>Classe <see cref="T:System.ServiceModel.Channels.MessageProperties" /> che contiene un set di annotazioni a livello di elaborazione associate al messaggio.</returns>
      <exception cref="T:System.ObjectDisposedException">Il messaggio è stato eliminato.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.State">
      <summary>Ottiene lo stato corrente di questa istanza <see cref="T:System.ServiceModel.Channels.Message" />.</summary>
      <returns>Enumerazione <see cref="T:System.ServiceModel.Channels.MessageState" /> che contiene lo stato corrente di questa istanza <see cref="T:System.ServiceModel.Channels.Message" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.System#IDisposable#Dispose">
      <summary>Chiude tutte le risorse utilizzate da questo messaggio.Questo metodo non può essere ereditato.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.ToString">
      <summary>Restituisce una stringa che rappresenta l'istanza di <see cref="T:System.ServiceModel.Channels.Message" /> corrente. </summary>
      <returns>Rappresentazione in forma di stringa dell'istanza <see cref="T:System.ServiceModel.Channels.Message" /> corrente. </returns>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.Version">
      <summary>Se sottoposto a override in una classe derivata, recupera la versione SOAP del messaggio.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Channels.MessageVersion" /> che rappresenta la versione SOAP. </returns>
      <exception cref="T:System.ObjectDisposedException">Il messaggio è stato eliminato.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteBody(System.Xml.XmlDictionaryWriter)">
      <summary>Scrive l'elemento corpo utilizzando la classe <see cref="T:System.Xml.XmlDictionaryWriter" /> specificata. </summary>
      <param name="writer">Oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> da utilizzare per scrivere l'elemento corpo.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> è null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteBody(System.Xml.XmlWriter)">
      <summary>Serializza il corpo del messaggio utilizzando l'oggetto <see cref="T:System.Xml.XmlWriter" /> specificato. </summary>
      <param name="writer">Oggetto <see cref="T:System.Xml.XmlWriter" /> da utilizzare per scrivere il corpo del messaggio.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> è null. </exception>
      <exception cref="T:System.ObjectDisposedException">Il messaggio è eliminato. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteBodyContents(System.Xml.XmlDictionaryWriter)">
      <summary>Serializza il contenuto del corpo utilizzando l'oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> specificato. </summary>
      <param name="writer">Oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> da utilizzare per scrivere l'elemento corpo.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer " />è null.</exception>
      <exception cref="T:System.ObjectDisposedException">Il messaggio è chiuso.</exception>
      <exception cref="T:System.InvalidOperationException">Il messaggio è stato copiato, letto o scritto.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteMessage(System.Xml.XmlDictionaryWriter)">
      <summary>Serializza l'intero messaggio utilizzando l'oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> specificato. </summary>
      <param name="writer">Oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> da utilizzare per scrivere il messaggio.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> è null. </exception>
      <exception cref="T:System.ObjectDisposedException">Il messaggio è chiuso.</exception>
      <exception cref="T:System.InvalidOperationException">Il messaggio è stato copiato, letto o scritto.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteMessage(System.Xml.XmlWriter)">
      <summary>Serializza l'intero messaggio utilizzando l'oggetto <see cref="T:System.Xml.XmlWriter" /> specificato. </summary>
      <param name="writer">Oggetto <see cref="T:System.Xml.XmlWriter" /> da utilizzare per scrivere l'intero messaggio.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> è null. </exception>
      <exception cref="T:System.ObjectDisposedException">Il messaggio è chiuso.</exception>
      <exception cref="T:System.InvalidOperationException">Il messaggio è stato copiato, letto o scritto.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteStartBody(System.Xml.XmlDictionaryWriter)">
      <summary>Serializza il corpo iniziale del messaggio utilizzando l'oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> specificato. </summary>
      <param name="writer">Oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> da utilizzare per scrivere il corpo iniziale.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> è null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteStartBody(System.Xml.XmlWriter)">
      <summary>Serializza il corpo iniziale del messaggio utilizzando l'oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> specificato. </summary>
      <param name="writer">Oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> da utilizzare per scrivere il corpo iniziale del messaggio.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> è null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteStartEnvelope(System.Xml.XmlDictionaryWriter)">
      <summary>Serializza l'elemento envelope iniziale utilizzando l'oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> specificato. </summary>
      <param name="writer">Oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> da utilizzare per scrivere l'elemento envelope iniziale.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer " />è null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageBuffer">
      <summary>Rappresenta un buffer di memoria nel quale viene archiviato un intero messaggio per un utilizzo futuro.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.MessageBuffer" />.  </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageBuffer.BufferSize">
      <summary>Ottiene il numero approssimativo di byte utilizzati da questa istanza <see cref="T:System.ServiceModel.Channels.MessageBuffer" />. </summary>
      <returns>Numero approssimativo di byte utilizzati da questa istanza <see cref="T:System.ServiceModel.Channels.MessageBuffer" />. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.Close">
      <summary>Finisce di utilizzare il buffer.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.CreateMessage">
      <summary>Restituisce una copia del messaggio originale.</summary>
      <returns>Copia identica dell'istanza <see cref="T:System.ServiceModel.Channels.Message" /> originale precedentemente fornita al metodo <see cref="M:System.ServiceModel.Channels.Message.CreateBufferedCopy(System.Int32)" /> di un'istanza <see cref="T:System.ServiceModel.Channels.Message" />. </returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageBuffer.MessageContentType">
      <summary>Ottiene il tipo di contenuto dei messaggi archiviati in questo buffer.</summary>
      <returns>Tipo di contenuto dei messaggi archiviati in questo buffer.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.System#IDisposable#Dispose">
      <summary>Rilascia le risorse non gestite utilizzate da <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> e, facoltativamente, le risorse gestite.Questo metodo non può essere ereditato.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.WriteMessage(System.IO.Stream)">
      <summary>Scrive l'intero contenuto di questo buffer nel flusso I/O specificato.</summary>
      <param name="stream">Flusso I/O in cui viene scritto l'intero contenuto di questo buffer.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageEncoder">
      <summary>Il codificatore è il componente utilizzato per scrivere messaggi in un flusso e leggere messaggi da un flusso.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.MessageEncoder" />.  </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncoder.ContentType">
      <summary>Quando sottoposto a override in una classe derivata, ottiene il tipo di contenuto MIME utilizzato dal codificatore.</summary>
      <returns>Tipo di contenuto supportato dal codificatore di messaggi.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.GetProperty``1">
      <summary>Se presente, restituisce un oggetto tipizzato richiesto dal livello appropriato nello stack dei canali.</summary>
      <returns>L'oggetto tipizzato <paramref name="T " /> richiesto, se presente, oppure null in caso contrario.</returns>
      <typeparam name="T">Oggetto tipizzato per il quale il metodo sta eseguendo una query.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.IsContentTypeSupported(System.String)">
      <summary>Restituisce un valore che indica se il codificatore messaggi supporta un valore content-type a livello di messaggio specificato.</summary>
      <returns>true se il valore Content-Type a livello di messaggio specificato è supportato. In caso contrario, false.</returns>
      <param name="contentType">Valore content-type a livello di messaggio che viene verificato.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncoder.MediaType">
      <summary>Quando sottoposto a override in una classe derivata, ottiene il valore del tipo di supporto utilizzato dal codificatore.</summary>
      <returns>Tipo di supporto supportato dal codificatore di messaggi.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncoder.MessageVersion">
      <summary>Quando sottoposto a override in una classe derivata, ottiene il valore della versione messaggi utilizzato dal codificatore.</summary>
      <returns>Valore <see cref="T:System.ServiceModel.Channels.MessageVersion" /> utilizzato dal codificatore.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.ArraySegment{System.Byte},System.ServiceModel.Channels.BufferManager)">
      <summary>Quando sottoposto a override in una classe derivata, legge un messaggio da un buffer specificato.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Channels.Message" /> che viene letto dal buffer specificato.</returns>
      <param name="buffer">Struttura <see cref="T:System.ArraySegment`1" /> di tipo <see cref="T:System.Byte" /> che fornisce il buffer dal quale viene deserializzato il messaggio.</param>
      <param name="bufferManager">Classe <see cref="T:System.ServiceModel.Channels.BufferManager" /> che gestisce il buffer dal quale viene deserializzato il messaggio.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.ArraySegment{System.Byte},System.ServiceModel.Channels.BufferManager,System.String)">
      <summary>Quando sottoposto a override in una classe derivata, legge un messaggio da un flusso specificato.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Channels.Message" /> che viene letto dal flusso specificato.</returns>
      <param name="buffer">Struttura <see cref="T:System.ArraySegment`1" /> di tipo <see cref="T:System.Byte" /> che fornisce il buffer dal quale viene deserializzato il messaggio.</param>
      <param name="bufferManager">Classe <see cref="T:System.ServiceModel.Channels.BufferManager" /> che gestisce il buffer dal quale viene deserializzato il messaggio.</param>
      <param name="contentType">Valore Content-Type a livello di messaggio MIME (Multipurpose Internet Mail Extensions).</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.IO.Stream,System.Int32)">
      <summary>Quando sottoposto a override in una classe derivata, legge un messaggio da un flusso specificato.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Channels.Message" /> che viene letto dal flusso specificato.</returns>
      <param name="stream">Oggetto <see cref="T:System.IO.Stream" /> da cui viene letto il messaggio.</param>
      <param name="maxSizeOfHeaders">Dimensione massima delle intestazioni che possono essere lette dal messaggio.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.IO.Stream,System.Int32,System.String)">
      <summary>Quando sottoposto a override in una classe derivata, legge un messaggio da un flusso specificato.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Channels.Message" /> che viene letto dal flusso specificato.</returns>
      <param name="stream">Oggetto <see cref="T:System.IO.Stream" /> da cui viene letto il messaggio.</param>
      <param name="maxSizeOfHeaders">Dimensione massima delle intestazioni che possono essere lette dal messaggio.</param>
      <param name="contentType">Valore Content-Type a livello di messaggio MIME (Multipurpose Internet Mail Extensions).</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ToString">
      <summary>Restituisce il tipo di contenuto utilizzato dal codificatore di messaggi.</summary>
      <returns>Tipo di contenuto utilizzato dal codificatore di messaggi.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.Int32,System.ServiceModel.Channels.BufferManager)">
      <summary>Scrive un messaggio di dimensione inferiore a quella specificata in un buffer di matrice di byte.</summary>
      <returns>Struttura <see cref="T:System.ArraySegment`1" /> di tipo byte che fornisce il buffer nel quale viene serializzato il messaggio.</returns>
      <param name="message">Oggetto <see cref="T:System.ServiceModel.Channels.Message" /> da scrivere nel buffer dei messaggi.</param>
      <param name="maxMessageSize">Dimensione massima consentita per la scrittura di un messaggio.</param>
      <param name="bufferManager">Classe <see cref="T:System.ServiceModel.Channels.BufferManager" /> che gestisce il buffer nel quale viene scritto il messaggio.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.Int32,System.ServiceModel.Channels.BufferManager,System.Int32)">
      <summary>Quando sottoposto a override in una classe derivata, scrive un messaggio di dimensione inferiore a quella specificata in un buffer di matrice di byte in corrispondenza dell'offset specificato.</summary>
      <returns>Struttura <see cref="T:System.ArraySegment`1" /> di tipo byte che fornisce il buffer nel quale viene serializzato il messaggio.</returns>
      <param name="message">Oggetto <see cref="T:System.ServiceModel.Channels.Message" /> da scrivere nel buffer dei messaggi.</param>
      <param name="maxMessageSize">Dimensione massima consentita per la scrittura di un messaggio.</param>
      <param name="bufferManager">Classe <see cref="T:System.ServiceModel.Channels.BufferManager" /> che gestisce il buffer nel quale viene scritto il messaggio.</param>
      <param name="messageOffset">Offset del segmento che inizia dall'inizio della matrice di byte che fornisce il buffer.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.IO.Stream)">
      <summary>Quando sottoposto a override in una classe derivata, scrive un messaggio in un flusso specificato.</summary>
      <param name="message">Oggetto <see cref="T:System.ServiceModel.Channels.Message" /> da scrivere in <paramref name="stream" />.</param>
      <param name="stream">Oggetto <see cref="T:System.IO.Stream" /> in cui viene scritto <paramref name="message" />.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageEncoderFactory">
      <summary>Classe base astratta che rappresenta la factory per produrre codificatori di messaggi che possono leggere messaggi da un flusso e scriverli in un flusso per vari tipi di codifica messaggi.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoderFactory.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoderFactory.CreateSessionEncoder">
      <summary>Restituisce un codificatore di messaggi che può essere utilizzato per correlare i messaggi negli scambi basati sulla sessione.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageEncoder" /> utilizzato in scambi di messaggi basati sulla sessione.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncoderFactory.Encoder">
      <summary>Quando sottoposto a override in una classe derivata, ottiene il codificatore di messaggi prodotto dalla factory.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageEncoder" /> utilizzato dalla factory.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncoderFactory.MessageVersion">
      <summary>Quando sottoposto a override in una classe derivata, ottiene la versione del messaggio utilizzata dai codificatori prodotti dalla factory per codificare i messaggi.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageVersion" /> utilizzato dalla factory.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageEncodingBindingElement">
      <summary>Elemento di associazione che specifica la versione del messaggio utilizzata per codificare i messaggi.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncodingBindingElement.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.MessageEncodingBindingElement" />.  </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncodingBindingElement.#ctor(System.ServiceModel.Channels.MessageEncodingBindingElement)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.MessageEncodingBindingElement" /> inizializzata da un elemento esistente.</summary>
      <param name="elementToBeCloned">Oggetto <see cref="T:System.ServiceModel.Channels.MessageEncodingBindingElement" /> da duplicare.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncodingBindingElement.CreateMessageEncoderFactory">
      <summary>Quando viene sottoposto a override in una classe derivata, crea una factory per la generazione di codificatori di messaggi.</summary>
      <returns>Classe <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" /> utilizzata per generare codificatori di messaggi.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Restituisce l'oggetto tipizzato richiesto, se disponibile, dal livello appropriato nello stack dei canali.</summary>
      <returns>L'oggetto tipizzato <paramref name="T" /> richiesto se presente, null in caso contrario.</returns>
      <param name="context">Classe <see cref="T:System.ServiceModel.Channels.BindingContext" /> per l'elemento di associazione corrente.</param>
      <typeparam name="T">Oggetto tipizzato per il quale il metodo sta eseguendo una query.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> è null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncodingBindingElement.MessageVersion">
      <summary>Quando sottoposto a override in una classe derivata, ottiene o imposta la versione del messaggio che può essere gestita dai codificatori di messaggi generati dalla factory di codificatori di messaggi.</summary>
      <returns>Classe <see cref="T:System.ServiceModel.Channels.MessageVersion" /> utilizzata dai codificatori generati dalla factory di codificatori di messaggi.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageFault">
      <summary>Rappresenta una rappresentazione in memoria di un errore SOAP che può essere passato a <see cref="Overload:System.ServiceModel.Channels.Message.CreateMessage" /> per creare un messaggio che contiene un errore. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.#ctor">
      <summary>Quando viene chiamato in una classe derivata, inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.MessageFault" />.  </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.Actor">
      <summary>Ottiene o imposta il valore dell'attore.</summary>
      <returns>Valore dell'attore.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.Code">
      <summary>Ottiene il codice dell'errore SOAP. </summary>
      <returns>
        <see cref="T:System.ServiceModel.FaultCode" /> contiene il codice di errore SOAP.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.CreateFault(System.ServiceModel.Channels.Message,System.Int32)">
      <summary>Restituisce un nuovo oggetto <see cref="T:System.ServiceModel.Channels.MessageFault" /> che utilizza <see cref="T:System.ServiceModel.Channels.Message" /> specificato e le dimensioni massime specificate per il buffer dei messaggi.</summary>
      <returns>Un oggetto di <see cref="T:System.ServiceModel.Channels.MessageFault" /> con i valori iniziali dai parametri passati.</returns>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> specificato da utilizzare per creare l'oggetto <see cref="T:System.ServiceModel.Channels.MessageFault" />.</param>
      <param name="maxBufferSize">Dimensioni massime specificate per il buffer dei messaggi.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.GetDetail``1">
      <summary>Restituisce l'oggetto del dettaglio dell'errore del messaggio.</summary>
      <returns>Oggetto del dettaglio dell'errore del messaggio.</returns>
      <typeparam name="T">Tipo dell'oggetto del dettaglio.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.GetDetail``1(System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Restituisce l'oggetto del dettaglio che utilizza <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> specificato.</summary>
      <returns>Oggetto del dettaglio contenuto in <see cref="T:System.ServiceModel.Channels.MessageFault" />.</returns>
      <param name="serializer">
        <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> da utilizzare per la deserializzazione dell'oggetto del dettaglio. </param>
      <typeparam name="T">Tipo dell'oggetto del dettaglio.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.GetReaderAtDetailContents">
      <summary>Restituisce un oggetto <see cref="T:System.Xml.XmlDictionaryReader" /> posizionato nell'oggetto del dettaglio di <see cref="T:System.ServiceModel.Channels.MessageFault" />.</summary>
      <returns>Oggetto <see cref="T:System.Xml.XmlDictionaryReader" /> posizionato nell'oggetto del dettaglio di <see cref="T:System.ServiceModel.Channels.MessageFault" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.HasDetail">
      <summary>Ottiene un valore che indica se <see cref="T:System.ServiceModel.Channels.MessageFault" /> ha un oggetto del dettaglio.</summary>
      <returns>true se <see cref="T:System.ServiceModel.Channels.MessageFault" /> ha un oggetto del dettaglio. In caso contrario, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.Node">
      <summary>Ottiene il nodo SOAP contenente informazioni sul nodo SOAP in un percorso del messaggio che provoca l'errore.</summary>
      <returns>Nodo SOAP che contiene le informazioni su quale nodo SOAP in un percorso del messaggio provoca l'errore.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.OnGetReaderAtDetailContents">
      <summary>Quando viene chiamato in una classe derivata, restituisce un oggetto <see cref="T:System.Xml.XmlDictionaryReader" /> posizionato nell'oggetto del dettaglio di <see cref="T:System.ServiceModel.Channels.MessageFault" />.</summary>
      <returns>Oggetto <see cref="T:System.Xml.XmlDictionaryReader" /> posizionato nell'oggetto del dettaglio di <see cref="T:System.ServiceModel.Channels.MessageFault" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.OnWriteDetail(System.Xml.XmlDictionaryWriter,System.ServiceModel.EnvelopeVersion)">
      <summary>Richiamato prima di scrivere il contenuto del dettaglio.</summary>
      <param name="writer">Classe <see cref="T:System.Xml.XmlDictionaryWriter" /> utilizzata per scrivere l'elemento dettaglio.</param>
      <param name="version">La versione della SOAP envelope da scrivere.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.OnWriteDetailContents(System.Xml.XmlDictionaryWriter)">
      <summary>Quando viene sottoposto a override in una classe derivata non astratta, scrive il contenuto dell'elemento dettaglio. </summary>
      <param name="writer">Classe <see cref="T:System.Xml.XmlDictionaryWriter" /> utilizzata per scrivere l'elemento dettaglio.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.OnWriteStartDetail(System.Xml.XmlDictionaryWriter,System.ServiceModel.EnvelopeVersion)">
      <summary>Scrive l'elemento iniziale utilizzando <see cref="T:System.Xml.XmlDictionaryWriter" /> specificato e la versione della SOAP envelope.</summary>
      <param name="writer">Classe <see cref="T:System.Xml.XmlDictionaryWriter" /> utilizzata per scrivere l'elemento dettaglio.</param>
      <param name="version">La versione della SOAP envelope da scrivere.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.Reason">
      <summary>Ottiene una descrizione testuale di un errore SOAP. </summary>
      <returns>
        <see cref="T:System.ServiceModel.FaultReason" /> contiene la descrizione testuale dell'errore SOAP.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageHeader">
      <summary>Rappresenta il contenuto di un'intestazione SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.MessageHeader" />.  </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeader.Actor">
      <summary>Consente di ottenere o impostare il destinatario dell'intestazione del messaggio.</summary>
      <returns>Destinatario dell'intestazione del messaggio.Il valore predefinito è una stringa vuota ("").</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object)">
      <summary>Crea una nuova intestazione del messaggio a partire dai dati specificati.</summary>
      <returns>Nuovo oggetto <see cref="T:System.ServiceModel.Channels.MessageHeader" /> con i dati specificati.</returns>
      <param name="name">Nome locale dell'elemento intestazione XML.</param>
      <param name="ns">URI dello spazio dei nomi dell'elemento intestazione XML.</param>
      <param name="value">Il contenuto dell'intestazione da creare.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Boolean)">
      <summary>Crea una nuova intestazione del messaggio a partire dai dati specificati.</summary>
      <returns>Nuovo oggetto <see cref="T:System.ServiceModel.Channels.MessageHeader" /> con i dati specificati.</returns>
      <param name="name">Nome locale dell'elemento intestazione XML.</param>
      <param name="ns">URI dello spazio dei nomi dell'elemento intestazione XML.</param>
      <param name="value">Il contenuto dell'intestazione da creare.</param>
      <param name="mustUnderstand">Valore che indica se l'intestazione deve essere compresa.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Boolean,System.String)">
      <summary>Crea una nuova intestazione del messaggio a partire dai dati specificati.</summary>
      <returns>Nuovo oggetto <see cref="T:System.ServiceModel.Channels.MessageHeader" /> con i dati specificati.</returns>
      <param name="name">Nome locale dell'elemento intestazione XML.</param>
      <param name="ns">URI dello spazio dei nomi dell'elemento intestazione XML.</param>
      <param name="value">Il contenuto dell'intestazione da creare.</param>
      <param name="mustUnderstand">Valore che indica se l'intestazione deve essere compresa.</param>
      <param name="actor">Destinatario dell'intestazione del messaggio.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Boolean,System.String,System.Boolean)">
      <summary>Crea una nuova intestazione del messaggio a partire dai dati specificati.</summary>
      <returns>Nuovo oggetto <see cref="T:System.ServiceModel.Channels.MessageHeader" /> con i dati specificati.</returns>
      <param name="name">Nome locale dell'elemento intestazione XML.</param>
      <param name="ns">URI dello spazio dei nomi dell'elemento intestazione XML.</param>
      <param name="value">Il contenuto dell'intestazione da creare.</param>
      <param name="mustUnderstand">Valore che indica se l'intestazione deve essere compresa.</param>
      <param name="actor">Destinatario dell'intestazione del messaggio.</param>
      <param name="relay">Valore che indica se è necessario inoltrare l'intestazione.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Crea un'intestazione da un oggetto da serializzare utilizzando XmlFormatter. </summary>
      <returns>Nuovo oggetto <see cref="T:System.ServiceModel.Channels.MessageHeader" /> con i dati specificati.</returns>
      <param name="name">Nome locale dell'elemento intestazione XML.</param>
      <param name="ns">URI dello spazio dei nomi dell'elemento intestazione XML.</param>
      <param name="value">Il contenuto dell'intestazione da creare.</param>
      <param name="serializer">Interfaccia <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> utilizzata per serializzare l'intestazione.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer,System.Boolean)">
      <summary>Crea una nuova intestazione del messaggio a partire dai dati specificati.</summary>
      <returns>Nuovo oggetto <see cref="T:System.ServiceModel.Channels.MessageHeader" /> con i dati specificati.</returns>
      <param name="name">Nome locale dell'elemento intestazione XML.</param>
      <param name="ns">URI dello spazio dei nomi dell'elemento intestazione XML.</param>
      <param name="value">Il contenuto dell'intestazione da creare.</param>
      <param name="serializer">Interfaccia <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> utilizzata per serializzare l'intestazione.</param>
      <param name="mustUnderstand">Valore che indica se l'intestazione deve essere compresa.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer,System.Boolean,System.String)">
      <summary>Crea una nuova intestazione del messaggio a partire dai dati specificati.</summary>
      <returns>Nuovo oggetto <see cref="T:System.ServiceModel.Channels.MessageHeader" /> con i dati specificati.</returns>
      <param name="name">Nome locale dell'elemento intestazione XML.</param>
      <param name="ns">URI dello spazio dei nomi dell'elemento intestazione XML.</param>
      <param name="value">Il contenuto dell'intestazione da creare.</param>
      <param name="serializer">Interfaccia <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> utilizzata per serializzare l'intestazione.</param>
      <param name="mustUnderstand">Valore che indica se l'intestazione deve essere compresa.</param>
      <param name="actor">Destinatario dell'intestazione del messaggio.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer,System.Boolean,System.String,System.Boolean)">
      <summary>Crea una nuova intestazione del messaggio a partire dai dati specificati.</summary>
      <returns>Nuovo oggetto <see cref="T:System.ServiceModel.Channels.MessageHeader" /> con i dati specificati.</returns>
      <param name="name">Nome locale dell'elemento intestazione XML.</param>
      <param name="ns">URI dello spazio dei nomi dell'elemento intestazione XML.</param>
      <param name="value">Il contenuto dell'intestazione da creare.</param>
      <param name="serializer">Interfaccia <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> utilizzata per serializzare l'intestazione.</param>
      <param name="mustUnderstand">Valore che indica se l'intestazione deve essere compresa.</param>
      <param name="actor">Destinatario dell'intestazione del messaggio.</param>
      <param name="relay">Valore che indica se è necessario inoltrare l'intestazione.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.IsMessageVersionSupported(System.ServiceModel.Channels.MessageVersion)">
      <summary>Verifica se la versione del messaggio specificata è supportata.</summary>
      <returns>true se la versione del messaggio specificata è supportata. In caso contrario, false.</returns>
      <param name="messageVersion">Oggetto che contiene informazioni riguardanti la versione di SOAP associata a un messaggio e al suo scambio.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeader.IsReferenceParameter">
      <summary>Ottiene un valore che specifica se questa intestazione del messaggio contiene parametri di riferimento di un riferimento dell'endpoint.</summary>
      <returns>true se questa intestazione del messaggio contiene parametri di riferimento di un riferimento dell'endpoint. In caso contrario, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeader.MustUnderstand">
      <summary>Ottiene o imposta un valore che indica se l'intestazione deve essere riconosciuta, secondo la specifica SOAP 1.1/1.2. </summary>
      <returns>true se l'intestazione deve essere riconosciuta. In caso contrario, false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.OnWriteHeaderContents(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Chiamato quando il contenuto dell'intestazione viene serializzato utilizzando il writer XML specificato. </summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> utilizzato per serializzare il contenuto dell'intestazione.</param>
      <param name="messageVersion">Oggetto che contiene informazioni riguardanti la versione di SOAP associata a un messaggio e al suo scambio.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.OnWriteStartHeader(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Chiamato quando l'intestazione iniziale viene serializzata utilizzando il writer XML specificato. </summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> utilizzato per serializzare l'intestazione iniziale.</param>
      <param name="messageVersion">Oggetto che contiene informazioni riguardanti la versione di SOAP associata a un messaggio e al suo scambio.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeader.Relay">
      <summary>Consente di ottenere un valore che indica se è possibile inoltrare l'intestazione.</summary>
      <returns>true se l'intestazione deve essere inoltrata. In caso contrario, false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.ToString">
      <summary>Restituisce la rappresentazione di stringa dell'intestazione del messaggio.</summary>
      <returns>Rappresentazione in forma di stringa dell'intestazione del messaggio.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.WriteHeader(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Serializza l'intestazione utilizzando il writer XML specificato. </summary>
      <param name="writer">Interfaccia <see cref="T:System.Xml.XmlDictionaryWriter" /> utilizzata per serializzare l'intestazione.</param>
      <param name="messageVersion">Oggetto che contiene informazioni riguardanti la versione di SOAP associata a un messaggio e al suo scambio.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.WriteHeader(System.Xml.XmlWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Serializza l'intestazione utilizzando il writer XML specificato. </summary>
      <param name="writer">Interfaccia <see cref="T:System.Xml.XmlWriter" /> utilizzata per serializzare l'intestazione.</param>
      <param name="messageVersion">Oggetto che contiene informazioni riguardanti la versione di SOAP associata a un messaggio e al suo scambio.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.WriteHeaderAttributes(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Serializza gli attributi dell'intestazione utilizzando il writer XML specificato. </summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> utilizzato per serializzare gli attributi dell'intestazione.</param>
      <param name="messageVersion">Oggetto che contiene informazioni riguardanti la versione di SOAP associata a un messaggio e al suo scambio.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.WriteHeaderContents(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Serializza il contenuto dell'intestazione utilizzando il writer XML specificato. </summary>
      <param name="writer">Interfaccia <see cref="T:System.Xml.XmlWriter" /> utilizzata per serializzare il contenuto dell'intestazione.</param>
      <param name="messageVersion">Oggetto che contiene informazioni riguardanti la versione di SOAP associata a un messaggio e al suo scambio.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.WriteStartHeader(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Serializza l'intestazione iniziale utilizzando il writer XML specificato. </summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> utilizzato per serializzare l'intestazione iniziale.</param>
      <param name="messageVersion">L'oggetto che contiene informazioni riguardanti la versione di SOAP associata a un messaggio e al suo scambio.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageHeaderInfo">
      <summary>Rappresenta le informazioni di sistema riguardanti l'intestazione di un messaggio SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaderInfo.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.MessageHeaderInfo" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.Actor">
      <summary>Ottiene o imposta il destinatario dell'intestazione del messaggio.</summary>
      <returns>URI che indica il destinatario dell'intestazione del messaggio.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.IsReferenceParameter">
      <summary>Ottiene un valore che specifica se l'intestazione del messaggio rappresenta i parametri di riferimento di un riferimento dell'endpoint.</summary>
      <returns>true se l'intestazione del messaggio rappresenta i parametri di riferimento di un riferimento dell'endpoint. In caso contrario, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.MustUnderstand">
      <summary>Ottiene o imposta un valore che indica se l'elaborazione dell'intestazione del messaggio è obbligatoria o facoltativa.</summary>
      <returns>true se l'elaborazione dell'intestazione del messaggio è obbligatoria. In caso contrario, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.Name">
      <summary>Ottiene il nome dell'intestazione del messaggio.</summary>
      <returns>Nome dell'intestazione del messaggio.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.Namespace">
      <summary>Ottiene lo spazio dei nomi dell'intestazione del messaggio.</summary>
      <returns>Spazio dei nomi dell'intestazione del messaggio.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.Relay">
      <summary>Ottiene o imposta un valore che indica se l'intestazione del messaggio può essere inoltrata.</summary>
      <returns>true se l'intestazione del messaggio può essere inoltrata. In caso contrario, false.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageHeaders">
      <summary>Rappresenta una raccolta di intestazioni relative a un messaggio.La classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.#ctor(System.ServiceModel.Channels.MessageHeaders)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> con la raccolta di intestazioni di messaggio specificata.</summary>
      <param name="collection">Raccolta di intestazioni di messaggio.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.#ctor(System.ServiceModel.Channels.MessageVersion)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> con la versione messaggio specificata.</summary>
      <param name="version">La versione SOAP del messaggio.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.#ctor(System.ServiceModel.Channels.MessageVersion,System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> con la versione e la dimensione messaggio specificate.</summary>
      <param name="version">La versione SOAP del messaggio.</param>
      <param name="initialSize">Dimensione dell'intestazione.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.Action">
      <summary>Ottiene o imposta una descrizione della modalità di elaborazione del messaggio.</summary>
      <returns>Descrizione della modalità di elaborazione da utilizzare per il messaggio.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.Add(System.ServiceModel.Channels.MessageHeader)">
      <summary>Aggiunge alla raccolta l'intestazione del messaggio specificata.</summary>
      <param name="header">Intestazione del messaggio da aggiungere alla raccolta.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.Clear">
      <summary>Rimuove tutte le intestazioni dalla raccolta.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.CopyHeaderFrom(System.ServiceModel.Channels.Message,System.Int32)">
      <summary>Copia il contenuto dell'intestazione situato in corrispondenza dell'indice specificato dal messaggio specificato a questa istanza.</summary>
      <param name="message">Messaggio da cui l'intestazione viene copiata.</param>
      <param name="headerIndex">Percorso dell'intestazione di messaggio originale dal quale viene copiato il contenuto.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.CopyHeaderFrom(System.ServiceModel.Channels.MessageHeaders,System.Int32)">
      <summary>Copia il contenuto dell'intestazione situato in corrispondenza dell'indice specificato dalla raccolta di intestazioni di messaggio specificata a questa istanza.</summary>
      <param name="collection">Oggetto della raccolta <see cref="T:System.ServiceModel.Channels.MessageHeaders" />.</param>
      <param name="headerIndex">Percorso dell'intestazione di messaggio originale dal quale viene copiato il contenuto.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.CopyHeadersFrom(System.ServiceModel.Channels.Message)">
      <summary>Copia il contenuto di tutte le intestazioni dal messaggio specificato a questa istanza.</summary>
      <param name="message">Messaggio da cui le intestazioni vengono copiate.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.CopyHeadersFrom(System.ServiceModel.Channels.MessageHeaders)">
      <summary>Copia il contenuto della raccolta di intestazioni specificata a questa istanza.</summary>
      <param name="collection">Oggetto della raccolta <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> da cui sono state copiate le intestazioni a questa istanza.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.CopyTo(System.ServiceModel.Channels.MessageHeaderInfo[],System.Int32)">
      <summary>Copia le intestazioni da questa raccolta a una matrice, a partire da un determinato indice della matrice. </summary>
      <param name="array">Matrice unidimensionale che costituisce la destinazione delle intestazioni di messaggio copiate da questa istanza.La matrice deve avere un'indicizzazione in base zero.</param>
      <param name="index">Indice con base zero nella matrice da cui inizia la copia. </param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.Count">
      <summary>Ottiene il numero di intestazioni di messaggio presenti in questa raccolta.</summary>
      <returns>Numero di intestazioni di messaggio presenti in questa raccolta.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.FaultTo">
      <summary>Ottiene o imposta l'indirizzo del nodo al quale devono essere inviati gli errori.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.EndpointAddress" /> del nodo al quale devono essere inviati gli errori.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.FindHeader(System.String,System.String)">
      <summary>Consente di individuare un'intestazione di messaggio in questa raccolta in base al valore LocalName e all'URI dello spazio dei nomi dell'elemento intestazione specificati.</summary>
      <returns>L'indice dell'intestazione del messaggio in questa raccolta se disponibile o -1 se l'intestazione specificata non esiste.</returns>
      <param name="name">LocalName dell'elemento intestazione XML.</param>
      <param name="ns">URI dello spazio dei nomi dell'elemento intestazione XML.</param>
      <exception cref="T:System.ArgumentNullException">Gli argomenti sono null.</exception>
      <exception cref="T:System.ServiceModel.MessageHeaderException">Intestazione specificata dagli argomenti esiste più volte.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.FindHeader(System.String,System.String,System.String[])">
      <summary>Consente di individuare un'intestazione di messaggio in questa raccolta in base al valore LocalName, all'URI dello spazio dei nomi e agli attori dell'elemento intestazione specificati.</summary>
      <returns>L'indice dell'intestazione del messaggio in questa raccolta se disponibile o -1 se l'intestazione specificata non esiste.</returns>
      <param name="name">LocalName dell'elemento intestazione XML.</param>
      <param name="ns">URI dello spazio dei nomi dell'elemento intestazione XML.</param>
      <param name="actors">Destinatario dell'intestazione del messaggio.</param>
      <exception cref="T:System.ArgumentNullException">Gli argomenti sono null.</exception>
      <exception cref="T:System.ServiceModel.MessageHeaderException">Intestazione specificata dagli argomenti esiste più volte.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.From">
      <summary>Ottiene o imposta l'indirizzo del nodo da cui è stato inviato il messaggio.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.EndpointAddress" /> del nodo da cui è stato inviato il messaggio.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetEnumerator">
      <summary>Restituisce un enumeratore per scorrere l'insieme.Questo metodo non può essere ereditato.</summary>
      <returns>Oggetto <see cref="T:System.Collections.IEnumerator" /> che può essere utilizzato per scorrere la raccolta.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetHeader``1(System.Int32)">
      <summary>Recupera un'intestazione di messaggio in una posizione specifica della raccolta.</summary>
      <returns>Intestazione del messaggio all'indice specificato.</returns>
      <param name="index">Indice in base zero dell'intestazione da recuperare.</param>
      <typeparam name="T">Tipo dell'intestazione del messaggio.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetHeader``1(System.Int32,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Recupera un'intestazione di messaggio in una posizione specifica della raccolta.</summary>
      <returns>Intestazione del messaggio all'indice specificato.</returns>
      <param name="index">Indice in base zero dell'intestazione da recuperare.</param>
      <param name="serializer">Interfaccia <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> utilizzata per serializzare l'intestazione.</param>
      <typeparam name="T">Tipo dell'intestazione del messaggio.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetHeader``1(System.String,System.String)">
      <summary>Consente di individuare un'intestazione di messaggio in questa raccolta in base al valore LocalName e all'URI dello spazio dei nomi dell'elemento intestazione specificati.</summary>
      <returns>Intestazione del messaggio con il nome specificato.</returns>
      <param name="name">LocalName dell'elemento intestazione XML.</param>
      <param name="ns">URI dello spazio dei nomi dell'elemento intestazione XML.</param>
      <typeparam name="T">Tipo dell'intestazione del messaggio.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetHeader``1(System.String,System.String,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Recupera un'intestazione di messaggio in questa raccolta in base al valore LocalName, all'URI dello spazio dei nomi e al serializzatore specificati.</summary>
      <returns>Intestazione del messaggio con il nome specificato.</returns>
      <param name="name">LocalName dell'elemento intestazione XML.</param>
      <param name="ns">URI dello spazio dei nomi dell'elemento intestazione XML.</param>
      <param name="serializer">Interfaccia <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> utilizzata per serializzare l'intestazione.</param>
      <typeparam name="T">Tipo dell'intestazione del messaggio.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetHeader``1(System.String,System.String,System.String[])">
      <summary>Recupera un'intestazione di messaggio in questa raccolta in base al valore LocalName, all'URI dello spazio dei nomi e agli attori dell'elemento intestazione specificati.</summary>
      <returns>Intestazione del messaggio con il nome specificato.</returns>
      <param name="name">LocalName dell'elemento intestazione XML.</param>
      <param name="ns">URI dello spazio dei nomi dell'elemento intestazione XML.</param>
      <param name="actors">Destinatario dell'intestazione del messaggio.</param>
      <typeparam name="T">Tipo dell'intestazione del messaggio.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetReaderAtHeader(System.Int32)">
      <summary>Ottiene un lettore di dizionario XML che utilizza l'intestazione del messaggio nel percorso specificato della raccolta.</summary>
      <returns>Oggetto <see cref="T:System.Xml.XmlDictionaryReader" /> che utilizza l'intestazione del messaggio nel percorso specificato della raccolta.</returns>
      <param name="headerIndex">Indice in base zero dell'intestazione da recuperare.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.HaveMandatoryHeadersBeenUnderstood">
      <summary>Verifica se tutte le intestazioni di messaggio contrassegnate da MustUnderstand sono state interpretate ed elaborate correttamente. </summary>
      <returns>true se i destinatari specificati da <paramref name="actors" /> hanno interpretato ed elaborato correttamente tutte le intestazioni di messaggio contrassegnate da MustUnderstand. In caso contrario, false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.HaveMandatoryHeadersBeenUnderstood(System.String[])">
      <summary>Verifica se i destinatari specificati hanno interpretato ed elaborato correttamente tutte le intestazioni di messaggio contrassegnate da MustUnderstand. </summary>
      <returns>true se i destinatari specificati da <paramref name="actors" /> hanno interpretato ed elaborato correttamente tutte le intestazioni di messaggio contrassegnate da MustUnderstand. In caso contrario, false.</returns>
      <param name="actors">Destinatario dell'intestazione del messaggio.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.Insert(System.Int32,System.ServiceModel.Channels.MessageHeader)">
      <summary>Inserisce un'intestazione di messaggio nella raccolta in corrispondenza dell'indice specificato.</summary>
      <param name="headerIndex">Indice in base zero nel quale <paramref name="header" /> deve essere inserito.</param>
      <param name="header">Intestazione di messaggio da inserire.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.Item(System.Int32)">
      <summary>Recupera un'intestazione in corrispondenza dell'indice specificato.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Channels.MessageHeaderInfo" /> nell'insieme.Se <paramref name="index" /> è maggiore o uguale al numero di intestazioni incluse nell'elenco, viene restituito null.</returns>
      <param name="index">Indice a base zero del gestore nell'elenco.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.MessageId">
      <summary>Ottiene o imposta l'ID univoco del messaggio.</summary>
      <returns>ID univoco del messaggio.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.MessageVersion">
      <summary>Ottiene la versione SOAP del messaggio.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageVersion" /> che rappresenta una versione SOAP del messaggio.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.RelatesTo">
      <summary>Ottiene gli ID dei messaggi relativi a questo messaggio.</summary>
      <returns>ID dei messaggi relativi a questo messaggio.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.RemoveAll(System.String,System.String)">
      <summary>Rimuove dalla raccolta tutte le intestazioni con il nome e lo spazio dei nomi specificati.</summary>
      <param name="name">LocalName dell'elemento intestazione XML.</param>
      <param name="ns">URI dello spazio dei nomi dell'elemento intestazione XML.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.RemoveAt(System.Int32)">
      <summary>Rimuove l'intestazione di messaggio dalla raccolta in corrispondenza dell'indice specificato.</summary>
      <param name="headerIndex">Indice in base zero dell'intestazione da rimuovere.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.ReplyTo">
      <summary>Ottiene o imposta l'indirizzo del nodo al quale deve essere inviata la risposta a una richiesta.</summary>
      <returns>
        <see cref="T:System.ServiceModel.EndpointAddress" /> del nodo al quale deve essere inviata la risposta a una richiesta.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.SetAction(System.Xml.XmlDictionaryString)">
      <summary>Imposta l'elemento azione dell'intestazione.</summary>
      <param name="action">Descrizione della modalità di elaborazione da utilizzare per il messaggio.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.System#Collections#IEnumerable#GetEnumerator">
      <summary>Restituisce un enumeratore per scorrere l'insieme.Questo metodo non può essere ereditato.</summary>
      <returns>Oggetto <see cref="T:System.Collections.IEnumerator" /> che può essere utilizzato per scorrere la raccolta.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.To">
      <summary>Ottiene o imposta l'endpoint di destinazione di un messaggio.</summary>
      <returns>URI che contiene l'endpoint di destinazione di un messaggio.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteHeader(System.Int32,System.Xml.XmlDictionaryWriter)">
      <summary>Serializza l'intestazione dal percorso specificato utilizzando il writer XML specificato. </summary>
      <param name="headerIndex">Indice in base zero dell'intestazione da serializzare.</param>
      <param name="writer">Interfaccia <see cref="T:System.Xml.XmlDictionaryWriter" /> utilizzata per serializzare l'intestazione.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteHeader(System.Int32,System.Xml.XmlWriter)">
      <summary>Serializza l'intestazione dal percorso specificato utilizzando il writer XML specificato. </summary>
      <param name="headerIndex">Indice in base zero dell'intestazione da serializzare.</param>
      <param name="writer">Interfaccia <see cref="T:System.Xml.XmlWriter" /> utilizzata per serializzare l'intestazione.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteHeaderContents(System.Int32,System.Xml.XmlDictionaryWriter)">
      <summary>Serializza il contenuto dell'intestazione specificata utilizzando il writer XML specificato. </summary>
      <param name="headerIndex">Indice in base zero dell'intestazione da serializzare.</param>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> utilizzato per serializzare il contenuto dell'intestazione.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteHeaderContents(System.Int32,System.Xml.XmlWriter)">
      <summary>Serializza il contenuto dell'intestazione specificata utilizzando il writer XML specificato. </summary>
      <param name="headerIndex">Indice in base zero dell'intestazione da serializzare.</param>
      <param name="writer">Interfaccia <see cref="T:System.Xml.XmlWriter" /> utilizzata per serializzare il contenuto dell'intestazione.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteStartHeader(System.Int32,System.Xml.XmlDictionaryWriter)">
      <summary>Serializza l'intestazione iniziale utilizzando il writer XML specificato. </summary>
      <param name="headerIndex">Indice in base zero dell'intestazione da serializzare.</param>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> utilizzato per serializzare l'intestazione iniziale.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteStartHeader(System.Int32,System.Xml.XmlWriter)">
      <summary>Serializza l'intestazione iniziale utilizzando il writer XML specificato. </summary>
      <param name="headerIndex">Indice in base zero dell'intestazione da serializzare.</param>
      <param name="writer">Interfaccia <see cref="T:System.Xml.XmlWriter" /> utilizzata per serializzare l'intestazione iniziale.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageProperties">
      <summary>Rappresenta un set di proprietà per un messaggio.La classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.MessageProperties" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.#ctor(System.ServiceModel.Channels.MessageProperties)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.MessageProperties" /> con proprietà preimpostate.</summary>
      <param name="properties">Oggetto <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.Add(System.String,System.Object)">
      <summary>Consente di aggiungere un elemento con il nome e la proprietà specificati alla raccolta <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</summary>
      <param name="name">Nome dell'elemento da aggiungere.</param>
      <param name="property">Valore dell'elemento da aggiungere. </param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.AllowOutputBatching">
      <summary>Ottiene o imposta un valore che specifica se archiviare il messaggio prima di consegnarlo al trasporto. </summary>
      <returns>true se il batch dei messaggi in uscita è consentito. In caso contrario, false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.Clear">
      <summary>Consente di rimuovere tutti gli elementi dall'insieme <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.ContainsKey(System.String)">
      <summary>Stabilisce se <see cref="T:System.ServiceModel.Channels.MessageProperties" /> contiene un nome, una chiave o un identificatore specifico.</summary>
      <returns>true se la classe <see cref="T:System.ServiceModel.Channels.MessageProperties" /> contiene un elemento con l'oggetto <paramref name="name" /> specificato; in caso contrario, false.</returns>
      <param name="name">Nome, chiave o identificatore da individuare in <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.CopyProperties(System.ServiceModel.Channels.MessageProperties)">
      <summary>Copia il contenuto dell'oggetto <see cref="T:System.ServiceModel.Channels.MessageProperties" /> specificato in questa istanza.</summary>
      <param name="properties">Oggetto <see cref="T:System.ServiceModel.Channels.MessageProperties" /> da cui copiare.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Count">
      <summary>Ottiene il numero totale di proprietà della classe <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</summary>
      <returns>Numero totale di proprietà della classe <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.Dispose">
      <summary>Rilascia tutte le risorse utilizzate dalla classe <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Encoder">
      <summary>Ottiene il codificatore utilizzato per scrivere messaggi in un flusso e leggere messaggi da un flusso.</summary>
      <returns>Classe <see cref="T:System.ServiceModel.Channels.MessageEncoder" /> utilizzata per scrivere messaggi in un flusso e per leggere messaggi da un flusso.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.IsFixedSize">
      <summary>Ottiene un valore che indica se le dimensioni della classe <see cref="T:System.ServiceModel.Channels.MessageProperties" /> sono fisse.</summary>
      <returns>true se <see cref="T:System.ServiceModel.Channels.MessageProperties" /> è di dimensioni fisse; in caso contrario, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Item(System.String)">
      <summary>Recupera una proprietà con il nome, l'identificatore o il valore della chiave specificato.</summary>
      <returns>Proprietà con il <paramref name="name" /> specificato oppure null se la proprietà non esiste.</returns>
      <param name="name">Nome della proprietà da ottenere dalla raccolta.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Keys">
      <summary>Ottiene un'interfaccia <see cref="T:System.Collections.ICollection" /> contenente le chiavi presenti nella classe <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</summary>
      <returns>Interfaccia <see cref="T:System.Collections.ICollection" /> contenente le chiavi presenti nella classe <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.Remove(System.String)">
      <summary>Rimuove l'elemento con il nome specificato dalla classe <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</summary>
      <returns>true se la classe <see cref="T:System.ServiceModel.Channels.MessageProperties" /> contiene un elemento con il valore <paramref name="name" /> specificato e può essere rimossa. In caso contrario, false.</returns>
      <param name="name">Nome dell'elemento da rimuovere.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#ICollection{T}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Consente di aggiungere un elemento con il nome e la proprietà specificati alla classe <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</summary>
      <param name="pair">Coppia chiave/valore contenente il nome e il valore dell'elemento da aggiungere.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#ICollection{T}#Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Consente di stabilire se la classe <see cref="T:System.ServiceModel.Channels.MessageProperties" /> contiene un nome specifico.</summary>
      <returns>true se la classe <see cref="T:System.ServiceModel.Channels.MessageProperties" /> contiene un elemento con il nome e il valore inclusi nel parametro <paramref name="pair" /> specificato. In caso contrario, false.</returns>
      <param name="pair">Coppia chiave/valore contenente il nome e il valore dell'elemento da individuare nella classe <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#ICollection{T}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary>Copia il contenuto della classe <see cref="T:System.ServiceModel.Channels.MessageProperties" /> specificata in una matrice a partire dall'indice specificato.</summary>
      <param name="array">Oggetto <see cref="T:System.Array" /> in cui copiare l'insieme.</param>
      <param name="index">Indice da cui iniziare.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>Ottiene un valore che indica se il set di proprietà è di sola lettura.</summary>
      <returns>true se il set di proprietà è di sola lettura. In caso contrario, false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#ICollection{T}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Rimuove l'elemento con il nome specificato dalla classe <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</summary>
      <returns>true se la classe <see cref="T:System.ServiceModel.Channels.MessageProperties" /> contiene un elemento con il nome e il valore specificati nel parametro <paramref name="pair" /> e può essere rimossa. In caso contrario, false.</returns>
      <param name="pair">Coppia chiave/valore contenente il nome e il valore dell'elemento da rimuovere.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>Restituisce un enumeratore che può scorrere un insieme.</summary>
      <returns>Interfaccia <see cref="T:System.Collections.IEnumerator" /> che può essere utilizzata per scorrere la raccolta.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#IEnumerable#GetEnumerator">
      <summary>Restituisce un enumeratore che può scorrere un insieme.</summary>
      <returns>Interfaccia <see cref="T:System.Collections.IEnumerator" /> che può essere utilizzata per scorrere la raccolta.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.TryGetValue(System.String,System.Object@)">
      <summary>Consente di stabilire se la classe <see cref="T:System.ServiceModel.Channels.MessageProperties" /> contiene un nome specifico e di recuperarne il valore. </summary>
      <returns>true se la classe <see cref="T:System.ServiceModel.Channels.MessageProperties" /> contiene un elemento con l'oggetto <paramref name="name" /> specificato; in caso contrario, false.</returns>
      <param name="name">Nome dell'elemento da individuare.</param>
      <param name="value">Valore dell'elemento individuato. </param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Values">
      <summary>Ottiene un oggetto <see cref="T:System.Collections.ICollection" /> che contiene i valori di <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</summary>
      <returns>Interfaccia <see cref="T:System.Collections.ICollection" /> contenente i valori della classe <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Via">
      <summary>Ottiene o imposta l'indirizzo di trasporto utilizzato per inviare messaggi.</summary>
      <returns>URI contenente l'indirizzo di trasporto utilizzato per inviare messaggi.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageState">
      <summary>Specifica lo stato di un messaggio. </summary>
    </member>
    <member name="F:System.ServiceModel.Channels.MessageState.Closed">
      <summary>Il messaggio è stato chiuso e non è più possibile accedervi.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.MessageState.Copied">
      <summary>Il messaggio è stato copiato.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.MessageState.Created">
      <summary>Il messaggio è stato creato. </summary>
    </member>
    <member name="F:System.ServiceModel.Channels.MessageState.Read">
      <summary>Il messaggio viene letto.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.MessageState.Written">
      <summary>Il messaggio è stato scritto.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageVersion">
      <summary>Specifica le versioni di SOAP e WS-Addressing associate a un messaggio e alle relative operazioni di scambio.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Addressing">
      <summary>Ottiene o imposta la versione di WS-Addressing associata alla versione del messaggio corrente.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> associata alla versione del messaggio corrente.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion)">
      <summary>Crea un oggetto della versione del messaggio utilizzando WS-Addressing 1.0 e con una versione SOAP specificata.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageVersion" /> utilizzando la versione specificata di SOAP e di WS-Addressing 1.0.</returns>
      <param name="envelopeVersion">
        <see cref="T:System.ServiceModel.EnvelopeVersion" /> che indica la versione SOAP da utilizzare.</param>
      <exception cref="T:System.ArgumentNullException">La proprietà <paramref name="envelopeVersion" /> è null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion,System.ServiceModel.Channels.AddressingVersion)">
      <summary>Crea un oggetto della versione del messaggio con versioni specificate di SOAP e di WS-Addressing.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageVersion" /> utilizzando le versioni specificate di SOAP e di WS-Addressing.</returns>
      <param name="envelopeVersion">
        <see cref="T:System.ServiceModel.EnvelopeVersion" /> indica la versione SOAP.</param>
      <param name="addressingVersion">
        <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> indica la versione WS-Addressing.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="envelopeVersion" /> o <paramref name="addressingVersion" /> è null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Default">
      <summary>Ottiene la versione del messaggio predefinita utilizzata da Windows Communication Foundation (WCF).</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageVersion" /> che utilizza WS-Addressing 1.0 e SOAP1.2.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Envelope">
      <summary>Ottiene la versione SOAP associata alla versione del messaggio corrente.</summary>
      <returns>
        <see cref="T:System.ServiceModel.EnvelopeVersion" /> associata alla versione del messaggio corrente.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageVersion.Equals(System.Object)">
      <summary>Restituisce un valore che indica se la versione del messaggio corrente è uguale a un oggetto specificato.</summary>
      <returns>true se l'oggetto specificato è uguale all'oggetto <see cref="T:System.ServiceModel.Channels.MessageVersion" /> corrente; in caso contrario, false.</returns>
      <param name="obj">
        <see cref="T:System.Object" /> da confrontare con la versione del messaggio corrente.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageVersion.GetHashCode">
      <summary>Ottiene un codice hash per la versione del messaggio corrente.</summary>
      <returns>Codice hash univoco per l'oggetto <see cref="T:System.ServiceModel.Channels.MessageVersion" /> corrente.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.None">
      <summary>Ottiene la versione del messaggio che non utilizza SOAP o WS-Addressing.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageVersion" /> che non utilizza SOAP o WS-Addressing.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Soap11">
      <summary>Ottiene la versione del messaggio utilizzando SOAP 1,1.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageVersion" /> utilizzando SOAP 1,1, ma nessuna versione di WS-Addressing.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Soap12WSAddressing10">
      <summary>Ottiene la versione del messaggio utilizzando WS-Addressing 1.0 e SOAP 1.2.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageVersion" /> utilizzando la versione di WS-Addressing 1.0 e SOAP 1.2.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageVersion.ToString">
      <summary>Restituisce la rappresentazione di stringa della versione del messaggio corrente.</summary>
      <returns>Rappresentazione di stringa della versione del messaggio corrente.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.RequestContext">
      <summary>Fornisce una replica correlata a una richiesta in arrivo.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.RequestContext" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Abort">
      <summary>Quando sottoposto a override in una classe derivata, interrompe l'elaborazione della richiesta associata al contesto. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>Quando sottoposto a override in una classe derivata, avvia un'operazione asincrona per rispondere alla richiesta associata al contesto corrente.</summary>
      <returns>Interfaccia <see cref="T:System.IAsyncResult" /> che fa riferimento all'operazione di risposta asincrona.</returns>
      <param name="message">Oggetto <see cref="T:System.ServiceModel.Channels.Message" /> in arrivo che contiene la richiesta.</param>
      <param name="callback">Delegato <see cref="T:System.AsyncCallback" /> che riceve la notifica del completamento dell'operazione di risposta asincrona.</param>
      <param name="state">Oggetto specificato dall'applicazione contenente le informazioni di stato associate all'operazione di risposta asincrona.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Quando sottoposto a override in una classe derivata, avvia un'operazione asincrona per rispondere a una richiesta associata al contesto corrente entro un intervallo di tempo specificato.</summary>
      <returns>Interfaccia <see cref="T:System.IAsyncResult" /> che fa riferimento all'operazione di risposta asincrona.</returns>
      <param name="message">Oggetto <see cref="T:System.ServiceModel.Channels.Message" /> in arrivo che contiene la richiesta.</param>
      <param name="timeout">Valore <see cref="T:System.Timespan" /> che specifica l'intervallo di attesa necessario per la risposta a una richiesta disponibile.</param>
      <param name="callback">Delegato <see cref="T:System.AsyncCallback" /> che riceve la notifica del completamento dell'operazione di risposta asincrona.</param>
      <param name="state">Oggetto specificato dall'applicazione contenente le informazioni di stato associate all'operazione di risposta asincrona.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Close">
      <summary>Quando sottoposto a override in una classe derivata, termina l'operazione di replica al contesto di richiesta associato al contesto corrente.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Close(System.TimeSpan)">
      <summary>Quando sottoposto a override in una classe derivata, termina l'operazione di replica al contesto di replica associato al contesto corrente entro un intervallo di tempo specificato.</summary>
      <param name="timeout">Valore <see cref="T:System.Timespan" /> che specifica l'intervallo di tempo entro il quale deve essere terminata l'operazione di replica associata al contesto corrente.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Dispose(System.Boolean)">
      <summary>Rilascia le risorse associate al contesto.</summary>
      <param name="disposing">true per rilasciare sia le risorse gestite sia quelle non gestite, false per rilasciare solo le risorse non gestite. </param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.EndReply(System.IAsyncResult)">
      <summary>Quando sottoposto a override in una classe derivata, completa un'operazione asincrona per rispondere a un messaggio di richiesta.</summary>
      <param name="result">Interfaccia <see cref="T:System.IAsyncResult" /> restituita da una chiamata a uno dei metodi <see cref="Overload:System.ServiceModel.Channels.RequestContext.BeginReply" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message)">
      <summary>Quando sottoposto a override in una classe derivata, risponde a un messaggio di richiesta.</summary>
      <param name="message">Oggetto <see cref="T:System.ServiceModel.Channels.Message" /> in arrivo che contiene la richiesta.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <summary>Quando sottoposto a override in una classe derivata, risponde a un messaggio di richiesta entro un intervallo di tempo specificato.</summary>
      <param name="message">Oggetto <see cref="T:System.ServiceModel.Channels.Message" /> in arrivo che contiene la richiesta.</param>
      <param name="timeout">Valore <see cref="T:System.Timespan" /> che specifica l'intervallo di attesa necessario per la risposta a una richiesta.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.RequestContext.RequestMessage">
      <summary>Quando sottoposto a override in una classe derivata, ottiene il messaggio che contiene la richiesta.</summary>
      <returns>Classe <see cref="T:System.ServiceModel.Channels.Message" /> che contiene la richiesta.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.System#IDisposable#Dispose">
      <summary>Rilascia sia risorse gestite che non gestite associate al contesto.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement">
      <summary>Elemento di associazione che specifica la codifica dei caratteri e la versione dei messaggi utilizzate per i messaggi SOAP basati su testo.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.#ctor(System.ServiceModel.Channels.MessageVersion,System.Text.Encoding)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement" /> con una versione e una codifica messaggi specificate.</summary>
      <param name="messageVersion">Classe <see cref="T:System.ServiceModel.Channels.MessageVersion" /> utilizzata per la versione dei messaggi.</param>
      <param name="writeEncoding">Classe <see cref="T:System.Text.Encoding" /> utilizzata per formattare i caratteri dei messaggi.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="messageVersion" /> o <paramref name="writeEncoding" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Il valore di <paramref name="writeEncoding" /> non è valido.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Compila lo stack della channel factory nel client che crea un tipo di canale specificato per un contesto specificato.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> di tipo <paramref name="TChannel" /> per il contesto specificato.</returns>
      <param name="context">Classe <see cref="T:System.ServiceModel.Channels.BindingContext" /> per il canale.</param>
      <typeparam name="TChannel">Tipo di canale prodotto dalla channel factory.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.Clone">
      <summary>Consente di creare un nuovo oggetto <see cref="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement" /> inizializzato da quello corrente.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement" /> con valori di proprietà uguali a quelli dell'elemento corrente.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.CreateMessageEncoderFactory">
      <summary>Crea una factory per codificatori di messaggi di testo che utilizzano la versione dei messaggi e la codifica dei caratteri specificate dall'elemento di associazione della codifica corrente.</summary>
      <returns>Classe <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" /> creata da questa factory.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Se presente, restituisce un oggetto tipizzato richiesto dal livello appropriato nello stack dell'elemento di associazione.</summary>
      <returns>L'oggetto tipizzato <paramref name="T" /> richiesto se presente, null in caso contrario.</returns>
      <param name="context">Oggetto <see cref="T:System.ServiceModel.Channels.BindingContext" /> per l'elemento di associazione.</param>
      <typeparam name="T">Oggetto tipizzato per il quale il metodo sta eseguendo una query.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.TextMessageEncodingBindingElement.MessageVersion">
      <summary>Ottiene o imposta le versioni SOAP e WS-Addressing utilizzate per formattare il messaggio di testo.</summary>
      <returns>Classe <see cref="T:System.ServiceModel.Channels.MessageVersion" /> utilizzata per formattare i messaggi.Il valore predefinito è <see cref="P:System.ServiceModel.Channels.MessageVersion.Soap12WSAddressing10" />.</returns>
      <exception cref="T:System.ArgumentNullException">Il valore è null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.TextMessageEncodingBindingElement.ReaderQuotas">
      <summary>Ottiene o imposta vincoli sulla complessità dei messaggi SOAP che possono essere elaborati dagli endpoint configurati con questa associazione.</summary>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> che specifica i vincoli di complessità nei messaggi SOAP scambiati.I valori predefiniti per questi vincoli sono riportati nella seguente sezione Osservazioni.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.TextMessageEncodingBindingElement.WriteEncoding">
      <summary>Ottiene o imposta la codifica utilizzata per formattare i caratteri nel testo del messaggio.</summary>
      <returns>Classe <see cref="T:System.Text.Encoding" /> utilizzata per formattare i caratteri nel messaggio di testo.La codifica testo predefinita è il formato UTF-8.</returns>
      <exception cref="T:System.ArgumentNullException">Il valore è null.</exception>
      <exception cref="T:System.ArgumentException">Il valore di <paramref name="writeEncoding" /> non è valido.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.TransportBindingElement">
      <summary>Classe base abstract che rappresenta un elemento di associazione del trasporto.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportBindingElement.#ctor">
      <summary>Crea una nuova istanza di questa classe.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportBindingElement.#ctor(System.ServiceModel.Channels.TransportBindingElement)">
      <summary>Crea una nuova istanza di questa classe da un'istanza esistente.</summary>
      <param name="elementToBeCloned">
        <see cref="T:System.ServiceModel.Channels.TransportBindingElement" /> da duplicare. </param>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Ottiene una proprietà dall'oggetto <see cref="T:System.ServiceModel.Channels.BindingContext" /> specificato.</summary>
      <returns>Proprietà dall'oggetto <see cref="T:System.ServiceModel.Channels.BindingContext" /> specificato.</returns>
      <param name="context">Oggetto <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="T">Proprietà da ottenere.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.TransportBindingElement.ManualAddressing">
      <summary>Ottiene o imposta un valore che indica se è richiesto l'indirizzamento manuale del messaggio.</summary>
      <returns>true se l'indirizzamento manuale del messaggio è richiesto. In caso contrario, false.Il valore predefinito è false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize">
      <summary>Ottiene e imposta la dimensione massima consentita in byte del messaggio che può essere ricevuto.</summary>
      <returns>Dimensione massima consentita del messaggio che può essere ricevuto.Il valore predefinito è 65,536 byte.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.TransportBindingElement.Scheme">
      <summary>Ottiene lo schema URI per il trasporto.</summary>
      <returns>Restituisce lo schema URI per il trasporto, che varia a seconda della classe derivata che implementa questo metodo.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.ClientCredentials">
      <summary>Consente all'utente di configurare le credenziali client e del servizio, nonché le impostazioni di autenticazione delle credenziali del servizio da utilizzare per il lato client della comunicazione.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Description.ClientCredentials" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.#ctor(System.ServiceModel.Description.ClientCredentials)">
      <summary>Si tratta di un costruttore di copia. </summary>
      <param name="other">Oggetto <see cref="T:System.ServiceModel.Description.ClientCredentials" />.Tutte le proprietà dell'istanza appena costruita riflettono i valori di questo parametro.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <summary>Applica il comportamento client specificato all'endpoint.</summary>
      <param name="serviceEndpoint">Endpoint al quale dev'essere applicato il comportamento client specificato.</param>
      <param name="behavior">Comportamento client da applicare all'endpoint specificato.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceEndpoint" /> o <paramref name=" behavior" /> è null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.Clone">
      <summary>Crea una nuova copia di questa istanza della classe <see cref="T:System.ServiceModel.Description.ClientCredentials" />.</summary>
      <returns>Istanza di <see cref="T:System.ServiceModel.Description.ClientCredentials" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.CloneCore">
      <summary>Crea una nuova copia di questa istanza della classe <see cref="T:System.ServiceModel.Description.ClientCredentials" />.</summary>
      <returns>Istanza di <see cref="T:System.ServiceModel.Description.ClientCredentials" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ClientCredentials.HttpDigest">
      <summary>Ottiene la credenziale digest HTTP corrente.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Security.HttpDigestClientCredential" /> che rappresenta la credenziale utilizzata dal client per l'autenticazione al servizio quando viene scelto il metodo di autenticazione digest HTTP. </returns>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.System#ServiceModel#Description#IEndpointBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Aggiunge questa istanza della classe a una raccolta di parametri di associazione.</summary>
      <param name="serviceEndpoint">Oggetto <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> da aggiungere.</param>
      <param name="bindingParameters">Raccolta di parametri di associazione.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.System#ServiceModel#Description#IEndpointBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
      <summary>Implementa una modifica o un'estensione del servizio all'interno di un endpoint.</summary>
      <param name="serviceEndpoint">L'endpoint che espone il contratto.</param>
      <param name="endpointDispatcher">Dispatcher dell'endpoint da modificare o estendere.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.System#ServiceModel#Description#IEndpointBehavior#Validate(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Riservato per un utilizzo futuro.</summary>
      <param name="serviceEndpoint">Oggetto <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> da convalidare.</param>
    </member>
    <member name="P:System.ServiceModel.Description.ClientCredentials.UserName">
      <summary>Ottiene un oggetto credenziale utilizzabile per impostare il nome utente e la password utilizzati dal client per l'autenticazione al servizio. </summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Security.UserNamePasswordClientCredential" /> che rappresenta la credenziale UserName corrente.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ClientCredentials.Windows">
      <summary>Ottiene un oggetto utilizzato per controllare le credenziali Windows utilizzate dal client per l'autenticazione al servizio. </summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Security.WindowsClientCredential" /> che rappresenta la credenziale Windows corrente.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.ContractDescription">
      <summary>Descrive un contratto Windows Communication Foundation (WCF) che specifica ciò che un endpoint comunica al mondo esterno.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ContractDescription.#ctor(System.String)">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.ServiceModel.Description.ContractDescription" /> con un nome specificato.</summary>
      <param name="name">Nome del contratto.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="name" /> vuoto.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.ContractDescription.#ctor(System.String,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Description.ContractDescription" /> con il nome completo dello spazio dei nomi specificato.</summary>
      <param name="name">Nome del contratto.</param>
      <param name="ns">Lo spazio dei nomi che contiene il nome del contratto.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="name" /> vuoto.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.CallbackContractType">
      <summary>Ottiene o imposta il tipo di contratto di callback specificato nella descrizione del contratto.</summary>
      <returns>La classe <see cref="T:System.Type" /> del contratto di callback specificato nella descrizione del contratto.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.ConfigurationName">
      <summary>Ottiene o imposta il nome della configurazione per la descrizione del contratto.</summary>
      <returns>Il nome della configurazione per il contratto.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.ContractBehaviors">
      <summary>Ottiene la raccolta dei comportamenti del contratto.</summary>
      <returns>La raccolta dei comportamenti del contratto.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.ContractType">
      <summary>Ottiene o imposta il tipo di contratto specificato nella descrizione del contratto.</summary>
      <returns>La classe <see cref="T:System.Type" /> del contratto specificato nella descrizione del contratto.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.Name">
      <summary>Ottiene o imposta il nome del contratto.</summary>
      <returns>Il nome della descrizione del contratto.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.Namespace">
      <summary>Ottiene o imposta lo spazio dei nomi per il contratto.</summary>
      <returns>Spazio dei nomi del contratto.</returns>
      <exception cref="T:System.ArgumentNullException">L'impostazione del valore è null.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.Operations">
      <summary>Ottiene una raccolta di descrizioni di operazioni associate al contratto.</summary>
      <returns>La classe <see cref="T:System.ServiceModel.Description.OperationDescriptionCollection" /> che contiene le descrizioni di operazioni associate alla descrizione del contratto.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.DataContractSerializerOperationBehavior">
      <summary>Rappresenta il comportamento runtime di <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerOperationBehavior.#ctor(System.ServiceModel.Description.OperationDescription)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Description.DataContractSerializerOperationBehavior" /> con la descrizione dell'operazione specificata.</summary>
      <param name="operation">Oggetto <see cref="T:System.ServiceModel.Description.OperationDescription" /> che rappresenta l'operazione.</param>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerOperationBehavior.#ctor(System.ServiceModel.Description.OperationDescription,System.ServiceModel.DataContractFormatAttribute)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Description.DataContractSerializerOperationBehavior" /> con la descrizione dell'operazione e il formato di contratto dati specificati.</summary>
      <param name="operation">Oggetto <see cref="T:System.ServiceModel.Description.OperationDescription" /> che rappresenta l'operazione.</param>
      <param name="dataContractFormatAttribute">Oggetto <see cref="T:System.ServiceModel.DataContractFormatAttribute" /> utilizzato per controllare il processo di serializzazione.</param>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerOperationBehavior.CreateSerializer(System.Type,System.String,System.String,System.Collections.Generic.IList{System.Type})">
      <summary>Crea un'istanza di una classe che eredita da <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> per processi di serializzazione e deserializzazione.</summary>
      <returns>Istanza di una classe che eredita dalla classe <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />. </returns>
      <param name="type">Oggetto <see cref="T:System.Type" /> per il quale creare il serializzatore.</param>
      <param name="name">Nome del tipo generato.</param>
      <param name="ns">Spazio dei nomi del tipo generato.</param>
      <param name="knownTypes">Interfaccia <see cref="T:System.Collections.Generic.IList`1" /> di una classe <see cref="T:System.Type" /> contenente tipi noti.</param>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerOperationBehavior.CreateSerializer(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IList{System.Type})">
      <summary>Crea un'istanza di una classe che eredita da <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> per processi di serializzazione e deserializzazione con un oggetto <see cref="T:System.Xml.XmlDictionaryString" /> che contiene lo spazio dei nomi.</summary>
      <returns>Istanza di una classe che eredita dalla classe <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />. </returns>
      <param name="type">Tipo da serializzare o deserializzare.</param>
      <param name="name">Nome del tipo serializzato.</param>
      <param name="ns">
        <see cref="T:System.Xml.XmlDictionaryString" /> contenente lo spazio dei nomi del tipo serializzato.</param>
      <param name="knownTypes">Interfaccia <see cref="T:System.Collections.Generic.IList`1" /> di una classe <see cref="T:System.Type" /> contenente tipi noti.</param>
    </member>
    <member name="P:System.ServiceModel.Description.DataContractSerializerOperationBehavior.DataContractFormatAttribute">
      <summary>Ottiene la classe <see cref="T:System.ServiceModel.DataContractFormatAttribute" /> associata all'operazione.</summary>
      <returns>Classe <see cref="T:System.ServiceModel.DataContractFormatAttribute" /> associata all'operazione.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.DataContractSerializerOperationBehavior.DataContractResolver">
      <summary>Ottiene o imposta un'implementazione di <see cref="T:System.Runtime.Serialization.DataContractResolver" /> utilizzata per eseguire dinamicamente il mapping dei tipi durante il processi di serializzazione e deserializzazione. </summary>
      <returns>Tipo: <see cref="T:System.Runtime.Serialization.DataContractResolver" />.Classe che esegue il mapping di un xsi:type a un tipo di contratto dati noto.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.DataContractSerializerOperationBehavior.MaxItemsInObjectGraph">
      <summary>Ottiene o imposta il numero massimo di elementi nell'oggetto grafico da serializzare o deserializzare.</summary>
      <returns>Numero massimo di elementi nell'oggetto grafico da serializzare o deserializzare.Il valore predefinito è <see cref="F:System.Int32.MaxValue" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerOperationBehavior.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Aggiunge una raccolta di parametri al comportamento. </summary>
      <param name="description">Classe <see cref="T:System.ServiceModel.Description.OperationDescription" /> alla quale aggiungere i parametri.</param>
      <param name="parameters">Classe <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> che contiene i parametri da aggiungere.</param>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerOperationBehavior.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)">
      <summary>Collega il comportamento di un client all'operazione.</summary>
      <param name="description">
        <see cref="T:System.ServiceModel.Description.OperationDescription" /> che rappresenta l'operazione.</param>
      <param name="proxy">
        <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /> che rappresenta un client.</param>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerOperationBehavior.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)">
      <summary>Applica il comportamento all'operazione.</summary>
      <param name="description">Oggetto <see cref="T:System.ServiceModel.Description.OperationDescription" /> che rappresenta l'operazione.</param>
      <param name="dispatch">Classe <see cref="T:System.ServiceModel.Dispatcher.DispatchOperation" /> alla quale collegare il comportamento.</param>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerOperationBehavior.System#ServiceModel#Description#IOperationBehavior#Validate(System.ServiceModel.Description.OperationDescription)">
      <summary>Convalida l'operazione.</summary>
      <param name="description">Oggetto <see cref="T:System.ServiceModel.Description.OperationDescription" /> che rappresenta l'operazione da convalidare.</param>
    </member>
    <member name="T:System.ServiceModel.Description.FaultDescription">
      <summary>Rappresenta un errore SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.FaultDescription.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Description.FaultDescription" /> utilizzando il valore dell'azione specificato.</summary>
      <param name="action">L'azione del messaggio di errore SOAP.</param>
    </member>
    <member name="P:System.ServiceModel.Description.FaultDescription.Action">
      <summary>Il valore dell'azione nel messaggio di errore SOAP.</summary>
      <returns>Azione dell'errore SOAP.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.FaultDescription.DetailType">
      <summary>Il tipo di dettaglio dell'errore SOAP.</summary>
      <returns>Il tipo dell'oggetto del dettaglio serializzabile.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.FaultDescription.Name">
      <summary>Ottiene o imposta il nome dell'errore SOAP.</summary>
      <returns>Il nome dell'errore SOAP.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.FaultDescription.Namespace">
      <summary>Consente di ottenere o impostare lo spazio dei nomi dell'errore SOAP.</summary>
      <returns>Spazio dei nomi dell'errore SOAP.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.FaultDescriptionCollection">
      <summary>Rappresenta una raccolta di oggetti <see cref="T:System.ServiceModel.Description.FaultDescription" /> che è possibile utilizzare per ottenere informazioni sugli errori SOAP in un contratto.</summary>
    </member>
    <member name="T:System.ServiceModel.Description.IContractBehavior">
      <summary>Implementa metodi che possono essere utilizzati per estendere il comportamento in fase di esecuzione per un contratto in un'applicazione client o del servizio.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.IContractBehavior.AddBindingParameters(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Configura qualsiasi elemento di associazione affinché supporti il comportamento del contratto.</summary>
      <param name="contractDescription">La descrizione del contratto da modificare.</param>
      <param name="endpoint">L'endpoint da modificare.</param>
      <param name="bindingParameters">Oggetti necessari affinché gli elementi associazione supportino il comportamento.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <summary>Implementa una modifica o un'estensione del client all'interno di un contratto.</summary>
      <param name="contractDescription">La descrizione del contratto al quale è destinata l'estensione.</param>
      <param name="endpoint">L'endpoint.</param>
      <param name="clientRuntime">Fase di esecuzione del client.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)">
      <summary>Implementa una modifica o un'estensione del client all'interno di un contratto.</summary>
      <param name="contractDescription">La descrizione del contratto da modificare.</param>
      <param name="endpoint">L'endpoint che espone il contratto.</param>
      <param name="dispatchRuntime">La fase di esecuzione della distribuzione che controlla l'esecuzione del servizio.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IContractBehavior.Validate(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Procedere all'implementazione per verificare che il contratto e l'endpoint siano in grado di supportare il comportamento del contratto.</summary>
      <param name="contractDescription">Il contratto da convalidare.</param>
      <param name="endpoint">L'endpoint da convalidare.</param>
    </member>
    <member name="T:System.ServiceModel.Description.IEndpointBehavior">
      <summary>Implementa metodi che possono essere utilizzati per estendere il comportamento della fase di esecuzione per un endpoint in un'applicazione client o di servizio.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Procedere all'implementazione per passare i dati in fase di esecuzione alle associazioni per garantire il supporto del comportamento personalizzato.</summary>
      <param name="endpoint">L'endpoint da modificare.</param>
      <param name="bindingParameters">Oggetti necessari affinché gli elementi associazione supportino il comportamento.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <summary>Implementa una modifica o un'estensione del client all'interno di un endpoint.</summary>
      <param name="endpoint">Endpoint da personalizzare.</param>
      <param name="clientRuntime">La fase di esecuzione del client da personalizzare.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
      <summary>Implementa una modifica o un'estensione del servizio all'interno di un endpoint.</summary>
      <param name="endpoint">L'endpoint che espone il contratto.</param>
      <param name="endpointDispatcher">Dispatcher dell'endpoint da modificare o estendere.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IEndpointBehavior.Validate(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Procedere all'implementazione per verificare che l'endpoint soddisfi alcuni criteri specificati.</summary>
      <param name="endpoint">L'endpoint da convalidare.</param>
    </member>
    <member name="T:System.ServiceModel.Description.IOperationBehavior">
      <summary>Implementa metodi che possono essere utilizzati per estendere il comportamento della fase di esecuzione per un'operazione in un'applicazione client o di servizio.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Procedere all'implementazione per passare i dati in fase di esecuzione alle associazioni per garantire il supporto del comportamento personalizzato.</summary>
      <param name="operationDescription">Operazione esaminata.Utilizzare solo per attività di esame.Se la descrizione dell'operazione è modificata, i risultati non sono definiti.</param>
      <param name="bindingParameters">Raccolta di oggetti necessari agli elementi dell'associazione per supportare il comportamento.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)">
      <summary>Implementa una modifica o un'estensione del client all'interno di un'operazione.</summary>
      <param name="operationDescription">Operazione esaminata.Utilizzare solo per attività di esame.Se la descrizione dell'operazione è modificata, i risultati non sono definiti.</param>
      <param name="clientOperation">L'oggetto runtime che espone le proprietà della personalizzazione per l'operazione descritta da <paramref name="operationDescription" />.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)">
      <summary>Implementa una modifica o un'estensione del servizio all'interno di un'operazione.</summary>
      <param name="operationDescription">Operazione esaminata.Utilizzare solo per attività di esame.Se la descrizione dell'operazione è modificata, i risultati non sono definiti.</param>
      <param name="dispatchOperation">L'oggetto runtime che espone le proprietà della personalizzazione per l'operazione descritta da <paramref name="operationDescription" />.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IOperationBehavior.Validate(System.ServiceModel.Description.OperationDescription)">
      <summary>Procedere all'implementazione per verificare che l'operazione soddisfi alcuni criteri specificati.</summary>
      <param name="operationDescription">Operazione esaminata.Utilizzare solo per attività di esame.Se la descrizione dell'operazione è modificata, i risultati non sono definiti.</param>
    </member>
    <member name="T:System.ServiceModel.Description.MessageBodyDescription">
      <summary>Rappresenta il corpo di un messaggio SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessageBodyDescription.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Description.MessageBodyDescription" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Description.MessageBodyDescription.Parts">
      <summary>Ottiene le parti per il corpo del messaggio SOAP.</summary>
      <returns>Le parti del corpo che si possono controllare o modificare.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageBodyDescription.ReturnValue">
      <summary>Ottiene o imposta la parte del messaggio SOAP che contiene il valore restituito.</summary>
      <returns>L'eventuale valore restituito.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageBodyDescription.WrapperName">
      <summary>Ottiene o imposta il nome dell'eventuale elemento wrapper all'interno dell'elemento del corpo SOAP.</summary>
      <returns>L'eventuale elemento wrapper.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageBodyDescription.WrapperNamespace">
      <summary>Ottiene o imposta lo spazio dei nomi dell'eventuale elemento wrapper all'interno dell'elemento del corpo SOAP.</summary>
      <returns>L'eventuale spazio dei nomi dell'elemento wrapper.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.MessageDescription">
      <summary>Rappresenta la descrizione di un messaggio.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessageDescription.#ctor(System.String,System.ServiceModel.Description.MessageDirection)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Description.MessageDescription" /> con un'azione e una direzione specificate.</summary>
      <param name="action">Il parametro dell'azione del messaggio SOAP che identifica lo scopo del messaggio.</param>
      <param name="direction">
        <see cref="F:System.ServiceModel.Description.MessageDirection.Input" /> se il messaggio è in entrata o <see cref="F:System.ServiceModel.Description.MessageDirection.Output" /> se il messaggio è in uscita.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">La <paramref name="direction" /> non è né <see cref="F:System.ServiceModel.Description.MessageDirection.Input" /> né <see cref="F:System.ServiceModel.Description.MessageDirection.Output" />.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.Action">
      <summary>Ottiene o imposta il parametro dell'azione del messaggio SOAP che identifica lo scopo del messaggio.</summary>
      <returns>Un oggetto <see cref="T:System.String" /> che contiene l'URI dell'azione.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.Body">
      <summary>Ottiene il corpo del messaggio SOAP.</summary>
      <returns>La classe <see cref="T:System.ServiceModel.Description.MessagePartDescriptionCollection" /> che contiene il corpo del messaggio.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.Direction">
      <summary>Ottiene la direzione che indica se il messaggio è in entrata o in uscita.</summary>
      <returns>La classe <see cref="T:System.ServiceModel.Description.MessageDirection" /> che indica se il messaggio è in entrata o in uscita.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.Headers">
      <summary>Ottiene la descrizione delle intestazioni del messaggio SOAP.</summary>
      <returns>La classe <see cref="T:System.ServiceModel.Description.MessageHeaderDescriptionCollection" /> che contiene le descrizioni delle intestazioni del messaggio SOAP.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.MessageType">
      <summary>Ottiene o imposta un tipo che identifica il tipo di contratto di messaggio.</summary>
      <returns>Una classe <see cref="T:System.Type" /> che identifica il tipo di contratto di messaggio.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.Properties">
      <summary>Ottiene o imposta le proprietà del messaggio SOAP.</summary>
      <returns>Classe <see cref="T:System.ServiceModel.Description.MessagePropertyDescriptionCollection" /> che contiene la descrizione delle proprietà del messaggio SOAP.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.MessageDescriptionCollection">
      <summary>Fornisce una raccolta utilizzata per memorizzare le descrizioni dei messaggi che costituiscono un'operazione che appartiene a un contratto.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessageDescriptionCollection.Find(System.String)">
      <summary>Individua e restituisce la prima descrizione del messaggio presente nella raccolta per un messaggio associato a un'azione specificata.</summary>
      <returns>La prima classe <see cref="T:System.ServiceModel.Description.MessageDescription" /> della raccolta il cui messaggio è associato all'elemento <paramref name="action" /> specificato e a null se non viene individuato alcun elemento <paramref name="action" /> corrispondente.</returns>
      <param name="action">L'azione del messaggio individuato.</param>
    </member>
    <member name="M:System.ServiceModel.Description.MessageDescriptionCollection.FindAll(System.String)">
      <summary>Individua e restituisce tutte le descrizioni dei messaggi presenti nella raccolta i cui messaggi sono associati a un'azione specificata.</summary>
      <returns>Una classe <see cref="T:System.ServiceModel.Description.MessageDescriptionCollection" /> che contiene le descrizioni dei messaggi della raccolta corrente i cui messaggi sono associati all'elemento <paramref name="action" /> specificato.Viene restituita una raccolta vuota se non vengono individuati oggetti <see cref="T:System.ServiceModel.Description.MessageDescription" /> corrispondenti.</returns>
      <param name="action">L'azione dei messaggi individuati.</param>
    </member>
    <member name="T:System.ServiceModel.Description.MessageDirection">
      <summary>Specifica la direzione del messaggio.</summary>
    </member>
    <member name="F:System.ServiceModel.Description.MessageDirection.Input">
      <summary>Il messaggio è in entrata.</summary>
    </member>
    <member name="F:System.ServiceModel.Description.MessageDirection.Output">
      <summary>Il messaggio è in uscita.</summary>
    </member>
    <member name="T:System.ServiceModel.Description.MessageHeaderDescription">
      <summary>Rappresenta un'intestazione del messaggio SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessageHeaderDescription.#ctor(System.String,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Description.MessageHeaderDescription" /> con un nome qualificato specificato.</summary>
      <param name="name">Nome dell'intestazione del messaggio.</param>
      <param name="ns">Spazio dei nomi dell'intestazione del messaggio.</param>
    </member>
    <member name="P:System.ServiceModel.Description.MessageHeaderDescription.Actor">
      <summary>Ottiene o imposta il destinatario dell'intestazione del messaggio.</summary>
      <returns>URI che indica il destinatario dell'intestazione del messaggio.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageHeaderDescription.MustUnderstand">
      <summary>Ottiene o imposta un valore che indica se l'intestazione deve essere riconosciuta, secondo la specifica SOAP 1.1/1.2.</summary>
      <returns>true se l'elaborazione dell'intestazione del messaggio è obbligatoria. In caso contrario, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageHeaderDescription.Relay">
      <summary>Consente di ottenere un valore che indica se è possibile inoltrare l'intestazione.</summary>
      <returns>true se l'intestazione del messaggio può essere inoltrata. In caso contrario, false.In base alla specifica SOAP 1.1 l'impostazione predefinita è false.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageHeaderDescription.TypedHeader">
      <summary>Ottiene o imposta un valore che indica se l'intestazione del messaggio è un'intestazione del contratto di messaggio.</summary>
      <returns>true se l'intestazione del messaggio è un'intestazione del contratto di messaggio. In caso contrario, false.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.MessageHeaderDescriptionCollection">
      <summary>Rappresenta una raccolta di oggetti <see cref="T:System.ServiceModel.Description.MessageHeaderDescription" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessageHeaderDescriptionCollection.GetKeyForItem(System.ServiceModel.Description.MessageHeaderDescription)">
      <summary>Quando viene chiamata da una classe derivata, restituisce il <see cref="T:System.Xml.XmlQualifiedName" /> dell'intestazione del messaggio.</summary>
      <returns>La classe <see cref="T:System.Xml.XmlQualifiedName" /> dell'intestazione del messaggio.</returns>
      <param name="item">Oggetto <see cref="T:System.ServiceModel.Description.MessageHeaderDescription" /> da individuare.</param>
    </member>
    <member name="T:System.ServiceModel.Description.MessagePartDescription">
      <summary>Rappresenta una descrizione di una parte del messaggio SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessagePartDescription.#ctor(System.String,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Description.MessagePartDescription" />.  </summary>
      <param name="name">Nome XML della parte del messaggio.</param>
      <param name="ns">Spazio dei nomi XML della parte del messaggio.</param>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.Index">
      <summary>Ottiene o imposta l'indice della parte del messaggio.</summary>
      <returns>Indice della parte del messaggio.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.MemberInfo">
      <summary>Ottiene o imposta le informazioni sui membri per la parte del messaggio.</summary>
      <returns>Le informazioni sui membri per questa parte del messaggio.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.Multiple">
      <summary>Ottiene o imposta un valore che controlla se la parte del messaggio può ripetersi più di una volta nel messaggio.</summary>
      <returns>true se può ripetersi più di una volta; in caso contrario, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.Name">
      <summary>Ottiene o imposta il nome della parte del messaggio.</summary>
      <returns>Nome della parte del messaggio.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.Namespace">
      <summary>Ottiene o imposta lo spazio dei nomi della parte del messaggio.</summary>
      <returns>Spazio dei nomi della parte del messaggio.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.Type">
      <summary>Ottiene o imposta il tipo della parte del messaggio.</summary>
      <returns>Tipo della parte del messaggio.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.MessagePartDescriptionCollection">
      <summary>Rappresenta una raccolta di oggetti <see cref="T:System.ServiceModel.Description.MessagePartDescription" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessagePartDescriptionCollection.GetKeyForItem(System.ServiceModel.Description.MessagePartDescription)">
      <summary>Quando viene chiamata da una classe derivata, restituisce il <see cref="T:System.Xml.XmlQualifiedName" /> della classe <see cref="T:System.ServiceModel.Description.MessagePartDescription" />.</summary>
      <returns>
        <see cref="T:System.Xml.XmlQualifiedName" /> dell'oggetto <see cref="T:System.ServiceModel.Description.MessagePartDescription" />.</returns>
      <param name="item">Oggetto <see cref="T:System.ServiceModel.Description.MessagePartDescription" /> da individuare.</param>
    </member>
    <member name="T:System.ServiceModel.Description.MessagePropertyDescription">
      <summary>Rappresenta una proprietà del messaggio specificata da <see cref="T:System.ServiceModel.MessagePropertyAttribute" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessagePropertyDescription.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Description.MessagePropertyDescription" />.  </summary>
      <param name="name">Nome della proprietà.</param>
    </member>
    <member name="T:System.ServiceModel.Description.MessagePropertyDescriptionCollection">
      <summary>Rappresenta una raccolta di oggetti <see cref="T:System.ServiceModel.Description.MessagePropertyDescription" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessagePropertyDescriptionCollection.GetKeyForItem(System.ServiceModel.Description.MessagePropertyDescription)">
      <summary>Restituisce una classe <see cref="T:System.Xml.XmlQualifiedName" /> per una classe <see cref="T:System.ServiceModel.Description.MessagePropertyDescription" />.</summary>
      <returns>
        <see cref="T:System.Xml.XmlQualifiedName" /> dell'oggetto <see cref="T:System.ServiceModel.Description.MessagePropertyDescription" />.</returns>
      <param name="item">Oggetto <see cref="T:System.ServiceModel.Description.MessagePropertyDescription" /> da individuare.</param>
    </member>
    <member name="T:System.ServiceModel.Description.OperationDescription">
      <summary>Rappresenta la descrizione di un'operazione del contratto che fornisce una descrizione dei messaggi che costituiscono l'operazione.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescription.#ctor(System.String,System.ServiceModel.Description.ContractDescription)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Description.OperationDescription" /> con un nome e una descrizione del contratto specificati.</summary>
      <param name="name">Il nome della descrizione dell'operazione.</param>
      <param name="declaringContract">L'oggetto della classe <see cref="T:System.ServiceModel.Description.ContractDescription" /> utilizzato per inizializzare la descrizione dell'operazione.</param>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.DeclaringContract">
      <summary>Ottiene o imposta il contratto al quale appartiene l'operazione.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.ContractDescription" /> dell'operazione.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.Faults">
      <summary>Ottiene le descrizioni degli errori associati alla descrizione dell'operazione.</summary>
      <returns>La classe <see cref="T:System.ServiceModel.Description.FaultDescriptionCollection" /> che contiene i dettagli sugli errori associati alla descrizione dell'operazione.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.IsOneWay">
      <summary>Ottiene o imposta un valore che indica se l'operazione restituisce un messaggio di risposta.</summary>
      <returns>true se questo metodo riceve un messaggio di richiesta e non restituisce alcun messaggio di risposta. In caso contrario, false.Il valore predefinito è false.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.KnownTypes">
      <summary>Ottiene i tipi conosciuti associati alla descrizione dell'operazione.</summary>
      <returns>La raccolta di tipi conosciuti associati alla descrizione dell'operazione.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.Messages">
      <summary>Ottiene o imposta le descrizioni dei messaggi che costituiscono l'operazione.</summary>
      <returns>Una classe <see cref="T:System.ServiceModel.Description.MessageDescriptionCollection" /> che contiene le descrizioni dei messaggi che costituiscono l'operazione.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.Name">
      <summary>Ottiene o imposta il nome della descrizione della proprietà.</summary>
      <returns>Il nome della descrizione dell'operazione.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.OperationBehaviors">
      <summary>Ottiene il set di comportamenti per l'operazione.</summary>
      <returns>Set di comportamenti per l'operazione.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.TaskMethod">
      <summary>Ottiene o imposta il metodo utilizzato per l'operazione dell'attività.</summary>
      <returns>Metodo utilizzato per l'operazione dell'attività.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.OperationDescriptionCollection">
      <summary>Rappresenta una raccolta che contiene descrizioni dell'operazione.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescriptionCollection.Find(System.String)">
      <summary>Restituisce una descrizione dell'operazione con un nome specificato dalla raccolta di descrizioni dell'operazione.</summary>
      <returns>Un oggetto <see cref="T:System.ServiceModel.Description.OperationDescription" /> con il nome specificato.</returns>
      <param name="name">Nome dell'operazione.</param>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescriptionCollection.FindAll(System.String)">
      <summary>Restituisce una raccolta di tutte le descrizioni dell'operazione della raccolta dotate di un nome specificato.</summary>
      <returns>La classe <see cref="T:System.Collections.ObjectModel.Collection`1" /> di tipo <see cref="T:System.ServiceModel.Description.OperationDescription" /> che contiene le descrizioni dell'operazione con il nome specificato.</returns>
      <param name="name">Nome dell'operazione.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> è null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescriptionCollection.InsertItem(System.Int32,System.ServiceModel.Description.OperationDescription)">
      <summary>Inserisce un elemento nella raccolta delle descrizioni delle operazioni in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice in base zero nel quale deve essere inserito <paramref name="item" />.</param>
      <param name="item">Oggetto <see cref="T:System.ServiceModel.Description.OperationDescription" /> da inserire.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> è null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescriptionCollection.SetItem(System.Int32,System.ServiceModel.Description.OperationDescription)">
      <summary>Sostituisce l'elemento della descrizione dell'operazione nella raccolta in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice in base zero nel quale deve essere inserito <paramref name="item" />.</param>
      <param name="item">Oggetto <see cref="T:System.ServiceModel.Description.OperationDescription" /> da impostare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> è null.</exception>
    </member>
    <member name="T:System.ServiceModel.Description.ServiceEndpoint">
      <summary>Rappresenta l'endpoint per un servizio che consente ai client del servizio di individuare e comunicare con il servizio.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceEndpoint.#ctor(System.ServiceModel.Description.ContractDescription)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> per un contratto specificato.</summary>
      <param name="contract">Oggetto della classe <see cref="T:System.ServiceModel.Description.ContractDescription" /> relativo all'endpoint del servizio.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceEndpoint.#ctor(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> con un contratto, un'associazione e un indirizzo specificati.</summary>
      <param name="contract">Oggetto della classe <see cref="T:System.ServiceModel.Description.ContractDescription" /> relativo all'endpoint del servizio.</param>
      <param name="binding">La classe <see cref="T:System.ServiceModel.Channels.Binding" /> che specifica come l'endpoint del servizio comunica con il mondo esterno.</param>
      <param name="address">Oggetto della classe <see cref="T:System.ServiceModel.EndpointAddress" /> relativo all'endpoint del servizio.</param>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceEndpoint.Address">
      <summary>Ottiene o imposta l'indirizzo dell'endpoint del servizio.</summary>
      <returns>Oggetto della classe <see cref="T:System.ServiceModel.EndpointAddress" /> che specifica la posizione dell'endpoint del servizio.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceEndpoint.Binding">
      <summary>Ottiene o imposta l'associazione dell'endpoint del servizio.</summary>
      <returns>Oggetto della classe <see cref="T:System.ServiceModel.Channels.Binding" /> relativo all'endpoint del servizio.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceEndpoint.Contract">
      <summary>Ottiene il contratto per l'endpoint del servizio.</summary>
      <returns>Oggetto della classe <see cref="T:System.ServiceModel.Description.ContractDescription" /> che specifica il contratto dell'endpoint del servizio.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceEndpoint.EndpointBehaviors">
      <summary>Ottiene i comportamenti per l'endpoint del servizio.</summary>
      <returns>Comportamenti per l'endpoint del servizio.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceEndpoint.Name">
      <summary>Ottiene o imposta il nome dell'endpoint del servizio.</summary>
      <returns>Il nome dell'endpoint del servizio.Il valore predefinito è costituito dalla concatenazione del nome dell'associazione e del nome della descrizione del contratto.Ad esempio, <see cref="P:System.ServiceModel.Channels.Binding.Name" /> +'_' + <see cref="P:System.ServiceModel.Description.ContractDescription.Name" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.ClientOperation">
      <summary>Classe utilizzata per modificare o estendere il comportamento di esecuzione di un'operazione del contratto specifica in un oggetto client o in un oggetto del canale client.La classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ClientOperation.#ctor(System.ServiceModel.Dispatcher.ClientRuntime,System.String,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /> utilizzando i valori di nome e azione <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" /> specificati. </summary>
      <param name="parent">Oggetto contenitore <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" />.</param>
      <param name="name">Nome dell'operazione.</param>
      <param name="action">L'azione dell'operazione.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ClientOperation.#ctor(System.ServiceModel.Dispatcher.ClientRuntime,System.String,System.String,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /> utilizzando i valori di nome, azione e azione di risposta <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" /> specificati. </summary>
      <param name="parent">Oggetto contenitore <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" />.</param>
      <param name="name">Nome dell'operazione.</param>
      <param name="action">L'azione dell'operazione.</param>
      <param name="replyAction">L'azione del messaggio di risposta.</param>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.Action">
      <summary>Ottiene l'azione dell'operazione.</summary>
      <returns>L'azione dell'operazione.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.ClientParameterInspectors">
      <summary>Ottiene una raccolta di oggetti di controllo parametri utilizzati per visualizzare o modificare i parametri prima o dopo una chiamata client.</summary>
      <returns>Raccolta di oggetti di controllo parametri utilizzati per visualizzare o modificare i parametri prima o dopo una chiamata client.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.DeserializeReply">
      <summary>Ottiene o imposta un valore che indica se il valore della proprietà <see cref="P:System.ServiceModel.Dispatcher.ClientOperation.Formatter" /> viene utilizzato per deserializzare il messaggio di risposta.</summary>
      <returns>true  se il tipo restituito non è un oggetto <see cref="T:System.ServiceModel.Channels.Message" />. In caso contrario, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.Formatter">
      <summary>Ottiene o imposta il formattatore che serializza gli oggetti in messaggi e deserializza i messaggi in oggetti.</summary>
      <returns>Implementazione di <see cref="T:System.ServiceModel.Dispatcher.IClientMessageFormatter" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.IsOneWay">
      <summary>Ottiene o imposta un valore che indica se l'operazione è unidirezionale.</summary>
      <returns>true se il client indigo2 non prevede una risposta. In caso contrario, false.Il valore predefinito è false.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.Name">
      <summary>Ottiene il nome dell'operazione.</summary>
      <returns>Nome dell'operazione.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.Parent">
      <summary>Ottiene l'oggetto contenitore <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" />.</summary>
      <returns>Oggetto contenitore <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.ReplyAction">
      <summary>Ottiene l'azione del messaggio di risposta dell'operazione.</summary>
      <returns>L'azione della risposta.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.SerializeRequest">
      <summary>Ottiene o imposta un valore che specifica se l'oggetto <see cref="P:System.ServiceModel.Dispatcher.ClientOperation.Formatter" /> serializza un messaggio in uscita.</summary>
      <returns>true se la proprietà <see cref="P:System.ServiceModel.Dispatcher.ClientOperation.Formatter" /> serializza i valori restituiti in un messaggio di risposta. In caso contrario, false.Il valore predefinito è true.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.TaskMethod">
      <summary>Ottiene o imposta il metodo associata a un'attività.</summary>
      <returns>Oggetto <see cref="T:System.Reflection.MethodInfo" /> che rappresenta il metodo associato a un'attività.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.TaskTResult">
      <summary>Ottiene o imposta il tipo del risultato del metodo associato a un'attività.</summary>
      <returns>Oggetto <see cref="T:System.Type" /> del risultato del metodo associato a un'attività.</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.ClientRuntime">
      <summary>Rappresenta il punto di inserimento per le classi che estendono la funzionalità degli oggetti client di Windows Communication Foundation (WCF) a tutti i messaggi gestiti da un'applicazione client.</summary>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ClientMessageInspectors">
      <summary>Ottiene una raccolta di oggetti controllo messaggio utilizzati per visualizzare o modificare i messaggi di una particolare operazione del servizio.</summary>
      <returns>Raccolta di oggetti controllo messaggio utilizzati per visualizzare o modificare i messaggi di una particolare operazione di servizio.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ClientOperations">
      <summary>Ottiene una raccolta di oggetti operazione client utilizzati per collegare oggetti di estensione che controllano o modificano i messaggi e il comportamento di una particolare operazione del servizio.</summary>
      <returns>Raccolta di oggetti operazione client utilizzati per collegare oggetti di estensione che controllano o modificano i messaggi e il comportamento di una particolare operazione di servizio.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ContractClientType">
      <summary>Ottiene o imposta il tipo di contratto associato al client.</summary>
      <returns>L'oggetto <see cref="T:System.Type" /> che rappresenta il contratto associato al client.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ContractName">
      <summary>Ottiene il nome del contratto associato al client.</summary>
      <returns>Il nome del contratto per un client.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ContractNamespace">
      <summary>Ottiene lo spazio dei nomi del contratto associato al client.</summary>
      <returns>Lo spazio dei nomi del contratto associato al client.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ManualAddressing">
      <summary>Ottiene o imposta un valore che indica se il client aggiunge intestazioni di indirizzamento ai messaggi request-reply.</summary>
      <returns>true se il client non aggiunge intestazioni di indirizzamento. In caso contrario, false.Il valore predefinito è false.Vedere la sezione Osservazioni.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.MaxFaultSize">
      <summary>Ottiene o imposta la dimensione massima dell'errore.</summary>
      <returns>Un numero intero che rappresenta la dimensione massima dell'errore.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.OperationSelector">
      <summary>Ottiene o imposta un'implementazione <see cref="T:System.ServiceModel.Dispatcher.IClientOperationSelector" /> che può essere utilizzata per selezionare un elemento <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" />.</summary>
      <returns>Un oggetto <see cref="T:System.ServiceModel.Dispatcher.IClientOperationSelector" /> che seleziona una classe <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.UnhandledClientOperation">
      <summary>Ottiene l'operazione client per i metodi che non dispongono di un oggetto <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /> corrispondente nella raccolta <see cref="P:System.ServiceModel.Dispatcher.ClientRuntime.Operations" />.</summary>
      <returns>Un oggetto <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /> che rappresenta il metodo al quale viene indirizzato il contenuto del messaggio corrente quando il selettore dell'operazione non è in grado di individuare un'operazione che corrisponda al messaggio.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.Via">
      <summary>Ottiene o imposta l'indirizzo di trasporto utilizzato per inviare messaggi utilizzando il client.</summary>
      <returns>Un oggetto <see cref="T:System.Uri" /> che rappresenta l'indirizzo di destinazione del trasporto.Il valore predefinito è il valore <see cref="P:System.ServiceModel.EndpointAddress.Uri" /> del client.</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.DispatchOperation">
      <summary>Classe utilizzata per modificare o estendere il comportamento di esecuzione di un'operazione del servizio specifica in un endpoint del servizio.La classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.DispatchOperation.#ctor(System.ServiceModel.Dispatcher.DispatchRuntime,System.String,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Dispatcher.DispatchOperation" /> utilizzando i valori della fase di esecuzione della distribuzione, nome e azione specificati.</summary>
      <param name="parent">Oggetto <see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" /> associato.</param>
      <param name="name">Il nome dell'operazione di distribuzione. Viene utilizzato come chiave per la raccolta <see cref="P:System.ServiceModel.Dispatcher.DispatchRuntime.Operations" />.</param>
      <param name="action">L'azione del messaggio per la quale viene creata l'operazione di distribuzione.</param>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.Action">
      <summary>Ottiene il valore dell'azione per questa operazione.</summary>
      <returns>Il valore dell'azione per questa operazione.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.AutoDisposeParameters">
      <summary>Ottiene o imposta l'eliminazione automatica dei parametri.</summary>
      <returns>true se i parametri devono essere eliminati automaticamente. In caso contrario false.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.DeserializeRequest">
      <summary>Ottiene o imposta un valore che indica se il valore della proprietà <see cref="P:System.ServiceModel.Dispatcher.DispatchOperation.Formatter" /> viene utilizzato per deserializzare il messaggio di richiesta.</summary>
      <returns>false se il tipo restituito è di tipo <see cref="T:System.ServiceModel.Channels.Message" /> e non ci sono parametri out. In caso contrario, true.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.IsOneWay">
      <summary>Ottiene un valore che indica se l'operazione è unidirezionale.</summary>
      <returns>true se l'operazione ha solo un input. In caso contrario false.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.Name">
      <summary>Ottiene il nome dell'operazione.</summary>
      <returns>Nome dell'operazione.Viene utilizzato come chiave per la raccolta <see cref="P:System.ServiceModel.Dispatcher.DispatchRuntime.Operations" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.Parent">
      <summary>Ottiene l'oggetto <see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" /> associato.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" /> associato.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.SerializeReply">
      <summary>Ottiene o imposta un valore che specifica se l'oggetto <see cref="P:System.ServiceModel.Dispatcher.DispatchOperation.Formatter" /> serializza i messaggi di risposta.</summary>
      <returns>true se la proprietà <see cref="P:System.ServiceModel.Dispatcher.DispatchOperation.Formatter" /> serializza i valori restituiti in un messaggio di risposta. In caso contrario, false. </returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.DispatchRuntime">
      <summary>Espone proprietà che possono essere utilizzate per modificare il comportamento predefinito del servizio oltre che per collegare oggetti personalizzati in grado di modificare la modalità di trasformazione in oggetti e di invio alle operazioni dei messaggi in arrivo.La classe non può essere ereditata.</summary>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.EndpointDispatcher">
      <summary>Rappresenta l'oggetto runtime che espone le proprietà che consentono di inserire estensioni o modifiche della fase di esecuzione per i messaggi delle applicazioni di servizio.</summary>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IClientMessageFormatter">
      <summary>Definisce i metodi utilizzati per controllare la conversione dei messaggi in oggetti e degli oggetti in messaggi per le applicazioni client.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IClientMessageFormatter.DeserializeReply(System.ServiceModel.Channels.Message,System.Object[])">
      <summary>Converte un messaggio in un valore restituito e in parametri out che vengono restituiti all'operazione di chiamata.</summary>
      <returns>Il valore restituito dell'operazione.</returns>
      <param name="message">Messaggio in entrata.</param>
      <param name="parameters">Qualsiasi valore out.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IClientMessageFormatter.SerializeRequest(System.ServiceModel.Channels.MessageVersion,System.Object[])">
      <summary>Converte una matrice <see cref="T:System.Object" /> in un elemento <see cref="T:System.ServiceModel.Channels.Message" /> in uscita. </summary>
      <returns>Il messaggio SOAP inviato all'operazione del servizio.</returns>
      <param name="messageVersion">La versione del messaggio SOAP da utilizzare.</param>
      <param name="parameters">I parametri passati all'operazione client WCF.</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IClientMessageInspector">
      <summary>Definisce un oggetto di controllo messaggi che può essere aggiunto alla raccolta <see cref="P:System.ServiceModel.Dispatcher.ClientRuntime.MessageInspectors" /> per visualizzare o modificare i messaggi.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IClientMessageInspector.AfterReceiveReply(System.ServiceModel.Channels.Message@,System.Object)">
      <summary>Consente di controllare o modificare un messaggio dopo che è stato ricevuto un messaggio di risposta, ma prima che venga restituito all'applicazione client.</summary>
      <param name="reply">Il messaggio da trasformare in tipi e restituito all'applicazione client.</param>
      <param name="correlationState">Dati relativi allo stato di correlazione.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IClientMessageInspector.BeforeSendRequest(System.ServiceModel.Channels.Message@,System.ServiceModel.IClientChannel)">
      <summary>Consente di controllare o modificare un messaggio prima che venga inviato un messaggio di richiesta a un servizio.</summary>
      <returns>L'oggetto restituito come argomento <paramref name="correlationState " /> del metodo <see cref="M:System.ServiceModel.Dispatcher.IClientMessageInspector.AfterReceiveReply(System.ServiceModel.Channels.Message@,System.Object)" />.Risulta uguale a null se non vengono utilizzati stati di correlazione.La procedura consigliata è di trasformarlo in una struttura <see cref="T:System.Guid" /> per garantire che non ci siano due oggetti <paramref name="correlationState" /> uguali.</returns>
      <param name="request">Il messaggio da inviare al servizio.</param>
      <param name="channel">Il canale dell'oggetto client WCF.</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IClientOperationSelector">
      <summary>Definisce il contratto per un selettore dell'operazione.</summary>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.IClientOperationSelector.AreParametersRequiredForSelection">
      <summary>Ottiene un valore che indica se i parametri sono necessari per determinare la selezione.</summary>
      <returns>true se i parametri sono necessari. In caso contrario, false.</returns>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IClientOperationSelector.SelectOperation(System.Reflection.MethodBase,System.Object[])">
      <summary>Restituisce l'operazione selezionata.</summary>
      <returns>L'operazione selezionata dal selettore dell'operazione personalizzato.</returns>
      <param name="method">Metodo richiamato.</param>
      <param name="parameters">Parametri passati al metodo.</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IParameterInspector">
      <summary>Definisce il contratto implementato dai controlli del parametro personalizzati che consente di controllare o modificare le informazioni prima e dopo le chiamate sia sul client che sul servizio.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IParameterInspector.AfterCall(System.String,System.Object[],System.Object,System.Object)">
      <summary>Metodo chiamato dopo che le chiamate del client vengono restituite e prima che le risposte del servizio vengano inviate.</summary>
      <param name="operationName">Il nome dell'operazione richiamata.</param>
      <param name="outputs">Gli oggetti di output.</param>
      <param name="returnValue">Il valore restituito dell'operazione.</param>
      <param name="correlationState">Lo stato di correlazione restituito dal metodo <see cref="M:System.ServiceModel.Dispatcher.IParameterInspector.BeforeCall(System.String,System.Object[])" /> o null. </param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IParameterInspector.BeforeCall(System.String,System.Object[])">
      <summary>Metodo chiamato prima che vengano inviate le chiamate del client e dopo che vengono restituite le risposte del servizio.</summary>
      <returns>Stato di correlazione restituito come parametro <paramref name="correlationState" /> in <see cref="M:System.ServiceModel.Dispatcher.IParameterInspector.AfterCall(System.String,System.Object[],System.Object,System.Object)" />.Restituire null se non si intende utilizzare lo stato di correlazione.</returns>
      <param name="operationName">Nome dell'operazione.</param>
      <param name="inputs">Gli oggetti passati al metodo dal client.</param>
    </member>
    <member name="T:System.ServiceModel.Security.HttpDigestClientCredential">
      <summary>Elemento utilizzato per l'autenticazione del digest di client HTTP.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.HttpDigestClientCredential.ClientCredential">
      <summary>Ottiene o imposta la credenziale di rete da utilizzare per l'autenticazione basata sul digest.</summary>
      <returns>Elemento <see cref="T:System.Net.NetworkCredential" /> da utilizzare per l'autenticazione basata sul digest.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.MessageSecurityException">
      <summary>Rappresenta un'eccezione che si verifica quando ci sono problemi con la sicurezza applicata a un messaggio. </summary>
    </member>
    <member name="M:System.ServiceModel.Security.MessageSecurityException.#ctor(System.String)">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ServiceModel.Security.MessageSecurityException" /> con una stringa di errore.</summary>
      <param name="message">Messaggio di errore.</param>
    </member>
    <member name="M:System.ServiceModel.Security.MessageSecurityException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Security.MessageSecurityException" /> con una stringa di errore e un riferimento all'eccezione interna che è la causa dell'eccezione.</summary>
      <param name="message">Messaggio di errore.</param>
      <param name="innerException">Riferimento all'eccezione interna.</param>
    </member>
    <member name="T:System.ServiceModel.Security.SecurityAccessDeniedException">
      <summary>Rappresenta l'eccezione di sicurezza generata quando una richiesta di autorizzazione di sicurezza non riesce.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityAccessDeniedException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Security.SecurityAccessDeniedException" /> utilizzando il messaggio specificato. </summary>
      <param name="message">Descrizione della condizione di errore.</param>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityAccessDeniedException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Security.SecurityAccessDeniedException" /> utilizzando il messaggio e l'eccezione interna specificati. </summary>
      <param name="message">Descrizione della condizione di errore.</param>
      <param name="innerException">Eccezione interna da utilizzare.</param>
    </member>
    <member name="T:System.ServiceModel.Security.UserNamePasswordClientCredential">
      <summary>Rappresenta una credenziale del client in base al nome utente e alla password.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.UserNamePasswordClientCredential.Password">
      <summary>Ottiene o imposta la password.</summary>
      <returns>Password.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.UserNamePasswordClientCredential.UserName">
      <summary>Ottiene o imposta il nome dell'utente.</summary>
      <returns>Nome utente</returns>
    </member>
    <member name="T:System.ServiceModel.Security.WindowsClientCredential">
      <summary>Consente di specificare proprietà correlate alle credenziali di Windows da utilizzare per rappresentare il client.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.WindowsClientCredential.AllowedImpersonationLevel">
      <summary>Ottiene o imposta il livello di rappresentazione consentito. </summary>
      <returns>Uno dei valori di <see cref="T:System.Security.Principal.TokenImpersonationLevel" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.WindowsClientCredential.ClientCredential">
      <summary>Ottiene o imposta le credenziali client di Windows.</summary>
      <returns>Oggetto <see cref="T:System.Net.NetworkCredential" /> relativo al client.</returns>
    </member>
  </members>
</doc>
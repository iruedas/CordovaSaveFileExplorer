<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.ServiceModel.Primitives</name>
  </assembly>
  <members>
    <member name="T:System.ServiceModel.ActionNotSupportedException">
      <summary>叫用作業相關的動作與伺服器中的任何作業動作不相符時，此例外狀況通常就會擲回用戶端。</summary>
    </member>
    <member name="M:System.ServiceModel.ActionNotSupportedException.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.ActionNotSupportedException" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ServiceModel.ActionNotSupportedException.#ctor(System.String)">
      <summary>使用指定的錯誤訊息，初始化 <see cref="T:System.ServiceModel.ActionNotSupportedException" /> 類別的新執行個體。</summary>
      <param name="message">解釋例外狀況原因的錯誤訊息。</param>
    </member>
    <member name="M:System.ServiceModel.ActionNotSupportedException.#ctor(System.String,System.Exception)">
      <summary>使用指定的錯誤訊息和造成此例外狀況原因的內部例外參考，初始化 <see cref="T:System.ServiceModel.ActionNotSupportedException" /> 類別的新執行個體。</summary>
      <param name="message">解釋例外狀況原因的錯誤訊息。</param>
      <param name="innerException">導致擲回目前例外狀況的 <see cref="T:System.Exception" />。</param>
    </member>
    <member name="T:System.ServiceModel.ChannelFactory">
      <summary>建立和管理由用戶端用於傳送訊息至服務端點的通道。</summary>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.ChannelFactory" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)">
      <summary>使用指定組態檔所提供的行為以及通道處理站之服務端點中的行為，初始化通道處理站。</summary>
      <param name="configurationName">組態檔的名稱。</param>
      <exception cref="T:System.InvalidOperationException">通道處理站的服務端點為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.CreateDescription">
      <summary>在衍生類別中實作時，便會建立與該通道處理站相關聯之服務端點的描述。</summary>
      <returns>與通道處理站相關聯的 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />。</returns>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.CreateFactory">
      <summary>建置處理站之目前端點的通道處理站。</summary>
      <returns>目前處理站之端點的 <see cref="T:System.ServiceModel.Channels.IChannelFactory" />。</returns>
      <exception cref="T:System.InvalidOperationException">處理站通道所連接的服務端點是 null，或是端點的繫結是 null 或遺失具有指定組態名稱的項目。</exception>
    </member>
    <member name="P:System.ServiceModel.ChannelFactory.Credentials">
      <summary>取得認證，用戶端會在處理站產生的通道上使用該認證與服務端點通訊。</summary>
      <returns>如果用戶端認證已針對處理站完成設定，或者如果端點是非 null 而且通訊狀態為已建立或開啟中，則為用戶端使用的 <see cref="T:System.ServiceModel.Description.ClientCredentials" />，否則為 null。</returns>
    </member>
    <member name="P:System.ServiceModel.ChannelFactory.DefaultCloseTimeout">
      <summary>取得針對要完成之關閉作業所提供的預設時間間隔。</summary>
      <returns>預設 <see cref="T:System.Timespan" />，指定必須在逾時前多久完成關閉作業。</returns>
    </member>
    <member name="P:System.ServiceModel.ChannelFactory.DefaultOpenTimeout">
      <summary>取得針對要完成之開啟作業所提供的預設時間間隔。</summary>
      <returns>預設 <see cref="T:System.Timespan" />，指定必須在逾時前多久完成開啟作業。</returns>
    </member>
    <member name="P:System.ServiceModel.ChannelFactory.Endpoint">
      <summary>取得由處理站產生的通道所要連接的服務端點。</summary>
      <returns>處理站產生的通道所連接的 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />。</returns>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.EnsureOpened">
      <summary>如果通道處理站尚未開啟，則開啟目前通道處理站。</summary>
      <exception cref="T:System.ObjectDisposedException">目前處理站正在關閉或已關閉，因此無法開啟。</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.GetProperty``1">
      <summary>從通道堆疊的適當層次傳回要求的型別物件 (如果存在的話)，如果不存在則為 null。</summary>
      <returns>要求的型別物件 <paramref name="T" /> (如果存在的話)，如果不存在則為 null。</returns>
      <typeparam name="T">此方法所查詢的型別物件。</typeparam>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>使用指定的繫結和位址，初始化通道處理站的服務端點。</summary>
      <param name="binding">用於初始化通道處理站的 <see cref="T:System.ServiceModel.Channels.Binding" />。</param>
      <param name="address">用於初始化通道處理站的 <see cref="T:System.ServiceModel.EndpointAddress" />。</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>使用指定的端點，初始化通道處理站的服務端點。</summary>
      <param name="endpoint">用於初始化通道處理站的 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="endpoint" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.String,System.ServiceModel.EndpointAddress)">
      <summary>使用指定的位址和組態，初始化通道處理站的服務端點。</summary>
      <param name="configurationName">用於初始化通道處理站的組態檔名稱。</param>
      <param name="address">用於初始化通道處理站的 <see cref="T:System.ServiceModel.EndpointAddress" />。</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnAbort">
      <summary>終止目前通道處理站的內部通道處理站。</summary>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>開啟在目前通道處理站 (具有與其相關聯的狀態物件) 之內部通道處理站上的非同步關閉作業。</summary>
      <returns>
        <see cref="T:System.IAsyncResult" />，這個項目會參考非同步作業。</returns>
      <param name="timeout">
        <see cref="T:System.Timespan" />，指定必須在逾時前多久完成作業。</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 委派，這個委派會接收非同步作業完成的通知。</param>
      <param name="state">應用程式所指定的物件，其中包含與非同步作業相關聯的狀態資訊。</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>開啟在目前通道處理站 (具有與其相關聯的狀態物件) 之內部通道處理站上的非同步開啟作業。</summary>
      <returns>
        <see cref="T:System.IAsyncResult" />，這個項目會參考非同步作業。</returns>
      <param name="timeout">
        <see cref="T:System.Timespan" />，指定必須在逾時前多久完成作業。</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 委派，這個委派會接收非同步作業完成的通知。</param>
      <param name="state">應用程式所指定的物件，其中包含與非同步作業相關聯的狀態資訊。</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnClose(System.TimeSpan)">
      <summary>搭配完成作業的指定逾時，在內部通道處理站上呼叫關閉。</summary>
      <param name="timeout">
        <see cref="T:System.Timespan" />，指定必須在逾時前多久完成作業。</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnEndClose(System.IAsyncResult)">
      <summary>完成在目前通道處理站的內部通道處理站上的非同步關閉作業。</summary>
      <param name="result">由呼叫 <see cref="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" /> 方法所傳回的 <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnEndOpen(System.IAsyncResult)">
      <summary>完成在目前通道處理站的內部通道處理站上的非同步開啟作業。</summary>
      <param name="result">由呼叫 <see cref="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" /> 方法所傳回的 <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnOpen(System.TimeSpan)">
      <summary>搭配完成作業的指定逾時，在目前通道處理站的內部通道處理站上呼叫開啟。</summary>
      <param name="timeout">指定必須在逾時前完成開啟作業之寬限時間的預設 <see cref="T:System.Timespan" />。</param>
      <exception cref="T:System.InvalidOperationException">目前通道的內部通道為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnOpened">
      <summary>初始化通道處理站之 <see cref="T:System.ServiceModel.Description.ClientCredentials" /> 物件的唯讀複本。</summary>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnOpening">
      <summary>建置目前通道的內部通道處理站。</summary>
      <exception cref="T:System.InvalidOperationException">通道處理站的內部通道處理站為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.System#IDisposable#Dispose">
      <summary>關閉目前的通道處理站。</summary>
    </member>
    <member name="T:System.ServiceModel.ChannelFactory`1">
      <summary>此處理站可建立不同型別的通道，用戶端使用這些通道將訊息傳送給各種已設定的服務端點。</summary>
      <typeparam name="TChannel">由通道處理站產生的通道型別。這個型別必須是 <see cref="T:System.ServiceModel.Channels.IOutputChannel" /> 或 <see cref="T:System.ServiceModel.Channels.IRequestChannel" />。</typeparam>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>使用指定的繫結與端點位址，來初始化 <see cref="T:System.ServiceModel.ChannelFactory`1" /> 類別的新執行個體。</summary>
      <param name="binding">用於設定端點的 <see cref="T:System.ServiceModel.Channels.Binding" />。</param>
      <param name="remoteAddress">提供服務位置的 <see cref="T:System.ServiceModel.EndpointAddress" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binding" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.#ctor(System.String)">
      <summary>使用指定的端點組態名稱，初始化 <see cref="T:System.ServiceModel.ChannelFactory`1" /> 類別的新執行個體。</summary>
      <param name="endpointConfigurationName">用於端點的組態名稱。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="endpointConfigurationName" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.#ctor(System.String,System.ServiceModel.EndpointAddress)">
      <summary>以指定的端點組態名稱與遠端位址，來初始化 <see cref="T:System.ServiceModel.ChannelFactory`1" /> 類別的新執行個體。</summary>
      <param name="endpointConfigurationName">用於端點的組態名稱。</param>
      <param name="remoteAddress">提供服務位置的 <see cref="T:System.ServiceModel.EndpointAddress" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="endpointConfigurationName" /> 或 <paramref name="remoteAddress" /> 是 null。</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.#ctor(System.Type)">
      <summary>初始化 <see cref="T:System.ServiceModel.ChannelFactory`1" /> 類別的新執行個體。</summary>
      <param name="channelType">由處理站所產生的通道之 <see cref="T:System.Type" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="channelType" /> 為 null。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="channelType" /> 是類別或值型別，不是介面。</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.CreateChannel">
      <summary>建立指向指定之端點位址的指定型別通道。</summary>
      <returns>由處理站所建立之 <see cref="T:System.ServiceModel.Channels.IChannel" /> 型別的 <paramref name="TChannel" />。</returns>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)">
      <summary>建立用來傳送訊息至指定端點位址的服務的通道。</summary>
      <returns>由處理站所建立之 <see cref="T:System.ServiceModel.Channels.IChannel" /> 型別的 <paramref name="TChannel" />。</returns>
      <param name="address">提供服務位置的 <see cref="T:System.ServiceModel.EndpointAddress" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>建立一個通道，這個通道可用來透過指定傳輸位址將訊息傳送至指定端點位址的服務。</summary>
      <returns>由處理站所建立之 <see cref="T:System.ServiceModel.Channels.IChannel" /> 型別的 <paramref name="TChannel" />。</returns>
      <param name="address">提供服務位置的 <see cref="T:System.ServiceModel.EndpointAddress" />。</param>
      <param name="via">包含通道傳送訊息之目標傳輸位址的 <see cref="T:System.Uri" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> 為 null。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.ServiceModel.ChannelFactory" /> 有其不支援的雙工操作。</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.CreateDescription">
      <summary>建立服務端點的說明。</summary>
      <returns>服務的 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />。</returns>
      <exception cref="T:System.InvalidOperationException">此回呼合約為 null，但服務端點需要非 null 的回呼合約。</exception>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1">
      <summary>提供用來建立可呼叫服務之 Windows Communication Foundation (WCF) 用戶端物件的基底實作。</summary>
      <typeparam name="TChannel">用來連接服務的通道。</typeparam>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor">
      <summary>使用應用程式組態檔中的預設目標端點，初始化 <see cref="T:System.ServiceModel.ClientBase`1" /> 類別的新執行個體。</summary>
      <exception cref="T:System.InvalidOperationException">組態檔中沒有預設端點資訊、檔案中的端點不只一個，或者沒有組態檔。</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>使用指定的繫結與目標位址，初始化 <see cref="T:System.ServiceModel.ClientBase`1" /> 類別的新執行個體。</summary>
      <param name="binding">用來呼叫服務的繫結。</param>
      <param name="remoteAddress">服務端點的位址。</param>
      <exception cref="T:System.ArgumentNullException">繫結為 null。</exception>
      <exception cref="T:System.ArgumentNullException">遠端位址為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.String)">
      <summary>使用由 <paramref name="endpointConfigurationName" /> 在應用程式組態檔中指定的組態資訊，初始化 <see cref="T:System.ServiceModel.ClientBase`1" /> 類別的新執行個體。</summary>
      <param name="endpointConfigurationName">應用程式組態檔中端點的名稱。</param>
      <exception cref="T:System.ArgumentNullException">指定的端點資訊為 null。</exception>
      <exception cref="T:System.InvalidOperationException">找不到端點，或端點合約無效。</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.String,System.ServiceModel.EndpointAddress)">
      <summary>使用指定的目標位址與端點資訊，初始化 <see cref="T:System.ServiceModel.ClientBase`1" /> 類別的新執行個體。</summary>
      <param name="endpointConfigurationName">應用程式組態檔中端點的名稱。</param>
      <param name="remoteAddress">服務的位址。</param>
      <exception cref="T:System.ArgumentNullException">端點為 null。</exception>
      <exception cref="T:System.ArgumentNullException">遠端位址為 null。</exception>
      <exception cref="T:System.InvalidOperationException">找不到端點，或端點合約無效。</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.String,System.String)">
      <summary>初始化 <see cref="T:System.ServiceModel.ClientBase`1" /> 類別的新執行個體。</summary>
      <param name="endpointConfigurationName">應用程式組態檔中端點的名稱。</param>
      <param name="remoteAddress">服務的位址。</param>
      <exception cref="T:System.ArgumentNullException">端點為 null。</exception>
      <exception cref="T:System.ArgumentNullException">遠端位址為 null。</exception>
      <exception cref="T:System.InvalidOperationException">找不到端點，或端點合約無效。</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.Abort">
      <summary>導致 <see cref="T:System.ServiceModel.ClientBase`1" /> 物件從目前的狀態立即轉換為已關閉狀態。</summary>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.Channel">
      <summary>取得用來傳送訊息至多種不同設定服務端點的內部通道。</summary>
      <returns>指定型別的通道。</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelFactory">
      <summary>取得基礎 <see cref="T:System.ServiceModel.ChannelFactory`1" /> 物件。</summary>
      <returns>
        <see cref="T:System.ServiceModel.ChannelFactory`1" /> 物件。</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ClientCredentials">
      <summary>取得用來呼叫作業的用戶端認證。</summary>
      <returns>傳回表示用戶端提出之身分識別證明的 <see cref="T:System.ServiceModel.Description.ClientCredentials" />。</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.CreateChannel">
      <summary>傳回服務的新通道。</summary>
      <returns>型別為服務合約的通道。</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.Endpoint">
      <summary>取得 WCF用戶端可連接之服務的目標端點。</summary>
      <returns>目標端點。</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.GetDefaultValueForInitialization``1">
      <summary>以 C# 複製預設關鍵字的行為。</summary>
      <returns>若 T 為參考型別時傳回 null，若 T 為數值型別時則傳回零。</returns>
      <typeparam name="T">由關鍵字識別為參考或數值的型別。</typeparam>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.InnerChannel">
      <summary>取得基礎 <see cref="T:System.ServiceModel.IClientChannel" /> 實作。</summary>
      <returns>WCF 用戶端物件的用戶端通道。</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase{`0}.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase{`0}.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)">
      <summary>提供實作事件架構非同步模式的支援。如需詳細資訊這個模式的詳細資訊，請參閱事件架構非同步模式概觀。</summary>
      <param name="beginOperationDelegate">用來呼叫非同步作業的委派。</param>
      <param name="inValues">非同步呼叫的輸入值。</param>
      <param name="endOperationDelegate">完成後用來結束非同步呼叫的委派。</param>
      <param name="operationCompletedCallback">完成非同步方法之後叫用的回呼 (由用戶端供應)。回呼會傳遞至 <see cref="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate" />。</param>
      <param name="userState">要與非同步呼叫產生關聯的 <paramref name="userState" /> 物件。</param>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.State">
      <summary>取得 <see cref="T:System.ServiceModel.ClientBase`1" /> 物件的目前狀態。</summary>
      <returns>物件的 <see cref="T:System.ServiceModel.CommunicationState" /> 值。</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)">
      <summary>開始非同步作業以關閉 <see cref="T:System.ServiceModel.ClientBase`1" />。</summary>
      <returns>參考非同步關閉作業的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="callback">完成時接收回呼的方法。</param>
      <param name="state">狀態資料。</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>開始非同步作業以關閉具有指定逾時的 <see cref="T:System.ServiceModel.ClientBase`1" />。</summary>
      <returns>參考非同步開始關閉作業的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="timeout">必須完成呼叫的期間。</param>
      <param name="callback">作業完成時叫用的回呼物件。</param>
      <param name="state">狀態資料。</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)">
      <summary>開始非同步作業以開啟 <see cref="T:System.ServiceModel.ClientBase`1" /> 物件。</summary>
      <returns>參考非同步開啟作業的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="callback">完成時接收回呼的方法。</param>
      <param name="state">狀態資料。</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>開始非同步作業以在指定的時間間隔內開啟 <see cref="T:System.ServiceModel.ClientBase`1" /> 物件。</summary>
      <returns>參考非同步開啟作業的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="timeout">必須完成呼叫的期間。</param>
      <param name="callback">完成時接收回呼的方法。</param>
      <param name="state">狀態資料。</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Close"></member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)">
      <summary>導致 <see cref="T:System.ServiceModel.ClientBase`1" /> 物件從目前的狀態轉換為已關閉狀態。</summary>
      <param name="timeout">必須完成呼叫的期間。</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Closed">
      <summary>當 <see cref="T:System.ServiceModel.ClientBase`1" /> 物件從目前狀態轉換為已關閉狀態時叫用的事件處理常式。</summary>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Closing">
      <summary>當 <see cref="T:System.ServiceModel.ClientBase`1" /> 物件從目前狀態轉換為已關閉狀態時叫用的事件處理常式。</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)">
      <summary>完成非同步作業以關閉 <see cref="T:System.ServiceModel.ClientBase`1" /> 物件。</summary>
      <param name="result">用來完成非同步關閉作業的 <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)">
      <summary>完成非同步作業以開啟 <see cref="T:System.ServiceModel.ClientBase`1" /> 物件。</summary>
      <param name="result">用來完成非同步結束開啟作業的 <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Faulted">
      <summary>當針對 <see cref="T:System.ServiceModel.ClientBase`1" /> 物件執行作業發生錯誤時叫用的事件處理常式。</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Open"></member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)">
      <summary>在指定時間間隔內，導致 <see cref="T:System.ServiceModel.ClientBase`1" /> 物件從已建立狀態轉換為已開啟狀態。</summary>
      <param name="timeout">必須完成呼叫的期間。</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Opened">
      <summary>當 <see cref="T:System.ServiceModel.ClientBase`1" /> 物件從已建立狀態轉換為已開啟狀態時叫用的事件處理常式。</summary>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Opening">
      <summary>當 <see cref="T:System.ServiceModel.ClientBase`1" /> 物件從已建立狀態轉換為已開啟狀態時叫用的事件處理常式。</summary>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate">
      <summary>
        <see cref="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" /> 用來呼叫用戶端非同步作業的委派。</summary>
      <param name="inValues">非同步呼叫的輸入值。</param>
      <param name="asyncCallback">當對應的非同步作業完成時，要呼叫之方法的參考。</param>
      <param name="state">讓用戶端辨別不同非同步呼叫的 <see cref="T:System.Object" />，可在事件完成回呼的引數參數中提供用戶端使用。</param>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1.ChannelBase`1">
      <summary>表示泛型 ChannelBase 類別。</summary>
      <typeparam name="T">泛型類別。</typeparam>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.#ctor(System.ServiceModel.ClientBase{`1})">
      <summary>從現有的類別執行個體初始化 <see cref="T:System.ServiceModel.ClientBase`1.ChannelBase`1" /> 類別的新執行個體。</summary>
      <param name="client">用來初始化類別之新執行個體的物件。</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
      <summary>依據名稱啟動指定之方法的非同步呼叫。</summary>
      <returns>
        <see cref="T:System.IAsyncResult" />，會參考叫用的非同步方法。</returns>
      <param name="methodName">要非同步呼叫之方法的名稱。</param>
      <param name="args">所叫用方法的引數陣列。</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 委派。</param>
      <param name="state">狀態物件。</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.EndInvoke(System.String,System.Object[],System.IAsyncResult)">
      <summary>依據指定方法的名稱完成非同步叫用。</summary>
      <returns>叫用的方法的 <see cref="T:System.Object" /> 輸出。</returns>
      <param name="methodName">非同步呼叫的方法的名稱。</param>
      <param name="args">所叫用方法的引數陣列。</param>
      <param name="result">由呼叫傳回的結果。</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#IDisposable#Dispose">
      <summary>執行釋放 (Free)、釋放 (Release) 或重設與通道相關聯之 Unmanaged 資源的應用程式定義工作。</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IChannel#GetProperty``1">
      <summary>如果在通道堆疊的適當層次中有的話，傳回要求的型別物件。</summary>
      <returns>如果要求的型別物件 T 存在，則為此物件，如果不存在，則為 null。</returns>
      <typeparam name="TProperty">此方法所查詢的型別物件。</typeparam>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>開始非同步作業，將訊息傳送到輸出通道的目的端。</summary>
      <returns>參考非同步訊息傳輸的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="message">正在輸出通道上傳送的訊息。</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 委派。</param>
      <param name="state">應用程式指定的物件，其中包含與非同步傳送作業有關的狀態資訊。</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>開始非同步作業，於指定的時間間隔內將訊息傳送給輸出通道的目的端。</summary>
      <returns>參考非同步傳送作業的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="message">正在輸出通道上傳送的訊息。</param>
      <param name="timeout">時間範圍，指定必須在逾時前多久完成傳送作業。</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 委派，可接收非同步作業傳送完成的通知。</param>
      <param name="state">應用程式指定的物件，其中包含與非同步傳送作業有關的狀態資訊。</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#EndSend(System.IAsyncResult)">
      <summary>完成非同步作業，將訊息傳送到輸出通道的目的端。</summary>
      <param name="result">由呼叫傳回的結果。</param>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#RemoteAddress">
      <summary>取得輸出通道上訊息傳送之目的服務的目的端。</summary>
      <returns>輸出通道傳送訊息之目的服務的 <see cref="T:System.ServiceModel.EndpointAddress" />。</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send(System.ServiceModel.Channels.Message)">
      <summary>將訊息傳送到輸出通道的目的端。</summary>
      <param name="message">正在輸出通道上傳送的訊息。</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <summary>於指定的時間間隔內在目前的輸出通道上傳送訊息。</summary>
      <param name="message">正在輸出通道上傳送的訊息。</param>
      <param name="timeout">時間範圍，指定必須在逾時前多久完成傳送作業。</param>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Via">
      <summary>取得包含輸出通道上訊息之目標傳輸位址的 URI。</summary>
      <returns>包含在輸出通道上傳送訊息之目標傳輸位址的 <see cref="T:System.Uri" />。</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>開始非同步作業，以便將要求訊息傳輸至要求-回覆訊息交換的回覆端。</summary>
      <returns>參考非同步訊息傳輸的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="message">要傳輸的要求訊息。</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 委派 (Delegate)，這個委派會在非同步傳輸要求訊息作業完成時，收到通知。</param>
      <param name="state">應用程式所指定的物件，其中包含與非同步傳輸要求訊息作業相關聯的狀態資訊。</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>開始非同步作業，以便在指定的時間間隔內，將要求訊息傳輸至要求-回覆訊息交換的回覆端。</summary>
      <returns>參考非同步訊息傳輸的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="message">要傳輸的要求訊息。</param>
      <param name="timeout">時間範圍，指定必須收到回應的時間間隔。</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 委派 (Delegate)，這個委派會在非同步傳輸要求訊息作業完成時，收到通知。</param>
      <param name="state">應用程式所指定的物件，其中包含與非同步傳輸要求訊息作業相關聯的狀態資訊。</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#EndRequest(System.IAsyncResult)">
      <summary>完成非同步作業，以便傳回傳輸之要求的訊息型回應。</summary>
      <returns>回應要求時所收到的訊息。</returns>
      <param name="result">運算的結果。</param>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#RemoteAddress">
      <summary>取得要求通道傳送訊息的目標遠端位址。</summary>
      <returns>要求通道傳送訊息的目標 <see cref="T:System.ServiceModel.EndpointAddress" />。</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request(System.ServiceModel.Channels.Message)">
      <summary>傳送訊息型要求，並傳回相互關聯的訊息型回應。</summary>
      <returns>回應要求時所收到的訊息。</returns>
      <param name="message">要傳輸的要求訊息。</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <summary>傳送訊息型要求，並在指定的時間間隔內傳回相互關聯的訊息型回應。</summary>
      <returns>回應要求時所收到的訊息。</returns>
      <param name="message">要傳輸的要求訊息。</param>
      <param name="timeout">時間範圍，指定必須收到回應的時間間隔。</param>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Via">
      <summary>取得傳送此要求的目標傳輸位址。</summary>
      <returns>包含訊息傳送之目標傳輸位址的 <see cref="T:System.Uri" />。</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#AllowInitializationUI">
      <summary>取得或設定值，這個值指出用戶端通道是否允許初始化 UI。</summary>
      <returns>如果用戶端通道允許初始化 UR，則為 True，否則為false。</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#BeginDisplayInitializationUI(System.AsyncCallback,System.Object)">
      <summary>要開始使用使用者介面來取得認證資訊的非同步呼叫。</summary>
      <returns>要在處理完成時用於回呼的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="callback">當這個方法完成時所呼叫的方法。</param>
      <param name="state">通道狀態的相關資訊。</param>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#DidInteractiveInitialization">
      <summary>取得值，指出是否已呼叫使用者介面，以取得認證資訊。</summary>
      <returns>如果已呼叫使用者介面以取得認證資訊，則為 True，否則為 false。</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#DisplayInitializationUI">
      <summary>指定使用者介面的呼叫以取得認證資訊。</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#EndDisplayInitializationUI(System.IAsyncResult)">
      <summary>當 BeginDisplayInitializationUI 的呼叫已完成時呼叫。</summary>
      <param name="result">運算的結果。</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#UnknownMessageReceived">
      <summary>當 ClientBase 物件接收到未知的訊息時，會叫用的事件處理常式。</summary>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#Via">
      <summary>取得包含在用戶端通道上傳送訊息之目標傳輸位址的 URI。</summary>
      <returns>URI，包含在通道上傳送訊息的目標傳輸位址。</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Abort">
      <summary>導致通訊物件立即從目前的狀態轉換為已關閉狀態。</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)">
      <summary>開始非同步作業以關閉通訊物件。</summary>
      <returns>參考非同步關閉作業的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 委派，這個委派會接收完成非同步關閉作業的通知。</param>
      <param name="state">應用程式所指定的物件，其中包含與非同步關閉作業關聯的狀態資訊。</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>開始非同步作業，關閉有已指定逾時的通訊物件。</summary>
      <returns>參考非同步關閉作業的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="timeout">時間範圍，指定必須在逾時前多久完成傳送作業。</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 委派，這個委派會接收完成非同步關閉作業的通知。</param>
      <param name="state">應用程式所指定的物件，其中包含與非同步關閉作業關聯的狀態資訊。</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)">
      <summary>開始非同步作業以開啟通訊物件。</summary>
      <returns>參考非同步開啟作業的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 委派，這個委派會接收非同步開啟作業完成的通知。</param>
      <param name="state">應用程式所指定的物件，其中包含與非同步開啟作業相關聯的狀態資訊。</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>開始非同步作業，開啟有已指定時間間隔的通訊物件。</summary>
      <returns>參考非同步開啟作業的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="timeout">時間範圍，指定必須在逾時前多久完成傳送作業。</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 委派，這個委派會接收非同步開啟作業完成的通知。</param>
      <param name="state">應用程式所指定的物件，其中包含與非同步開啟作業相關聯的狀態資訊。</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close">
      <summary>導致通訊物件從目前的狀態轉換為已關閉狀態。</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)">
      <summary>導致通訊物件從目前的狀態轉換為已關閉狀態。</summary>
      <param name="timeout">時間範圍，指定必須在逾時前多久完成傳送作業。</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Closed">
      <summary>當 ClientBase 物件從目前狀態轉換為已關閉狀態時叫用的事件處理常式。</summary>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Closing">
      <summary>當 ClientBase 物件從目前狀態轉換為已關閉狀態時叫用的事件處理常式。</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)">
      <summary>完成非同步作業以關閉通訊物件。</summary>
      <param name="result">在呼叫 BeginClose() 方法時所傳回的 <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)">
      <summary>完成非同步作業以開啟通訊物件。</summary>
      <param name="result">在呼叫 BeginOpen() 方法時所傳回的 <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Faulted">
      <summary>當針對 ClientBase 物件執行作業發生錯誤時叫用的事件處理常式。</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open">
      <summary>導致通訊物件從已建立狀態轉換為已開啟狀態。</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)">
      <summary>在指定時間間隔內，讓通訊物件從已建立狀態轉換為已開啟狀態。</summary>
      <param name="timeout">時間範圍，指定必須在逾時前多久完成傳送作業。</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Opened">
      <summary>當 ClientBase 物件從已建立狀態轉換為已開啟狀態時叫用的事件處理常式。</summary>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Opening">
      <summary>當 ClientBase 物件從已建立狀態轉換為已開啟狀態時叫用的事件處理常式。</summary>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#State">
      <summary>取得通訊導向物件的目前狀態。</summary>
      <returns>物件的 <see cref="T:System.ServiceModel.CommunicationState" /> 值。</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#AllowOutputBatching">
      <summary>取得或設定值，指出是否允許連出訊息的批次處理，否則為 false。</summary>
      <returns>如果允許批次進行傳出訊息則為 True，否則為 false。</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#InputSession">
      <summary>取得通道的輸入工作階段。</summary>
      <returns>通道的輸入工作階段。</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#LocalAddress">
      <summary>取得通道的本機端點。</summary>
      <returns>通道的本機端點。</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#OperationTimeout">
      <summary>取得或設定作業必須完成的期間，否則會擲回例外狀況。</summary>
      <returns>時間範圍，指定作業必須完成的期間。</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#OutputSession">
      <summary>取得與通道相關聯的輸出工作階段 (如果有的話)。</summary>
      <returns>如果輸入工作階段存在，則為 <see cref="T:System.ServiceModel.Channels.IOutputSession" /> 實作，否則為 null。</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#RemoteAddress">
      <summary>取得與通道相關聯的遠端位址。</summary>
      <returns>通道的遠端 <see cref="T:System.ServiceModel.EndpointAddress" />。</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#SessionId">
      <summary>取得目前工作階段的識別項 (如果有)。</summary>
      <returns>目前工作階段的識別項 (如果有)。</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IExtensibleObject{T}#Extensions">
      <summary>取得這個可擴充物件的擴充功能物件集合。</summary>
      <returns>擴充功能物件的 <see cref="T:System.ServiceModel.IExtensionCollection`1" />。</returns>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1.EndOperationDelegate">
      <summary>代表由叫用的委派<see cref="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" />順利完成時所做的呼叫<see cref="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" />至<see cref="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate" />。</summary>
      <param name="result">
        <see cref="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" /> 發出之呼叫的傳回結果。至 <see cref="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate" /> 的唯一值。</param>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1.InvokeAsyncCompletedEventArgs">
      <summary>儲存用戶端發出非同步呼叫的結果。</summary>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.InvokeAsyncCompletedEventArgs.Results">
      <summary>取得用戶端發出非同步呼叫的結果。</summary>
      <returns>包含用戶端發出非同步呼叫結果的 <see cref="T:System.Object" /> 陣列。</returns>
    </member>
    <member name="T:System.ServiceModel.CommunicationException">
      <summary>代表服務或用戶端應用程式的通訊錯誤。</summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationException.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.CommunicationException" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationException.#ctor(System.String)">
      <summary>使用指定的訊息，初始化 <see cref="T:System.ServiceModel.CommunicationException" /> 類別的新執行個體。</summary>
      <param name="message">錯誤條件的描述。</param>
    </member>
    <member name="M:System.ServiceModel.CommunicationException.#ctor(System.String,System.Exception)">
      <summary>使用指定的訊息和內部例外狀況，初始化 <see cref="T:System.ServiceModel.CommunicationException" /> 類別的新執行個體。</summary>
      <param name="message">錯誤條件的描述。</param>
      <param name="innerException">要使用的內部例外狀況。</param>
    </member>
    <member name="T:System.ServiceModel.CommunicationObjectAbortedException">
      <summary>呼叫已中止的 <see cref="T:System.ServiceModel.ICommunicationObject" /> 物件時，所擲回的例外狀況。</summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.CommunicationObjectAbortedException" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor(System.String)">
      <summary>使用指定的訊息來初始化 <see cref="T:System.ServiceModel.CommunicationObjectAbortedException" /> 類別的新執行個體。</summary>
      <param name="message">例外狀況所包含的訊息。</param>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor(System.String,System.Exception)">
      <summary>使用指定的訊息和內部例外狀況，初始化 <see cref="T:System.ServiceModel.CommunicationObjectAbortedException" /> 類別的新執行個體。</summary>
      <param name="message">例外狀況訊息。</param>
      <param name="innerException">內部例外狀況。</param>
    </member>
    <member name="T:System.ServiceModel.CommunicationObjectFaultedException">
      <summary>對發生錯誤的通訊物件進行呼叫時，所擲回的例外狀況 (Exception)。</summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor(System.String)">
      <summary>使用指定的訊息，初始化 <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" /> 類別的新執行個體。</summary>
      <param name="message">說明例外狀況的訊息。</param>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor(System.String,System.Exception)">
      <summary>使用指定的訊息和內部例外狀況，初始化 <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" /> 類別的新執行個體。</summary>
      <param name="message">例外狀況訊息。</param>
      <param name="innerException">內部例外狀況。</param>
    </member>
    <member name="T:System.ServiceModel.CommunicationState">
      <summary>定義 <see cref="T:System.ServiceModel.ICommunicationObject" /> 可處於其中的狀態。</summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Closed">
      <summary>指出該通訊物件已關閉，而且不再提供使用。</summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Closing">
      <summary>指出該通訊物件將轉換成 <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 狀態。</summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Created">
      <summary>指出物件已產生而且是可設定狀態，但是尚未開啟或還未準備好提供使用。</summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Faulted">
      <summary>指出該通訊物件遇到其無法復原並導致其不再提供使用的錯誤。</summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Opened">
      <summary>指出該通訊物件現在已開啟，而且已準備好提供使用。</summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Opening">
      <summary>指出該通訊物件將從 <see cref="F:System.ServiceModel.CommunicationState.Created" /> 狀態轉換為 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 狀態。</summary>
    </member>
    <member name="T:System.ServiceModel.DataContractFormatAttribute">
      <summary>指示 Windows Communication Foundation (WCF) 基礎結構使用 <see cref="T:System.Runtime.Serialization.DataContractSerializer" />。</summary>
    </member>
    <member name="M:System.ServiceModel.DataContractFormatAttribute.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.DataContractFormatAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.ServiceModel.DataContractFormatAttribute.Style">
      <summary>取得或設定序列化資料的 SOAP 樣式。</summary>
      <returns>其中一個 <see cref="T:System.ServiceModel.OperationFormatStyle" /> 值。預設為 <see cref="F:System.ServiceModel.OperationFormatStyle.Document" />。</returns>
    </member>
    <member name="T:System.ServiceModel.EndpointAddress">
      <summary>提供用戶端用來與服務端點通訊的唯一網路位址。</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.#ctor(System.String)">
      <summary>使用指定的 URI 字串，初始化 <see cref="T:System.ServiceModel.EndpointAddress" /> 類別的新執行個體。</summary>
      <param name="uri">識別端點的 URI。</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.#ctor(System.Uri,System.ServiceModel.Channels.AddressHeader[])">
      <summary>使用指定的 URI 和標頭，初始化 <see cref="T:System.ServiceModel.EndpointAddress" /> 類別的新執行個體。</summary>
      <param name="uri">識別端點位置的 <see cref="T:System.Uri" />。</param>
      <param name="addressHeaders">型別 <see cref="T:System.ServiceModel.Channels.AddressHeader" /> 的 <see cref="T:System.Array" />，其中包含用於與端點互動的位址資訊。</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.#ctor(System.Uri,System.ServiceModel.EndpointIdentity,System.ServiceModel.Channels.AddressHeader[])">
      <summary>使用指定的 URI、身分識別和標頭，初始化 <see cref="T:System.ServiceModel.EndpointAddress" /> 類別的新執行個體。</summary>
      <param name="uri">識別端點位置的 <see cref="T:System.Uri" />。</param>
      <param name="identity">端點的 <see cref="T:System.ServiceModel.EndpointIdentity" />。</param>
      <param name="addressHeaders">型別 <see cref="T:System.ServiceModel.Channels.AddressHeader" /> 的 <see cref="T:System.Array" />，其中包含用於與端點互動的位址資訊。</param>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.AnonymousUri">
      <summary>取得匿名 URI 的中性版本表示。</summary>
      <returns>
        <see cref="T:System.Uri" />，其值為 http://schemas.microsoft.com/2005/12/ServiceModel/Addressing/Anonymous。</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.ApplyTo(System.ServiceModel.Channels.Message)">
      <summary>將端點位址的 URI 和屬性指派給已指定訊息的標頭值。</summary>
      <param name="message">正在指派其標頭值的 <see cref="T:System.ServiceModel.Channels.Message" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.Equals(System.Object)">
      <summary>傳回值，這個值表示指定的物件是否等於目前的端點位址。</summary>
      <returns>如果指定的物件相等於目前位址，則為 true，否則為 false。</returns>
      <param name="obj">要與目前端點位址比較的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.GetHashCode">
      <summary>提供目前端點位址的唯一雜湊程式碼。</summary>
      <returns>目前端點位址的唯一雜湊程式碼。</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.Headers">
      <summary>取得產生器 (Builder) 可建立之端點位址標頭的集合。</summary>
      <returns>包含端點之位址資訊的 <see cref="T:System.ServiceModel.Channels.AddressHeaderCollection" />。</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.Identity">
      <summary>取得用於驗證之端點的身分識別。</summary>
      <returns>端點的 <see cref="T:System.ServiceModel.EndpointIdentity" />。</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.IsAnonymous">
      <summary>取得值，這個值表示端點是否為「匿名」(Anonymous)。</summary>
      <returns>如果端點為 <see cref="P:System.ServiceModel.EndpointAddress.AnonymousUri" />，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.IsNone">
      <summary>取得值，這個值表示端點的 URI 是否為 <see cref="P:System.ServiceModel.EndpointAddress.NoneUri" />。</summary>
      <returns>如果端點的 URI 為 <see cref="P:System.ServiceModel.EndpointAddress.NoneUri" />，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.NoneUri">
      <summary>取得不得對其傳送訊息之端點位址所使用的中性版本 URI。</summary>
      <returns>
        <see cref="T:System.Uri" />，其值為 http://schemas.microsoft.com/2005/12/ServiceModel/Addressing/None。</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.op_Equality(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress)">
      <summary>傳回值，這個值會指出指定的端點位址是否不相等。</summary>
      <returns>如果端點位址是相等的，則為 true，否則為 false。</returns>
      <param name="address1">正在比較的其中一個 <see cref="T:System.ServiceModel.EndpointAddress" /> 物件。</param>
      <param name="address2">正在比較的其中一個 <see cref="T:System.ServiceModel.EndpointAddress" /> 物件。</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.op_Inequality(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress)">
      <summary>傳回值，這個值會指出指定的端點位址是否不相等。</summary>
      <returns>如果端點位址不是相等的，則為 true，否則為 false。</returns>
      <param name="address1">正在比較的其中一個 <see cref="T:System.ServiceModel.EndpointAddress" /> 物件。</param>
      <param name="address2">正在比較的其中一個 <see cref="T:System.ServiceModel.EndpointAddress" /> 物件。</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.ReadFrom(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryReader)">
      <summary>從指定的 XML 字典讀取器讀取指定之位址版本的端點位址。</summary>
      <returns>從 XML 字典讀取器讀取的 <see cref="T:System.ServiceModel.EndpointAddress" />。</returns>
      <param name="addressingVersion">目前端點位址的 <see cref="T:System.ServiceModel.Channels.AddressingVersion" />。</param>
      <param name="reader">從其中取得端點位址的 <see cref="T:System.Xml.XmlDictionaryReader" />。</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.ToString">
      <summary>傳回包含在端點位址中之 URI 的標準字串表示。</summary>
      <returns>識別端點的 URI。</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.Uri">
      <summary>取得端點的 URI。</summary>
      <returns>端點的 <see cref="T:System.Uri" />。</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.WriteContentsTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryWriter)">
      <summary>將節點的所有子節點都儲存至指定的 XML 字典寫入器。</summary>
      <param name="addressingVersion">目前端點位址的 <see cref="T:System.ServiceModel.Channels.AddressingVersion" />。</param>
      <param name="writer">在其中儲存端點位址的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> 或 <paramref name="addressingVersion" /> 是 null。</exception>
    </member>
    <member name="T:System.ServiceModel.EndpointAddressBuilder">
      <summary>以特定屬性值製造新 (不可變動) 端點位址的處理站。</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressBuilder.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.EndpointAddressBuilder" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressBuilder.#ctor(System.ServiceModel.EndpointAddress)">
      <summary>從現有的端點位址來初始化 <see cref="T:System.ServiceModel.EndpointAddressBuilder" /> 類別的新執行個體。</summary>
      <param name="address">
        <see cref="T:System.ServiceModel.EndpointAddress" />，其屬性值用來初始化本執行個體的屬性值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> 為 null。</exception>
    </member>
    <member name="P:System.ServiceModel.EndpointAddressBuilder.Headers">
      <summary>取得產生器可以建立之端點的位址標頭清單。</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.AddressHeader" /> 型別的 <see cref="T:System.Collections.Generic.List`1" />，內含產生器可以建立的端點的位址標頭。</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddressBuilder.Identity">
      <summary>取得或設定產生器可以建立的端點的身分識別值。</summary>
      <returns>端點的 <see cref="T:System.ServiceModel.EndpointIdentity" />。</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressBuilder.ToEndpointAddress">
      <summary>建立一個以目前端點位址產生器的屬性值初始化的新端點位址。</summary>
      <returns>
        <see cref="T:System.ServiceModel.EndpointAddress" />，其屬性會以目前端點位址產生器的值進行初始化。</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddressBuilder.Uri">
      <summary>取得或設定產生器可以建立的端點的 URI。</summary>
      <returns>用來指定端點位址的 <see cref="T:System.Uri" />。</returns>
    </member>
    <member name="T:System.ServiceModel.EndpointIdentity">
      <summary>實作時會提供身分識別的抽象類別，這個身分識別可讓與端點交換訊息的用戶端驗證端點。</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointIdentity.#ctor">
      <summary>建立空的 <see cref="T:System.ServiceModel.EndpointIdentity" /> 執行個體。</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointIdentity.Equals(System.Object)">
      <summary>傳回值，這個值會判斷指定的物件是否與目前的身分識別物件相等，或是否擁有相同的安全性屬性。</summary>
      <returns>如果指定的物件 <paramref name="obj" /> 與目前的身分識別相等或包含相同安全性屬性，則為 true，否則為 false。</returns>
      <param name="obj">與目前身分識別比較是否相等的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.ServiceModel.EndpointIdentity.GetHashCode">
      <summary>針對身分識別目前的執行個體提供雜湊程式碼。</summary>
      <returns>目前身分識別的雜湊程式碼。</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointIdentity.ToString">
      <summary>傳回身分識別。</summary>
      <returns>"identity(string)" 形式的 <see cref="T:System.String" />，其中 string = <see cref="P:System.ServiceModel.EndpointIdentity.IdentityClaim" />。</returns>
    </member>
    <member name="T:System.ServiceModel.EndpointNotFoundException">
      <summary>當找不到或無法連線遠端端點時，所擲回的例外狀況。</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointNotFoundException.#ctor(System.String)">
      <summary>使用指定的錯誤訊息，初始化 <see cref="T:System.ServiceModel.EndpointNotFoundException" /> 類別的新執行個體。</summary>
      <param name="message">解釋例外狀況原因的錯誤訊息。</param>
    </member>
    <member name="M:System.ServiceModel.EndpointNotFoundException.#ctor(System.String,System.Exception)">
      <summary>使用指定的錯誤訊息以及造成目前例外狀況之內部例外狀況，初始化 <see cref="T:System.ServiceModel.EndpointNotFoundException" /> 類別的新執行個體。</summary>
      <param name="message">解釋例外狀況原因的錯誤訊息。</param>
      <param name="innerException">導致擲回目前例外狀況的 <see cref="T:System.Exception" />。</param>
    </member>
    <member name="T:System.ServiceModel.EnvelopeVersion">
      <summary>包含與訊息及其交換相關聯之 SOAP 版本的相關資訊。</summary>
    </member>
    <member name="M:System.ServiceModel.EnvelopeVersion.GetUltimateDestinationActorValues">
      <summary>取得包含 SOAP 角色之 URI 名稱的字串，此角色與最終目的端的目前訊息版本關聯。</summary>
      <returns>如果使用 SOAP1.1，則為空字串，如果使用 SOAP1.2，則為包含 http://www.w3.org/2003/05/soap-envelope/role/ultimateReceiver 的字串。</returns>
    </member>
    <member name="P:System.ServiceModel.EnvelopeVersion.NextDestinationActorValue">
      <summary>取得包含 SOAP 角色之 URI 名稱的字串，此角色與下個目的端的目前訊息版本關聯。</summary>
      <returns>如果使用 SOAP1.1，則為包含 http://schemas.xmlsoap.org/soap/actor/next 的字串，如果使用 SOAP1.2，則為包含 http://www.w3.org/2003/05/soap-envelope/role/next 的字串，而如果沒有訊息版本，則為空字串。</returns>
    </member>
    <member name="P:System.ServiceModel.EnvelopeVersion.None">
      <summary>取得不使用 SOAP 版本的封套版本。</summary>
      <returns>不使用 SOAP 格式的封套版本。</returns>
    </member>
    <member name="P:System.ServiceModel.EnvelopeVersion.Soap11">
      <summary>取得 SOAP 1.1 封套版本。</summary>
      <returns>SOAP1.1 <see cref="T:System.ServiceModel.EnvelopeVersion" /> 物件。</returns>
    </member>
    <member name="P:System.ServiceModel.EnvelopeVersion.Soap12">
      <summary>取得 SOAP1.2 封套版本。</summary>
      <returns>SOAP1.2 <see cref="T:System.ServiceModel.EnvelopeVersion" /> 物件。</returns>
    </member>
    <member name="M:System.ServiceModel.EnvelopeVersion.ToString">
      <summary>取得表示目前封套版本的字串。</summary>
      <returns>目前信封版本的字串表示。</returns>
    </member>
    <member name="T:System.ServiceModel.ExceptionDetail">
      <summary>表示錯誤詳細資訊。</summary>
    </member>
    <member name="M:System.ServiceModel.ExceptionDetail.#ctor(System.Exception)">
      <summary>從例外狀況 (Exception) 初始化 <see cref="T:System.ServiceModel.ExceptionDetail" /> 類別的新執行個體。</summary>
      <param name="exception">要序列化為 <see cref="T:System.ServiceModel.ExceptionDetail" /> 物件的例外狀況。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="exception" /> 參數為 null。</exception>
    </member>
    <member name="P:System.ServiceModel.ExceptionDetail.HelpLink">
      <summary>取得或設定說明連結，這個連結來自傳遞給建構函式 (Constructor) 的例外狀況。</summary>
      <returns>例外狀況的說明連結資訊。</returns>
    </member>
    <member name="P:System.ServiceModel.ExceptionDetail.InnerException">
      <summary>取得或設定表示內部例外狀況的 <see cref="T:System.ServiceModel.ExceptionDetail" /> 物件。</summary>
      <returns>內部例外狀況資訊。</returns>
    </member>
    <member name="P:System.ServiceModel.ExceptionDetail.Message">
      <summary>取得或設定訊息，這個訊息來自傳遞給建構函式的例外狀況。</summary>
      <returns>例外狀況訊息。</returns>
    </member>
    <member name="P:System.ServiceModel.ExceptionDetail.StackTrace">
      <summary>取得或設定堆疊追蹤資訊，這個資訊來自傳遞給建構函式的例外狀況。</summary>
      <returns>例外狀況的堆疊追蹤。</returns>
    </member>
    <member name="M:System.ServiceModel.ExceptionDetail.ToString">
      <summary>傳回傳遞給建構函式之例外狀況的例外狀況詳細資訊。</summary>
      <returns>例外狀況的訊息和堆疊追蹤。</returns>
    </member>
    <member name="P:System.ServiceModel.ExceptionDetail.Type">
      <summary>取得或設定傳遞給建構函式之例外狀況的型別字串。</summary>
      <returns>傳遞給建構函式之例外狀況的型別字串。</returns>
    </member>
    <member name="T:System.ServiceModel.FaultCode">
      <summary>代表 SOAP 錯誤碼。</summary>
    </member>
    <member name="M:System.ServiceModel.FaultCode.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.ServiceModel.FaultCode" /> 類別的新執行個體。</summary>
      <param name="name">錯誤碼的名稱。</param>
    </member>
    <member name="M:System.ServiceModel.FaultCode.#ctor(System.String,System.ServiceModel.FaultCode)">
      <summary>初始化 <see cref="T:System.ServiceModel.FaultCode" /> 類別的新執行個體。</summary>
      <param name="name">錯誤碼的名稱。</param>
      <param name="subCode">錯誤次要代碼。</param>
    </member>
    <member name="M:System.ServiceModel.FaultCode.#ctor(System.String,System.String)">
      <summary>使用指定的名稱和命名空間，來初始化 <see cref="T:System.ServiceModel.FaultCode" /> 類別的新執行個體。</summary>
      <param name="name">錯誤碼的本機名稱。</param>
      <param name="ns">錯誤碼的命名空間名稱。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 或 <paramref name="ns" /> 是 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="name" /> 為空字串。</exception>
    </member>
    <member name="M:System.ServiceModel.FaultCode.#ctor(System.String,System.String,System.ServiceModel.FaultCode)">
      <summary>使用指定的名稱、命名空間與錯誤子代碼，來初始化 <see cref="T:System.ServiceModel.FaultCode" /> 類別的新執行個體。</summary>
      <param name="name">錯誤碼的本機名稱。</param>
      <param name="ns">錯誤碼的命名空間名稱。</param>
      <param name="subCode">代表錯誤次要代碼的 <see cref="T:System.ServiceModel.FaultCode" /> 物件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 或 <paramref name="ns" /> 是 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="name" /> 為空字串。</exception>
    </member>
    <member name="M:System.ServiceModel.FaultCode.CreateSenderFaultCode(System.ServiceModel.FaultCode)">
      <summary>使用指定的次要代碼來建立寄件人錯誤碼。</summary>
      <returns>
        <see cref="T:System.ServiceModel.FaultCode" /> 物件，包含 <see cref="P:System.ServiceModel.FaultCode.SubCode" /> 屬性中建立的 SOAP 錯誤次要代碼。</returns>
      <param name="subCode">代表錯誤次要代碼的 <see cref="T:System.ServiceModel.FaultCode" /> 物件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="subCode" /> 為 null。</exception>
    </member>
    <member name="P:System.ServiceModel.FaultCode.IsPredefinedFault">
      <summary>取得值，這個值表示錯誤為 SOAP 1.1 或 SOAP 1.2 錯誤。</summary>
      <returns>如果錯誤為 SOAP 1.1 或 SOAP 1.2 錯誤，則為 true；否則為 false。</returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.IsReceiverFault">
      <summary>取得值，這個值表示錯誤為 SOAP 1.1 伺服器錯誤或 SOAP 1.2 接收者錯誤。</summary>
      <returns>如果錯誤為 SOAP 1.1 伺服器錯誤或 SOAP 1.2 接收者錯誤，則為 true；否則為 false。</returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.IsSenderFault">
      <summary>取得值，這個值表示錯誤為 SOAP 1.1 用戶端錯誤或 SOAP 1.2 寄件人錯誤。</summary>
      <returns>如果錯誤為 SOAP 1.1 用戶端錯誤或 SOAP 1.2 寄件人錯誤，則為 true；否則為 false。</returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.Name">
      <summary>取得錯誤碼的本機名稱。</summary>
      <returns>錯誤碼的本機名稱。</returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.Namespace">
      <summary>取得錯誤碼的命名空間。</summary>
      <returns>命名空間名稱的統一資源識別元 (URI)。</returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.SubCode">
      <summary>取得錯誤次要代碼。</summary>
      <returns>代表錯誤次要代碼的 <see cref="T:System.ServiceModel.FaultCode" /> 物件。</returns>
    </member>
    <member name="T:System.ServiceModel.FaultContractAttribute">
      <summary>指定一個或多個 SOAP 錯誤，當服務作業遇到處理錯誤時會傳回這些 SOAP 錯誤。</summary>
    </member>
    <member name="M:System.ServiceModel.FaultContractAttribute.#ctor(System.Type)">
      <summary>初始化 <see cref="T:System.ServiceModel.FaultContractAttribute" /> 類別的新執行個體。</summary>
      <param name="detailType">包含呼叫者錯誤資訊的可序列化型別。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="detailType" /> 引數為 null。</exception>
    </member>
    <member name="P:System.ServiceModel.FaultContractAttribute.Action">
      <summary>取得或設定 SOAP 錯誤訊息的動作，此訊息指定為作業合約的一部分。</summary>
      <returns>SOAP 錯誤訊息的動作值。</returns>
    </member>
    <member name="P:System.ServiceModel.FaultContractAttribute.DetailType">
      <summary>取得包含錯誤資訊的可序列化物件型別。</summary>
      <returns>表示可序列化錯誤類別的型別。</returns>
    </member>
    <member name="P:System.ServiceModel.FaultContractAttribute.Name">
      <summary>取得或設定 Web 服務描述語言 (WSDL) 中的錯誤訊息名稱。</summary>
      <returns>錯誤訊息 名稱。預設是用來做為錯誤詳細資料之型別的名稱。</returns>
    </member>
    <member name="P:System.ServiceModel.FaultContractAttribute.Namespace">
      <summary>取得或設定 SOAP 錯誤的命名空間。</summary>
      <returns>SOAP 錯誤的命名空間。</returns>
    </member>
    <member name="T:System.ServiceModel.FaultException">
      <summary>表示 SOAP 錯誤。</summary>
    </member>
    <member name="M:System.ServiceModel.FaultException.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.FaultException" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.Channels.MessageFault,System.String)">
      <summary>使用指定的訊息錯誤值與提供的動作字串，初始化 <see cref="T:System.ServiceModel.FaultException" /> 類別的執行個體。</summary>
      <param name="fault">包含要使用之預設 SOAP 錯誤值的訊息錯誤。</param>
      <param name="action">SOAP 錯誤的動作。</param>
    </member>
    <member name="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.FaultReason,System.ServiceModel.FaultCode,System.String)">
      <summary>使用指定的原因、錯誤碼與動作值，初始化 <see cref="T:System.ServiceModel.FaultException" /> 類別的新執行個體。</summary>
      <param name="reason">SOAP 錯誤的原因。</param>
      <param name="code">SOAP 錯誤的錯誤碼。</param>
      <param name="action">SOAP 錯誤的動作值。</param>
    </member>
    <member name="P:System.ServiceModel.FaultException.Action">
      <summary>取得錯誤訊息的 SOAP 動作值。</summary>
      <returns>錯誤訊息的 SOAP 動作值。</returns>
    </member>
    <member name="P:System.ServiceModel.FaultException.Code">
      <summary>取得 SOAP 錯誤的錯誤碼。</summary>
      <returns>SOAP 錯誤的錯誤碼。</returns>
    </member>
    <member name="M:System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.String,System.Type[])">
      <summary>從指定的訊息錯誤、動作與一個詳細型別陣列，傳回一個 <see cref="T:System.ServiceModel.Channels.FaultException" /> 物件。</summary>
      <returns>
        <see cref="T:System.ServiceModel.FaultException" /> 物件，您可擲回此物件，表示已收到一個 SOAP 錯誤訊息。</returns>
      <param name="messageFault">包含預設 SOAP 錯誤資訊的訊息錯誤。</param>
      <param name="action">錯誤動作值。</param>
      <param name="faultDetailTypes">包含錯誤細節的型別陣列。</param>
    </member>
    <member name="M:System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.Type[])">
      <summary>從指定的訊息錯誤與一個詳細型別陣列，傳回一個 <see cref="T:System.ServiceModel.Channels.FaultException" /> 物件。</summary>
      <returns>
        <see cref="T:System.ServiceModel.FaultException" /> 物件，您可擲回此物件，表示已收到一個 SOAP 錯誤訊息。</returns>
      <param name="messageFault">包含預設 SOAP 錯誤資訊的訊息錯誤。</param>
      <param name="faultDetailTypes">包含錯誤細節的型別陣列。</param>
    </member>
    <member name="M:System.ServiceModel.FaultException.CreateMessageFault">
      <summary>傳回 <see cref="T:System.ServiceModel.Channels.MessageFault" /> 物件。</summary>
      <returns>SOAP 錯誤在記憶體中的表示，可傳遞給 <see cref="Overload:System.ServiceModel.Channels.Message.CreateMessage" /> 建立包含錯誤的訊息。對錯誤訊息造成的 <see cref="T:System.ServiceModel.FaultException" /> 物件而言，這個 <see cref="T:System.ServiceModel.Channels.MessageFault" /> 物件就是到達的錯誤。</returns>
    </member>
    <member name="P:System.ServiceModel.FaultException.Message">
      <summary>取得例外狀況的訊息。</summary>
      <returns>例外狀況訊息。</returns>
    </member>
    <member name="P:System.ServiceModel.FaultException.Reason">
      <summary>取得 SOAP 錯誤的 <see cref="T:System.ServiceModel.FaultReason" />。</summary>
      <returns>SOAP 錯誤的原因。</returns>
    </member>
    <member name="T:System.ServiceModel.FaultException`1">
      <summary>在用戶端應用程式中用於攔截以合約方式指定的 SOAP 錯誤。</summary>
      <typeparam name="TDetail">可序列化的錯誤詳細類型。</typeparam>
    </member>
    <member name="M:System.ServiceModel.FaultException`1.#ctor(`0,System.ServiceModel.FaultReason,System.ServiceModel.FaultCode,System.String)">
      <summary>初始化 <see cref="T:System.ServiceModel.FaultException`1" /> 類別的新執行個體，這個執行個體使用指定的詳細資料物件、SOAP 錯誤原因、錯誤碼和動作值。</summary>
      <param name="detail">當做 SOAP 錯誤詳細資料使用的物件。</param>
      <param name="reason">SOAP 錯誤的原因。</param>
      <param name="code">SOAP 錯誤的錯誤碼。</param>
      <param name="action">SOAP 錯誤的動作。</param>
    </member>
    <member name="M:System.ServiceModel.FaultException`1.CreateMessageFault">
      <summary>建立可用於建立表示 SOAP 錯誤之 <see cref="T:System.ServiceModel.Channels.Message" /> 的 <see cref="T:System.ServiceModel.Channels.MessageFault" /> 物件。</summary>
      <returns>建立的訊息錯誤。</returns>
    </member>
    <member name="P:System.ServiceModel.FaultException`1.Detail">
      <summary>取得物件，其中包含錯誤狀況的詳細資訊。</summary>
      <returns>屬於 <see cref="T:System.ServiceModel.FaultException`1" /> 物件之型別參數的詳細資料物件。</returns>
    </member>
    <member name="M:System.ServiceModel.FaultException`1.ToString">
      <summary>傳回 <see cref="T:System.ServiceModel.FaultException`1" /> 物件的字串。</summary>
      <returns>SOAP 錯誤的字串。</returns>
    </member>
    <member name="T:System.ServiceModel.FaultReason">
      <summary>提供 SOAP 錯誤的文字描述。</summary>
    </member>
    <member name="M:System.ServiceModel.FaultReason.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.FaultReasonText})">
      <summary>使用指定的錯誤翻譯清單來初始化 <see cref="T:System.ServiceModel.FaultReason" /> 類別的新執行個體。</summary>
      <param name="translations">
        <see cref="T:System.ServiceModel.FaultReasonText" /> 物件清單，每個物件會以特定語言描述該錯誤。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="translations" /> 為 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="translations" /> 是空的，或者一或多個項目是 null。</exception>
    </member>
    <member name="M:System.ServiceModel.FaultReason.#ctor(System.ServiceModel.FaultReasonText)">
      <summary>使用指定的文字項目 (該項目以特定語言描述該錯誤)，初始化 <see cref="T:System.ServiceModel.FaultReason" /> 類別的新執行個體。</summary>
      <param name="translation">一個 <see cref="T:System.ServiceModel.FaultReasonText" /> 物件陣列，對應到不同語言的錯誤描述。</param>
    </member>
    <member name="M:System.ServiceModel.FaultReason.#ctor(System.String)">
      <summary>使用指定的錯誤描述來初始化 <see cref="T:System.ServiceModel.FaultReason" /> 類別的新執行個體。</summary>
      <param name="text">錯誤發生原因的描述。</param>
    </member>
    <member name="M:System.ServiceModel.FaultReason.GetMatchingTranslation">
      <summary>取得錯誤描述 (其語言為目前執行緒所用的語言)。</summary>
      <returns>包含錯誤描述的 <see cref="T:System.ServiceModel.FaultReasonText" /> 物件。</returns>
    </member>
    <member name="M:System.ServiceModel.FaultReason.GetMatchingTranslation(System.Globalization.CultureInfo)">
      <summary>取得指定語言的錯誤描述。</summary>
      <returns>指定語言的錯誤文字。</returns>
      <param name="cultureInfo">
        <see cref="T:System.Globalization.CultureInfo" /> 物件，其指定錯誤描述的語言。</param>
      <exception cref="T:System.ArgumentNullException">
        <see cref="T:System.Globalization.CultureInfo" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.FaultReason.ToString">
      <summary>以字串傳回錯誤原因。</summary>
      <returns>包含錯誤原因的字串。</returns>
    </member>
    <member name="T:System.ServiceModel.FaultReasonText">
      <summary>表示 SOAP 錯誤原因的文字。</summary>
    </member>
    <member name="M:System.ServiceModel.FaultReasonText.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.ServiceModel.FaultReasonText" /> 類別的新執行個體，這個執行個體會使用指定的錯誤文字。</summary>
      <param name="text">代表 SOAP 錯誤原因的文字。</param>
    </member>
    <member name="M:System.ServiceModel.FaultReasonText.#ctor(System.String,System.String)">
      <summary>初始化 <see cref="T:System.ServiceModel.FaultReasonText" /> 類別的新執行個體。</summary>
      <param name="text">錯誤原因的文字。</param>
      <param name="xmlLang">錯誤所用的語言。</param>
    </member>
    <member name="M:System.ServiceModel.FaultReasonText.Matches(System.Globalization.CultureInfo)">
      <summary>傳回值，這個值表示說明所用的語言是否符合提供的 <see cref="T:System.Globalization.CultureInfo" /> 物件。</summary>
      <returns>如果符合指定的 <see cref="T:System.Globalization.CultureInfo" /> 則為 true，否則為 false。</returns>
      <param name="cultureInfo">用來與描述的語言相比較的 <see cref="T:System.Globalization.CultureInfo" /> 物件。</param>
    </member>
    <member name="P:System.ServiceModel.FaultReasonText.Text">
      <summary>取得 SOAP 錯誤原因的文字。</summary>
      <returns>SOAP 錯誤原因的文字。</returns>
    </member>
    <member name="P:System.ServiceModel.FaultReasonText.XmlLang">
      <summary>取得 SOAP 錯誤原因的語言。</summary>
      <returns>SOAP 錯誤原因的語言。</returns>
    </member>
    <member name="T:System.ServiceModel.IClientChannel">
      <summary>定義用戶端應用程式所使用之傳出要求和要求/回覆通道的行為。</summary>
    </member>
    <member name="P:System.ServiceModel.IClientChannel.AllowInitializationUI">
      <summary>取得或設定值，這個值表示 <see cref="M:System.ServiceModel.IClientChannel.DisplayInitializationUI" /> 是否嘗試呼叫 <see cref="P:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers" /> 屬性中的 <see cref="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer" /> 物件，或者是否擲回 (如果該集合不是空白的話)。</summary>
      <returns>如果允許 Windows Communication Foundation (WCF) 叫用互動式通道初始設定式，則為 true，否則為 false。</returns>
    </member>
    <member name="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)">
      <summary>要開始使用使用者介面來取得認證資訊的非同步呼叫。</summary>
      <returns>要在處理完成時用於回呼的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="callback">當這個方法完成時所呼叫的方法。</param>
      <param name="state">通道狀態的相關資訊。</param>
    </member>
    <member name="P:System.ServiceModel.IClientChannel.DidInteractiveInitialization">
      <summary>取得值，這個值表示是否已呼叫使用者介面，以取得認證資訊。</summary>
      <returns>如果已呼叫 <see cref="M:System.ServiceModel.IClientChannel.DisplayInitializationUI" /> 方法 (或 <see cref="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" /> 和 <see cref="M:System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)" /> 方法)，則為 true，否則為 false。</returns>
    </member>
    <member name="M:System.ServiceModel.IClientChannel.DisplayInitializationUI">
      <summary>呼叫使用者介面來取得認證資訊。</summary>
    </member>
    <member name="M:System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)">
      <summary>當呼叫 <see cref="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" /> 已完成時呼叫。</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="E:System.ServiceModel.IClientChannel.UnknownMessageReceived">
      <summary>這是保留的事件。</summary>
    </member>
    <member name="P:System.ServiceModel.IClientChannel.Via">
      <summary>取得包含在用戶端通道上傳送訊息之目標傳輸位址的 URI。</summary>
      <returns>
        <see cref="T:System.Uri" />，包含在通道上傳送訊息的目標傳輸位址。</returns>
    </member>
    <member name="T:System.ServiceModel.ICommunicationObject">
      <summary>定義系統中所有通訊導向物件 (包括通道、通道管理員、處理站、接聽程式、發送器和服務主機) 的基本狀態機器合約。</summary>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Abort">
      <summary>導致通訊物件立即從目前的狀態轉換為已關閉狀態。</summary>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
      <summary>開始非同步作業以關閉通訊物件。</summary>
      <returns>參考非同步關閉作業的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 委派，這個委派會接收完成非同步關閉作業的通知。</param>
      <param name="state">應用程式所指定的物件，其中包含與非同步關閉作業關聯的狀態資訊。</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">已針對處於 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態中的物件呼叫 <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" />。</exception>
      <exception cref="T:System.TimeoutException">經過預設的逾時時間之後，就可以正常關閉 <see cref="T:System.ServiceModel.ICommunicationObject" />。</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>開始非同步作業，關閉有已指定逾時的通訊物件。</summary>
      <returns>參考非同步關閉作業的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="timeout">
        <see cref="T:System.Timespan" />，指定必須在逾時前多久完成傳送作業。</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 委派，這個委派會接收完成非同步關閉作業的通知。</param>
      <param name="state">應用程式所指定的物件，其中包含與非同步關閉作業關聯的狀態資訊。</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">已針對處於 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態中的物件呼叫 <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" />。</exception>
      <exception cref="T:System.TimeoutException">經過指定的逾時時間之後，就可以正常關閉 <see cref="T:System.ServiceModel.ICommunicationObject" />。</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
      <summary>開始非同步作業以開啟通訊物件。</summary>
      <returns>參考非同步開啟作業的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 委派，這個委派會接收非同步開啟作業完成的通知。</param>
      <param name="state">應用程式所指定的物件，其中包含與非同步開啟作業相關聯的狀態資訊。</param>
      <exception cref="T:System.ServiceModel.CommunicationException">
        <see cref="T:System.ServiceModel.ICommunicationObject" /> 無法開啟，而且已進入 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態。</exception>
      <exception cref="T:System.TimeoutException">經過預設的開啟逾時時間之後，<see cref="T:System.ServiceModel.ICommunicationObject" /> 就可以進入 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 狀態，而且也已進入 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態。</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>開始非同步作業，開啟有已指定時間間隔的通訊物件。</summary>
      <returns>參考非同步開啟作業的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="timeout">
        <see cref="T:System.Timespan" />，指定必須在逾時前多久完成傳送作業。</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 委派，這個委派會接收非同步開啟作業完成的通知。</param>
      <param name="state">應用程式所指定的物件，其中包含與非同步開啟作業相關聯的狀態資訊。</param>
      <exception cref="T:System.ServiceModel.CommunicationException">
        <see cref="T:System.ServiceModel.ICommunicationObject" /> 無法開啟，而且已進入 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態。</exception>
      <exception cref="T:System.TimeoutException">經過指定的逾時時間之後，<see cref="T:System.ServiceModel.ICommunicationObject" /> 就可以進入 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 狀態，而且也已進入 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態。</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Close">
      <summary>導致通訊物件從目前的狀態轉換為已關閉狀態。</summary>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">已針對處於 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態中的物件呼叫 <see cref="M:System.ServiceModel.ICommunicationObject.Close" />。</exception>
      <exception cref="T:System.TimeoutException">經過預設的關閉逾時時間之後，就可以正常關閉 <see cref="T:System.ServiceModel.ICommunicationObject" />。</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)">
      <summary>導致通訊物件從目前的狀態轉換為已關閉狀態。</summary>
      <param name="timeout">
        <see cref="T:System.Timespan" />，指定必須在逾時前多久完成傳送作業。</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">已針對處於 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態中的物件呼叫 <see cref="M:System.ServiceModel.ICommunicationObject.Close" />。</exception>
      <exception cref="T:System.TimeoutException">經過逾時時間之後，就可以正常關閉 <see cref="T:System.ServiceModel.ICommunicationObject" />。</exception>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Closed">
      <summary>當通訊物件從關閉中狀態轉換為已關閉狀態完成時發生。</summary>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Closing">
      <summary>當通訊物件第一次進入關閉中狀態時發生。</summary>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)">
      <summary>完成非同步作業以關閉通訊物件。</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" />，在呼叫 <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" /> 方法時所傳回。</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">已針對處於 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態中的物件呼叫 <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" />。</exception>
      <exception cref="T:System.TimeoutException">經過逾時時間之後，就可以正常關閉 <see cref="T:System.ServiceModel.ICommunicationObject" />。</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)">
      <summary>完成非同步作業以開啟通訊物件。</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" />，在呼叫 <see cref="M:System.ServiceModel.ICommunicationObject.BeginOpen" /> 方法時所傳回。</param>
      <exception cref="T:System.ServiceModel.CommunicationException">
        <see cref="T:System.ServiceModel.ICommunicationObject" /> 無法開啟，而且已進入 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態。</exception>
      <exception cref="T:System.TimeoutException">經過逾時時間之後，<see cref="T:System.ServiceModel.ICommunicationObject" /> 就可以進入 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 狀態，而且也已進入 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態。</exception>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Faulted">
      <summary>當通訊物件第一次進入錯誤狀態時發生。</summary>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Open">
      <summary>導致通訊物件從已建立狀態轉換為已開啟狀態。</summary>
      <exception cref="T:System.ServiceModel.CommunicationException">
        <see cref="T:System.ServiceModel.ICommunicationObject" /> 無法開啟，而且已進入 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態。</exception>
      <exception cref="T:System.TimeoutException">經過預設的開啟逾時時間之後，<see cref="T:System.ServiceModel.ICommunicationObject" /> 就可以進入 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 狀態，而且也已進入 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態。</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)">
      <summary>在指定時間間隔內，讓通訊物件從已建立狀態轉換為已開啟狀態。</summary>
      <param name="timeout">
        <see cref="T:System.Timespan" />，指定必須在逾時前多久完成傳送作業。</param>
      <exception cref="T:System.ServiceModel.CommunicationException">
        <see cref="T:System.ServiceModel.ICommunicationObject" /> 無法開啟，而且已進入 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態。</exception>
      <exception cref="T:System.TimeoutException">經過指定的逾時時間之後，<see cref="T:System.ServiceModel.ICommunicationObject" /> 就可以進入 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 狀態，而且也已進入 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態。</exception>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Opened">
      <summary>當通訊物件從開啟中狀態轉換為已開啟狀態結束時發生。</summary>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Opening">
      <summary>當通訊物件第一次進入開啟中狀態時發生。</summary>
    </member>
    <member name="P:System.ServiceModel.ICommunicationObject.State">
      <summary>取得通訊導向物件的目前狀態。</summary>
      <returns>物件的 <see cref="T:System.ServiceModel.CommunicationState" /> 值。</returns>
    </member>
    <member name="T:System.ServiceModel.IContextChannel">
      <summary>定義通道內容控制的介面。</summary>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.AllowOutputBatching">
      <summary>取得或設定值，這個值會指示 Windows Communication Foundation (WCF) 在將訊息送交傳輸之前，先儲存一組訊息。</summary>
      <returns>如果允許批次進行傳出訊息則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.InputSession">
      <summary>取得通道的輸入工作階段。</summary>
      <returns>通道的 <see cref="T:System.ServiceModel.Channels.IInputSession" />。</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.LocalAddress">
      <summary>取得通道的本機端點。</summary>
      <returns>通道的本機 <see cref="T:System.ServiceModel.EndpointAddress" />。</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.OperationTimeout">
      <summary>取得或設定作業必須完成的期間，否則會擲回例外狀況。</summary>
      <returns>
        <see cref="T:System.TimeSpan" />，指定作業必須完成的期間。</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.OutputSession">
      <summary>取得與通道相關聯的輸出工作階段 (如果有的話)。</summary>
      <returns>如果存在輸入工作階段，則為 <see cref="T:System.ServiceModel.Channels.IOutputSession" /> 實作，否則為 null。</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.RemoteAddress">
      <summary>取得與通道相關聯的遠端位址。</summary>
      <returns>通道的遠端 <see cref="T:System.ServiceModel.EndpointAddress" />。</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.SessionId">
      <summary>傳回目前工作階段的識別項 (如果有)。</summary>
      <returns>目前工作階段的識別項 (如果有)。</returns>
    </member>
    <member name="T:System.ServiceModel.IDefaultCommunicationTimeouts">
      <summary>定義通道、通道管理員 (例如通道接聽項與通道處理站和服務主機) 用來指定通訊逾時的介面。</summary>
    </member>
    <member name="P:System.ServiceModel.IDefaultCommunicationTimeouts.CloseTimeout">
      <summary>取得通訊物件叫用之關閉方法逾時前所經過的時間間隔。</summary>
      <returns>
        <see cref="T:System.Timespan" />，其指定在關閉方法逾時之前所等待的時間間隔。</returns>
    </member>
    <member name="P:System.ServiceModel.IDefaultCommunicationTimeouts.OpenTimeout">
      <summary>取得通訊物件叫用之開啟方法逾時前所經過的時間間隔。</summary>
      <returns>
        <see cref="T:System.Timespan" />，其指定在開啟方法逾時之前所等待的時間間隔。</returns>
    </member>
    <member name="P:System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout">
      <summary>取得通訊物件叫用之接收方法逾時前所經過的時間間隔。</summary>
      <returns>
        <see cref="T:System.Timespan" />，其指定在接收方法逾時之前所等待的時間間隔。</returns>
    </member>
    <member name="P:System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout">
      <summary>取得通訊物件叫用之傳送方法逾時前所經過的時間間隔。</summary>
      <returns>
        <see cref="T:System.Timespan" />，其指定在傳送方法逾時之前所等待的時間間隔。</returns>
    </member>
    <member name="T:System.ServiceModel.IExtensibleObject`1">
      <summary>讓物件參與自訂行為 (如註冊事件)，或監控狀態轉換。</summary>
      <typeparam name="T">擴充功能類別的型別。</typeparam>
    </member>
    <member name="P:System.ServiceModel.IExtensibleObject`1.Extensions">
      <summary>取得這個可擴充物件的擴充功能物件集合。</summary>
      <returns>擴充功能物件的 <see cref="T:System.ServiceModel.IExtensionCollection`1" />。</returns>
    </member>
    <member name="T:System.ServiceModel.IExtension`1">
      <summary>讓物件可以透過彙總 (Aggregation) 擴充另一個物件。</summary>
      <typeparam name="T">參與自訂行為的物件。</typeparam>
    </member>
    <member name="M:System.ServiceModel.IExtension`1.Attach(`0)">
      <summary>讓擴充物件可以找出它被彚總的時間。當擴充加入至 <see cref="P:System.ServiceModel.IExtensibleObject`1.Extensions" /> 屬性時呼叫。</summary>
      <param name="owner">彚總此擴充的可擴充物件。</param>
    </member>
    <member name="M:System.ServiceModel.IExtension`1.Detach(`0)">
      <summary>讓擴充物件可以找出它不再被彚總的時間。當擴充從 <see cref="P:System.ServiceModel.IExtensibleObject`1.Extensions" /> 屬性中移除時呼叫。</summary>
      <param name="owner">彚總此擴充的可擴充物件。</param>
    </member>
    <member name="T:System.ServiceModel.IExtensionCollection`1">
      <summary>
        <see cref="T:System.ServiceModel.IExtension`1" /> 物件的集合，這個物件允許透過它的型別來擷取 <see cref="T:System.ServiceModel.IExtension`1" />。</summary>
      <typeparam name="T">擴充物件的型別。</typeparam>
    </member>
    <member name="M:System.ServiceModel.IExtensionCollection`1.Find``1">
      <summary>在集合中找出指定的擴充物件。</summary>
      <returns>找到的擴充物件。</returns>
      <typeparam name="E">擴充物件的型別。</typeparam>
    </member>
    <member name="M:System.ServiceModel.IExtensionCollection`1.FindAll``1">
      <summary>找出集合中由 <paramref name="E" /> 指定的所有擴充物件。</summary>
      <returns>集合中所有擴充物件的集合，這些擴充物件會實作指定的型別。</returns>
      <typeparam name="E">擴充物件的型別。</typeparam>
    </member>
    <member name="T:System.ServiceModel.InvalidMessageContractException">
      <summary>表示無效的訊息合約。</summary>
    </member>
    <member name="M:System.ServiceModel.InvalidMessageContractException.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.InvalidMessageContractException" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ServiceModel.InvalidMessageContractException.#ctor(System.String)">
      <summary>使用指定的訊息，初始化 <see cref="T:System.ServiceModel.InvalidMessageContractException" /> 類別的新執行個體。</summary>
      <param name="message">例外狀況的訊息。</param>
    </member>
    <member name="M:System.ServiceModel.InvalidMessageContractException.#ctor(System.String,System.Exception)">
      <summary>初始化 <see cref="T:System.ServiceModel.InvalidMessageContractException" /> 類別的新執行個體，這個執行個體使用指定的訊息和內部例外狀況。</summary>
      <param name="message">例外狀況訊息。</param>
      <param name="innerException">內部例外狀況。</param>
    </member>
    <member name="T:System.ServiceModel.MessageBodyMemberAttribute">
      <summary>指定成員序列化成為 SOAP 本文內的項目。</summary>
    </member>
    <member name="M:System.ServiceModel.MessageBodyMemberAttribute.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.MessageBodyMemberAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.ServiceModel.MessageBodyMemberAttribute.Order">
      <summary>取得或設定值，這個值會指出成員序列化至 SOAP 本文的位置。</summary>
      <returns>SOAP 本文中項目的位置。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">傳給屬性 setter 的值會是負整數。</exception>
    </member>
    <member name="T:System.ServiceModel.MessageContractAttribute">
      <summary>定義對應到 SOAP 訊息的強型別類別。</summary>
    </member>
    <member name="M:System.ServiceModel.MessageContractAttribute.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.MessageContractAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.ServiceModel.MessageContractAttribute.IsWrapped">
      <summary>取得或設定值，這個值會指定訊息本文是否有包裝函式項目。</summary>
      <returns>如果訊息本文有包裝函式項目，則為 true，否則為 false。預設為 true。</returns>
    </member>
    <member name="P:System.ServiceModel.MessageContractAttribute.WrapperName">
      <summary>取得或設定訊息本文中包裝函式項目的名稱。</summary>
      <returns>訊息本文中包裝函式項目的名稱。</returns>
      <exception cref="T:System.ArgumentNullException">值為 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">值為空字串。</exception>
    </member>
    <member name="P:System.ServiceModel.MessageContractAttribute.WrapperNamespace">
      <summary>取得或設定訊息本文包裝函式項目的命名空間。</summary>
      <returns>包裝函式項目命名空間。</returns>
    </member>
    <member name="T:System.ServiceModel.MessageContractMemberAttribute">
      <summary>宣告 <see cref="T:System.ServiceModel.MessageBodyMemberAttribute" /> 和 <see cref="T:System.ServiceModel.MessageHeaderAttribute" /> 的基底成員。</summary>
    </member>
    <member name="M:System.ServiceModel.MessageContractMemberAttribute.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.MessageContractMemberAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.ServiceModel.MessageContractMemberAttribute.Name">
      <summary>指定對應於這個成員的項目名稱。</summary>
      <returns>對應至這個成員的項目名稱。這個字串必須是有效的 XML 項目名稱。</returns>
    </member>
    <member name="P:System.ServiceModel.MessageContractMemberAttribute.Namespace">
      <summary>指定對應於這個成員的項目命名空間。</summary>
      <returns>對應於這個成員的項目命名空間 URI。</returns>
    </member>
    <member name="T:System.ServiceModel.MessageCredentialType">
      <summary>列舉有效訊息的認證類型。</summary>
    </member>
    <member name="F:System.ServiceModel.MessageCredentialType.Certificate">
      <summary>使用憑證指定用戶端驗證。</summary>
    </member>
    <member name="F:System.ServiceModel.MessageCredentialType.IssuedToken">
      <summary>使用發行的權杖來指定用戶端驗證。</summary>
    </member>
    <member name="F:System.ServiceModel.MessageCredentialType.None">
      <summary>指定匿名驗證。</summary>
    </member>
    <member name="F:System.ServiceModel.MessageCredentialType.UserName">
      <summary>使用 UserName 來指定用戶端驗證。</summary>
    </member>
    <member name="F:System.ServiceModel.MessageCredentialType.Windows">
      <summary>使用 Windows 指定用戶端驗證。</summary>
    </member>
    <member name="T:System.ServiceModel.MessageHeader`1">
      <summary>表示 SOAP 標頭的內容。</summary>
      <typeparam name="T">訊息標頭類型。</typeparam>
    </member>
    <member name="M:System.ServiceModel.MessageHeader`1.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.MessageHeader`1" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ServiceModel.MessageHeader`1.#ctor(`0)">
      <summary>使用指定的標頭內容，初始化 <see cref="T:System.ServiceModel.MessageHeader`1" /> 類別的新執行個體。</summary>
      <param name="content">新標頭的內容。</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeader`1.#ctor(`0,System.Boolean,System.String,System.Boolean)">
      <summary>使用指定的標頭內容和中繼資料，初始化 <see cref="T:System.ServiceModel.MessageHeader`1" /> 類別的新執行個體。</summary>
      <param name="content">新標頭的內容。</param>
      <param name="mustUnderstand">指出是否必須了解標頭的值。</param>
      <param name="actor">訊息標頭的目標收件者。</param>
      <param name="relay">指出是否應該轉送標頭的值。</param>
    </member>
    <member name="P:System.ServiceModel.MessageHeader`1.Actor">
      <summary>取得或設定訊息標頭的目標收件者。</summary>
      <returns>訊息標頭的目標收件者。預設為空字串 ("")。</returns>
    </member>
    <member name="P:System.ServiceModel.MessageHeader`1.Content">
      <summary>取得或設定標頭的內容。</summary>
      <returns>標頭的內容。</returns>
    </member>
    <member name="M:System.ServiceModel.MessageHeader`1.GetUntypedHeader(System.String,System.String)">
      <summary>取得具有指定之命名空間和本機名稱的訊息標頭。</summary>
      <returns>具有指定之命名空間和本機名稱的訊息標頭。</returns>
      <param name="name">標頭 XML 項目的本機名稱</param>
      <param name="ns">標頭 XML 項目的命名空間 URI。</param>
    </member>
    <member name="P:System.ServiceModel.MessageHeader`1.MustUnderstand">
      <summary>取得或設定值，這個值表示是否必須依照 SOAP 1.1/1.2 規格的說明來解讀標頭。</summary>
      <returns>如果必須瞭解此標頭則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.ServiceModel.MessageHeader`1.Relay">
      <summary>取得值，這個值表示是否應該轉送標頭。</summary>
      <returns>如果應該轉送標頭則為 true，否則為 false。</returns>
    </member>
    <member name="T:System.ServiceModel.MessageHeaderException">
      <summary>處理訊息時，因無法符合有關 SOAP 訊息標頭的預期而所擲回的例外狀況 (Exception)。</summary>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String)">
      <summary>使用指定的訊息來初始化 <see cref="T:System.ServiceModel.MessageHeaderException" /> 類別的新執行個體。</summary>
      <param name="message">例外狀況所包含的訊息。</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Boolean)">
      <summary>使用指定的訊息以及表示訊息標頭是否重複或遺漏的值，初始化 <see cref="T:System.ServiceModel.MessageHeaderException" /> 類別的新執行個體。</summary>
      <param name="message">例外狀況訊息。</param>
      <param name="isDuplicate">如果多個訊息標頭重複，則為 true，如果沒有任何訊息標頭，則為 false。</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Exception)">
      <summary>使用指定的訊息和造成此例外狀況的內部例外狀況，初始化 <see cref="T:System.ServiceModel.MessageHeaderException" /> 類別的新執行個體。</summary>
      <param name="message">例外狀況訊息。</param>
      <param name="innerException">包含造成此例外狀況之內部例外狀況的 <see cref="T:System.Exception" />。</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String)">
      <summary>使用指定的訊息、標頭名稱和命名空間，初始化 <see cref="T:System.ServiceModel.MessageHeaderException" /> 類別的新執行個體。</summary>
      <param name="message">例外狀況訊息。</param>
      <param name="headerName">訊息標頭的名稱。</param>
      <param name="ns">訊息標頭的命名空間。</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean)">
      <summary>使用指定的訊息、標頭名稱、命名空間，以及表示訊息標頭是否重複或遺漏的值，初始化 <see cref="T:System.ServiceModel.MessageHeaderException" /> 類別的新執行個體。</summary>
      <param name="message">例外狀況訊息。</param>
      <param name="headerName">訊息標頭的名稱。</param>
      <param name="ns">訊息標頭的命名空間。</param>
      <param name="isDuplicate">如果多個訊息標頭重複，則為 true，如果沒有任何訊息標頭，則為 false。</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean,System.Exception)">
      <summary>使用指定的訊息、標頭名稱、命名空間、表示訊息標頭是否重複或遺漏的值，以及造成此例外狀況的內部例外狀況，初始化 <see cref="T:System.ServiceModel.MessageHeaderException" /> 類別的新執行個體。</summary>
      <param name="message">例外狀況訊息。</param>
      <param name="headerName">訊息標頭的名稱。</param>
      <param name="ns">訊息標頭的命名空間。</param>
      <param name="isDuplicate">如果多個訊息標頭重複，則為 true，如果沒有任何訊息標頭，則為 false。</param>
      <param name="innerException">包含造成此例外狀況之內部例外狀況的 <see cref="T:System.Exception" />。</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Exception)">
      <summary>使用指定的訊息、標頭名稱、命名空間，以及造成此例外狀況的內部例外狀況，初始化 <see cref="T:System.ServiceModel.MessageHeaderException" /> 類別的新執行個體。</summary>
      <param name="message">例外狀況訊息。</param>
      <param name="headerName">訊息標頭的名稱。</param>
      <param name="ns">訊息標頭的命名空間。</param>
      <param name="innerException">包含造成此例外狀況之內部例外狀況的 <see cref="T:System.Exception" />。</param>
    </member>
    <member name="P:System.ServiceModel.MessageHeaderException.HeaderName">
      <summary>取得造成此例外狀況的 SOAP 標頭名稱。</summary>
      <returns>SOAP 標頭的名稱。</returns>
    </member>
    <member name="P:System.ServiceModel.MessageHeaderException.HeaderNamespace">
      <summary>取得造成此例外狀況之 SOAP 標頭的命名空間。</summary>
      <returns>SOAP 標頭的命名空間。</returns>
    </member>
    <member name="P:System.ServiceModel.MessageHeaderException.IsDuplicate">
      <summary>取得值，這個值表示是否有多個訊息標頭，或沒有訊息標頭。</summary>
      <returns>如果多個訊息標頭重複，則為 true，如果沒有任何訊息標頭，則為 false。</returns>
    </member>
    <member name="T:System.ServiceModel.MessageParameterAttribute">
      <summary>控制要求的名稱並回應參數名稱。不能與 <see cref="T:System.ServiceModel.Channels.Message" /> 或訊息合約一起使用。</summary>
    </member>
    <member name="M:System.ServiceModel.MessageParameterAttribute.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.MessageParameterAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.ServiceModel.MessageParameterAttribute.Name">
      <summary>取得或設定 XML 結構描述 (XSD) 中參數的名稱屬性。</summary>
      <returns>XSD 中參數的名稱屬性。</returns>
    </member>
    <member name="T:System.ServiceModel.OperationContext">
      <summary>存取服務方法的執行內容。</summary>
    </member>
    <member name="M:System.ServiceModel.OperationContext.#ctor(System.ServiceModel.IContextChannel)">
      <summary>使用指定之用戶端應用程式中的 <see cref="T:System.ServiceModel.IContextChannel" />來初始化 <see cref="T:System.ServiceModel.OperationContext" /> 類別的新執行個體。</summary>
      <param name="channel">用來建立新用戶端 <see cref="T:System.ServiceModel.OperationContext" /> 的 <see cref="T:System.ServiceModel.IContextChannel" />。</param>
      <exception cref="T:System.ArgumentNullException">通道是 null。</exception>
    </member>
    <member name="P:System.ServiceModel.OperationContext.Current">
      <summary>取得或設定目前執行緒的執行內容。</summary>
      <returns>代表目前方法之訊息與執行內容的 <see cref="T:System.ServiceModel.OperationContext" />。</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.Extensions">
      <summary>從目前訊息內容取得服務擴充部分的集合。</summary>
      <returns>
        <see cref="T:System.ServiceModel.OperationContext" /> 擴充部分的集合。</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.IncomingMessageHeaders">
      <summary>取得 <see cref="T:System.ServiceModel.OperationContext" /> 的傳入訊息標頭。</summary>
      <returns>包含傳入訊息標頭的 <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> 物件。</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.IncomingMessageProperties">
      <summary>取得 <see cref="T:System.ServiceModel.OperationContext" /> 中傳入訊息的訊息屬性。</summary>
      <returns>包含傳入訊息上之訊息屬性的 <see cref="T:System.ServiceModel.Channels.MessageProperties" /> 物件。</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.IncomingMessageVersion">
      <summary>取得 <see cref="T:System.ServiceModel.OperationContext" /> 的傳入 SOAP 訊息版本。</summary>
      <returns>傳入訊息的 SOAP 版本。</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.IsUserContext">
      <summary>這個屬性僅供系統使用，使用者不應呼叫。</summary>
      <returns>true.</returns>
    </member>
    <member name="E:System.ServiceModel.OperationContext.OperationCompleted">
      <summary>發生於作業已經完成時。</summary>
    </member>
    <member name="P:System.ServiceModel.OperationContext.OutgoingMessageHeaders">
      <summary>取得使用中 <see cref="T:System.ServiceModel.OperationContext" /> 的傳出訊息標頭。</summary>
      <returns>包含使用中 <see cref="T:System.ServiceModel.OperationContext" /> 之傳出訊息標頭的 <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> 物件。</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.OutgoingMessageProperties">
      <summary>取得使用中 <see cref="T:System.ServiceModel.OperationContext" /> 內的傳出訊息之訊息屬性。</summary>
      <returns>包含傳出訊息上之訊息屬性的 <see cref="T:System.ServiceModel.Channels.MessageProperties" /> 物件。</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.RequestContext">
      <summary>取得或設定本方法的 <see cref="T:System.ServiceModel.Channels.RequestContext" /> 實作。</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.RequestContext" /> 實作，若沒有要求內容則為 null。</returns>
    </member>
    <member name="T:System.ServiceModel.OperationContextScope">
      <summary>建立一個區塊，<see cref="T:System.ServiceModel.OperationContext" /> 物件在其範圍之內。</summary>
    </member>
    <member name="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.IContextChannel)">
      <summary>初始化 <see cref="T:System.ServiceModel.OperationContextScope" /> 類別的新執行個體，此執行個體使用指定的 <see cref="T:System.ServiceModel.IContextChannel" /> 建立該範圍的新 <see cref="T:System.ServiceModel.OperationContext" />。</summary>
      <param name="channel">為新的 <see cref="T:System.ServiceModel.OperationContext" /> 建立範圍時使用的通道。</param>
    </member>
    <member name="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.OperationContext)">
      <summary>初始化 <see cref="T:System.ServiceModel.OperationContextScope" /> 類別的新執行個體，以建立指定 <see cref="T:System.ServiceModel.OperationContext" /> 物件的範圍。</summary>
      <param name="context">建立的範圍內的使用中 <see cref="T:System.ServiceModel.OperationContext" />。</param>
    </member>
    <member name="M:System.ServiceModel.OperationContextScope.Dispose">
      <summary>將原本的 <see cref="T:System.ServiceModel.OperationContext" /> 還原至使用中的內容，並回收 <see cref="T:System.ServiceModel.OperationContextScope" /> 物件。</summary>
    </member>
    <member name="T:System.ServiceModel.OperationContractAttribute">
      <summary>表示某個方法定義了一個作業，此作業是 Windows Communication Foundation (WCF) 應用程式中服務合約的一部分。</summary>
    </member>
    <member name="M:System.ServiceModel.OperationContractAttribute.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.OperationContractAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.Action">
      <summary>取得或設定要求訊息的 WS-Addressing 動作。</summary>
      <returns>用來產生 WS-Addressing 動作標頭的動作。</returns>
      <exception cref="T:System.ArgumentNullException">值為 null。</exception>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.AsyncPattern">
      <summary>表示作業採用服務合約中的 Begin&lt;methodName&gt; 與 End&lt;methodName&gt; 方法組，以非同步方式實作。</summary>
      <returns>如果 Begin&lt;methodName&gt; 方法與某個 End&lt;methodName&gt; 方法符合，可被基礎結構視為在服務介面上，某個實作成非同步方法組的作業，則為 true，；否則為 false。預設為 false。</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
      <summary>取得或設定值，這個值會指出作業是否傳回回覆訊息。</summary>
      <returns>如果此方法接收要求訊息且不會傳回回覆訊息，則為 true，否則為 false。預設為 false。</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.Name">
      <summary>取得或設定作業的名稱。</summary>
      <returns>此作業的名稱。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.ServiceModel.OperationContractAttribute.Name" /> 為 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">值為空字串。</exception>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.ReplyAction">
      <summary>取得或設定作業之回覆訊息的 SOAP 動作值。</summary>
      <returns>回覆訊息的 SOAP 動作值。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.ServiceModel.OperationContractAttribute.ReplyAction" /> 為 null。</exception>
    </member>
    <member name="T:System.ServiceModel.OperationFormatStyle">
      <summary>代表 SOAP 樣式，此樣式會判斷該服務之 WSDL 中繼資料格式化的方式。</summary>
    </member>
    <member name="F:System.ServiceModel.OperationFormatStyle.Document">
      <summary>產生 WSDL 表示法以包含一個代表文件的項目，此文件會為某作業進行交換。</summary>
    </member>
    <member name="F:System.ServiceModel.OperationFormatStyle.Rpc">
      <summary>產生為某個作業交換之訊息的 WSDL 表示法，並如同遠端程序呼叫一般含有參數。</summary>
    </member>
    <member name="T:System.ServiceModel.ProtocolException">
      <summary>由於資料傳輸協定不符合，導致無法和遠端方進行通訊時，用戶端所看到擲回的例外狀況。</summary>
    </member>
    <member name="M:System.ServiceModel.ProtocolException.#ctor(System.String)">
      <summary>使用指定的錯誤訊息，初始化 <see cref="T:System.ServiceModel.ProtocolException" /> 類別的新執行個體。</summary>
      <param name="message">解釋例外狀況原因的錯誤訊息。</param>
    </member>
    <member name="M:System.ServiceModel.ProtocolException.#ctor(System.String,System.Exception)">
      <summary>使用指定的錯誤訊息和造成此例外狀況原因的內部例外參考，初始化 <see cref="T:System.ServiceModel.ProtocolException" /> 類別的新執行個體。</summary>
      <param name="message">解釋例外狀況原因的錯誤訊息。</param>
      <param name="innerException">導致擲回目前例外狀況的 <see cref="T:System.Exception" />。</param>
    </member>
    <member name="T:System.ServiceModel.QuotaExceededException">
      <summary>超過訊息配額時所擲回的例外狀況。</summary>
    </member>
    <member name="M:System.ServiceModel.QuotaExceededException.#ctor(System.String)">
      <summary>使用指定的錯誤訊息，初始化 <see cref="T:System.ServiceModel.QuotaExceededException" /> 類別的新執行個體。</summary>
      <param name="message">解釋例外狀況原因的錯誤訊息。</param>
    </member>
    <member name="M:System.ServiceModel.QuotaExceededException.#ctor(System.String,System.Exception)">
      <summary>使用指定的錯誤訊息和造成此例外狀況原因的內部例外參考，初始化 <see cref="T:System.ServiceModel.QuotaExceededException" /> 類別的新執行個體。</summary>
      <param name="message">解釋例外狀況原因的錯誤訊息。</param>
      <param name="innerException">導致擲回目前例外狀況的 <see cref="T:System.Exception" />。</param>
    </member>
    <member name="T:System.ServiceModel.SecurityMode">
      <summary>決定繫結的安全性設定。</summary>
    </member>
    <member name="F:System.ServiceModel.SecurityMode.Message">
      <summary>系統會使用 SOAP 訊息安全性來提供安全性。</summary>
    </member>
    <member name="F:System.ServiceModel.SecurityMode.None">
      <summary>停用安全性。</summary>
    </member>
    <member name="F:System.ServiceModel.SecurityMode.Transport">
      <summary>安全性可使用安全性傳輸 (例如，HTTPS) 來提供。</summary>
    </member>
    <member name="F:System.ServiceModel.SecurityMode.TransportWithMessageCredential">
      <summary>安全性傳輸 (例如，HTTPS) 提供完整性、機密性和驗證，而 SOAP 訊息安全性會提供用戶端驗證。</summary>
    </member>
    <member name="T:System.ServiceModel.ServerTooBusyException">
      <summary>當伺服器過度忙碌，無法接受訊息時所擲回的例外狀況。</summary>
    </member>
    <member name="M:System.ServiceModel.ServerTooBusyException.#ctor(System.String)">
      <summary>使用指定的錯誤訊息，初始化 <see cref="T:System.ServiceModel.ServerTooBusyException" /> 類別的新執行個體。</summary>
      <param name="message">解釋例外狀況原因的錯誤訊息。</param>
    </member>
    <member name="M:System.ServiceModel.ServerTooBusyException.#ctor(System.String,System.Exception)">
      <summary>使用指定的錯誤訊息和造成此例外狀況原因的內部例外參考，初始化 <see cref="T:System.ServiceModel.ServerTooBusyException" /> 類別的新執行個體。</summary>
      <param name="message">解釋例外狀況原因的錯誤訊息。</param>
      <param name="innerException">導致擲回目前例外狀況的 <see cref="T:System.Exception" />。</param>
    </member>
    <member name="T:System.ServiceModel.ServiceActivationException">
      <summary>當服務無法啟動時，所擲回的例外狀況 (Exception)。</summary>
    </member>
    <member name="M:System.ServiceModel.ServiceActivationException.#ctor(System.String)">
      <summary>使用指定的錯誤訊息，初始化 <see cref="T:System.ServiceModel.ServiceActivationException" /> 類別的新執行個體。</summary>
      <param name="message">解釋例外狀況原因的錯誤訊息。</param>
    </member>
    <member name="M:System.ServiceModel.ServiceActivationException.#ctor(System.String,System.Exception)">
      <summary>使用指定的錯誤訊息和所提供的內部例外狀況，初始化 <see cref="T:System.ServiceModel.ServiceActivationException" /> 類別的新執行個體。</summary>
      <param name="message">解釋例外狀況原因的錯誤訊息。</param>
      <param name="innerException">導致擲回目前例外狀況的 <see cref="T:System.Exception" />。</param>
    </member>
    <member name="T:System.ServiceModel.ServiceContractAttribute">
      <summary>表示某個介面或類別定義了 Windows Communication Foundation (WCF) 應用程式中的服務合約。</summary>
    </member>
    <member name="M:System.ServiceModel.ServiceContractAttribute.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.ServiceContractAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.ServiceModel.ServiceContractAttribute.CallbackContract">
      <summary>當合約是雙工合約時，取得或設定回呼合約的型別。</summary>
      <returns>表示回呼合約的 <see cref="T:System.Type" />。預設為 null。</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceContractAttribute.ConfigurationName">
      <summary>取得或設定用來在應用程式組態檔中尋找服務的名稱。</summary>
      <returns>用來在應用程式組態檔中尋找服務項目的名稱。預設為服務實作類別的名稱。</returns>
      <exception cref="T:System.ArgumentNullException">值為 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">值為空字串。</exception>
    </member>
    <member name="P:System.ServiceModel.ServiceContractAttribute.Name">
      <summary>取得或設定 Web 服務描述語言 (WSDL) 中的 &lt;portType&gt; 項目名稱。</summary>
      <returns>預設值是套用 <see cref="T:System.ServiceModel.ServiceContractAttribute" /> 之類別或介面的名稱。</returns>
      <exception cref="T:System.ArgumentNullException">值為 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">值為空字串。</exception>
    </member>
    <member name="P:System.ServiceModel.ServiceContractAttribute.Namespace">
      <summary>取得或設定 Web 服務描述語言 (WSDL) 中 &lt;portType&gt; 項目的命名空間。</summary>
      <returns>&lt;portType&gt; 元素的 WSDL 命名空間。預設值為 "http://tempuri.org"。</returns>
    </member>
    <member name="T:System.ServiceModel.ServiceKnownTypeAttribute">
      <summary>指定在序列化或還原序列化時，服務所使用的已知型別。</summary>
    </member>
    <member name="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.ServiceModel.ServiceKnownTypeAttribute" /> 類別的新執行個體，並指定傳回已知型別的方法名稱。</summary>
      <param name="methodName">傳回已知型別的方法名稱。</param>
    </member>
    <member name="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.String,System.Type)">
      <summary>使用傳回已知型別的方法名稱和包含傳回已知型別之方法的型別，初始化 <see cref="T:System.ServiceModel.ServiceKnownTypeAttribute" /> 類別的新執行個體。</summary>
      <param name="methodName">傳回已知型別的方法名稱。</param>
      <param name="declaringType">可在其物件圖形中使用已知型別的型別。</param>
    </member>
    <member name="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.Type)">
      <summary>使用指定的已知型別來初始化 <see cref="T:System.ServiceModel.ServiceKnownTypeAttribute" /> 類別的新執行個體。</summary>
      <param name="type">指定可用於該服務定義之參數或傳回值中的已知型別。</param>
    </member>
    <member name="P:System.ServiceModel.ServiceKnownTypeAttribute.DeclaringType">
      <summary>取得包含了傳回已知型別的方法的型別。</summary>
      <returns>包含了傳回已知型別的方法的 <see cref="T:System.Type" />。</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceKnownTypeAttribute.MethodName">
      <summary>取得傳回已知型別之集合的方法名稱。</summary>
      <returns>傳回已知型別的方法名稱。</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceKnownTypeAttribute.Type">
      <summary>可包含在物件圖形中的已知型別。</summary>
      <returns>已知型別的 <see cref="T:System.Type" />。</returns>
    </member>
    <member name="T:System.ServiceModel.TransferMode">
      <summary>表示通道對要求與回應訊息的傳輸是否使用資料流或緩衝模式。</summary>
    </member>
    <member name="F:System.ServiceModel.TransferMode.Buffered">
      <summary>要求訊息和回應訊息皆以緩衝處理。</summary>
    </member>
    <member name="F:System.ServiceModel.TransferMode.Streamed">
      <summary>要求訊息和回應訊息皆以資料流處理。</summary>
    </member>
    <member name="F:System.ServiceModel.TransferMode.StreamedRequest">
      <summary>資料流處理要求訊息，緩衝處理回應訊息。</summary>
    </member>
    <member name="F:System.ServiceModel.TransferMode.StreamedResponse">
      <summary>緩衝處理要求訊息，資料流處理回應訊息。</summary>
    </member>
    <member name="T:System.ServiceModel.UnknownMessageReceivedEventArgs">
      <summary>包含通道接收到的訊息，此訊息無法與任合回呼作業或暫止要求關聯。</summary>
    </member>
    <member name="P:System.ServiceModel.UnknownMessageReceivedEventArgs.Message">
      <summary>取得導致此事件的未知訊息。</summary>
      <returns>造成事件的 <see cref="T:System.ServiceModel.Channels.Message" />。</returns>
    </member>
    <member name="T:System.ServiceModel.XmlSerializerFormatAttribute">
      <summary>指示 Windows Communication Foundation (WCF) 基礎結構使用 <see cref="T:System.Xml.Serialization.XmlSerializer" />，而非 <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />。</summary>
    </member>
    <member name="M:System.ServiceModel.XmlSerializerFormatAttribute.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.XmlSerializerFormatAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.ServiceModel.XmlSerializerFormatAttribute.Style">
      <summary>取得或設定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 的 SOAP 樣式。</summary>
      <returns>其中一個 <see cref="T:System.ServiceModel.OperationFormatStyle" /> 值。預設為 <see cref="F:System.ServiceModel.OperationFormatStyle.Document" />。</returns>
    </member>
    <member name="P:System.ServiceModel.XmlSerializerFormatAttribute.SupportFaults">
      <summary>取得或設定值，這個值表示應使用 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 來讀取和寫入錯誤。</summary>
      <returns>如果應使用 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 來讀取和寫入錯誤則為 true，如果應使用 <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 則為 false。預設為 false。</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.AddressHeader">
      <summary>表示標頭，此標頭會封裝用來識別或是與端點互動的位址資訊項目。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.Channels.AddressHeader" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.CreateAddressHeader(System.String,System.String,System.Object)">
      <summary>使用指定的值、名稱和命名空間建立 <see cref="T:System.ServiceModel.Channels.AddressHeader" /> 類別的新執行個體。</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.AddressHeader" />，它具有指定的 <paramref name="name" /> 和 <paramref name="ns" /> (其中包含 <paramref name="value" /> 所指定的資訊項目)。</returns>
      <param name="name">位址標頭的名稱。</param>
      <param name="ns">位址標頭的命名空間。</param>
      <param name="value">位址標頭的資訊項目。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 為 null 或 <paramref name="name" />.Length == 0。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.CreateAddressHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>使用指定的名稱和命名空間建立 <see cref="T:System.ServiceModel.Channels.AddressHeader" /> 類別的新執行個體 (此類別會使用指定的格式器從指定的物件序列化此資訊項目)。</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.AddressHeader" />，它具有指定的 <paramref name="name" /> 和 <paramref name="ns" /> (其中包含 <paramref name="value" /> 所指定的資訊項目)。</returns>
      <param name="name">位址標頭的名稱。</param>
      <param name="ns">位址標頭的命名空間。</param>
      <param name="value">位址標頭的資訊項目。</param>
      <param name="serializer">用來序列化 <paramref name="value" /> 參數中指定之物件的 <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 或 <paramref name="serializer" /> 為 null 或是 <paramref name="name" />.Length == 0。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.Equals(System.Object)">
      <summary>判斷指定之物件中的資訊項目是否等於包含在目前位址標頭中的物件。</summary>
      <returns>如果指定之 <paramref name="obj" /> 中的資訊項目等於目前位址標頭中所包含的資訊項目，則為 true，否則為 false。特別是，如果 <paramref name="obj" /> 為 null，則會傳回 false。</returns>
      <param name="obj">要與目前位址標頭中包含之物件相比較的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.GetAddressHeaderReader">
      <summary>傳回可以序列化目前位址標頭物件的 XML 讀取器 (Reader)。</summary>
      <returns>可以序列化目前位址標頭物件的 <see cref="T:System.Xml.XmlDictionaryReader" /> 執行個體。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.GetHashCode">
      <summary>為位址標頭提供唯一的雜湊程式碼。</summary>
      <returns>目前位址標頭的唯一雜湊程式碼。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.GetValue``1">
      <summary>將目前位址標頭中的資訊項目還原序列化成指定之型別的物件。</summary>
      <returns>型別為 <paramref name="T" /> 之類別的執行個體，這個執行個體的欄位和屬性設定為目前位址標頭物件所提供的值。</returns>
      <typeparam name="T">型別為 <paramref name="T" /> 的類別，它的欄位和屬性設定為目前位址標頭物件所提供的值。</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.GetValue``1(System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>將目前位址標頭中的資訊項目還原序列化成指定之型別的物件 (此型別會使用指定的格式器來序列化這項資訊)。</summary>
      <returns>型別為 <paramref name="T" /> 之類別的執行個體，這個執行個體的欄位和屬性設定為目前位址標頭物件所提供的值。</returns>
      <param name="serializer">用來從目前位址標頭物件還原序列化此資訊項目的 <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />。</param>
      <typeparam name="T">型別為 <paramref name="T" /> 的類別，它的欄位和屬性設定為目前位址標頭物件所提供的值。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serializer" /> 為 null。</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.AddressHeader.Name">
      <summary>當實作時，會取得位址標頭的名稱。</summary>
      <returns>位址標頭的名稱。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.AddressHeader.Namespace">
      <summary>當實作時，會取得位址標頭的命名空間。</summary>
      <returns>位址標頭的命名空間。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.OnWriteAddressHeaderContents(System.Xml.XmlDictionaryWriter)">
      <summary>在衍生類別 (Derived Class) 中覆寫時，會在位址標頭內容寫入資料流或檔案時叫用 (Invoke)。</summary>
      <param name="writer">用來將位址標頭內容寫入資料流或檔案的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.OnWriteStartAddressHeader(System.Xml.XmlDictionaryWriter)">
      <summary>在衍生類別中覆寫時，會在位址標頭內容開始寫入資料流或檔案時叫用。</summary>
      <param name="writer">用來將位址標頭寫入資料流或檔案的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.ToMessageHeader">
      <summary>將此位址標頭包裝成訊息標頭。</summary>
      <returns>包裝目前位址標頭的 <see cref="T:System.ServiceModel.Channels.MessageHeader" />。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.WriteAddressHeader(System.Xml.XmlDictionaryWriter)">
      <summary>使用指定的 <see cref="T:System.Xml.XmlDictionaryWriter" /> 將位址標頭寫入資料流或檔案中。</summary>
      <param name="writer">用來將位址標頭寫入資料流或檔案的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.WriteAddressHeader(System.Xml.XmlWriter)">
      <summary>使用指定的 <see cref="T:System.Xml.XmlWriter" /> 將位址標頭寫入資料流或檔案中。</summary>
      <param name="writer">用來將位址標頭寫入資料流或檔案的 <see cref="T:System.Xml.XmlWriter" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.WriteAddressHeaderContents(System.Xml.XmlDictionaryWriter)">
      <summary>將位址標頭內容寫入資料流或檔案中。</summary>
      <param name="writer">用來將位址標頭內容寫入資料流或檔案的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.WriteStartAddressHeader(System.Xml.XmlDictionaryWriter)">
      <summary>開始將位址標頭內容寫入資料流或檔案中。</summary>
      <param name="writer">用來將位址標頭寫入資料流或檔案的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> 為 null。</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.AddressHeaderCollection">
      <summary>表示位址標頭的安全執行緒 (Thread-Safe)、唯讀集合。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.Channels.AddressHeaderCollection" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.Channels.AddressHeader})">
      <summary>從位址標頭的可列舉集合初始化 <see cref="T:System.ServiceModel.Channels.AddressHeaderCollection" /> 類別的新執行個體。</summary>
      <param name="addressHeaders">用來初始化集合之 <see cref="T:System.ServiceModel.Channels.AddressHeader" /> 物件的 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 集合。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="addressHeaders" /> 參數內的其中一個位址標頭為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.AddHeadersTo(System.ServiceModel.Channels.Message)">
      <summary>將集合中的標頭新增至指定之訊息的標頭。</summary>
      <param name="message">要加入標頭的 <see cref="T:System.ServiceModel.Channels.Message" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.FindAll(System.String,System.String)">
      <summary>在集合中尋找具有指定之名稱和命名空間的所有位址標頭。</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.AddressHeader" /> 型別的 <see cref="T:System.Array" />，其中包含此集合中具有指定之名稱和命名空間的所有標頭。</returns>
      <param name="name">要尋找之位址標頭的名稱。</param>
      <param name="ns">要尋找之位址標頭的命名空間。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 或 <paramref name="ns" /> 是 null。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.FindHeader(System.String,System.String)">
      <summary>在集合中尋找具有指定之名稱和命名空間的第一個位址標頭。</summary>
      <returns>集合中具有指定之名稱和命名空間的 <see cref="T:System.ServiceModel.Channels.AddressHeader" />。</returns>
      <param name="name">要尋找之位址標頭的名稱。</param>
      <param name="ns">要尋找之位址標頭的命名空間。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 或 <paramref name="ns" /> 是 null。</exception>
      <exception cref="T:System.ArgumentException">有一個以上的標頭具有指定的 <paramref name="name" /> 和 <paramref name="ns" />。</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.AddressingVersion">
      <summary>與 SOAP 訊息相關聯或是由端點所了解的 WS-Addressing 版本。</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.AddressingVersion.None">
      <summary>取得與 WS-Addressing 版本不相關聯的定址版本。</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.AddressingVersion" />，不是關聯的 WS-Addressing 版本。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressingVersion.ToString">
      <summary>傳回目前定址版本的字串表示。</summary>
      <returns>表示目前定址版本的字串。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.AddressingVersion.WSAddressing10">
      <summary>取得與 WS-Addressing 1.0 相關聯之位址版本的識別碼。</summary>
      <returns>單一執行個體，可識別與 WS-Addressing 1.0 相關聯的 <see cref="T:System.ServiceModel.Channels.AddressingVersion" />。</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement">
      <summary>繫結項目，指定 XML 用來編碼訊息的 .NET 二進位格式。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>在用戶端上建置通道處理站堆疊，這個堆疊會針對指定的內容建立指定的通道型別。</summary>
      <returns>
        <paramref name="TChannel" /> 型別的 <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" />，其適用於指定的內容。</returns>
      <param name="context">通道的 <see cref="T:System.ServiceModel.Channels.BindingContext" />。</param>
      <typeparam name="TChannel">通道處理站所產生之通道的型別。</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.Clone">
      <summary>建立從目前項目初始化的新 <see cref="T:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement" /> 物件。</summary>
      <returns>屬性值與目前項目之值相等的 <see cref="T:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement" /> 物件。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.CompressionFormat">
      <summary>取得或設定繫結項目的壓縮格式。</summary>
      <returns>繫結項目的壓縮格式。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.CreateMessageEncoderFactory">
      <summary>建立二進位訊息編碼器處理站，這個處理站會採用目前編碼繫結項目所指定的 SOAP 和 WS-Addressing 版本與字元編碼。</summary>
      <returns>這個繫結項目建立的 <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" />。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>從繫結項目堆疊的適當層次中，傳回要求的型別物件 (如果有的話)。</summary>
      <returns>要求的型別物件 <paramref name="T" /> (如果存在的話)，如果不存在則為 null。</returns>
      <param name="context">繫結項目的 <see cref="T:System.ServiceModel.Channels.BindingContext" />。</param>
      <typeparam name="T">此方法所查詢的型別物件。</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.MaxSessionSize">
      <summary>取得或設定工作階段中可將傳輸程序最佳化的可用記憶體上限。</summary>
      <returns>工作階段的大小上限，以位元組為單位。預設值為 2048 個位元組。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">這個值小於或等於零。</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.MessageVersion">
      <summary>取得或設定已使用或需要使用的 SOAP 訊息和 WS-Addressing 版本。</summary>
      <returns>已使用或需要使用的 <see cref="T:System.ServiceModel.Channels.MessageVersion" />。</returns>
      <exception cref="T:System.ArgumentNullException">設定的值為 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">設定的值為不支援的封套版本。</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.ReaderQuotas">
      <summary>取得 XML 訊息複雜度的條件約束，而這些條件約束可由以此繫結項目所設定的端點處理。</summary>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />，指定已交換之 SOAP 訊息的複雜度條件約束。接下來的＜備註＞一節提供了這些條件約束的預設值。</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.Binding">
      <summary>包含繫結項目，這些項目會指定用於用戶端與服務之通訊的通訊協定、傳輸和訊息編碼器。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.#ctor">
      <summary>使用預設的名稱和命名空間，初始化 <see cref="T:System.ServiceModel.Channels.Binding" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.#ctor(System.String,System.String)">
      <summary>從服務之指定的繫結，初始化 <see cref="T:System.ServiceModel.Channels.Binding" /> 類別的新執行個體。</summary>
      <param name="name">繫結的 <see cref="P:System.ServiceModel.Channels.Binding.Name" />。</param>
      <param name="ns">繫結的 <see cref="P:System.ServiceModel.Channels.Binding.Namespace" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 是 null 或空字串。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ns" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])">
      <summary>在用戶端上建置通道處理站堆疊，此堆疊會建立指定的通道型別，並滿足物件陣列所指定的功能。</summary>
      <returns>屬於 <paramref name="TChannel" /> 型別的 <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" />，可滿足集合所指定的功能。</returns>
      <param name="parameters">物件陣列，可指定所建置之通道處理站的需求。</param>
      <typeparam name="TChannel">通道處理站所產生之通道的型別。</typeparam>
      <exception cref="T:System.InvalidOperationException">傳輸項目遺失或發生錯誤，或是配置無效或未指定訊息版本。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>在用戶端上建置通道處理站堆疊，此堆疊會建立指定的通道型別，並滿足繫結參數集合所指定的功能。</summary>
      <returns>屬於 <paramref name="TChannel" /> 型別的 <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" />，可滿足集合所指定的功能。</returns>
      <param name="parameters">指定所建置之通道處理站需求的 <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" />。</param>
      <typeparam name="TChannel">通道處理站所產生之通道的型別。</typeparam>
      <exception cref="T:System.InvalidOperationException">傳輸項目遺失或發生錯誤，或是配置無效或未指定訊息版本。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])">
      <summary>傳回值，這個值指出目前的繫結是否可以在用戶端上建置滿足物件陣列指定之需求的通道處理站堆疊。</summary>
      <returns>如果可以在用戶端上建置指定的通道處理站堆疊則為 true，否則為 false。</returns>
      <param name="parameters">物件陣列，可指定所建置之通道處理站的需求。</param>
      <typeparam name="TChannel">正在測試其處理站的通道型別。</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>傳回值，這個值指出目前的繫結是否可以在用戶端上建置滿足指定之繫結參數集合的通道處理站堆疊。</summary>
      <returns>如果可以在用戶端上建置指定的通道處理站堆疊則為 true，否則為 false。</returns>
      <param name="parameters">指定所建置之通道處理站需求的 <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" />。</param>
      <typeparam name="TChannel">正在測試其處理站的通道型別。</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.CloseTimeout">
      <summary>取得或設定針對連線所提供的時間間隔 (此連線要在傳輸引發例外狀況之前關閉)。</summary>
      <returns>
        <see cref="T:System.Timespan" />，指定關閉作業在逾時之前多久必須完成。預設值為 1 分鐘。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">這個值小於零或太大。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.CreateBindingElements">
      <summary>在衍生類別 (Derived Class) 中覆寫時，會建立集合，此集合中包含屬於目前繫結之一部分的繫結項目。</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.BindingElement" /> 型別的 <see cref="T:System.Collections.Generic.ICollection`1" /> 物件，其中包含目前繫結物件中的繫結項目 (依正確的順序)。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>從繫結堆疊的適當層次中，傳回要求的型別物件 (如果有)。</summary>
      <returns>要求的型別物件 <paramref name="T" /> (如果存在的話)，如果不存在則為 null。</returns>
      <param name="parameters">指定所建置之通道接聽程式需求的 <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" />。</param>
      <typeparam name="T">此方法所查詢的型別物件。</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.MessageVersion">
      <summary>取得用戶端所使用的訊息版本及使用繫結所設定的服務。</summary>
      <returns>用戶端所使用的 <see cref="T:System.ServiceModel.Channels.MessageVersion" /> 及使用繫結所設定的服務。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.Name">
      <summary>取得或設定繫結的名稱。</summary>
      <returns>繫結的名稱。預設名稱為 null。</returns>
      <exception cref="T:System.ArgumentException">設定的值不能是 null 或空字串。</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.Namespace">
      <summary>取得或設定繫結的 XML 命名空間。</summary>
      <returns>繫結的 XML 命名空間。預設值為 "http://tempuri.org/"。</returns>
      <exception cref="T:System.ArgumentNullException">設定的值不能是 null。</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.OpenTimeout">
      <summary>取得或設定針對連線所提供的時間間隔 (此連線要在傳輸引發例外狀況之前開啟)。</summary>
      <returns>指定必須在逾時前完成開啟作業之寬限時間的預設 <see cref="T:System.Timespan" />。預設值為 1 分鐘。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">這個值小於零或太大。</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.ReceiveTimeout">
      <summary>取得或設定連線中斷之前，可以維持非作用狀態的時間間隔 (在此期間未接收應用程式訊息)。</summary>
      <returns>
        <see cref="T:System.Timespan" />，指定應用程式在逾時之前多久必須接收訊息。預設值為 10 分鐘。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">這個值小於零或太大。</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.Scheme">
      <summary>在衍生類別中實作時，會設定 URI 配置，此配置可指定繫結所建置之通道和接聽程式處理站所使用的傳輸。</summary>
      <returns>URI 配置，此配置會由目前繫結所建置之處理站建立的通道和接聽程式所使用。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.SendTimeout">
      <summary>取得或設定針對寫入作業所提供的時間間隔 (此作業要在傳輸引發例外狀況之前完成)。</summary>
      <returns>指定必須在逾時前完成寫入作業之寬限時間的 <see cref="T:System.Timespan" />。預設值為 1 分鐘。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">這個值小於零或太大。</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.BindingContext">
      <summary>提供建置通道接聽程式和通道處理站所需之位址、繫結、繫結項目和繫結參數的相關資訊。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.#ctor(System.ServiceModel.Channels.CustomBinding,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>為指定的繫結和繫結參數集合，初始化 <see cref="T:System.ServiceModel.Channels.BindingContext" /> 類別的執行個體。</summary>
      <param name="binding">通道的 <see cref="T:System.ServiceModel.Channels.CustomBinding" />。</param>
      <param name="parameters">通道的 <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binding" /> 為 null。</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.BindingContext.Binding">
      <summary>取得建置於目前內容中之通道的繫結。</summary>
      <returns>建置於目前內容中之通道的 <see cref="T:System.ServiceModel.Channels.CustomBinding" />。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.BindingContext.BindingParameters">
      <summary>取得建置於目前內容中之通道的繫結參數集合。</summary>
      <returns>建置於目前內容中之通道的 <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" />。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.BuildInnerChannelFactory``1">
      <summary>針對目前通道處理站下方指定之型別的通道建置內部通道處理站。</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.IChannel" /> 型別的 <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" />，表示目前通道處理站的內部通道處理站。</returns>
      <typeparam name="TChannel">內部通道處理站所產生之 <see cref="T:System.ServiceModel.Channels.IChannel" /> 物件的型別。</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.CanBuildInnerChannelFactory``1">
      <summary>傳回值，這個值表示內部通道處理站是否可以產生指定之型別的通道。</summary>
      <returns>如果內部通道處理站可以產生指定的 <paramref name="TChannel" /> 則為 true，否則為 false。</returns>
      <typeparam name="TChannel">內部通道處理站所產生之 <see cref="T:System.ServiceModel.Channels.IChannel" /> 物件的型別。</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.Clone">
      <summary>傳回目前通道建置內容的複本。</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.BindingContext" /> 物件，它是目前通道建置內容的複本。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.GetInnerProperty``1">
      <summary>從繫結堆疊的適當層次中，傳回要求的型別物件 (如果有)。</summary>
      <returns>要求的型別物件 <paramref name="T" /> (如果存在的話)，如果不存在則為 null。</returns>
      <typeparam name="T">此方法所查詢的型別物件。</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.BindingContext.RemainingBindingElements">
      <summary>取得其他繫結項目用來建構通道堆疊的繫結項目。</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.BindingElementCollection" />，其中包含其他繫結項目用來建構通道堆疊的繫結項目。</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.BindingElement">
      <summary>繫結的項目，這些繫結可以建置各種通道型別的通道處理站和通道接聽程式，以用來處理傳出和傳入的訊息。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.Channels.BindingElement" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.#ctor(System.ServiceModel.Channels.BindingElement)">
      <summary>從指定的繫結項目初始化 <see cref="T:System.ServiceModel.Channels.BindingElement" /> 類別的新執行個體。</summary>
      <param name="elementToBeCloned">要複製的 <see cref="T:System.ServiceModel.Channels.BindingElement" />。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>初始化通道處理站，以便從繫結內容產生指定型別的通道。</summary>
      <returns>型別 <paramref name="TChannel" /> 的 <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> 是從 <paramref name="context" />初始化的。</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" />，其中提供繫結項目的內容。</param>
      <typeparam name="TChannel">處理站建置之通道的型別。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>傳回值，指出繫結項目是否可以建置特定通道型別的通道處理站。</summary>
      <returns>如果繫結項目可以建置 <paramref name="TChannel" /> 型別的 <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" />，則為 true，否則為 false。</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" />，其中提供繫結項目的內容。</param>
      <typeparam name="TChannel">通道處理站所產生之通道的型別。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.Clone">
      <summary>在衍生類別中覆寫時，傳回繫結項目物件的複本。</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.BindingElement" /> 物件，其為原始物件的深層複製。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>在衍生類別中覆寫時，從繫結堆疊的適當層次中，傳回要求的型別物件 (如果有的話)。</summary>
      <returns>要求的型別物件 <paramref name="T" /> (如果存在的話)，如果不存在則為 null。</returns>
      <param name="context">繫結項目的 <see cref="T:System.ServiceModel.Channels.BindingContext" />。</param>
      <typeparam name="T">此方法所查詢的型別物件。</typeparam>
    </member>
    <member name="T:System.ServiceModel.Channels.BindingElementCollection">
      <summary>表示用於繫結之繫結項目的集合。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.Channels.BindingElement})">
      <summary>從繫結項目的可列舉集合，初始化 <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> 類別的新執行個體。</summary>
      <param name="elements">泛型型別 <see cref="T:System.ServiceModel.Channels.BindingElement" /> 的 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 可以用來初始化集合。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elements" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.#ctor(System.ServiceModel.Channels.BindingElement[])">
      <summary>從繫結項目的陣列，初始化 <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> 類別的新執行個體。</summary>
      <param name="elements">用來初始化集合之 <see cref="T:System.ServiceModel.Channels.BindingElement" /> 型別的 <see cref="T:System.Array" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elements" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.AddRange(System.ServiceModel.Channels.BindingElement[])">
      <summary>將陣列中的繫結項目新增至繫結項目的集合。</summary>
      <param name="elements">要加入至集合中之 <see cref="T:System.ServiceModel.Channels.BindingElement" /> 型別的 <see cref="T:System.Array" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elements" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.Clone">
      <summary>建立繫結項目集合的複本。</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.BindingElementCollection" />的複本。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.Contains(System.Type)">
      <summary>傳回值，這個值指出指定之型別的繫結項目是否屬於繫結項目的集合。</summary>
      <returns>如果指定的繫結項目型別包含在集合中則為 true，否則為 false。</returns>
      <param name="bindingElementType">正在測試以加入集合中的繫結項目型別。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bindingElementType" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.Find``1">
      <summary>從繫結項目的集合中傳回指定之型別的第一個項目。</summary>
      <returns>如果有找到的話，則為 <see cref="T:System.Type" /> 型別的項目，如果找不到則為 0 (如果 <paramref name="T" /> 為實值型別 (Value Type)) 或 null (如果 <paramref name="T" /> 為參考型別 (Reference Type))。</returns>
      <typeparam name="T">要尋找之項目的 <see cref="T:System.Type" />。</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.FindAll``1">
      <summary>從繫結項目的集合中傳回指定之型別的所有項目。</summary>
      <returns>如果有找到的話，則為 <see cref="T:System.Type" /> 型別之所有項目的 <see cref="T:System.Collections.ObjectModel.Collection`1" />，如果找不到則為 0 (如果 <paramref name="T" /> 為實值型別) 或 null (如果 <paramref name="T" /> 為參考型別)。</returns>
      <typeparam name="T">要尋找之項目的 <see cref="T:System.Type" />。</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.InsertItem(System.Int32,System.ServiceModel.Channels.BindingElement)">
      <summary>將繫結項目插入繫結項目集合內的指定位置。</summary>
      <param name="index">集合中要插入繫結項目的位置。</param>
      <param name="item">要插入的 <see cref="T:System.ServiceModel.Channels.BindingElement" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.Remove``1">
      <summary>從繫結項目的集合中移除指定之型別的繫結項目。</summary>
      <returns>移除之 <see cref="T:System.Type" /> 型別的項目。</returns>
      <typeparam name="T">要尋找之項目的 <see cref="T:System.Type" />。</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.RemoveAll``1">
      <summary>從繫結項目的集合中移除指定之型別的所有繫結項目。</summary>
      <returns>找到之 <see cref="T:System.Type" /> 型別之所有項目的 <see cref="T:System.Collections.ObjectModel.Collection`1" />。</returns>
      <typeparam name="T">要尋找之項目的 <see cref="T:System.Type" />。</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.SetItem(System.Int32,System.ServiceModel.Channels.BindingElement)">
      <summary>取代繫結項目集合中位於指定之索引處的繫結項目。</summary>
      <param name="index">要取代的項目之以零起始的索引。</param>
      <param name="item">指定之 <paramref name="index" /> 處的 <see cref="T:System.ServiceModel.Channels.BindingElement" /> 項目的新值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> 為 null。</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.BindingParameterCollection">
      <summary>表示繫結參數的集合，這些參數可儲存繫結項目建立處理站時所用的資訊。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingParameterCollection.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingParameterCollection.GetKeyForItem(System.Object)">
      <summary>取得集合中所包含之項目的索引鍵。</summary>
      <returns>
        <see cref="T:System.Type" /> 物件，表示集合中指定之 <paramref name="item" /> 的索引鍵。</returns>
      <param name="item">要擷取其索引鍵之集合中的項目。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingParameterCollection.InsertItem(System.Int32,System.Object)">
      <summary>將元素插入至這個集合中的指定索引處。</summary>
      <param name="index">集合中應插入 <paramref name="item" /> 位置的以零起始的索引。</param>
      <param name="item">要插入至集合的物件。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingParameterCollection.SetItem(System.Int32,System.Object)">
      <summary>以新物件取代位於指定索引上的項目。</summary>
      <param name="index">要設定新 <paramref name="item" /> 之以零起始的索引。</param>
      <param name="item">要在集合中設定的物件。</param>
    </member>
    <member name="T:System.ServiceModel.Channels.BodyWriter">
      <summary>表示訊息本文的寫入器。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BodyWriter.#ctor(System.Boolean)">
      <summary>初始化 <see cref="T:System.ServiceModel.Channels.BodyWriter" /> 類別的新執行個體，此類別會明確指出是否要緩衝處理。</summary>
      <param name="isBuffered">如果可以多次呼叫本文寫入器則為 true，否則為 false。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.BodyWriter.CreateBufferedCopy(System.Int32)">
      <summary>建立本文的緩衝處理複本。</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.BodyWriter" />，其中包含這個物件的複本。</returns>
      <param name="maxBufferSize">本文緩衝區的大小上限。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="maxBufferSize" /> 小於零。</exception>
      <exception cref="T:System.InvalidOperationException">已經寫入本文，無法再次寫入，或是無法緩衝處理本文寫入器。</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.BodyWriter.IsBuffered">
      <summary>取得值，這個值表示是否可以多次呼叫寫入方法。</summary>
      <returns>如果可以多次呼叫本文寫入器則為 true，否則為 false。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BodyWriter.OnCreateBufferedCopy(System.Int32)">
      <summary>提供寫入本文內容時的擴充點。</summary>
      <returns>具有指定之緩衝區大小上限的 <see cref="T:System.ServiceModel.Channels.BodyWriter" />。</returns>
      <param name="maxBufferSize">本文緩衝區的大小上限。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.BodyWriter.OnWriteBodyContents(System.Xml.XmlDictionaryWriter)">
      <summary>當實作時，提供寫入本文內容時的擴充點。</summary>
      <param name="writer">用於寫出訊息本文的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.BodyWriter.WriteBodyContents(System.Xml.XmlDictionaryWriter)">
      <summary>寫出訊息本文的內容。</summary>
      <param name="writer">用於寫出訊息本文的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> 為 null。</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.BufferManager">
      <summary>許多 Windows Communication Foundation (WCF) 功能都需要使用緩衝區，但是反覆建立與終結緩衝區是相當費時的工作。您可以使用 <see cref="T:System.ServiceModel.Channels.BufferManager" /> 類別管理緩衝區集區。當您產生這個類別時會建立集區與其緩衝區，而當記憶體回收要收回緩衝區集區時就會加以終結。當您每次需要使用緩衝區時，就從集區取用一個，使用完畢後再交還給集區。這個程序比每次需要使用時才建立與終結緩衝區要快得多。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.Channels.BufferManager" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.Clear">
      <summary>釋放目前快取在管理員中的緩衝區。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.CreateBufferManager(System.Int64,System.Int32)">
      <summary>使用指定的緩衝區集區大小上限，以及集區中個別緩衝區的大小上限建立新的 BufferManager。</summary>
      <returns>傳回具有指定之參數的 <see cref="T:System.ServiceModel.Channels.BufferManager" /> 物件。</returns>
      <param name="maxBufferPoolSize">集區大小上限。</param>
      <param name="maxBufferSize">個別緩衝區大小上限。</param>
      <exception cref="T:System.InsufficientMemoryException">在適用於 Windows 市集應用程式的 .NET 或可攜式類別庫中，反而要攔截基底類別例外狀況 <see cref="T:System.OutOfMemoryException" />。記憶體不足，無法建立要求的緩衝區集區。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="maxBufferPoolSize" /> 或 <paramref name="maxBufferSize" /> 小於零。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.ReturnBuffer(System.Byte[])">
      <summary>將緩衝區傳回集區。</summary>
      <param name="buffer">傳回之緩衝區的參考。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 參考不可以是 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="buffer" /> 的長度不符合集區的緩衝區長度屬性。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.TakeBuffer(System.Int32)">
      <summary>從集區取得最少為指定大小的緩衝區。</summary>
      <returns>符合所要求之緩衝區大小的位元組陣列。</returns>
      <param name="bufferSize">要求緩衝區的大小 (以位元組為單位)。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="bufferSize" /> 不能小於零。</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelBase">
      <summary>提供自訂通道的基底實作。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelBase.#ctor(System.ServiceModel.Channels.ChannelManagerBase)">
      <summary>初始化 <see cref="T:System.ServiceModel.Channels.ChannelBase" /> 類別的新執行個體。</summary>
      <param name="channelManager">
        <see cref="T:System.ServiceModel.Channels.ChannelManagerBase" />，提供通道作業 (傳送、接收、開啟和關閉作業) 的預設逾時。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="channelManager" /> 為 null。</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.DefaultCloseTimeout">
      <summary>取得針對要完成之關閉作業所提供的預設時間間隔。</summary>
      <returns>預設 <see cref="T:System.Timespan" />，指定必須在逾時前多久完成關閉作業。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.DefaultOpenTimeout">
      <summary>取得針對要完成之開啟作業所提供的預設時間間隔。</summary>
      <returns>預設 <see cref="T:System.Timespan" />，指定必須在逾時前多久完成開啟作業。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.DefaultReceiveTimeout">
      <summary>取得針對要完成之接收作業所提供的預設時間間隔。</summary>
      <returns>指定必須在逾時前完成接收作業之寬限時間的預設 <see cref="T:System.Timespan" />。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.DefaultSendTimeout">
      <summary>取得針對要完成之傳送作業所提供的預設時間間隔。</summary>
      <returns>指定必須在逾時前完成傳送作業之寬限時間的預設 <see cref="T:System.Timespan" />。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelBase.GetProperty``1">
      <summary>從通道堆疊的適當層次中，傳回要求的型別物件 (如果有的話)。</summary>
      <returns>要求的型別物件 <paramref name="T" /> (如果存在的話)，如果不存在則為 null。</returns>
      <typeparam name="T">此方法所查詢的型別物件。</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.Manager">
      <summary>取得與目前通道關聯的通道管理員。</summary>
      <returns>與目前通道關聯的 <see cref="T:System.ServiceModel.Channels.ChannelManagerBase" />。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelBase.OnClosed">
      <summary>您可以在轉換到關閉狀態期間使用診斷追蹤。</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#CloseTimeout">
      <summary>取得通訊物件叫用之關閉方法逾時前所經過的時間間隔。</summary>
      <returns>
        <see cref="T:System.Timespan" />，其指定在關閉方法逾時之前所等待的時間間隔。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#OpenTimeout">
      <summary>取得通訊物件叫用之開啟方法逾時前所經過的時間間隔。</summary>
      <returns>
        <see cref="T:System.Timespan" />，其指定在開啟方法逾時之前所等待的時間間隔。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#ReceiveTimeout">
      <summary>取得通訊物件叫用之接收方法逾時前所經過的時間間隔。</summary>
      <returns>
        <see cref="T:System.Timespan" />，其指定在接收方法逾時之前所等待的時間間隔。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#SendTimeout">
      <summary>取得通訊物件叫用之傳送方法逾時前所經過的時間間隔。</summary>
      <returns>
        <see cref="T:System.Timespan" />，其指定在傳送方法逾時之前所等待的時間間隔。</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelFactoryBase">
      <summary>針對所有自訂通道處理站提供通用基底實作 (Implementation)。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.Channels.ChannelFactoryBase" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)">
      <summary>使用指定的預設通訊逾時，初始化 <see cref="T:System.ServiceModel.Channels.ChannelFactoryBase" /> 類別的新執行個體。</summary>
      <param name="timeouts">
        <see cref="T:System.ServiceModel.IDefaultCommunicationTimeouts" />，可在交換訊息時，指定開啟、傳送、接收和關閉作業的預設逾時值。</param>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelFactoryBase.DefaultCloseTimeout">
      <summary>取得針對要完成之關閉作業所提供的預設時間間隔。</summary>
      <returns>預設 <see cref="T:System.Timespan" />，指定必須在逾時前多久完成關閉作業。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelFactoryBase.DefaultOpenTimeout">
      <summary>取得針對要完成之開啟作業所提供的預設時間間隔。</summary>
      <returns>預設 <see cref="T:System.Timespan" />，指定必須在逾時前多久完成開啟作業。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelFactoryBase.DefaultReceiveTimeout">
      <summary>取得針對要完成之接收作業所提供的預設時間間隔。</summary>
      <returns>指定必須在逾時前完成接收作業之寬限時間的預設 <see cref="T:System.Timespan" />。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelFactoryBase.DefaultSendTimeout">
      <summary>取得針對要完成之傳送作業所提供的預設時間間隔。</summary>
      <returns>指定必須在逾時前完成傳送作業之寬限時間的預設 <see cref="T:System.Timespan" />。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.GetProperty``1">
      <summary>從通道堆疊的適當層次中，傳回要求的型別物件 (如果有)。</summary>
      <returns>要求的型別物件 T (如果存在的話)，如果不存在則為 null。</returns>
      <typeparam name="T">此方法所查詢的型別物件。</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.OnAbort">
      <summary>在通訊物件上插入處理 (當它因為叫用同步中止作業而轉換到關閉狀態之後)。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>開始非同步作業，以便關閉處理站所建立的每一個通道。</summary>
      <returns>
        <see cref="T:System.IAsyncResult" />，參考非同步關閉作業。</returns>
      <param name="timeout">指定必須在逾時前完成關閉作業之寬限時間的 <see cref="T:System.Timespan" />。</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 委派，這個委派會在非同步關閉作業完成時收到通知。</param>
      <param name="state">應用程式所指定的物件，其中包含與非同步關閉作業相關的狀態資訊。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.OnClose(System.TimeSpan)">
      <summary>在通訊物件上插入處理 (當它轉換到開啟狀態之後)，此作業必須在指定的時間間隔內完成。</summary>
      <param name="timeout">指定必須在逾時前完成關閉作業之寬限時間的 <see cref="T:System.Timespan" />。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.OnEndClose(System.IAsyncResult)">
      <summary>完成非同步作業，以便關閉處理站所開啟的關閉通道。</summary>
      <param name="result">由呼叫 <see cref="M:System.ServiceModel.Channels.ChannelFactoryBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" /> 方法所傳回的 <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelFactoryBase`1">
      <summary>提供用戶端上通道處理站的通用基底實作，以建立連接至指定之位址的特定型別通道。</summary>
      <typeparam name="TChannel">處理站所產生之通道的型別。</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.Channels.ChannelFactoryBase`1" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)">
      <summary>使用指定的預設通訊逾時，初始化 <see cref="T:System.ServiceModel.Channels.ChannelFactoryBase`1" /> 類別的新執行個體。</summary>
      <param name="timeouts">
        <see cref="T:System.ServiceModel.IDefaultCommunicationTimeouts" />，可在交換訊息時，指定開啟、傳送、接收和關閉作業的預設逾時值。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.CreateChannel(System.ServiceModel.EndpointAddress)">
      <summary>建立具有指定之端點位址的特定通道型別。</summary>
      <returns>具有指定之 <paramref name="address" /> 的 <paramref name="TChannel" /> 型別通道。</returns>
      <param name="address">通道傳送訊息之目標遠端端點的 <see cref="T:System.ServiceModel.EndpointAddress" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>建立具有指定之傳輸和端點位址的特定通道型別。</summary>
      <returns>具有指定之遠端和傳輸位址的 <paramref name="TChannel" /> 型別通道。</returns>
      <param name="address">通道傳送訊息之目標遠端端點的 <see cref="T:System.ServiceModel.EndpointAddress" />。</param>
      <param name="via">包含在輸出通道上傳送訊息之目標傳輸位址的 <see cref="T:System.Uri" />。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnAbort">
      <summary>中止通道處理站所管理的每一個通道。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>開始非同步作業，在指定的時間間隔內關閉與通道處理站相關聯的所有通道。</summary>
      <returns>
        <see cref="T:System.IAsyncResult" />，這個物件會參考非同步關閉作業。</returns>
      <param name="timeout">
        <see cref="T:System.Timespan" />，指定必須在逾時前完成關閉作業之寬限時間的。</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 委派，這個委派會在非同步關閉作業完成時收到通知。</param>
      <param name="state">應用程式所指定的物件，其中包含與非同步關閉作業相關的狀態資訊。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnClose(System.TimeSpan)">
      <summary>在指定的時間間隔內關閉與通道處理站相關聯的所有通道。</summary>
      <param name="timeout">
        <see cref="T:System.Timespan" />，指定必須在逾時前完成關閉作業之寬限時間的。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnCreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>在衍生類別內實作時，提供建立通道時的擴充點。</summary>
      <returns>具有指定之位址的 <paramref name="TChannel" /> 型別通道。</returns>
      <param name="address">通道傳送訊息之目標遠端端點的 <see cref="T:System.ServiceModel.EndpointAddress" />。</param>
      <param name="via">包含在輸出通道上傳送訊息之目標傳輸位址的 <see cref="T:System.Uri" />。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnEndClose(System.IAsyncResult)">
      <summary>完成非同步作業，在指定的時間間隔內關閉與通道處理站相關聯的所有通道。</summary>
      <param name="result">由呼叫 <see cref="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" /> 方法所傳回的 <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.ValidateCreateChannel">
      <summary>確認通道處理站已開啟，而且準備好要建立通道。</summary>
      <exception cref="T:System.ObjectDisposedException">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 狀態中。</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態中。</exception>
      <exception cref="T:System.InvalidOperationException">目前的通道處理站不在 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 狀態下。</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelManagerBase">
      <summary>為與通道和接聽程式處理站關聯的預設逾時值管理提供基底實作。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelManagerBase.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.Channels.ChannelManagerBase" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.DefaultReceiveTimeout">
      <summary>在衍生類別 (Derived Class) 中覆寫時，取得通道必須完成訊息接收的預設時間間隔。</summary>
      <returns>預設的 <see cref="T:System.Timespan" />，指定一旦叫用接收方法後，在逾時發生之前通道必須完成訊息接收的時間長度。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.DefaultSendTimeout">
      <summary>在衍生類別中覆寫時，取得通道必須完成訊息傳送的預設時間間隔。</summary>
      <returns>預設的 <see cref="T:System.Timespan" />，指定一旦叫用傳送方法後，在逾時發生之前通道必須完成訊息傳送的時間長度。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#CloseTimeout">
      <summary>取得通訊物件叫用之關閉方法逾時前所經過的時間間隔。</summary>
      <returns>
        <see cref="T:System.Timespan" />，其指定在關閉方法逾時之前所等待的時間間隔。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#OpenTimeout">
      <summary>取得通訊物件叫用之開啟方法逾時前所經過的時間間隔。</summary>
      <returns>
        <see cref="T:System.Timespan" />，其指定在開啟方法逾時之前所等待的時間間隔。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#ReceiveTimeout">
      <summary>取得通訊物件叫用之接收方法逾時前所經過的時間間隔。</summary>
      <returns>
        <see cref="T:System.Timespan" />，其指定在接收方法逾時之前所等待的時間間隔。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#SendTimeout">
      <summary>取得通訊物件叫用之傳送方法逾時前所經過的時間間隔。</summary>
      <returns>
        <see cref="T:System.Timespan" />，其指定在傳送方法逾時之前所等待的時間間隔。</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelParameterCollection">
      <summary>表示通道參數的集合。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.Channels.ChannelParameterCollection" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.#ctor(System.ServiceModel.Channels.IChannel)">
      <summary>初始化 <see cref="T:System.ServiceModel.Channels.ChannelParameterCollection" /> 類別的新執行個體。</summary>
      <param name="channel">參數位於此集合中的通道。</param>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelParameterCollection.Channel">
      <summary>取得參數位於此集合中的通道。</summary>
      <returns>參數位於此集合中的 <see cref="T:System.ServiceModel.Channels.IChannel" />。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.ClearItems">
      <summary>清除參數的集合。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.InsertItem(System.Int32,System.Object)">
      <summary>將指定的項目插入至集合中的指定索引處。</summary>
      <param name="index">此項目在集合中的索引。</param>
      <param name="item">要加入至集合中的項目。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.PropagateChannelParameters(System.ServiceModel.Channels.IChannel)">
      <summary>將目前集合中的參數新增至指定之通道的 <see cref="T:System.ServiceModel.Channels.ChannelParameterCollection" />。</summary>
      <param name="innerChannel">接收目前集合參數的通道。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.RemoveItem(System.Int32)">
      <summary>從集合中移除參數。</summary>
      <param name="index">要移除之參數的索引。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.SetItem(System.Int32,System.Object)">
      <summary>取代集合中位於指定之索引處的項目。</summary>
      <param name="index">要取代之項目的索引。</param>
      <param name="item">取代項目的值。</param>
    </member>
    <member name="T:System.ServiceModel.Channels.CommunicationObject">
      <summary>提供對系統中所有通訊導向物件而言常用的基本狀態機器基底實作，這些物件包括通道、接聽程式，以及通道與接聽程式處理站。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.Channels.CommunicationObject" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.#ctor(System.Object)">
      <summary>使用可保護指定狀態轉換的互斥鎖定，初始化 <see cref="T:System.ServiceModel.Channels.CommunicationObject" /> 類別的新執行個體。</summary>
      <param name="mutex">會在狀態轉換期間保護類別執行個體的互斥鎖定。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Abort">
      <summary>導致通訊物件立即從目前的狀態轉換為關閉狀態。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
      <summary>開始非同步作業以關閉通訊物件。</summary>
      <returns>參考非同步關閉作業的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 委派，這個委派會接收完成非同步關閉作業的通知。</param>
      <param name="state">應用程式所指定的物件，其中包含與非同步關閉作業關聯的狀態資訊。</param>
      <exception cref="T:System.InvalidOperationException">通訊物件並非處於 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 狀態，無法修改。</exception>
      <exception cref="T:System.ObjectDisposedException">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 狀態，無法修改。</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態，無法修改。</exception>
      <exception cref="T:System.TimeoutException">已超過為作業分配的預設時間間隔，該作業未完成。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>開始非同步作業，關閉有已指定逾時的通訊物件。</summary>
      <returns>參考非同步關閉作業的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="timeout">
        <see cref="T:System.Timespan" />，指定關閉作業在逾時之前多久必須完成。</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 委派，這個委派會接收完成非同步關閉作業的通知。</param>
      <param name="state">應用程式所指定的物件，其中包含與非同步關閉作業關聯的狀態資訊。</param>
      <exception cref="T:System.InvalidOperationException">通訊物件並非處於 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 狀態，無法修改。</exception>
      <exception cref="T:System.ObjectDisposedException">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 狀態，無法修改。</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態，無法修改。</exception>
      <exception cref="T:System.TimeoutException">已超過為作業分配的預設時間間隔，該作業未完成。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
      <summary>開始非同步作業以開啟通訊物件。</summary>
      <returns>參考非同步開啟作業的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 委派，這個委派會接收非同步開啟作業完成的通知。</param>
      <param name="state">應用程式所指定的物件，其中包含與非同步開啟作業相關聯的狀態資訊。</param>
      <exception cref="T:System.InvalidOperationException">通訊物件並非處於 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 狀態，無法修改。</exception>
      <exception cref="T:System.ObjectDisposedException">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 狀態，無法修改。</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態，無法修改。</exception>
      <exception cref="T:System.TimeoutException">已超過為作業分配的預設時間間隔，該作業未完成。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>開始非同步作業，開啟有已指定時間間隔的通訊物件。</summary>
      <returns>參考非同步開啟作業的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="timeout">
        <see cref="T:System.Timespan" />，指定必須在逾時前多久完成傳送作業。</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 委派，這個委派會接收非同步開啟作業完成的通知。</param>
      <param name="state">應用程式所指定的物件，其中包含與非同步開啟作業相關聯的狀態資訊。</param>
      <exception cref="T:System.InvalidOperationException">通訊物件並非處於 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 狀態，無法修改。</exception>
      <exception cref="T:System.ObjectDisposedException">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 狀態，無法修改。</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態，無法修改。</exception>
      <exception cref="T:System.TimeoutException">已超過為作業分配的預設時間間隔，該作業未完成。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Close">
      <summary>導致通訊物件從目前的狀態轉換為已關閉狀態。</summary>
      <exception cref="T:System.InvalidOperationException">通訊物件並非處於 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 狀態，無法修改。</exception>
      <exception cref="T:System.ObjectDisposedException">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 狀態，無法修改。</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態，無法修改。</exception>
      <exception cref="T:System.TimeoutException">已超過為作業分配的預設時間間隔，該作業未完成。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)">
      <summary>在指定時間間隔內，讓通訊物件從目前的狀態轉換為已關閉狀態。</summary>
      <param name="timeout">
        <see cref="T:System.Timespan" />，指定關閉作業在逾時之前多久必須完成。</param>
      <exception cref="T:System.InvalidOperationException">通訊物件並非處於 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 狀態，無法修改。</exception>
      <exception cref="T:System.ObjectDisposedException">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 狀態，無法修改。</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態，無法修改。</exception>
      <exception cref="T:System.TimeoutException">已超過為作業分配的預設時間間隔，該作業未完成。</exception>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Closed">
      <summary>當通訊物件轉換至已關閉狀態時發生。</summary>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Closing">
      <summary>當通訊物件轉換至關閉狀態時就會發生。</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.DefaultCloseTimeout">
      <summary>在衍生類別中覆寫時，取得提供用來讓關閉作業完成的預設時間間隔。</summary>
      <returns>預設 <see cref="T:System.Timespan" />，指定必須在逾時前多久完成關閉作業。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.DefaultOpenTimeout">
      <summary>在衍生類別中覆寫時，取得提供用來讓開啟作業完成的預設時間間隔。</summary>
      <returns>預設 <see cref="T:System.Timespan" />，指定必須在逾時前多久完成開啟作業。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)">
      <summary>完成非同步作業以關閉通訊物件。</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" />，在呼叫 <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.BeginClose" /> 方法時所傳回。</param>
      <exception cref="T:System.InvalidOperationException">通訊物件並非處於 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 狀態，無法修改。</exception>
      <exception cref="T:System.ObjectDisposedException">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 狀態，無法修改。</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態，無法修改。</exception>
      <exception cref="T:System.TimeoutException">已超過為作業分配的預設時間間隔，該作業未完成。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)">
      <summary>完成非同步作業以開啟通訊物件。</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" />，在呼叫 <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.BeginClose" /> 方法時所傳回。</param>
      <exception cref="T:System.InvalidOperationException">通訊物件並非處於 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 狀態，無法修改。</exception>
      <exception cref="T:System.ObjectDisposedException">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 狀態，無法修改。</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態，無法修改。</exception>
      <exception cref="T:System.TimeoutException">已超過為作業分配的預設時間間隔，該作業未完成。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Fault">
      <summary>導致通訊物件從目前的狀態轉換為錯誤狀態。</summary>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Faulted">
      <summary>當通訊物件轉換至錯誤狀態時發生。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType">
      <summary>取得通訊物件的型別。</summary>
      <returns>通訊物件的型別。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.IsDisposed">
      <summary>取得值，這個值表示是否已經處置通訊物件。</summary>
      <returns>如果通訊物件處於已關閉狀態，則為 true，否則為 false。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnAbort">
      <summary>在通訊物件上插入處理 (當它因為叫用同步中止作業而轉換到關閉狀態之後)。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>在通訊物件因為叫用非同步關閉作業而轉換到關閉狀態後，插入處理。</summary>
      <returns>
        <see cref="T:System.IAsyncResult" />，參考非同步關閉作業。</returns>
      <param name="timeout">指定必須在逾時前完成關閉作業之寬限時間的 <see cref="T:System.Timespan" />。</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 委派，這個委派會接收非同步關閉作業完成的通知。</param>
      <param name="state">應用程式所指定的物件，其中包含與非同步關閉作業相關的狀態資訊。</param>
      <exception cref="T:System.InvalidOperationException">通訊物件並非處於 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 狀態，無法修改。</exception>
      <exception cref="T:System.ObjectDisposedException">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 狀態，無法修改。</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態，無法修改。</exception>
      <exception cref="T:System.TimeoutException">已超過為作業分配的預設時間間隔，該作業未完成。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>在通訊物件上插入處理 (當它因為叫用非同步開啟作業而轉換到開啟狀態之後)。</summary>
      <returns>參考非同步開啟作業的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="timeout">
        <see cref="T:System.Timespan" />，指定必須在逾時前多久完成開啟作業。</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 委派，這個委派會接收非同步開啟作業完成的通知。</param>
      <param name="state">應用程式所指定的物件，其中包含與非同步開啟作業相關的狀態資訊。</param>
      <exception cref="T:System.InvalidOperationException">通訊物件並非處於 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 狀態，無法修改。</exception>
      <exception cref="T:System.ObjectDisposedException">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 狀態，無法修改。</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態，無法修改。</exception>
      <exception cref="T:System.TimeoutException">已超過為作業分配的預設時間間隔，該作業未完成。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)">
      <summary>在通訊物件上插入處理 (當它因為叫用同步關閉作業而轉換到關閉狀態之後)。</summary>
      <param name="timeout">指定必須在逾時前完成關閉作業之寬限時間的 <see cref="T:System.Timespan" />。</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">已針對處於 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態中的物件呼叫 <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.Close" />。</exception>
      <exception cref="T:System.TimeoutException">已超過為作業分配的預設時間間隔，該作業未完成。</exception>
      <exception cref="T:System.ServiceModel.CommunicationException">關閉物件時發生通訊錯誤。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnClosed">
      <summary>在將通訊物件轉換為關閉狀態期間會叫用。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnClosing">
      <summary>在將通訊物件轉換為關閉狀態期間會叫用。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)">
      <summary>在關閉通訊物件時完成非同步作業。</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" />，在呼叫 <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)" /> 方法時所傳回。</param>
      <exception cref="T:System.InvalidOperationException">通訊物件並非處於 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 狀態，無法修改。</exception>
      <exception cref="T:System.ObjectDisposedException">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 狀態，無法修改。</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態，無法修改。</exception>
      <exception cref="T:System.TimeoutException">已超過為作業分配的預設時間間隔，該作業未完成。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)">
      <summary>在開啟通訊物件時完成非同步作業。</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" />，在呼叫 <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)" /> 方法時所傳回。</param>
      <exception cref="T:System.InvalidOperationException">通訊物件並非處於 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 狀態，無法修改。</exception>
      <exception cref="T:System.ObjectDisposedException">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 狀態，無法修改。</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態，無法修改。</exception>
      <exception cref="T:System.TimeoutException">已超過為作業分配的預設時間間隔，該作業未完成。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnFaulted">
      <summary>在通訊物件上插入處理 (當它因為叫用同步錯誤作業而轉換到錯誤狀態之後)。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)">
      <summary>在通訊物件上插入處理 (當它轉換到開啟狀態之後)，此作業必須在指定的時間間隔內完成。</summary>
      <param name="timeout">
        <see cref="T:System.Timespan" />，指定必須在逾時前多久完成開啟作業。</param>
      <exception cref="T:System.InvalidOperationException">通訊物件並非處於 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 狀態，無法修改。</exception>
      <exception cref="T:System.ObjectDisposedException">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 狀態，無法修改。</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態，無法修改。</exception>
      <exception cref="T:System.TimeoutException">已超過為作業分配的預設時間間隔，該作業未完成。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnOpened">
      <summary>在將通訊物件轉換至已開啟狀態期間會叫用。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnOpening">
      <summary>在將通訊物件轉換至開啟狀態期間會叫用。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Open">
      <summary>導致通訊物件從已建立狀態轉換為已開啟狀態。</summary>
      <exception cref="T:System.InvalidOperationException">通訊物件並非處於 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 狀態，無法修改。</exception>
      <exception cref="T:System.ObjectDisposedException">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 狀態，無法修改。</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態，無法修改。</exception>
      <exception cref="T:System.TimeoutException">已超過為作業分配的預設時間間隔，該作業未完成。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)">
      <summary>在指定時間間隔內，讓通訊物件從已建立狀態轉換為已開啟狀態。</summary>
      <param name="timeout">指定必須在逾時前完成開啟作業之寬限時間的預設 <see cref="T:System.Timespan" />。</param>
      <exception cref="T:System.InvalidOperationException">通訊物件並非處於 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 狀態，無法修改。</exception>
      <exception cref="T:System.ObjectDisposedException">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 狀態，無法修改。</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態，無法修改。</exception>
      <exception cref="T:System.TimeoutException">已超過為作業分配的預設時間間隔，該作業未完成。</exception>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Opened">
      <summary>當通訊物件轉換至已開啟狀態時發生。</summary>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Opening">
      <summary>當通訊物件轉換至開啟狀態時發生。</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.State">
      <summary>取得值，這個值表示通訊物件目前的狀態。</summary>
      <returns>
        <see cref="T:System.ServiceModel.CommunicationState" /> 列舉中的值，表示物件目前的狀態。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.ThisLock">
      <summary>取得會在狀態轉換期間保護類別執行個體的互斥鎖定。</summary>
      <returns>會在狀態轉換期間保護類別執行個體的互斥鎖定。</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.CompressionFormat">
      <summary>指定通道壓縮格式。</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.CompressionFormat.Deflate">
      <summary>Deflate 壓縮格式。</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.CompressionFormat.GZip">
      <summary>GZip 壓縮格式。</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.CompressionFormat.None">
      <summary>非壓縮格式。</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.CustomBinding">
      <summary>從繫結項目的清單定義繫結。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.Channels.CustomBinding" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.Channels.BindingElement})">
      <summary>使用完整通道堆疊中的繫結項目，初始化 <see cref="T:System.ServiceModel.Channels.CustomBinding" /> 類別的新執行個體。</summary>
      <param name="bindingElementsInTopDownChannelStackOrder">
        <see cref="T:System.ServiceModel.Channels.BindingElement" /> 型別的 <see cref="T:System.Collections.Generic.IEnumerable`1" />，其中包含上下順序之通道堆疊的繫結項目。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bindingElementsInTopDownChannelStackOrder" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor(System.ServiceModel.Channels.Binding)">
      <summary>從指定之繫結的值，初始化 <see cref="T:System.ServiceModel.Channels.CustomBinding" /> 類別的新執行個體。</summary>
      <param name="binding">用來初始化自訂繫結的 <see cref="T:System.ServiceModel.Channels.Binding" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binding" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor(System.ServiceModel.Channels.BindingElement[])">
      <summary>從繫結項目的陣列，初始化 <see cref="T:System.ServiceModel.Channels.CustomBinding" /> 類別的新執行個體。</summary>
      <param name="bindingElementsInTopDownChannelStackOrder">用來初始化自訂繫結之 <see cref="T:System.ServiceModel.Channels.BindingElement" /> 型別的 <see cref="T:System.Array" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bindingElementsInTopDownChannelStackOrder" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor(System.String,System.String,System.ServiceModel.Channels.BindingElement[])">
      <summary>從具有指定之名稱和命名空間的繫結項目陣列，初始化 <see cref="T:System.ServiceModel.Channels.CustomBinding" /> 類別的新執行個體。</summary>
      <param name="name">繫結的名稱。</param>
      <param name="ns">繫結的命名空間。</param>
      <param name="bindingElementsInTopDownChannelStackOrder">用來初始化自訂繫結之 <see cref="T:System.ServiceModel.Channels.BindingElement" /> 型別的 <see cref="T:System.Array" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bindingElementsInTopDownChannelStackOrder" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.CreateBindingElements">
      <summary>從自訂繫結傳回繫結項目的一般集合。</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.BindingElement" /> 型別的 <see cref="T:System.Collections.Generic.ICollection`1" /> 物件，其中包含自訂繫結中的繫結項目。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CustomBinding.Elements">
      <summary>從自訂繫結取得繫結項目。</summary>
      <returns>包含自訂繫結中繫結項目的 <see cref="T:System.ServiceModel.Channels.BindingElementCollection" />。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CustomBinding.Scheme">
      <summary>取得自訂繫結所使用之傳輸的 URI 配置。</summary>
      <returns>自訂繫結所使用之傳輸的 URI 配置，如果沒有任何傳輸則為空字串 (<see cref="T:System.ServiceModel.Channels.TransportBindingElement" /> 為 null)。</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.FaultConverter">
      <summary>將通道擲回的例外狀況轉換為符合通道通訊協定的 SOAP 錯誤訊息。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.Channels.FaultConverter" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.GetDefaultFaultConverter(System.ServiceModel.Channels.MessageVersion)">
      <summary>取得預設的錯誤轉換器。</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.FaultConverter" /> 的執行個體。</returns>
      <param name="version">訊息版本。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)">
      <summary>嘗試建立例外狀況。</summary>
      <returns>如果成功轉換錯誤，則為 true，否則為 false。預設為 false。</returns>
      <param name="message">錯誤訊息。</param>
      <param name="fault">錯誤。</param>
      <param name="exception">如果轉換成功，則是指 SOAP 例外狀況，它會傳回做為 out 參數。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)">
      <summary>在錯誤轉換為 SOAP 例外狀況之後，會嘗試建立錯誤訊息。</summary>
      <returns>如果成功建立錯誤訊息，則為 true，否則為 false。預設為 false。</returns>
      <param name="exception">SOAP 例外狀況。</param>
      <param name="message">錯誤訊息會傳回做為 out 參數。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.TryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)">
      <summary>使用錯誤檢查包裝 <see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" />。</summary>
      <returns>如果成功轉換錯誤，則為 true，否則為 false。預設為 false。</returns>
      <param name="message">錯誤訊息。</param>
      <param name="fault">錯誤。</param>
      <param name="exception">如果轉換成功，則是指 SOAP 例外狀況，它會傳回做為 out 參數。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> 或 <paramref name="fault" /> 是 null。</exception>
      <exception cref="T:System.ArgumentNullException">
        <see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" /> 傳回 true，但是 <paramref name="exception" /> 為 null。</exception>
      <exception cref="T:System.ArgumentNullException">
        <see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" /> 傳回 false，但是 <paramref name="exception" /> 不是 null。</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.IChannel">
      <summary>定義所有通道物件都必須實作的基本介面。它會要求這些物件實作所有通訊物件所共用的狀態機器介面，並要求這些物件實作一個方法來從通道堆疊擷取物件。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannel.GetProperty``1">
      <summary>從通道堆疊的適當層次中，傳回要求的型別物件 (如果有)。</summary>
      <returns>要求的型別物件 <paramref name="T" /> (如果存在的話)，如果不存在則為 null。</returns>
      <typeparam name="T">此方法所查詢的型別物件。</typeparam>
    </member>
    <member name="T:System.ServiceModel.Channels.IChannelFactory">
      <summary>定義必須由通道處理站實作以產生通道的介面。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannelFactory.GetProperty``1">
      <summary>從通道堆疊的適當層次中，傳回要求的型別物件 (如果有)。</summary>
      <returns>要求的型別物件 <paramref name="T" /> (如果存在的話)，如果不存在則為 null。</returns>
      <typeparam name="T">此方法所查詢的型別物件。</typeparam>
    </member>
    <member name="T:System.ServiceModel.Channels.IChannelFactory`1">
      <summary>定義必須由通道處理站實作的介面 (該處理站會建立型別特有的通道)。</summary>
      <typeparam name="TChannel">通道處理站所建立的通道型別。</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)">
      <summary>建立指向指定之端點位址的指定型別通道。</summary>
      <returns>指定之端點位址的 <paramref name="TChannel" /> 型別通道。</returns>
      <param name="to">提供服務位置的 <see cref="T:System.ServiceModel.EndpointAddress" />。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>建立指定之端點位址的特定型別通道以及訊息傳送的目標傳輸位址。</summary>
      <returns>指定之端點位址的 <paramref name="TChannel" /> 型別通道和傳輸位址。</returns>
      <param name="to">提供服務位置的 <see cref="T:System.ServiceModel.EndpointAddress" />。</param>
      <param name="via">包含訊息傳送之目標傳輸位址的 <see cref="T:System.Uri" />。</param>
    </member>
    <member name="T:System.ServiceModel.Channels.IDuplexChannel">
      <summary>定義通道必須實作以收送訊息的介面。</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IDuplexSession">
      <summary>針對在傳訊端點之間雙向通訊的每一端上實作的工作階段定義介面。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession(System.AsyncCallback,System.Object)">
      <summary>開始非同步作業，以便結束傳出工作階段。</summary>
      <returns>參考非同步傳出工作階段終止的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 委派。</param>
      <param name="state">包含這個要求之狀態資訊的 object。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>開始非同步作業來結束傳出工作階段，且包含此作業必須在限期內完成的指定逾時值。</summary>
      <returns>參考非同步傳出工作階段終止的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="timeout">指定作業必須完成之時間間隔的 <see cref="T:System.TimeSpan" /></param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 委派。</param>
      <param name="state">包含這個要求之狀態資訊的 object。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession">
      <summary>結束傳出工作階段，表示將不會再從與該工作階段相關聯之通道上的這個端點傳送任何訊息。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession(System.TimeSpan)">
      <summary>結束傳出工作階段，表示在指定的時間間隔內，將不會再從與該工作階段相關聯之通道上的這個端點傳送任何訊息。</summary>
      <param name="timeout">指定作業必須完成之時間間隔的 <see cref="T:System.TimeSpan" /></param>
    </member>
    <member name="M:System.ServiceModel.Channels.IDuplexSession.EndCloseOutputSession(System.IAsyncResult)">
      <summary>完成非同步作業來結束傳出工作階段，表示將不會再從與該工作階段相關聯之通道上的這個端點傳送任何訊息。</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" />，呼叫其中一種 <see cref="Overload:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession" /> 方法時傳回。</param>
    </member>
    <member name="T:System.ServiceModel.Channels.IDuplexSessionChannel">
      <summary>定義會將雙工通道與工作階段產生關聯的介面。</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IInputChannel">
      <summary>定義通道必須實作以接收訊息的介面。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.BeginReceive(System.AsyncCallback,System.Object)">
      <summary>開始非同步的作業，接收具有與該作業關聯之狀態物件的訊息。</summary>
      <returns>
        <see cref="T:System.IAsyncResult" />，參考非同步訊息接收。</returns>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 委派，這個委派會接收非同步作業完成的通知。</param>
      <param name="state">應用程式所指定的物件，其中包含與非同步作業相關聯的狀態資訊。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.BeginReceive(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>開始非同步的作業，接收具有已指定逾時以及與該作業關聯之狀態物件的訊息。</summary>
      <returns>
        <see cref="T:System.IAsyncResult" />，參考非同步的接收作業。</returns>
      <param name="timeout">
        <see cref="T:System.Timespan" />，指定等候訊息變成可以使用的時間間隔。</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 委派，這個委派會接收非同步作業完成的通知。</param>
      <param name="state">應用程式所指定的物件，其中包含與非同步作業相關聯的狀態資訊。</param>
      <exception cref="T:System.TimeoutException">在完成作業之前超出了指定的 <paramref name="timeout" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">指定的逾時小於零。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.BeginTryReceive(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>開始非同步的作業，接收具有已指定逾時以及與該作業關聯之狀態物件的訊息。</summary>
      <returns>
        <see cref="T:System.IAsyncResult" />，參考非同步的接收作業。</returns>
      <param name="timeout">
        <see cref="T:System.Timespan" />，指定等候訊息變成可以使用的時間間隔。</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 委派，這個委派會接收非同步作業完成的通知。</param>
      <param name="state">應用程式所指定的物件，其中包含與非同步作業相關聯的狀態資訊。</param>
      <exception cref="T:System.TimeoutException">在完成作業之前超出了指定的 <paramref name="timeout" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">指定的逾時小於零。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>開始非同步的「等候訊息到達」(wait-for-a-message-to-arrive) 作業，這個作業具有指定的逾時以及與該作業關聯之狀態物件。</summary>
      <returns>
        <see cref="T:System.IAsyncResult" />，參考非同步作業以等候訊息到達。</returns>
      <param name="timeout">
        <see cref="T:System.Timespan" />，指定等候訊息變成可以使用的時間間隔。</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 委派，這個委派會接收非同步作業完成的通知。</param>
      <param name="state">應用程式所指定的物件，其中包含與非同步作業相關聯的狀態資訊。</param>
      <exception cref="T:System.TimeoutException">在完成作業之前超出了指定的 <paramref name="timeout" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">指定的逾時小於零。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.EndReceive(System.IAsyncResult)">
      <summary>完成非同步作業，以便接收訊息。</summary>
      <returns>所接收的 <see cref="T:System.ServiceModel.Channels.Message" />。</returns>
      <param name="result">
        <see cref="T:System.IAsyncResult" />，呼叫其中一種 <see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" /> 方法時傳回。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.EndTryReceive(System.IAsyncResult,System.ServiceModel.Channels.Message@)">
      <summary>完成指定的非同步作業，以便接收訊息。</summary>
      <returns>如果在超過指定時間間隔之前接收到訊息，則為 true，否則為 false。</returns>
      <param name="result">由呼叫 <see cref="M:System.ServiceModel.Channels.IInputChannel.BeginTryReceive(System.TimeSpan,System.AsyncCallback,System.Object)" /> 方法所傳回的 <see cref="T:System.IAsyncResult" />。</param>
      <param name="message">所接收的 <see cref="T:System.ServiceModel.Channels.Message" />。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.EndWaitForMessage(System.IAsyncResult)">
      <summary>完成指定的非同步「等候訊息」(wait-for-a-message) 作業。</summary>
      <returns>如果訊息是在超過 <paramref name="timeout" /> 之前到達，則為 true，否則為 false。</returns>
      <param name="result">
        <see cref="T:System.IAsyncResult" />，識別要完成並從其中擷取最終結果的 <see cref="M:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage(System.TimeSpan,System.AsyncCallback,System.Object)" /> 作業。</param>
    </member>
    <member name="P:System.ServiceModel.Channels.IInputChannel.LocalAddress">
      <summary>取得輸入通道接收訊息的位址。</summary>
      <returns>
        <see cref="T:System.ServiceModel.EndpointAddress" />，輸入通道在上面接收訊息的位址。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.Receive">
      <summary>如果有收到訊息，則將該訊息傳回。如果沒有收到訊息，執行緒就會封鎖一段預設間隔時間。</summary>
      <returns>所接收的 <see cref="T:System.ServiceModel.Channels.Message" />。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.Receive(System.TimeSpan)">
      <summary>如果有收到訊息，則將該訊息傳回。如果沒有收到訊息，執行緒就會封鎖一段指定的間隔時間。</summary>
      <returns>所接收的 <see cref="T:System.ServiceModel.Channels.Message" />。</returns>
      <param name="timeout">
        <see cref="T:System.Timespan" />，指定必須在逾時和擲回 <see cref="T:System.TimeoutException" /> 多久之前完成接收作業。</param>
      <exception cref="T:System.TimeoutException">在完成作業之前超出了指定的 <paramref name="timeout" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">指定的逾時小於零。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.TryReceive(System.TimeSpan,System.ServiceModel.Channels.Message@)">
      <summary>嘗試在指定的時間間隔內接收訊息。</summary>
      <returns>如果在超過 <paramref name="timeout" /> 之前接收到訊息，則為 true，否則為 false。</returns>
      <param name="timeout">
        <see cref="T:System.IAsyncResult" />，呼叫其中一種 <see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" /> 方法時傳回。</param>
      <param name="message">所接收的 <see cref="T:System.ServiceModel.Channels.Message" />。</param>
      <exception cref="T:System.TimeoutException">在完成作業之前超出了指定的 <paramref name="timeout" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">指定的逾時小於零。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.WaitForMessage(System.TimeSpan)">
      <summary>傳回值，這個值會表示訊息是否是在指定的時間間隔內到達。</summary>
      <returns>如果訊息是在超過 <paramref name="timeout" /> 之前到達，則為 true，否則為 false。</returns>
      <param name="timeout">
        <see cref="T:System.Timespan" />，指定在逾時之前等候訊息到達的最長時間間隔。</param>
      <exception cref="T:System.TimeoutException">在完成作業之前超出了指定的 <paramref name="timeout" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">指定的逾時小於零。</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.IInputSession">
      <summary>針對在傳訊端點之間單向通訊的接收端上實作的工作階段定義介面。</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IInputSessionChannel">
      <summary>定義會將輸入通道與工作階段產生關聯的介面。</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IMessageProperty">
      <summary>定義您可以實作以描述訊息之一組屬性的介面。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IMessageProperty.CreateCopy">
      <summary>建立目前執行個體的複本。</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.IMessageProperty" /> 物件，這是目前執行個體的複本。</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.IOutputChannel">
      <summary>定義通道必須要實作才能傳送訊息的介面。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>開始非同步作業，將訊息傳送到輸出通道的目的端。</summary>
      <returns>參考非同步訊息傳輸的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="message">正在輸出通道上傳送的 <see cref="T:System.ServiceModel.Channels.Message" />。</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 委派。</param>
      <param name="state">應用程式指定的物件，其中包含與非同步傳送作業有關的狀態資訊。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>開始非同步作業，於指定的時間間隔內將訊息傳送給輸出通道的目的端。</summary>
      <returns>參考非同步傳送作業的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="message">正在輸出通道上傳送的 <see cref="T:System.ServiceModel.Channels.Message" />。</param>
      <param name="timeout">
        <see cref="T:System.Timespan" />，指定必須在逾時前多久完成傳送作業。</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 委派，可接收非同步作業傳送完成的通知。</param>
      <param name="state">應用程式指定的物件，其中包含與非同步傳送作業有關的狀態資訊。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IOutputChannel.EndSend(System.IAsyncResult)">
      <summary>完成非同步作業，將訊息傳送到輸出通道的目的端。</summary>
      <param name="result">由 <see cref="Overload:System.ServiceModel.Channels.IOutputChannel.BeginSend" /> 方法的呼叫所傳回的 <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="P:System.ServiceModel.Channels.IOutputChannel.RemoteAddress">
      <summary>取得輸出通道上訊息傳送之目的服務的目的端。</summary>
      <returns>輸出通道傳送訊息之目的服務的 <see cref="T:System.ServiceModel.EndpointAddress" />。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message)">
      <summary>將訊息傳送到輸出通道的目的端。</summary>
      <param name="message">正在輸出通道上傳送的 <see cref="T:System.ServiceModel.Channels.Message" />。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <summary>於指定的時間間隔內在目前的輸出通道上傳送訊息。</summary>
      <param name="message">正在輸出通道上傳送的 <see cref="T:System.ServiceModel.Channels.Message" />。</param>
      <param name="timeout">
        <see cref="T:System.Timespan" />，指定必須在逾時前多久完成傳送作業。</param>
    </member>
    <member name="P:System.ServiceModel.Channels.IOutputChannel.Via">
      <summary>取得包含輸出通道上訊息之目標傳輸位址的 URI。</summary>
      <returns>包含在輸出通道上傳送訊息之目標傳輸位址的 <see cref="T:System.Uri" />。</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.IOutputSession">
      <summary>針對在傳訊端點之間單向通訊的傳送端上實作的工作階段定義介面。</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IOutputSessionChannel">
      <summary>定義會將輸出通道與工作階段產生關聯的介面。</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IRequestChannel">
      <summary>定義通道必須實作的合約，這個合約會出現在傳訊端點之間要求–回覆通訊的要求端上。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>開始非同步作業，以便將要求訊息傳輸至要求-回覆訊息交換的回覆端。</summary>
      <returns>參考非同步訊息傳輸的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="message">要傳輸的要求 <see cref="T:System.ServiceModel.Channels.Message" />。</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 委派 (Delegate)，這個委派會在非同步傳輸要求訊息作業完成時，收到通知。</param>
      <param name="state">應用程式所指定的物件，其中包含與非同步傳輸要求訊息作業相關聯的狀態資訊。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>開始非同步作業，以便在指定的時間間隔內，將要求訊息傳輸至要求-回覆訊息交換的回覆端。</summary>
      <returns>參考非同步訊息傳輸的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="message">要傳輸的要求 <see cref="T:System.ServiceModel.Channels.Message" />。</param>
      <param name="timeout">指定必須收到回應之時間間隔的 <see cref="T:System.TimeSpan" /> (如需預設值的詳細資訊，請參閱＜備註＞一節)。</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 委派 (Delegate)，這個委派會在非同步傳輸要求訊息作業完成時，收到通知。</param>
      <param name="state">應用程式所指定的物件，其中包含與非同步傳輸要求訊息作業相關聯的狀態資訊。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IRequestChannel.EndRequest(System.IAsyncResult)">
      <summary>完成非同步作業，以便傳回傳輸之要求的訊息型回應。</summary>
      <returns>回應要求時所收到的 <see cref="T:System.ServiceModel.Channels.Message" />。</returns>
      <param name="result">由呼叫 <see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" /> 方法所傳回的 <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="P:System.ServiceModel.Channels.IRequestChannel.RemoteAddress">
      <summary>取得要求通道傳送訊息的目標遠端位址。</summary>
      <returns>要求通道傳送訊息的目標 <see cref="T:System.ServiceModel.EndpointAddress" />。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message)">
      <summary>傳送訊息型要求，並傳回相互關聯的訊息型回應。</summary>
      <returns>回應要求時所收到的 <see cref="T:System.ServiceModel.Channels.Message" />。</returns>
      <param name="message">要傳輸的要求 <see cref="T:System.ServiceModel.Channels.Message" />。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <summary>傳送訊息型要求，並在指定的時間間隔內傳回相互關聯的訊息型回應。</summary>
      <returns>回應要求時所收到的 <see cref="T:System.ServiceModel.Channels.Message" />。</returns>
      <param name="message">要傳輸的要求 <see cref="T:System.ServiceModel.Channels.Message" />。</param>
      <param name="timeout">指定必須收到回應之時間間隔的 <see cref="T:System.TimeSpan" /></param>
    </member>
    <member name="P:System.ServiceModel.Channels.IRequestChannel.Via">
      <summary>取得此要求傳送的目標傳輸位址。</summary>
      <returns>包含訊息傳送之目標傳輸位址的 <see cref="T:System.Uri" />。</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.IRequestSessionChannel">
      <summary>定義要將要求通道與工作階段產生關聯的介面。</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.ISession">
      <summary>為通訊工作階段提供識別碼來定義此介面，於交換訊息的各端之間建立共用內容。</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.ISession.Id">
      <summary>取得可唯一識別此工作階段的識別碼。</summary>
      <returns>可唯一識別此工作階段的識別碼。</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.ISessionChannel`1">
      <summary>定義會將通道與工作階段之特定型別產生關聯的介面。</summary>
      <typeparam name="TSession">與通道相關聯之 <see cref="T:System.ServiceModel.Channels.ISession" /> 的型別。</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.ISessionChannel`1.Session">
      <summary>取得與此通道相關聯之工作階段的型別。</summary>
      <returns>與此通道相關聯之 <see cref="T:System.ServiceModel.Channels.ISession" /> 的型別。</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.Message">
      <summary>表示分散式環境中端點之間的通訊單位。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.Channels.Message" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.Close">
      <summary>關閉 <see cref="T:System.ServiceModel.Channels.Message" /> 並釋放所有資源。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateBufferedCopy(System.Int32)">
      <summary>將整個 <see cref="T:System.ServiceModel.Channels.Message" /> 儲存到記憶體緩衝區中，以供未來存取。</summary>
      <returns>新建立的 <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> 物件。</returns>
      <param name="maxBufferSize">要建立之緩衝區的大小上限。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="maxBufferSize " />小於零。</exception>
      <exception cref="T:System.ObjectDisposedException">已關閉訊息。</exception>
      <exception cref="T:System.InvalidOperationException">已複製、讀取或寫入訊息。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String)">
      <summary>建立包含版本和動作的訊息。</summary>
      <returns>已建立之訊息的 <see cref="T:System.ServiceModel.Channels.Message" /> 物件。</returns>
      <param name="version">
        <see cref="T:System.ServiceModel.Channels.MessageVersion" /> 物件，指定要用於該訊息的 SOAP 版本。</param>
      <param name="action">應該如何處理此訊息的說明。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" /> 或 <paramref name="action" /> 是 null。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.Object)">
      <summary>使用指定的版本、動作和本文建立訊息。</summary>
      <returns>已建立之訊息的 <see cref="T:System.ServiceModel.Channels.Message" /> 物件。</returns>
      <param name="version">
        <see cref="T:System.ServiceModel.Channels.MessageVersion" /> 物件，指定要用於該訊息的 SOAP 版本。</param>
      <param name="action">應該如何處理此訊息的說明。</param>
      <param name="body">訊息的本文。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" />、<paramref name="action" /> 或 <paramref name="body" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>使用指定的版本、動作、訊息本文和序列化程式建立訊息。</summary>
      <returns>已建立之訊息的 <see cref="T:System.ServiceModel.Channels.Message" /> 物件。</returns>
      <param name="version">
        <see cref="T:System.ServiceModel.Channels.MessageVersion" /> 物件，指定要用於該訊息的 SOAP 版本。</param>
      <param name="action">應該如何處理此訊息的說明。</param>
      <param name="body">訊息的本文。</param>
      <param name="serializer">用來序列化訊息的 <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> 物件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" />、<paramref name="fault" /> 或 <paramref name="action" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.ServiceModel.Channels.BodyWriter)">
      <summary>使用由位元組陣列組成的本文來建立訊息。</summary>
      <returns>已建立之訊息的 <see cref="T:System.ServiceModel.Channels.Message" /> 物件。</returns>
      <param name="version">
        <see cref="T:System.ServiceModel.Channels.MessageVersion" /> 物件，指定要用於該訊息的 SOAP 版本。</param>
      <param name="action">應該如何處理此訊息的說明。</param>
      <param name="body">型別為 byte 的 <see cref="T:System.ServiceModel.Channels.BodyWriter" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Version" />、<paramref name="action" /> 或 <paramref name="body" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.Xml.XmlDictionaryReader)">
      <summary>使用指定的版本、動作和本文建立訊息。</summary>
      <returns>已建立之訊息的 <see cref="T:System.ServiceModel.Channels.Message" /> 物件。</returns>
      <param name="version">
        <see cref="T:System.ServiceModel.Channels.MessageVersion" /> 物件，指定要用於該訊息的 SOAP 版本。</param>
      <param name="action">應該如何處理此訊息的說明。</param>
      <param name="body">訊息的本文。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" />、<paramref name="action" /> 或 <paramref name="body" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.Xml.XmlReader)">
      <summary>使用指定的讀取器、動作和版本建立訊息。</summary>
      <returns>已建立之訊息的 <see cref="T:System.ServiceModel.Channels.Message" /> 物件。</returns>
      <param name="version">
        <see cref="T:System.ServiceModel.Channels.MessageVersion" /> 物件，指定要用於該訊息的 SOAP 版本。</param>
      <param name="action">應該如何處理此訊息的說明。</param>
      <param name="body">要用來讀取 SOAP 訊息的 <see cref="T:System.Xml.XmlReader" /> 物件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" />、<paramref name="action" /> 或 <paramref name="body" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.Xml.XmlDictionaryReader,System.Int32,System.ServiceModel.Channels.MessageVersion)">
      <summary>使用指定的讀取器、動作和版本建立訊息。</summary>
      <returns>已建立之訊息的 <see cref="T:System.ServiceModel.Channels.Message" /> 物件。</returns>
      <param name="envelopeReader">要用來讀取 SOAP 訊息的 <see cref="T:System.Xml.XmlDictionaryReader" /> 物件。</param>
      <param name="maxSizeOfHeaders">標頭的大小上限，以位元組為單位。</param>
      <param name="version">有效的 <see cref="T:System.ServiceModel.Channels.MessageVersion" /> 值，其指定要用於訊息的 SOAP 版本。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="envelopeReader" /> 或 <paramref name="version" /> 是 null。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.Xml.XmlReader,System.Int32,System.ServiceModel.Channels.MessageVersion)">
      <summary>使用指定的讀取器、動作和版本建立訊息。</summary>
      <returns>已建立之訊息的 <see cref="T:System.ServiceModel.Channels.Message" /> 物件。</returns>
      <param name="envelopeReader">要用來讀取 SOAP 訊息的 <see cref="T:System.Xml.XmlReader" /> 物件。</param>
      <param name="maxSizeOfHeaders">標頭的大小上限，以位元組為單位。</param>
      <param name="version">
        <see cref="T:System.ServiceModel.Channels.MessageVersion" /> 物件，指定要用於該訊息的 SOAP 版本。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="envelopeReader" /> 或 <paramref name="version" /> 是 null。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.GetBody``1">
      <summary>擷取這個 <see cref="T:System.ServiceModel.Channels.Message" /> 執行個體的本文。</summary>
      <returns>型別為 <paramref name="T" /> 的物件，其中包含此訊息的本文。</returns>
      <typeparam name="T">訊息的本文。</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.GetBody``1(System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>使用指定的序列化程式來擷取這個 <see cref="T:System.ServiceModel.Channels.Message" /> 的本文。</summary>
      <returns>型別為 <paramref name="T" /> 的物件，其中包含此訊息的本文。</returns>
      <param name="serializer">用來讀取訊息內容的 <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> 物件。</param>
      <typeparam name="T">訊息的本文。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serializer" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.GetBodyAttribute(System.String,System.String)">
      <summary>擷取訊息本文的屬性。</summary>
      <returns>訊息本文的屬性。</returns>
      <param name="localName">XML 節點的本機名稱。對應至這個成員的項目名稱。這個字串必須是有效的 XML 項目名稱。</param>
      <param name="ns">這個 XML 項目所屬的命名空間。對應至這個成員的項目命名空間 URI。系統不會驗證傳輸位址以外的任何 URI。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localName" /> 或 <paramref name="ns" /> 是 null。</exception>
      <exception cref="T:System.ObjectDisposedException">已關閉訊息。</exception>
      <exception cref="T:System.InvalidOperationException">已複製、讀取或寫入訊息。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.GetReaderAtBodyContents">
      <summary>取得會存取此訊息之本文內容的 XML 字典讀取器。</summary>
      <returns>存取此訊息內文內容的 <see cref="T:System.Xml.XmlDictionaryReader" /> 物件。</returns>
      <exception cref="T:System.ObjectDisposedException">已關閉訊息。</exception>
      <exception cref="T:System.InvalidOperationException">訊息是空白的，或是已複製、讀取或寫入。</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.Headers">
      <summary>在衍生類別中覆寫時，會取得訊息的標頭。</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> 物件，表示訊息的標頭。</returns>
      <exception cref="T:System.ObjectDisposedException">訊息已經過處置。</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.IsDisposed">
      <summary>傳回值，這個值表示是否已處置 <see cref="T:System.ServiceModel.Channels.Message" />。</summary>
      <returns>如果訊息已處置，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.IsEmpty">
      <summary>傳回值，這個值表示 <see cref="T:System.ServiceModel.Channels.Message" /> 是否為空白。</summary>
      <returns>如果訊息是空白的，則為 true，否則為 false。</returns>
      <exception cref="T:System.ObjectDisposedException">訊息已經過處置。</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.IsFault">
      <summary>取得值，這個值表示這個訊息是否會產生任何的 SOAP 錯誤。</summary>
      <returns>如果這個訊息會產生任何 SOAP 錯誤，則為 true，否則為 false。</returns>
      <exception cref="T:System.ObjectDisposedException">訊息已經過處置。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnBodyToString(System.Xml.XmlDictionaryWriter)">
      <summary>在訊息本文轉換成字串時呼叫。</summary>
      <param name="writer">用於將訊息本文轉換成字串的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnClose">
      <summary>在訊息關閉時呼叫。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnCreateBufferedCopy(System.Int32)">
      <summary>在建立訊息緩衝區以儲存此訊息時呼叫。</summary>
      <returns>新建立之訊息複本的 <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> 物件。</returns>
      <param name="maxBufferSize">要建立之緩衝區的大小上限。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnGetBody``1(System.Xml.XmlDictionaryReader)">
      <summary>在擷取訊息本文時呼叫。</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageBuffer" />，表示訊息本文。</returns>
      <param name="reader">用來讀取訊息內容的 <see cref="T:System.Xml.XmlDictionaryReader)" /> 物件。</param>
      <typeparam name="T">訊息主體的類型。</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnGetBodyAttribute(System.String,System.String)">
      <summary>在擷取訊息本文的屬性時呼叫。</summary>
      <returns>訊息本文的屬性。</returns>
      <param name="localName">XML 節點的本機名稱。對應至這個成員的項目名稱。這個字串必須是有效的 XML 項目名稱。</param>
      <param name="ns">這個 XML 項目所屬的命名空間。對應至這個成員的項目命名空間 URI。系統不會驗證傳輸位址以外的任何 URI。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnGetReaderAtBodyContents">
      <summary>在擷取存取此訊息之本文內容的 XML 字典讀取器時呼叫。</summary>
      <returns>存取此訊息內文內容的 <see cref="T:System.Xml.XmlDictionaryReader" /> 物件。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnWriteBodyContents(System.Xml.XmlDictionaryWriter)">
      <summary>在訊息本文寫入至 XML 檔案時呼叫。</summary>
      <param name="writer">用於將此訊息本文寫入至 XML 檔案的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnWriteMessage(System.Xml.XmlDictionaryWriter)">
      <summary>在整個訊息寫入至 XML 檔案時呼叫。</summary>
      <param name="writer">用於將此訊息寫入至 XML 檔案的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnWriteStartBody(System.Xml.XmlDictionaryWriter)">
      <summary>在開始本文寫入至 XML 檔案時呼叫。</summary>
      <param name="writer">用於將開始本文寫入至 XML 檔案的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnWriteStartEnvelope(System.Xml.XmlDictionaryWriter)">
      <summary>在開始封套寫入至 XML 檔案時呼叫。</summary>
      <param name="writer">用於將開始封套寫入至 XML 檔案的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnWriteStartHeaders(System.Xml.XmlDictionaryWriter)">
      <summary>在開始標頭寫入至 XML 檔案時呼叫。</summary>
      <param name="writer">用於將開始標頭寫入 XML 檔案的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.Properties">
      <summary>在衍生類別中覆寫時，會取得一組訊息的處理層級附註。</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageProperties" />，包含訊息的一組處理等級附註。</returns>
      <exception cref="T:System.ObjectDisposedException">訊息已經過處置。</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.State">
      <summary>取得這個 <see cref="T:System.ServiceModel.Channels.Message" /> 的目前狀態。</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageState" />，包含這個 <see cref="T:System.ServiceModel.Channels.Message" /> 的目前狀態。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.System#IDisposable#Dispose">
      <summary>關閉此訊息使用的所有資源。無法繼承這個方法。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.ToString">
      <summary>傳回表示目前 <see cref="T:System.ServiceModel.Channels.Message" /> 執行個體的字串。</summary>
      <returns>目前 <see cref="T:System.ServiceModel.Channels.Message" /> 執行個體的字串表示。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.Version">
      <summary>在衍生類別中覆寫時，會取得訊息的 SOAP 版本。</summary>
      <returns>表示 SOAP 版本的 <see cref="T:System.ServiceModel.Channels.MessageVersion" /> 物件。</returns>
      <exception cref="T:System.ObjectDisposedException">訊息已經過處置。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteBody(System.Xml.XmlDictionaryWriter)">
      <summary>使用指定的 <see cref="T:System.Xml.XmlDictionaryWriter" /> 寫入本文項目。</summary>
      <param name="writer">要用於寫入本文項目的 <see cref="T:System.Xml.XmlDictionaryWriter" /> 物件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteBody(System.Xml.XmlWriter)">
      <summary>使用指定的 <see cref="T:System.Xml.XmlWriter" /> 序列化訊息本文。</summary>
      <param name="writer">要用於寫入訊息本文的 <see cref="T:System.Xml.XmlWriter" /> 物件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> 為 null。</exception>
      <exception cref="T:System.ObjectDisposedException">已處置訊息。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteBodyContents(System.Xml.XmlDictionaryWriter)">
      <summary>使用指定的 <see cref="T:System.Xml.XmlDictionaryWriter" /> 序列化本文內容。</summary>
      <param name="writer">要用於寫入本文項目的 <see cref="T:System.Xml.XmlDictionaryWriter" /> 物件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer " />為 null。</exception>
      <exception cref="T:System.ObjectDisposedException">已關閉訊息。</exception>
      <exception cref="T:System.InvalidOperationException">已複製、讀取或寫入訊息。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteMessage(System.Xml.XmlDictionaryWriter)">
      <summary>使用指定的 <see cref="T:System.Xml.XmlDictionaryWriter" /> 序列化整個訊息。</summary>
      <param name="writer">要用於寫入訊息的 <see cref="T:System.Xml.XmlDictionaryWriter" /> 物件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> 為 null。</exception>
      <exception cref="T:System.ObjectDisposedException">已關閉訊息。</exception>
      <exception cref="T:System.InvalidOperationException">已複製、讀取或寫入訊息。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteMessage(System.Xml.XmlWriter)">
      <summary>使用指定的 <see cref="T:System.Xml.XmlWriter" /> 序列化整個訊息。</summary>
      <param name="writer">要用於寫入整個訊息的 <see cref="T:System.Xml.XmlWriter" /> 物件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> 為 null。</exception>
      <exception cref="T:System.ObjectDisposedException">已關閉訊息。</exception>
      <exception cref="T:System.InvalidOperationException">已複製、讀取或寫入訊息。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteStartBody(System.Xml.XmlDictionaryWriter)">
      <summary>使用指定的 <see cref="T:System.Xml.XmlDictionaryWriter" /> 序列化訊息的開始本文。</summary>
      <param name="writer">要用於寫入開始本文的 <see cref="T:System.Xml.XmlDictionaryWriter" /> 物件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteStartBody(System.Xml.XmlWriter)">
      <summary>使用指定的 <see cref="T:System.Xml.XmlDictionaryWriter" /> 序列化訊息的開始本文。</summary>
      <param name="writer">要用於寫入訊息開始本文的 <see cref="T:System.Xml.XmlDictionaryWriter" /> 物件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteStartEnvelope(System.Xml.XmlDictionaryWriter)">
      <summary>使用指定的 <see cref="T:System.Xml.XmlDictionaryWriter" /> 序列化開始封套。</summary>
      <param name="writer">要用於寫入開始封套的 <see cref="T:System.Xml.XmlDictionaryWriter" /> 物件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer " />為 null。</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageBuffer">
      <summary>表示儲存整個訊息以供未來取用的記憶體緩衝區。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageBuffer.BufferSize">
      <summary>取得這個 <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> 取用的大約位元組數目。</summary>
      <returns>這個 <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> 取用的大約位元組數目。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.Close">
      <summary>使用緩衝區完畢。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.CreateMessage">
      <summary>傳回原始訊息的複本。</summary>
      <returns>先前提供給 <see cref="T:System.ServiceModel.Channels.Message" /> 執行個體 <see cref="M:System.ServiceModel.Channels.Message.CreateBufferedCopy(System.Int32)" /> 方法之原始 <see cref="T:System.ServiceModel.Channels.Message" /> 執行個體的相同複本。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageBuffer.MessageContentType">
      <summary>取得這個緩衝區中儲存的訊息內容型別。</summary>
      <returns>這個緩衝區中儲存的訊息內容型別。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.System#IDisposable#Dispose">
      <summary>釋放 <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> 所使用的 Unmanaged 資源，並選擇性釋放 Managed 資源。無法繼承這個方法。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.WriteMessage(System.IO.Stream)">
      <summary>將這個緩衝區的整個內容寫入指定的 IO 資料流。</summary>
      <param name="stream">在其中寫入這個緩衝區整個內容的 IO 資料流。</param>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageEncoder">
      <summary>編碼器是用來將訊息寫入資料流及從資料流讀取訊息的元件。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.Channels.MessageEncoder" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncoder.ContentType">
      <summary>在衍生類別 (Derived Class) 中覆寫時，會取得編碼器使用的 MIME 內容類型。</summary>
      <returns>訊息編碼器支援的內容類型。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.GetProperty``1">
      <summary>從通道堆疊的適當層次中，傳回要求的型別物件 (如果有)。</summary>
      <returns>要求的型別物件 <paramref name="T " />(如果存在的話)，如果不存在則為 null。</returns>
      <typeparam name="T">此方法所查詢的型別物件。</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.IsContentTypeSupported(System.String)">
      <summary>傳回值，這個值表示訊息編碼器是否支援指定的訊息層級內容類型值。</summary>
      <returns>如果支援指定的訊息層級內容類型則為 true，否則為 false。</returns>
      <param name="contentType">正在測試的訊息層級內容類型。</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncoder.MediaType">
      <summary>在衍生類別中覆寫時，會取得編碼器使用的媒體類型值。</summary>
      <returns>訊息編碼器支援的媒體類型。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncoder.MessageVersion">
      <summary>在衍生類別中覆寫時，會取得編碼器使用的訊息版本值。</summary>
      <returns>編碼器使用的 <see cref="T:System.ServiceModel.Channels.MessageVersion" />。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.ArraySegment{System.Byte},System.ServiceModel.Channels.BufferManager)">
      <summary>在衍生類別中覆寫時，從指定的緩衝區讀取訊息。</summary>
      <returns>從指定之緩衝區讀取的 <see cref="T:System.ServiceModel.Channels.Message" />。</returns>
      <param name="buffer">
        <see cref="T:System.Byte" /> 型別的 <see cref="T:System.ArraySegment`1" />，提供從其中還原序列化訊息的緩衝區。</param>
      <param name="bufferManager">
        <see cref="T:System.ServiceModel.Channels.BufferManager" />，管理從其中還原序列化訊息的緩衝區。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.ArraySegment{System.Byte},System.ServiceModel.Channels.BufferManager,System.String)">
      <summary>在衍生類別中覆寫時，從指定的資料流讀取訊息。</summary>
      <returns>從指定之資料流讀取的 <see cref="T:System.ServiceModel.Channels.Message" />。</returns>
      <param name="buffer">
        <see cref="T:System.Byte" /> 型別的 <see cref="T:System.ArraySegment`1" />，提供從其中還原序列化訊息的緩衝區。</param>
      <param name="bufferManager">
        <see cref="T:System.ServiceModel.Channels.BufferManager" />，管理從其中還原序列化訊息的緩衝區。</param>
      <param name="contentType">多用途網際網路郵件延伸標準 (MIME) 訊息層級內容類型。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.IO.Stream,System.Int32)">
      <summary>在衍生類別中覆寫時，從指定的資料流讀取訊息。</summary>
      <returns>從指定之資料流讀取的 <see cref="T:System.ServiceModel.Channels.Message" />。</returns>
      <param name="stream">從其中讀取訊息的 <see cref="T:System.IO.Stream" /> 物件。</param>
      <param name="maxSizeOfHeaders">可從訊息讀取的標頭大小上限。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.IO.Stream,System.Int32,System.String)">
      <summary>在衍生類別中覆寫時，從指定的資料流讀取訊息。</summary>
      <returns>從指定之資料流讀取的 <see cref="T:System.ServiceModel.Channels.Message" />。</returns>
      <param name="stream">從其中讀取訊息的 <see cref="T:System.IO.Stream" /> 物件。</param>
      <param name="maxSizeOfHeaders">可從訊息讀取的標頭大小上限。</param>
      <param name="contentType">多用途網際網路郵件延伸標準 (MIME) 訊息層級內容類型。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ToString">
      <summary>傳回訊息編碼器使用的內容類型。</summary>
      <returns>訊息編碼器使用的內容類型。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.Int32,System.ServiceModel.Channels.BufferManager)">
      <summary>將小於指定大小的訊息寫入至位元組陣列緩衝區中。</summary>
      <returns>byte 型別的 <see cref="T:System.ArraySegment`1" />，提供序列化訊息的緩衝區。</returns>
      <param name="message">要寫入至訊息緩衝區的 <see cref="T:System.ServiceModel.Channels.Message" />。</param>
      <param name="maxMessageSize">可寫入的訊息大小上限。</param>
      <param name="bufferManager">
        <see cref="T:System.ServiceModel.Channels.BufferManager" />，管理在其中寫入訊息的緩衝區。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.Int32,System.ServiceModel.Channels.BufferManager,System.Int32)">
      <summary>在衍生類別中覆寫時，於位元組陣列緩衝區的指定位移處寫入小於指定大小的訊息。</summary>
      <returns>byte 型別的 <see cref="T:System.ArraySegment`1" />，提供序列化訊息的緩衝區。</returns>
      <param name="message">要寫入至訊息緩衝區的 <see cref="T:System.ServiceModel.Channels.Message" />。</param>
      <param name="maxMessageSize">可寫入的訊息大小上限。</param>
      <param name="bufferManager">
        <see cref="T:System.ServiceModel.Channels.BufferManager" />，管理在其中寫入訊息的緩衝區。</param>
      <param name="messageOffset">從提供緩衝區的位元組陣列開頭開始的區段位移。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.IO.Stream)">
      <summary>在衍生類別中覆寫時，寫入訊息至指定的資料流中。</summary>
      <param name="message">要寫入至 <paramref name="stream" /> 中的 <see cref="T:System.ServiceModel.Channels.Message" />。</param>
      <param name="stream">要在其中寫入 <paramref name="message" /> 的 <see cref="T:System.IO.Stream" /> 物件。</param>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageEncoderFactory">
      <summary>表示用來產生訊息編碼器之處理站的抽象基底類別，該編碼器可從資料流讀取訊息，並將訊息寫入各種訊息編碼類型的資料流中。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoderFactory.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoderFactory.CreateSessionEncoder">
      <summary>傳回訊息編碼器，它可用來讓工作階段型交換中的訊息相互關聯。</summary>
      <returns>用於工作階段型訊息交換的 <see cref="T:System.ServiceModel.Channels.MessageEncoder" />。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncoderFactory.Encoder">
      <summary>在衍生類別中覆寫時，會取得此處理站產生的訊息編碼器。</summary>
      <returns>此處理站使用的 <see cref="T:System.ServiceModel.Channels.MessageEncoder" />。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncoderFactory.MessageVersion">
      <summary>在衍生類別中覆寫時，會取得此處理站所產生之編碼器所用的訊息版本，以編碼訊息。</summary>
      <returns>此處理站使用的 <see cref="T:System.ServiceModel.Channels.MessageVersion" />。</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageEncodingBindingElement">
      <summary>繫結項目，可指定用於編碼訊息的訊息版本。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncodingBindingElement.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.Channels.MessageEncodingBindingElement" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncodingBindingElement.#ctor(System.ServiceModel.Channels.MessageEncodingBindingElement)">
      <summary>初始化從現有項目初始化之 <see cref="T:System.ServiceModel.Channels.MessageEncodingBindingElement" /> 類別的新執行個體。</summary>
      <param name="elementToBeCloned">要複製的 <see cref="T:System.ServiceModel.Channels.MessageEncodingBindingElement" />。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncodingBindingElement.CreateMessageEncoderFactory">
      <summary>在衍生類別中覆寫時，會建立產生訊息編碼器的處理站。</summary>
      <returns>用於產生訊息編碼器的 <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" />。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>從通道堆疊的適當層次中，傳回要求的型別物件 (如果有的話)。</summary>
      <returns>要求的型別物件 <paramref name="T" /> (如果存在的話)，如果不存在則為 null。</returns>
      <param name="context">目前繫結項目的 <see cref="T:System.ServiceModel.Channels.BindingContext" />。</param>
      <typeparam name="T">此方法所查詢的型別物件。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> 為 null。</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncodingBindingElement.MessageVersion">
      <summary>在衍生類別中覆寫時，取得或設定此訊息編碼器處理站所產生之訊息編碼器所處理的訊息版本。</summary>
      <returns>由訊息編碼器處理站所產生之編碼器使用的 <see cref="T:System.ServiceModel.Channels.MessageVersion" />。</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageFault">
      <summary>表示 SOAP 錯誤在記憶體中的表示，此錯誤可傳遞給 <see cref="Overload:System.ServiceModel.Channels.Message.CreateMessage" /> 來建立包含錯誤的訊息。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.#ctor">
      <summary>在衍生類別中呼叫時，初始化 <see cref="T:System.ServiceModel.Channels.MessageFault" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.Actor">
      <summary>取得或設定 Actor 的值。</summary>
      <returns>Actor 的值。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.Code">
      <summary>取得 SOAP 錯誤碼。</summary>
      <returns>包含 SOAP 錯誤碼的 <see cref="T:System.ServiceModel.FaultCode" />。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.CreateFault(System.ServiceModel.Channels.Message,System.Int32)">
      <summary>傳回新的 <see cref="T:System.ServiceModel.Channels.MessageFault" /> 物件，此物件使用指定的 <see cref="T:System.ServiceModel.Channels.Message" /> 及訊息緩衝區所指定的緩衝區大小上限。</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageFault" />物件，含有傳入的參數的初始值。</returns>
      <param name="message">用來建立 <see cref="T:System.ServiceModel.Channels.MessageFault" /> 物件所指定的 <see cref="T:System.ServiceModel.Channels.Message" />。</param>
      <param name="maxBufferSize">訊息緩衝區所指定的緩衝區大小上限。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.GetDetail``1">
      <summary>傳回訊息錯誤的詳細資料物件。</summary>
      <returns>訊息錯誤的詳細資料物件。</returns>
      <typeparam name="T">詳細資料物件的型別。</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.GetDetail``1(System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>傳回使用指定之 <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> 的詳細資料物件。</summary>
      <returns>包含在 <see cref="T:System.ServiceModel.Channels.MessageFault" /> 內的詳細資料物件。</returns>
      <param name="serializer">還原序列化詳細資料物件時所要使用的 <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />。</param>
      <typeparam name="T">詳細資料物件的型別。</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.GetReaderAtDetailContents">
      <summary>傳回 <see cref="T:System.Xml.XmlDictionaryReader" /> 物件，此物件置於 <see cref="T:System.ServiceModel.Channels.MessageFault" /> 的詳細資料物件上。</summary>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryReader" /> 物件，此物件置於 <see cref="T:System.ServiceModel.Channels.MessageFault" /> 的詳細資料物件上。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.HasDetail">
      <summary>取得值，這個值表示 <see cref="T:System.ServiceModel.Channels.MessageFault" /> 是否有詳細資料物件。</summary>
      <returns>如果 <see cref="T:System.ServiceModel.Channels.MessageFault" /> 有詳細資料物件則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.Node">
      <summary>取得 SOAP 節點，此節點包含訊息路徑上哪個 SOAP 節點造成錯誤的相關資訊。</summary>
      <returns>SOAP 節點，此節點包含訊息路徑上哪個 SOAP 節點造成錯誤的相關資訊。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.OnGetReaderAtDetailContents">
      <summary>在衍生類別中呼叫時，會傳回 <see cref="T:System.Xml.XmlDictionaryReader" /> 物件，此物件置於 <see cref="T:System.ServiceModel.Channels.MessageFault" /> 的詳細資料物件上。</summary>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryReader" /> 物件，此物件置於 <see cref="T:System.ServiceModel.Channels.MessageFault" /> 的詳細資料物件上。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.OnWriteDetail(System.Xml.XmlDictionaryWriter,System.ServiceModel.EnvelopeVersion)">
      <summary>在寫入詳細資料內容之前叫用 (Invoke)。</summary>
      <param name="writer">用於寫入詳細資料項目的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
      <param name="version">要寫入之 SOAP 信封的版本。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.OnWriteDetailContents(System.Xml.XmlDictionaryWriter)">
      <summary>在非抽象衍生類別中覆寫時，會寫入詳細資料項目的內容。</summary>
      <param name="writer">用於寫入詳細資料項目的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.OnWriteStartDetail(System.Xml.XmlDictionaryWriter,System.ServiceModel.EnvelopeVersion)">
      <summary>寫入使用指定之 <see cref="T:System.Xml.XmlDictionaryWriter" /> 和 SOAP 信封版本的開始項目。</summary>
      <param name="writer">用於寫入詳細資料項目的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
      <param name="version">要寫入之 SOAP 信封的版本。</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.Reason">
      <summary>取得 SOAP 錯誤的文字描述。</summary>
      <returns>包含 SOAP 錯誤之文字描述的 <see cref="T:System.ServiceModel.FaultReason" />。</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageHeader">
      <summary>表示 SOAP 標頭的內容。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.Channels.MessageHeader" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeader.Actor">
      <summary>取得或設定訊息標頭的目標收件者。</summary>
      <returns>訊息標頭的目標收件者。預設為空字串 ("")。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object)">
      <summary>使用指定的資料來建立新的訊息標頭。</summary>
      <returns>具有指定資料的新 <see cref="T:System.ServiceModel.Channels.MessageHeader" /> 物件。</returns>
      <param name="name">標頭 XML 項目的本機名稱。</param>
      <param name="ns">標頭 XML 項目的命名空間 URI。</param>
      <param name="value">要建立之標頭的內容。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Boolean)">
      <summary>使用指定的資料來建立新的訊息標頭。</summary>
      <returns>具有指定資料的新 <see cref="T:System.ServiceModel.Channels.MessageHeader" /> 物件。</returns>
      <param name="name">標頭 XML 項目的本機名稱。</param>
      <param name="ns">標頭 XML 項目的命名空間 URI。</param>
      <param name="value">要建立之標頭的內容。</param>
      <param name="mustUnderstand">指出是否必須了解標頭的值。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Boolean,System.String)">
      <summary>使用指定的資料來建立新的訊息標頭。</summary>
      <returns>具有指定資料的新 <see cref="T:System.ServiceModel.Channels.MessageHeader" /> 物件。</returns>
      <param name="name">標頭 XML 項目的本機名稱。</param>
      <param name="ns">標頭 XML 項目的命名空間 URI。</param>
      <param name="value">要建立之標頭的內容。</param>
      <param name="mustUnderstand">指出是否必須了解標頭的值。</param>
      <param name="actor">訊息標頭的目標收件者。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Boolean,System.String,System.Boolean)">
      <summary>使用指定的資料來建立新的訊息標頭。</summary>
      <returns>具有指定資料的新 <see cref="T:System.ServiceModel.Channels.MessageHeader" /> 物件。</returns>
      <param name="name">標頭 XML 項目的本機名稱。</param>
      <param name="ns">標頭 XML 項目的命名空間 URI。</param>
      <param name="value">要建立之標頭的內容。</param>
      <param name="mustUnderstand">指出是否必須了解標頭的值。</param>
      <param name="actor">訊息標頭的目標收件者。</param>
      <param name="relay">指出是否應該轉送標頭的值。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>使用 XmlFormatter 從要序列化的物件建立標頭。</summary>
      <returns>具有指定資料的新 <see cref="T:System.ServiceModel.Channels.MessageHeader" /> 物件。</returns>
      <param name="name">標頭 XML 項目的本機名稱。</param>
      <param name="ns">標頭 XML 項目的命名空間 URI。</param>
      <param name="value">要建立之標頭的內容。</param>
      <param name="serializer">用來序列化標頭的 <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer,System.Boolean)">
      <summary>使用指定的資料來建立新的訊息標頭。</summary>
      <returns>具有指定資料的新 <see cref="T:System.ServiceModel.Channels.MessageHeader" /> 物件。</returns>
      <param name="name">標頭 XML 項目的本機名稱。</param>
      <param name="ns">標頭 XML 項目的命名空間 URI。</param>
      <param name="value">要建立之標頭的內容。</param>
      <param name="serializer">用來序列化標頭的 <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />。</param>
      <param name="mustUnderstand">指出是否必須了解標頭的值。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer,System.Boolean,System.String)">
      <summary>使用指定的資料來建立新的訊息標頭。</summary>
      <returns>具有指定資料的新 <see cref="T:System.ServiceModel.Channels.MessageHeader" /> 物件。</returns>
      <param name="name">標頭 XML 項目的本機名稱。</param>
      <param name="ns">標頭 XML 項目的命名空間 URI。</param>
      <param name="value">要建立之標頭的內容。</param>
      <param name="serializer">用來序列化標頭的 <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />。</param>
      <param name="mustUnderstand">指出是否必須了解標頭的值。</param>
      <param name="actor">訊息標頭的目標收件者。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer,System.Boolean,System.String,System.Boolean)">
      <summary>使用指定的資料來建立新的訊息標頭。</summary>
      <returns>具有指定資料的新 <see cref="T:System.ServiceModel.Channels.MessageHeader" /> 物件。</returns>
      <param name="name">標頭 XML 項目的本機名稱。</param>
      <param name="ns">標頭 XML 項目的命名空間 URI。</param>
      <param name="value">要建立之標頭的內容。</param>
      <param name="serializer">用來序列化標頭的 <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />。</param>
      <param name="mustUnderstand">指出是否必須了解標頭的值。</param>
      <param name="actor">訊息標頭的目標收件者。</param>
      <param name="relay">指出是否應該轉送標頭的值。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.IsMessageVersionSupported(System.ServiceModel.Channels.MessageVersion)">
      <summary>驗證是否支援指定的訊息版本。</summary>
      <returns>如果支援指定的訊息版本則為 true，否則為 false。</returns>
      <param name="messageVersion">物件包含與訊息及其交換相關聯之 SOAP 版本的相關資訊。</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeader.IsReferenceParameter">
      <summary>取得值，這個值會指定此訊息標頭是否包含端點參考的參考參數。</summary>
      <returns>如果此訊息標頭包含端點參考的參考參數則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeader.MustUnderstand">
      <summary>取得或設定值，這個值表示是否必須依照 SOAP 1.1/1.2 規格的說明來解讀標頭。</summary>
      <returns>如果必須瞭解此標頭則為 true，否則為 false。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.OnWriteHeaderContents(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>當使用指定的 XML 寫入器序列化標頭內容時呼叫。</summary>
      <param name="writer">用於序列化標頭內容的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
      <param name="messageVersion">物件包含與訊息及其交換相關聯之 SOAP 版本的相關資訊。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.OnWriteStartHeader(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>當使用指定的 XML 寫入器序列化開始標頭時呼叫。</summary>
      <param name="writer">用於序列化開始標頭的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
      <param name="messageVersion">物件包含與訊息及其交換相關聯之 SOAP 版本的相關資訊。</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeader.Relay">
      <summary>取得值，這個值表示是否應該轉送標頭。</summary>
      <returns>如果應該轉送標頭則為 true，否則為 false。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.ToString">
      <summary>傳回這個訊息標頭的字串表示。</summary>
      <returns>這個訊息標頭的字串表示。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.WriteHeader(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>使用指定的 XML 寫入器序列化此標頭。</summary>
      <param name="writer">用來序列化標頭的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
      <param name="messageVersion">物件包含與訊息及其交換相關聯之 SOAP 版本的相關資訊。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.WriteHeader(System.Xml.XmlWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>使用指定的 XML 寫入器序列化此標頭。</summary>
      <param name="writer">用來序列化標頭的 <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="messageVersion">物件包含與訊息及其交換相關聯之 SOAP 版本的相關資訊。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.WriteHeaderAttributes(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>使用指定的 XML 寫入器序列化標頭屬性。</summary>
      <param name="writer">用於序列化標頭屬性的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
      <param name="messageVersion">物件包含與訊息及其交換相關聯之 SOAP 版本的相關資訊。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.WriteHeaderContents(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>使用指定的 XML 寫入器序列化標頭內容。</summary>
      <param name="writer">用來序列化標頭內容的 <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="messageVersion">物件包含與訊息及其交換相關聯之 SOAP 版本的相關資訊。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.WriteStartHeader(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>使用指定的 XML 寫入器序列化開始標頭。</summary>
      <param name="writer">用於序列化開始標頭的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
      <param name="messageVersion">物件包含與訊息及其交換相關聯之 SOAP 版本的相關資訊。</param>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageHeaderInfo">
      <summary>表示與 SOAP 訊息標頭有關的系統資訊。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaderInfo.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.Channels.MessageHeaderInfo" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.Actor">
      <summary>取得或設定訊息標頭的目的收件者。</summary>
      <returns>指出訊息標頭之目的收件者的 URI。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.IsReferenceParameter">
      <summary>取得值，這個值會指定訊息標頭是否表示端點參考的參考參數。</summary>
      <returns>如果訊息標頭表示端點參考的參考參數則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.MustUnderstand">
      <summary>取得或設定值，這個值表示訊息標頭的處理為強制性或選擇性。</summary>
      <returns>如果訊息標頭的處理為強制性，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.Name">
      <summary>取得訊息標頭的名稱。</summary>
      <returns>訊息標頭的名稱。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.Namespace">
      <summary>取得訊息標頭的命名空間。</summary>
      <returns>訊息標頭的命名空間。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.Relay">
      <summary>取得或設定值，這個值表示是否可以轉送訊息標頭。</summary>
      <returns>如果可以轉送訊息標頭則為 true，否則為 false。</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageHeaders">
      <summary>表示訊息的訊息標頭集合。此類別無法被繼承。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.#ctor(System.ServiceModel.Channels.MessageHeaders)">
      <summary>使用指定的訊息標頭集合，初始化 <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> 類別的新執行個體。</summary>
      <param name="collection">訊息標頭的集合。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.#ctor(System.ServiceModel.Channels.MessageVersion)">
      <summary>使用指定的訊息版本，初始化 <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> 類別的新執行個體。</summary>
      <param name="version">訊息的 SOAP 版本。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.#ctor(System.ServiceModel.Channels.MessageVersion,System.Int32)">
      <summary>使用指定的訊息版本和大小，初始化 <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> 類別的新執行個體。</summary>
      <param name="version">訊息的 SOAP 版本。</param>
      <param name="initialSize">標頭的大小</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.Action">
      <summary>取得或設定應該如何處理訊息的描述。</summary>
      <returns>應該如何處理此訊息的說明。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.Add(System.ServiceModel.Channels.MessageHeader)">
      <summary>將指定的訊息標頭加入至集合。</summary>
      <param name="header">要加入至集合的訊息標頭。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.Clear">
      <summary>移除集合中的所有標頭。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.CopyHeaderFrom(System.ServiceModel.Channels.Message,System.Int32)">
      <summary>從指定的訊息將位於指定索引處的標頭內容複製到這個執行個體。</summary>
      <param name="message">要從中複製標頭的訊息。</param>
      <param name="headerIndex">要複製其內容的原始訊息標頭位置。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.CopyHeaderFrom(System.ServiceModel.Channels.MessageHeaders,System.Int32)">
      <summary>從指定的訊息標頭集合將位於指定索引處的標頭內容複製到這個執行個體。</summary>
      <param name="collection">
        <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> 集合物件。</param>
      <param name="headerIndex">要複製其內容的原始訊息標頭位置。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.CopyHeadersFrom(System.ServiceModel.Channels.Message)">
      <summary>從指定的訊息將所有標頭的內容複製到這個執行個體。</summary>
      <param name="message">要從中複製標頭的訊息。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.CopyHeadersFrom(System.ServiceModel.Channels.MessageHeaders)">
      <summary>從指定的標頭集合將內容複製到這個執行個體。</summary>
      <param name="collection">將標頭複製到這個執行個體的來源 <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> 集合物件。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.CopyTo(System.ServiceModel.Channels.MessageHeaderInfo[],System.Int32)">
      <summary>從陣列的特定索引開始，將這個集合的標頭複製至陣列。</summary>
      <param name="array">一維陣列，也就是從這個執行個體複製訊息標頭物件的目的地。此陣列必須有以零起始的索引。</param>
      <param name="index">陣列中以零起始的索引，位於複製開始的位置。</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.Count">
      <summary>取得這個集合中的訊息標頭數目。</summary>
      <returns>這個集合中的訊息標頭數目。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.FaultTo">
      <summary>取得或設定錯誤應該傳送之目標節點的位址。</summary>
      <returns>錯誤應該傳送之目標節點的 <see cref="T:System.ServiceModel.EndpointAddress" />。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.FindHeader(System.String,System.String)">
      <summary>藉由指定的 LocalName 和標頭項目之命名空間 URI，在這個集合中尋找訊息標頭。</summary>
      <returns>這個集合中的訊息標頭的索引（如果有找到），或者為 -1（如果指定的標頭不存在）。</returns>
      <param name="name">標頭 XML 項目的 LocalName。</param>
      <param name="ns">標頭 XML 項目的命名空間 URI。</param>
      <exception cref="T:System.ArgumentNullException">引數為 null。</exception>
      <exception cref="T:System.ServiceModel.MessageHeaderException">此引數所指定的標頭存在好幾次。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.FindHeader(System.String,System.String,System.String[])">
      <summary>藉由指定的 LocalName、標頭項目之命名空間 URI 和 Actor，在這個集合中尋找訊息標頭。</summary>
      <returns>這個集合中的訊息標頭的索引（如果有找到），或者為 -1（如果指定的標頭不存在）。</returns>
      <param name="name">標頭 XML 項目的 LocalName。</param>
      <param name="ns">標頭 XML 項目的命名空間 URI。</param>
      <param name="actors">訊息標頭的目標收件者。</param>
      <exception cref="T:System.ArgumentNullException">引數為 null。</exception>
      <exception cref="T:System.ServiceModel.MessageHeaderException">此引數所指定的標頭存在好幾次。</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.From">
      <summary>取得或設定傳送訊息之節點的位址。</summary>
      <returns>傳送訊息之節點的 <see cref="T:System.ServiceModel.EndpointAddress" />。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetEnumerator">
      <summary>傳回可逐一查看集合的列舉值。無法繼承這個方法。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> 物件，用於逐一查看集合。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetHeader``1(System.Int32)">
      <summary>擷取這個集合中特定位置的訊息標頭。</summary>
      <returns>在指定之索引處的訊息標頭。</returns>
      <param name="index">要取得之標頭以零起始的索引。</param>
      <typeparam name="T">訊息標頭的類型。</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetHeader``1(System.Int32,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>擷取這個集合中特定位置的訊息標頭。</summary>
      <returns>在指定之索引處的訊息標頭。</returns>
      <param name="index">要取得之標頭以零起始的索引。</param>
      <param name="serializer">用來序列化標頭的 <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />。</param>
      <typeparam name="T">訊息標頭的類型。</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetHeader``1(System.String,System.String)">
      <summary>藉由指定的 LocalName 和標頭項目之命名空間 URI，在這個集合中尋找訊息標頭。</summary>
      <returns>具有指定之名稱的訊息標頭。</returns>
      <param name="name">標頭 XML 項目的 LocalName。</param>
      <param name="ns">標頭 XML 項目的命名空間 URI。</param>
      <typeparam name="T">訊息標頭的類型。</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetHeader``1(System.String,System.String,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>藉由指定的 LocalName、命名空間 URI 和序列化程式，在這個集合中擷取訊息標頭。</summary>
      <returns>具有指定之名稱的訊息標頭。</returns>
      <param name="name">標頭 XML 項目的 LocalName。</param>
      <param name="ns">標頭 XML 項目的命名空間 URI。</param>
      <param name="serializer">用來序列化標頭的 <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />。</param>
      <typeparam name="T">訊息標頭的類型。</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetHeader``1(System.String,System.String,System.String[])">
      <summary>藉由指定的 LocalName、標頭項目之命名空間 URI 和 Actor，在這個集合中擷取訊息標頭。</summary>
      <returns>具有指定之名稱的訊息標頭。</returns>
      <param name="name">標頭 XML 項目的 LocalName。</param>
      <param name="ns">標頭 XML 項目的命名空間 URI。</param>
      <param name="actors">訊息標頭的目標收件者。</param>
      <typeparam name="T">訊息標頭的類型。</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetReaderAtHeader(System.Int32)">
      <summary>取得會從集合中指定位置取用訊息標頭的 XML 字典讀取器。</summary>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryReader" /> 物件，會取用集合中指定位置的訊息標頭。</returns>
      <param name="headerIndex">要取得之標頭以零起始的索引。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.HaveMandatoryHeadersBeenUnderstood">
      <summary>驗證是否已正確解譯及處理以 MustUnderstand 標記的所有訊息標頭。</summary>
      <returns>如果 <paramref name="actors" /> 指定的收件者已經正確解譯並處理以 MustUnderstand 標記的所有訊息標頭，則為 true，否則為 false。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.HaveMandatoryHeadersBeenUnderstood(System.String[])">
      <summary>驗證指定的收件者是否已正確解譯及處理以 MustUnderstand 標記的所有訊息標頭。</summary>
      <returns>如果 <paramref name="actors" /> 指定的收件者已經正確解譯並處理以 MustUnderstand 標記的所有訊息標頭，則為 true，否則為 false。</returns>
      <param name="actors">訊息標頭的目標收件者。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.Insert(System.Int32,System.ServiceModel.Channels.MessageHeader)">
      <summary>將訊息標頭插入至集合中的指定索引處。</summary>
      <param name="headerIndex">應該插入 <paramref name="header" /> 之以零起始的索引。</param>
      <param name="header">要插入的訊息標頭。</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.Item(System.Int32)">
      <summary>擷取在指定索引處的標頭。</summary>
      <returns>集合中的 <see cref="T:System.ServiceModel.Channels.MessageHeaderInfo" />。如果 <paramref name="index" /> 大於或等於清單中的標頭數目，則傳回 null。</returns>
      <param name="index">清單中標頭之以零起始的索引。</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.MessageId">
      <summary>取得或設定訊息的唯一 ID。</summary>
      <returns>訊息的唯一 ID。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.MessageVersion">
      <summary>取得訊息的 SOAP 版本。</summary>
      <returns>做為 SOAP 版本之訊息的 <see cref="T:System.ServiceModel.Channels.MessageVersion" />。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.RelatesTo">
      <summary>取得與此訊息相關之訊息的 ID。</summary>
      <returns>與此訊息相關之訊息的 ID。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.RemoveAll(System.String,System.String)">
      <summary>使用指定的名稱與命名空間從集合移除所有標頭。</summary>
      <param name="name">標頭 XML 項目的 LocalName。</param>
      <param name="ns">標頭 XML 項目的命名空間 URI。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.RemoveAt(System.Int32)">
      <summary>從集合的指定索引處移除訊息標頭。</summary>
      <param name="headerIndex">要移除之標頭以零起始的索引。</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.ReplyTo">
      <summary>取得或設定應該針對要求傳送回覆之目標節點的位址。</summary>
      <returns>應該針對要求傳送回覆之目標節點的 <see cref="T:System.ServiceModel.EndpointAddress" />。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.SetAction(System.Xml.XmlDictionaryString)">
      <summary>設定標頭的 Action 項目。</summary>
      <param name="action">應該如何處理此訊息的說明。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.System#Collections#IEnumerable#GetEnumerator">
      <summary>傳回可逐一查看集合的列舉值。無法繼承這個方法。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> 物件，用於逐一查看集合。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.To">
      <summary>取得或設定訊息的目的端點。</summary>
      <returns>包含訊息目的端點的 URI。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteHeader(System.Int32,System.Xml.XmlDictionaryWriter)">
      <summary>使用指定的 XML 寫入器從指定的位置序列化標頭。</summary>
      <param name="headerIndex">要序列化之標頭以零起始的索引。</param>
      <param name="writer">用來序列化標頭的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteHeader(System.Int32,System.Xml.XmlWriter)">
      <summary>使用指定的 XML 寫入器從指定的位置序列化標頭。</summary>
      <param name="headerIndex">要序列化之標頭以零起始的索引。</param>
      <param name="writer">用來序列化標頭的 <see cref="T:System.Xml.XmlWriter" />。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteHeaderContents(System.Int32,System.Xml.XmlDictionaryWriter)">
      <summary>使用指定的 XML 寫入器序列化指定的標頭內容。</summary>
      <param name="headerIndex">要序列化之標頭以零起始的索引。</param>
      <param name="writer">用於序列化標頭內容的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteHeaderContents(System.Int32,System.Xml.XmlWriter)">
      <summary>使用指定的 XML 寫入器序列化指定的標頭內容。</summary>
      <param name="headerIndex">要序列化之標頭以零起始的索引。</param>
      <param name="writer">用來序列化標頭內容的 <see cref="T:System.Xml.XmlWriter" />。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteStartHeader(System.Int32,System.Xml.XmlDictionaryWriter)">
      <summary>使用指定的 XML 寫入器序列化開始標頭。</summary>
      <param name="headerIndex">要序列化之標頭以零起始的索引。</param>
      <param name="writer">用於序列化開始標頭的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteStartHeader(System.Int32,System.Xml.XmlWriter)">
      <summary>使用指定的 XML 寫入器序列化開始標頭。</summary>
      <param name="headerIndex">要序列化之標頭以零起始的索引。</param>
      <param name="writer">用來序列化開始標頭的 <see cref="T:System.Xml.XmlWriter" />。</param>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageProperties">
      <summary>表示訊息屬性集。此類別無法被繼承。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.Channels.MessageProperties" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.#ctor(System.ServiceModel.Channels.MessageProperties)">
      <summary>使用預設屬性來初始化 <see cref="T:System.ServiceModel.Channels.MessageProperties" /> 類別的新執行個體。</summary>
      <param name="properties">
        <see cref="T:System.ServiceModel.Channels.MessageProperties" />。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.Add(System.String,System.Object)">
      <summary>將具有指定名稱和屬性的項目加入至 <see cref="T:System.ServiceModel.Channels.MessageProperties" /> 集合。</summary>
      <param name="name">要新增的項目名稱。</param>
      <param name="property">要加入的項目的值。</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.AllowOutputBatching">
      <summary>取得或設定值，這個值會指定是否要在將此訊息交付傳輸之前先儲存。</summary>
      <returns>如果允許批次進行傳出訊息則為 true，否則為 false。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.Clear">
      <summary>從 <see cref="T:System.ServiceModel.Channels.MessageProperties" /> 集合移除所有元素。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.ContainsKey(System.String)">
      <summary>判斷 <see cref="T:System.ServiceModel.Channels.MessageProperties" /> 是否包含特定名稱、索引鍵或識別項。</summary>
      <returns>如果 <see cref="T:System.ServiceModel.Channels.MessageProperties" /> 包含的項目有指定的 <paramref name="name" />，則為 true，否則為 false。</returns>
      <param name="name">要在<see cref="T:System.ServiceModel.Channels.MessageProperties" />中找到的名稱、 索引鍵或識別項。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.CopyProperties(System.ServiceModel.Channels.MessageProperties)">
      <summary>將指定之 <see cref="T:System.ServiceModel.Channels.MessageProperties" /> 的內容複製到這個執行個體。</summary>
      <param name="properties">要從中複製的來源 <see cref="T:System.ServiceModel.Channels.MessageProperties" /> 物件。</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Count">
      <summary>取得 <see cref="T:System.ServiceModel.Channels.MessageProperties" /> 中的屬性總數。</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageProperties" /> 中的屬性總數。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.Dispose">
      <summary>釋放 <see cref="T:System.ServiceModel.Channels.MessageProperties" /> 類別所使用的所有資源。</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Encoder">
      <summary>取得編碼器，這個編碼器可用來寫入訊息至資料流及讀取資料流中的訊息。</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageEncoder" />，可用來寫入訊息至資料流及讀取資料流中的訊息。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.IsFixedSize">
      <summary>取得值，指出 <see cref="T:System.ServiceModel.Channels.MessageProperties" /> 是否有固定的大小。</summary>
      <returns>如果 <see cref="T:System.ServiceModel.Channels.MessageProperties" /> 有固定大小，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Item(System.String)">
      <summary>擷取具有指定名稱、識別碼或索引鍵值的屬性。</summary>
      <returns>具有指定 <paramref name="name" /> 的屬性，或是如果屬性不存在則為 null。</returns>
      <param name="name">從集合中取得的屬性名稱。</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Keys">
      <summary>取得在 <see cref="T:System.ServiceModel.Channels.MessageProperties" /> 中含有索引鍵的 <see cref="T:System.Collections.ICollection" />。</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" />，在 <see cref="T:System.ServiceModel.Channels.MessageProperties" /> 中包含索引鍵。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.Remove(System.String)">
      <summary>從 <see cref="T:System.ServiceModel.Channels.MessageProperties" /> 中移除具有指定之名稱的項目。</summary>
      <returns>如果 <see cref="T:System.ServiceModel.Channels.MessageProperties" /> 包含具有指定之 <paramref name="name" /> 而且是可移除的項目，則為 true，否則為 false。</returns>
      <param name="name">要移除之項目的名稱。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#ICollection{T}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>將有指定名稱和屬性的項目加入 <see cref="T:System.ServiceModel.Channels.MessageProperties" />。</summary>
      <param name="pair">索引鍵/值組，其包含要新增之項目的名稱和值。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#ICollection{T}#Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>判斷 <see cref="T:System.ServiceModel.Channels.MessageProperties" /> 是否包含特定名稱。</summary>
      <returns>如果 <see cref="T:System.ServiceModel.Channels.MessageProperties" /> 包含在指定 <paramref name="pair" /> 中具有名稱和值的項目，則為 true，否則為 false。</returns>
      <param name="pair">索引鍵/值組，其包含要在 <see cref="T:System.ServiceModel.Channels.MessageProperties" /> 中尋找之項目的名稱和值。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#ICollection{T}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary>從指定索引處開始，複製指定之 <see cref="T:System.ServiceModel.Channels.MessageProperties" /> 的內容至陣列。</summary>
      <param name="array">集合要複製到的 <see cref="T:System.Array" />。</param>
      <param name="index">做為開頭的索引。</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>取得值，這個值表示這個屬性集是否是唯讀的。</summary>
      <returns>如果這個屬性集是唯讀的，則為 true，否則為 false。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#ICollection{T}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>從 <see cref="T:System.ServiceModel.Channels.MessageProperties" /> 中移除具有指定之名稱的項目。</summary>
      <returns>如果 <see cref="T:System.ServiceModel.Channels.MessageProperties" /> 包含在 <paramref name="pair" /> 中具有指定名稱和值而且是可移除的項目，則為 true，否則為 false。</returns>
      <param name="pair">索引鍵/值組，其包含要移除之項目的名稱和值。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>傳回可逐一查看集合的列舉值。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" />，可用於逐一查看集合。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#IEnumerable#GetEnumerator">
      <summary>傳回可逐一查看集合的列舉值。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" />，可用於逐一查看集合。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.TryGetValue(System.String,System.Object@)">
      <summary>判斷 <see cref="T:System.ServiceModel.Channels.MessageProperties" /> 是否包含特定名稱，並且擷取其值。</summary>
      <returns>如果 <see cref="T:System.ServiceModel.Channels.MessageProperties" /> 包含的項目有指定的 <paramref name="name" />，則為 true，否則為 false。</returns>
      <param name="name">要尋找之項目的名稱。</param>
      <param name="value">找到之項目的值。</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Values">
      <summary>取得 <see cref="T:System.Collections.ICollection" />，此集合包含 <see cref="T:System.ServiceModel.Channels.MessageProperties" /> 中的值。</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" />，在 <see cref="T:System.ServiceModel.Channels.MessageProperties" /> 中包含值。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Via">
      <summary>取得或設定傳送訊息時使用的傳輸位址。</summary>
      <returns>包含傳送訊息時使用之傳輸位址的 URI。</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageState">
      <summary>指定訊息的狀態。</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.MessageState.Closed">
      <summary>此訊息已經關閉，因此無法再存取。</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.MessageState.Copied">
      <summary>已經複製此訊息。</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.MessageState.Created">
      <summary>已經建立此訊息。</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.MessageState.Read">
      <summary>此訊息正在讀取中。</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.MessageState.Written">
      <summary>已經寫入此訊息。</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageVersion">
      <summary>指定與訊息及其交換相關聯的 SOAP 和 WS-Addressing 版本。</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Addressing">
      <summary>取得或設定與目前訊息版本相關聯的 WS-Addressing 版本。</summary>
      <returns>與目前訊息版本相關聯的 <see cref="T:System.ServiceModel.Channels.AddressingVersion" />。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion)">
      <summary>使用 WS-Addressing 1.0 和指定的 SOAP 版本來建立訊息版本物件。</summary>
      <returns>使用指定之 SOAP 版本和 WS-Addressing 1.0 的 <see cref="T:System.ServiceModel.Channels.MessageVersion" />。</returns>
      <param name="envelopeVersion">指示要使用之 SOAP 版本的 <see cref="T:System.ServiceModel.EnvelopeVersion" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="envelopeVersion" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion,System.ServiceModel.Channels.AddressingVersion)">
      <summary>使用指定的 SOAP 和 WS-Addressing 版本來建立訊息版本物件。</summary>
      <returns>使用指定之 WS-Addressing 和 SOAP 版本的 <see cref="T:System.ServiceModel.Channels.MessageVersion" />。</returns>
      <param name="envelopeVersion">指示 SOAP 版本的 <see cref="T:System.ServiceModel.EnvelopeVersion" />。</param>
      <param name="addressingVersion">指示 WS-Addressing 版本的 <see cref="T:System.ServiceModel.Channels.AddressingVersion" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="envelopeVersion" /> 或 <paramref name="addressingVersion" /> 是 null。</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Default">
      <summary>取得 Windows Communication Foundation (WCF) 所使用的預設訊息版本。</summary>
      <returns>使用 WS-Addressing 1.0 和 SOAP1.2 的 <see cref="T:System.ServiceModel.Channels.MessageVersion" />。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Envelope">
      <summary>取得與目前訊息版本相關聯的 SOAP 版本。</summary>
      <returns>與目前訊息版本相關聯的 <see cref="T:System.ServiceModel.EnvelopeVersion" />。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageVersion.Equals(System.Object)">
      <summary>傳回值，這個值指出目前的訊息版本是否與指定的物件相等。</summary>
      <returns>如果指定的物件等於目前的 <see cref="T:System.ServiceModel.Channels.MessageVersion" /> 物件，則為 true，否則為 false。</returns>
      <param name="obj">要與目前訊息版本比較的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageVersion.GetHashCode">
      <summary>取得目前訊息版本的雜湊程式碼。</summary>
      <returns>目前 <see cref="T:System.ServiceModel.Channels.MessageVersion" /> 的唯一雜湊程式碼。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.None">
      <summary>取得未使用 SOAP 或 WS-Addressing 的訊息版本。</summary>
      <returns>未使用 SOAP 或 WS-Addressing 的 <see cref="T:System.ServiceModel.Channels.MessageVersion" />。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Soap11">
      <summary>取得使用 SOAP 1.1 的訊息版本。</summary>
      <returns>使用 SOAP 1.1 但未使用任何 WS-Addressing 版本的 <see cref="T:System.ServiceModel.Channels.MessageVersion" />。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Soap12WSAddressing10">
      <summary>取得使用 WS-Addressing 1.0 和 SOAP 1.2 的訊息版本。</summary>
      <returns>使用 WS-Addressing 1.0 和 SOAP 1.2 版本的 <see cref="T:System.ServiceModel.Channels.MessageVersion" />。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageVersion.ToString">
      <summary>傳回目前訊息版本的字串表示。</summary>
      <returns>目前訊息版本的字串表示。</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.RequestContext">
      <summary>提供與傳入要求相互關聯的回覆。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.Channels.RequestContext" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Abort">
      <summary>在衍生類別中覆寫時，中止處理與內容關聯的要求。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>在衍生類別中覆寫時，開始非同步作業以回覆與目前內容關聯的要求。</summary>
      <returns>參考非同步回覆作業的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="message">傳入的 <see cref="T:System.ServiceModel.Channels.Message" />，包含該要求。</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 委派，這個委派會接收非同步回覆作業完成的通知。</param>
      <param name="state">應用程式所指定的物件，其中包含與非同步回覆作業相關的狀態資訊。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>在衍生類別中覆寫時，在指定時間間隔內開始非同步作業以回覆與目前內容關聯的要求。</summary>
      <returns>參考非同步回覆作業的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="message">傳入的 <see cref="T:System.ServiceModel.Channels.Message" />，包含該要求。</param>
      <param name="timeout">
        <see cref="T:System.Timespan" />，指定等候回覆可用要求的時間間隔。</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 委派，這個委派會接收非同步回覆作業完成的通知。</param>
      <param name="state">應用程式所指定的物件，其中包含與非同步回覆作業相關的狀態資訊。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Close">
      <summary>在衍生類別中覆寫時，關閉回覆與目前內容關聯之要求內容的作業。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Close(System.TimeSpan)">
      <summary>在衍生類別中覆寫時，在指定時間間隔內關閉回覆與目前內容關聯之要求內容的作業。</summary>
      <param name="timeout">
        <see cref="T:System.Timespan" />，指定與目前內容關聯之回覆作業必須關閉的時間間隔。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Dispose(System.Boolean)">
      <summary>釋放與內容相關聯的資源。</summary>
      <param name="disposing">true 表示會同時釋放 Managed 和 Unmanaged 資源，false 則表示只釋放 Unmanaged 資源。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.EndReply(System.IAsyncResult)">
      <summary>在衍生類別中覆寫時，完成非同步作業以回覆要求訊息。</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" />，呼叫其中一種 <see cref="Overload:System.ServiceModel.Channels.RequestContext.BeginReply" /> 方法時傳回。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message)">
      <summary>在衍生類別中覆寫時，回覆要求訊息。</summary>
      <param name="message">傳入的 <see cref="T:System.ServiceModel.Channels.Message" />，包含該要求。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <summary>在衍生類別中覆寫時，在指定時間間隔內回覆要求訊息。</summary>
      <param name="message">傳入的 <see cref="T:System.ServiceModel.Channels.Message" />，包含該要求。</param>
      <param name="timeout">
        <see cref="T:System.Timespan" />，指定等候回覆要求的時間間隔。</param>
    </member>
    <member name="P:System.ServiceModel.Channels.RequestContext.RequestMessage">
      <summary>在衍生類別 (Derived Class) 中覆寫時，取得包含要求的訊息。</summary>
      <returns>包含要求的 <see cref="T:System.ServiceModel.Channels.Message" />。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.System#IDisposable#Dispose">
      <summary>同時釋放與內容關聯的 Managed 和 Unmanaged 資源。</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement">
      <summary>此繫結項目會指定用於 SOAP 文字訊息的字元編碼和訊息版本控制。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.#ctor(System.ServiceModel.Channels.MessageVersion,System.Text.Encoding)">
      <summary>使用指定的訊息版本和編碼，初始化 <see cref="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement" /> 類別的新執行個體。</summary>
      <param name="messageVersion">針對訊息版本所使用的 <see cref="T:System.ServiceModel.Channels.MessageVersion" />。</param>
      <param name="writeEncoding">用來格式化訊息字元的 <see cref="T:System.Text.Encoding" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="messageVersion" /> 或 <paramref name="writeEncoding" /> 是 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="writeEncoding" /> 值無效。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>在用戶端上建置通道處理站堆疊，這個堆疊會針對指定的內容建立指定的通道型別。</summary>
      <returns>
        <paramref name="TChannel" /> 型別的 <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" />，其適用於指定的內容。</returns>
      <param name="context">通道的 <see cref="T:System.ServiceModel.Channels.BindingContext" />。</param>
      <typeparam name="TChannel">通道處理站所產生之通道的型別。</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.Clone">
      <summary>建立從目前項目初始化的新 <see cref="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement" /> 物件。</summary>
      <returns>屬性值與目前項目之值相等的 <see cref="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement" /> 物件。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.CreateMessageEncoderFactory">
      <summary>建立文字訊息編碼器處理站，這個處理站會採用目前編碼繫結項目所指定的訊息版本與字元編碼。</summary>
      <returns>此處理站建立的 <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" />。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>從繫結項目堆疊的適當層次中，傳回要求的型別物件 (如果有的話)。</summary>
      <returns>要求的型別物件 <paramref name="T" /> (如果存在的話)，如果不存在則為 null。</returns>
      <param name="context">繫結項目的 <see cref="T:System.ServiceModel.Channels.BindingContext" />。</param>
      <typeparam name="T">此方法所查詢的型別物件。</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.TextMessageEncodingBindingElement.MessageVersion">
      <summary>取得或設定用於格式化文字訊息的 SOAP 和 WS-Addressing 版本。</summary>
      <returns>用來格式化訊息的 <see cref="T:System.ServiceModel.Channels.MessageVersion" />。預設值是 <see cref="P:System.ServiceModel.Channels.MessageVersion.Soap12WSAddressing10" />。</returns>
      <exception cref="T:System.ArgumentNullException">值為 null。</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.TextMessageEncodingBindingElement.ReaderQuotas">
      <summary>取得或設定 SOAP 訊息複雜性的條件約束，而這些條件約束可由以此繫結所設定的端點處理。</summary>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />，指定已交換之 SOAP 訊息的複雜度條件約束。接下來的＜備註＞一節提供了這些條件約束的預設值。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.TextMessageEncodingBindingElement.WriteEncoding">
      <summary>取得或設定用於格式化文字訊息字元的編碼。</summary>
      <returns>用來格式化文字訊息字元的 <see cref="T:System.Text.Encoding" />。預設的文字編碼是 UTF-8 格式。</returns>
      <exception cref="T:System.ArgumentNullException">值為 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="writeEncoding" /> 值無效。</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.TransportBindingElement">
      <summary>表示傳輸繫結項目的 abstract 基底類別。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportBindingElement.#ctor">
      <summary>建立這個類別的新執行個體。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportBindingElement.#ctor(System.ServiceModel.Channels.TransportBindingElement)">
      <summary>從現有的執行個體建立這個類別的新執行個體。</summary>
      <param name="elementToBeCloned">要複製的 <see cref="T:System.ServiceModel.Channels.TransportBindingElement" />。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>從指定的 <see cref="T:System.ServiceModel.Channels.BindingContext" /> 中取得屬性。</summary>
      <returns>來自指定之 <see cref="T:System.ServiceModel.Channels.BindingContext" /> 的屬性。</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" />。</param>
      <typeparam name="T">要取得的屬性。</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.TransportBindingElement.ManualAddressing">
      <summary>取得或設定值，這個值會指出是否需要訊息的手動定址。</summary>
      <returns>如果需要訊息的手動定址則為 true，否則為 false。預設為 false。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize">
      <summary>取得及設定可接收之可允許的訊息大小上限 (以位元組為單位)。</summary>
      <returns>可接收的可允許訊息大小上限。預設值為 65,536 個位元組。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.TransportBindingElement.Scheme">
      <summary>取得用於傳輸的 URI 配置。</summary>
      <returns>傳回此傳輸的 URI 配置，這會根據哪一個衍生類別實作此方法而異。</returns>
    </member>
    <member name="T:System.ServiceModel.Description.ClientCredentials">
      <summary>讓使用者設定可用於通訊之用戶端的用戶端和服務認證，以及服務認證驗證設定。</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.Description.ClientCredentials" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.#ctor(System.ServiceModel.Description.ClientCredentials)">
      <summary>這是複製建構函式。</summary>
      <param name="other">
        <see cref="T:System.ServiceModel.Description.ClientCredentials" />。新建構之執行個體的所有屬性都會反映這個參數值。</param>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <summary>將指定的用戶端行為套用至端點。</summary>
      <param name="serviceEndpoint">要套用指定之用戶端行為的端點。</param>
      <param name="behavior">要套用至所指定端點的用戶端行為。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceEndpoint" /> 或<paramref name=" behavior" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.Clone">
      <summary>建立這個 <see cref="T:System.ServiceModel.Description.ClientCredentials" /> 執行個體的新複本。</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.ClientCredentials" /> 執行個體。</returns>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.CloneCore">
      <summary>建立這個 <see cref="T:System.ServiceModel.Description.ClientCredentials" /> 執行個體的新複本。</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.ClientCredentials" /> 執行個體。</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ClientCredentials.HttpDigest">
      <summary>取得目前的 HTTP 摘要式認證。</summary>
      <returns>
        <see cref="T:System.ServiceModel.Security.HttpDigestClientCredential" />，表示當選擇 HTTP 摘要式驗證方法時，用戶端用於向服務進行驗證的認證。</returns>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.System#ServiceModel#Description#IEndpointBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>將這個類別的執行個體新增至繫結參數集合。</summary>
      <param name="serviceEndpoint">要相加的 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />。</param>
      <param name="bindingParameters">繫結參數的集合。</param>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.System#ServiceModel#Description#IEndpointBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
      <summary>實作端點上服務的修改或延伸。</summary>
      <param name="serviceEndpoint">公開合約的端點。</param>
      <param name="endpointDispatcher">要修改或延伸的端點發送器。</param>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.System#ServiceModel#Description#IEndpointBehavior#Validate(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>保留供將來使用。</summary>
      <param name="serviceEndpoint">要驗證的 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />。</param>
    </member>
    <member name="P:System.ServiceModel.Description.ClientCredentials.UserName">
      <summary>取得認證物件，您可以使用此物件來設定用戶端向服務驗證本身時所使用的使用者名稱和密碼。</summary>
      <returns>表示目前 UserName 認證的 <see cref="T:System.ServiceModel.Security.UserNamePasswordClientCredential" />。</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ClientCredentials.Windows">
      <summary>取得物件，這個物件會用於控制用戶端在向服務驗證本身時所使用的 Windows 認證。</summary>
      <returns>表示目前 Windows 認證的 <see cref="T:System.ServiceModel.Security.WindowsClientCredential" />。</returns>
    </member>
    <member name="T:System.ServiceModel.Description.ContractDescription">
      <summary>描述 Windows Communication Foundation (WCF) 合約，指定端點與外界溝通的內容。</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ContractDescription.#ctor(System.String)">
      <summary>使用指定的名稱，初始化 <see cref="T:System.ServiceModel.Description.ContractDescription" /> 類別的新執行個體。</summary>
      <param name="name">合約的名稱。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 為 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="name" /> 是空的。</exception>
    </member>
    <member name="M:System.ServiceModel.Description.ContractDescription.#ctor(System.String,System.String)">
      <summary>使用指定的限定命名空間名稱，初始化 <see cref="T:System.ServiceModel.Description.ContractDescription" /> 類別的新執行個體。</summary>
      <param name="name">合約的名稱。</param>
      <param name="ns">包含合約名稱的命名空間。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 為 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="name" /> 是空的。</exception>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.CallbackContractType">
      <summary>取得或設定合約描述指定的回呼合約的型別。</summary>
      <returns>合約描述指定的回呼合約的 <see cref="T:System.Type" />。</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.ConfigurationName">
      <summary>取得或設定合約描述的組態名稱。</summary>
      <returns>合約的組態名稱。</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.ContractBehaviors">
      <summary>取得合約行為的集合。</summary>
      <returns>合約行為的集合。</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.ContractType">
      <summary>取得或設定合約描述指定的合約型別。</summary>
      <returns>合約描述指定的合約的 <see cref="T:System.Type" />。</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.Name">
      <summary>取得或設定合約的名稱。</summary>
      <returns>合約描述的名稱。</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.Namespace">
      <summary>取得或設定合約的命名空間。</summary>
      <returns>合約的命名空間。</returns>
      <exception cref="T:System.ArgumentNullException">設定的值為 null。</exception>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.Operations">
      <summary>取得與合約關聯的作業描述的集合。</summary>
      <returns>包含與合約描述關聯的作業描述的 <see cref="T:System.ServiceModel.Description.OperationDescriptionCollection" />。</returns>
    </member>
    <member name="T:System.ServiceModel.Description.DataContractSerializerOperationBehavior">
      <summary>表示 <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 的執行階段行為。</summary>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerOperationBehavior.#ctor(System.ServiceModel.Description.OperationDescription)">
      <summary>使用指定的作業描述，初始化 <see cref="T:System.ServiceModel.Description.DataContractSerializerOperationBehavior" /> 類別的新執行個體。</summary>
      <param name="operation">表示作業的 <see cref="T:System.ServiceModel.Description.OperationDescription" />。</param>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerOperationBehavior.#ctor(System.ServiceModel.Description.OperationDescription,System.ServiceModel.DataContractFormatAttribute)">
      <summary>使用指定的作業描述和資料合約格式，初始化 <see cref="T:System.ServiceModel.Description.DataContractSerializerOperationBehavior" /> 類別的新執行個體。</summary>
      <param name="operation">表示作業的 <see cref="T:System.ServiceModel.Description.OperationDescription" />。</param>
      <param name="dataContractFormatAttribute">用來控制序列化程序的 <see cref="T:System.ServiceModel.DataContractFormatAttribute" />。</param>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerOperationBehavior.CreateSerializer(System.Type,System.String,System.String,System.Collections.Generic.IList{System.Type})">
      <summary>為序列化和還原序列化程序建立繼承自 <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> 之類別的執行個體。</summary>
      <returns>繼承自 <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> 類別之類別的執行個體。</returns>
      <param name="type">要為其建立序列化程式的 <see cref="T:System.Type" />。</param>
      <param name="name">產生之型別的名稱。</param>
      <param name="ns">產生之型別的命名空間。</param>
      <param name="knownTypes">包含已知型別之 <see cref="T:System.Type" /> 的 <see cref="T:System.Collections.Generic.IList`1" />。</param>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerOperationBehavior.CreateSerializer(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IList{System.Type})">
      <summary>使用包含命名空間的 <see cref="T:System.Xml.XmlDictionaryString" />，為序列化和還原序列化程序建立繼承自 <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> 之類別的執行個體。</summary>
      <returns>繼承自 <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> 類別之類別的執行個體。</returns>
      <param name="type">要序列化或還原序列化的型別。</param>
      <param name="name">已序列化之型別的名稱。</param>
      <param name="ns">
        <see cref="T:System.Xml.XmlDictionaryString" />，其中包含已序列化之型別的命名空間。</param>
      <param name="knownTypes">包含已知型別之 <see cref="T:System.Type" /> 的 <see cref="T:System.Collections.Generic.IList`1" />。</param>
    </member>
    <member name="P:System.ServiceModel.Description.DataContractSerializerOperationBehavior.DataContractFormatAttribute">
      <summary>取得與作業相關聯的 <see cref="T:System.ServiceModel.DataContractFormatAttribute" />。</summary>
      <returns>與作業關聯的 <see cref="T:System.ServiceModel.DataContractFormatAttribute" />。</returns>
    </member>
    <member name="P:System.ServiceModel.Description.DataContractSerializerOperationBehavior.DataContractResolver">
      <summary>取得或設定進行序列化及還原序列化程序時，用於動態對應型別的 <see cref="T:System.Runtime.Serialization.DataContractResolver" /> 實作。</summary>
      <returns>型別：<see cref="T:System.Runtime.Serialization.DataContractResolver" />對應 xsi:type 至已知資料合約型別的類別。</returns>
    </member>
    <member name="P:System.ServiceModel.Description.DataContractSerializerOperationBehavior.MaxItemsInObjectGraph">
      <summary>取得或設定物件圖形中要序列化或還原序列化的最大項目數。</summary>
      <returns>物件圖形中要序列化或還原序列化的最大項目數。預設為 <see cref="F:System.Int32.MaxValue" />。</returns>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerOperationBehavior.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>將參數集合新增至行為。</summary>
      <param name="description">要新增參數的 <see cref="T:System.ServiceModel.Description.OperationDescription" />。</param>
      <param name="parameters">
        <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" />，其中包含要新增的參數。</param>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerOperationBehavior.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)">
      <summary>將用戶端行為附加到作業。</summary>
      <param name="description">表示作業的 <see cref="T:System.ServiceModel.Description.OperationDescription" />。</param>
      <param name="proxy">表示用戶端的 <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" />。</param>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerOperationBehavior.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)">
      <summary>將行為套用到作業。</summary>
      <param name="description">表示作業的 <see cref="T:System.ServiceModel.Description.OperationDescription" />。</param>
      <param name="dispatch">要附加行為的 <see cref="T:System.ServiceModel.Dispatcher.DispatchOperation" />。</param>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerOperationBehavior.System#ServiceModel#Description#IOperationBehavior#Validate(System.ServiceModel.Description.OperationDescription)">
      <summary>驗證作業。</summary>
      <param name="description">表示要驗證之作業的 <see cref="T:System.ServiceModel.Description.OperationDescription" />。</param>
    </member>
    <member name="T:System.ServiceModel.Description.FaultDescription">
      <summary>表示 SOAP 錯誤。</summary>
    </member>
    <member name="M:System.ServiceModel.Description.FaultDescription.#ctor(System.String)">
      <summary>使用指定的動作值，初始化 <see cref="T:System.ServiceModel.Description.FaultDescription" /> 類別的新執行個體。</summary>
      <param name="action">SOAP 錯誤訊息的動作。</param>
    </member>
    <member name="P:System.ServiceModel.Description.FaultDescription.Action">
      <summary>SOAP 錯誤訊息中的動作的值。</summary>
      <returns>SOAP 錯誤的動作。</returns>
    </member>
    <member name="P:System.ServiceModel.Description.FaultDescription.DetailType">
      <summary>SOAP 錯誤詳細資料的型別。</summary>
      <returns>可序列化詳細資料物件的型別。</returns>
    </member>
    <member name="P:System.ServiceModel.Description.FaultDescription.Name">
      <summary>取得或設定 SOAP 錯誤的名稱。</summary>
      <returns>SOAP 錯誤的名稱。</returns>
    </member>
    <member name="P:System.ServiceModel.Description.FaultDescription.Namespace">
      <summary>取得或設定 SOAP 錯誤的命名空間。</summary>
      <returns>SOAP 錯誤的命名空間。</returns>
    </member>
    <member name="T:System.ServiceModel.Description.FaultDescriptionCollection">
      <summary>表示 <see cref="T:System.ServiceModel.Description.FaultDescription" /> 物件的集合，可以用於取得有關合約中 SOAP 錯誤的資訊。</summary>
    </member>
    <member name="T:System.ServiceModel.Description.IContractBehavior">
      <summary>可用於在服務或用戶端應用程式中延伸合約的執行階段行為的實作方式。</summary>
    </member>
    <member name="M:System.ServiceModel.Description.IContractBehavior.AddBindingParameters(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>設定繫結項目以支援合約行為。</summary>
      <param name="contractDescription">要修改的合約描述。</param>
      <param name="endpoint">要修改的端點。</param>
      <param name="bindingParameters">繫結項目支援行為所需的物件。</param>
    </member>
    <member name="M:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <summary>實作合約上用戶端的修改或延伸。</summary>
      <param name="contractDescription">延伸所適用的合約描述。</param>
      <param name="endpoint">結束點。</param>
      <param name="clientRuntime">用戶端執行階段。</param>
    </member>
    <member name="M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)">
      <summary>實作合約上用戶端的修改或延伸。</summary>
      <param name="contractDescription">要修改的合約描述。</param>
      <param name="endpoint">公開合約的端點。</param>
      <param name="dispatchRuntime">控制服務執行的分派執行階段。</param>
    </member>
    <member name="M:System.ServiceModel.Description.IContractBehavior.Validate(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint)">
      <summary>您可以實作此方法確認合約和端點可以支援合約行為。</summary>
      <param name="contractDescription">要驗證的合約。</param>
      <param name="endpoint">要驗證的端點。</param>
    </member>
    <member name="T:System.ServiceModel.Description.IEndpointBehavior">
      <summary>實作可用於延伸服務或用戶端應用程式中端點的執行階段行為的方法。</summary>
    </member>
    <member name="M:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>您可以實作這個方法，在執行階段將資料傳遞至繫結，以支援自訂行為。</summary>
      <param name="endpoint">要修改的端點。</param>
      <param name="bindingParameters">繫結項目支援行為所需的物件。</param>
    </member>
    <member name="M:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <summary>實作端點上用戶端的修改或延伸。</summary>
      <param name="endpoint">要自訂的端點。</param>
      <param name="clientRuntime">要自訂的用戶端執行階段。</param>
    </member>
    <member name="M:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
      <summary>實作端點上服務的修改或延伸。</summary>
      <param name="endpoint">公開合約的端點。</param>
      <param name="endpointDispatcher">要修改或延伸的端點發送器。</param>
    </member>
    <member name="M:System.ServiceModel.Description.IEndpointBehavior.Validate(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>您可以實作這個方法以確認端點符合某些預定的準則。</summary>
      <param name="endpoint">要驗證的端點。</param>
    </member>
    <member name="T:System.ServiceModel.Description.IOperationBehavior">
      <summary>實作方法，這些方法可用於延伸服務或用戶端應用程式中作業的執行階段行為。</summary>
    </member>
    <member name="M:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>您可以實作這個方法，在執行階段將資料傳遞至繫結，以支援自訂行為。</summary>
      <param name="operationDescription">正在檢查的作業。只能用於檢查。如果作業描述受到修改，結果就會變成未定義狀態。</param>
      <param name="bindingParameters">繫結項目支援行為所需的物件集合。</param>
    </member>
    <member name="M:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)">
      <summary>實作作業上用戶端的修改或延伸。</summary>
      <param name="operationDescription">正在檢查的作業。只能用於檢查。如果作業描述受到修改，結果就會變成未定義狀態。</param>
      <param name="clientOperation">執行階段物件，公開由 <paramref name="operationDescription" /> 描述之作業的自訂屬性。</param>
    </member>
    <member name="M:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)">
      <summary>實作作業上服務的修改或延伸。</summary>
      <param name="operationDescription">正在檢查的作業。只能用於檢查。如果作業描述受到修改，結果就會變成未定義狀態。</param>
      <param name="dispatchOperation">執行階段物件，公開由 <paramref name="operationDescription" /> 描述之作業的自訂屬性。</param>
    </member>
    <member name="M:System.ServiceModel.Description.IOperationBehavior.Validate(System.ServiceModel.Description.OperationDescription)">
      <summary>您可以實作這個方法，確認作業符合某些所需的條件。</summary>
      <param name="operationDescription">正在檢查的作業。只能用於檢查。如果作業描述受到修改，結果就會變成未定義狀態。</param>
    </member>
    <member name="T:System.ServiceModel.Description.MessageBodyDescription">
      <summary>表示 SOAP 訊息的本文。</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessageBodyDescription.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.Description.MessageBodyDescription" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.ServiceModel.Description.MessageBodyDescription.Parts">
      <summary>取得 SOAP 訊息本文的部分。</summary>
      <returns>可以檢查或修改的本文部分。</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageBodyDescription.ReturnValue">
      <summary>取得或設定包含傳回值的部分 SOAP 訊息。</summary>
      <returns>傳回值 (如果有的話)。</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageBodyDescription.WrapperName">
      <summary>取得或設定 SOAP 本文項目內部包裝函式項目的名稱 (如果有的話)。</summary>
      <returns>包裝函式項目 (如果有的話)。</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageBodyDescription.WrapperNamespace">
      <summary>取得或設定 SOAP 本文中包裝函式項目的命名空間 (如果有的話)。</summary>
      <returns>包裝函式項目的命名空間 (如果有的話)。</returns>
    </member>
    <member name="T:System.ServiceModel.Description.MessageDescription">
      <summary>表示訊息的描述。</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessageDescription.#ctor(System.String,System.ServiceModel.Description.MessageDirection)">
      <summary>使用指定的動作和方向，初始化 <see cref="T:System.ServiceModel.Description.MessageDescription" /> 類別的新執行個體。</summary>
      <param name="action">識別訊息目的之 SOAP 訊息的動作參數。</param>
      <param name="direction">如果訊息是傳入訊息，則為 <see cref="F:System.ServiceModel.Description.MessageDirection.Input" />，如果訊息是傳出訊息，則為 <see cref="F:System.ServiceModel.Description.MessageDirection.Output" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="direction" /> 不是 <see cref="F:System.ServiceModel.Description.MessageDirection.Input" />，也不是 <see cref="F:System.ServiceModel.Description.MessageDirection.Output" />。</exception>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.Action">
      <summary>取得或設定識別訊息目的之 SOAP 訊息的動作參數。</summary>
      <returns>包含動作 URI 的 <see cref="T:System.String" />。</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.Body">
      <summary>取得 SOAP 訊息的本文。</summary>
      <returns>包含訊息本文的 <see cref="T:System.ServiceModel.Description.MessagePartDescriptionCollection" />。</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.Direction">
      <summary>取得指出訊息是傳入或傳出訊息的方向。</summary>
      <returns>指出訊息是傳入服務或從服務傳出的 <see cref="T:System.ServiceModel.Description.MessageDirection" />。</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.Headers">
      <summary>取得 SOAP 訊息標頭的描述。</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.MessageHeaderDescriptionCollection" />，其中包含 SOAP 訊息標頭的描述。</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.MessageType">
      <summary>取得或設定類型，這個類型會識別訊息合約的類型。</summary>
      <returns>識別訊息合約類型的 <see cref="T:System.Type" />。</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.Properties">
      <summary>取得 SOAP 訊息屬性的描述。</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.MessagePropertyDescriptionCollection" />，其中包含 SOAP 訊息屬性的描述。</returns>
    </member>
    <member name="T:System.ServiceModel.Description.MessageDescriptionCollection">
      <summary>提供集合，用於儲存組成屬於合約之作業的訊息的描述。</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessageDescriptionCollection.Find(System.String)">
      <summary>尋找並傳回集合中具有指定動作的第一個訊息的訊息描述。</summary>
      <returns>集合中其訊息具有指定之 <paramref name="action" /> 的第一個 <see cref="T:System.ServiceModel.Description.MessageDescription" />，如果找不到相符的 <paramref name="action" />，則為 null。</returns>
      <param name="action">要尋找的訊息的動作。</param>
    </member>
    <member name="M:System.ServiceModel.Description.MessageDescriptionCollection.FindAll(System.String)">
      <summary>尋找並傳回集合中具有指定動作的所有訊息的訊息描述。</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.MessageDescriptionCollection" />，包含目前集合中具有指定 <paramref name="action" /> 的訊息的集合訊息描述。如果找不到相符的 <see cref="T:System.ServiceModel.Description.MessageDescription" /> 物件，便會傳回空集合。</returns>
      <param name="action">要尋找的訊息的動作。</param>
    </member>
    <member name="T:System.ServiceModel.Description.MessageDirection">
      <summary>指定訊息的方向。</summary>
    </member>
    <member name="F:System.ServiceModel.Description.MessageDirection.Input">
      <summary>訊息正在傳入。</summary>
    </member>
    <member name="F:System.ServiceModel.Description.MessageDirection.Output">
      <summary>訊息正在傳出。</summary>
    </member>
    <member name="T:System.ServiceModel.Description.MessageHeaderDescription">
      <summary>表示 SOAP 訊息標頭。</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessageHeaderDescription.#ctor(System.String,System.String)">
      <summary>使用指定的限定名稱，初始化 <see cref="T:System.ServiceModel.Description.MessageHeaderDescription" /> 類別的新執行個體。</summary>
      <param name="name">訊息標頭的名稱。</param>
      <param name="ns">訊息標頭的命名空間。</param>
    </member>
    <member name="P:System.ServiceModel.Description.MessageHeaderDescription.Actor">
      <summary>取得或設定訊息標頭的目的收件者。</summary>
      <returns>指出訊息標頭之目的收件者的 URI。</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageHeaderDescription.MustUnderstand">
      <summary>取得或設定值，指出標頭是否必須根據 SOAP 1.1 和 1.2 規格來辨識。</summary>
      <returns>如果訊息標頭的處理為強制性，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageHeaderDescription.Relay">
      <summary>取得值，這個值表示是否應該轉送標頭。</summary>
      <returns>如果可以轉送訊息標頭則為 true，否則為 false。根據 SOAP 1.1 規格，預設為 false。</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageHeaderDescription.TypedHeader">
      <summary>取得或設定值，指出訊息標頭是否為訊息合約標頭。</summary>
      <returns>如果訊息標頭是訊息合約標頭，則為 true，否則為 false。</returns>
    </member>
    <member name="T:System.ServiceModel.Description.MessageHeaderDescriptionCollection">
      <summary>表示 <see cref="T:System.ServiceModel.Description.MessageHeaderDescription" /> 物件的集合。</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessageHeaderDescriptionCollection.GetKeyForItem(System.ServiceModel.Description.MessageHeaderDescription)">
      <summary>當由衍生類別呼叫時，傳回訊息標頭的 <see cref="T:System.Xml.XmlQualifiedName" />。</summary>
      <returns>訊息標頭的 <see cref="T:System.Xml.XmlQualifiedName" />。</returns>
      <param name="item">要找出的 <see cref="T:System.ServiceModel.Description.MessageHeaderDescription" />。</param>
    </member>
    <member name="T:System.ServiceModel.Description.MessagePartDescription">
      <summary>表示 SOAP 訊息部分的描述。</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessagePartDescription.#ctor(System.String,System.String)">
      <summary>初始化 <see cref="T:System.ServiceModel.Description.MessagePartDescription" /> 類別的新執行個體。</summary>
      <param name="name">訊息部分的 XML 名稱。</param>
      <param name="ns">訊息部分的 XML 命名空間。</param>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.Index">
      <summary>取得或設定訊息部分的索引。</summary>
      <returns>訊息部分的索引。</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.MemberInfo">
      <summary>取得或設定訊息部分的成員資訊。</summary>
      <returns>這個訊息部分的成員資訊。</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.Multiple">
      <summary>取得或設定值，控制訊息部分是否可以在訊息中發生一次以上。</summary>
      <returns>如果可以發生一次以上，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.Name">
      <summary>取得或設定訊息部分的名稱。</summary>
      <returns>訊息部分的名稱。</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.Namespace">
      <summary>取得或設定訊息部分的命名空間。</summary>
      <returns>訊息部分的命名空間。</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.Type">
      <summary>取得或設定訊息部分的型別。</summary>
      <returns>訊息部分的型別。</returns>
    </member>
    <member name="T:System.ServiceModel.Description.MessagePartDescriptionCollection">
      <summary>表示 <see cref="T:System.ServiceModel.Description.MessagePartDescription" /> 物件的集合。</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessagePartDescriptionCollection.GetKeyForItem(System.ServiceModel.Description.MessagePartDescription)">
      <summary>當由衍生類別呼叫時，傳回 <see cref="T:System.ServiceModel.Description.MessagePartDescription" /> 的 <see cref="T:System.Xml.XmlQualifiedName" />。</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.MessagePartDescription" /> 的 <see cref="T:System.Xml.XmlQualifiedName" />。</returns>
      <param name="item">要找出的 <see cref="T:System.ServiceModel.Description.MessagePartDescription" />。</param>
    </member>
    <member name="T:System.ServiceModel.Description.MessagePropertyDescription">
      <summary>表示由 <see cref="T:System.ServiceModel.MessagePropertyAttribute" /> 指定的訊息屬性。</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessagePropertyDescription.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.ServiceModel.Description.MessagePropertyDescription" /> 類別的新執行個體。</summary>
      <param name="name">屬性的名稱。</param>
    </member>
    <member name="T:System.ServiceModel.Description.MessagePropertyDescriptionCollection">
      <summary>表示 <see cref="T:System.ServiceModel.Description.MessagePropertyDescription" /> 物件的集合。</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessagePropertyDescriptionCollection.GetKeyForItem(System.ServiceModel.Description.MessagePropertyDescription)">
      <summary>傳回 <see cref="T:System.ServiceModel.Description.MessagePropertyDescription" /> 的 <see cref="T:System.Xml.XmlQualifiedName" />。</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.MessagePropertyDescription" /> 的 <see cref="T:System.Xml.XmlQualifiedName" />。</returns>
      <param name="item">要找出的 <see cref="T:System.ServiceModel.Description.MessagePropertyDescription" />。</param>
    </member>
    <member name="T:System.ServiceModel.Description.OperationDescription">
      <summary>表示合約作業的描述，提供組成作業的訊息的描述。</summary>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescription.#ctor(System.String,System.ServiceModel.Description.ContractDescription)">
      <summary>使用指定的名稱和合約描述，初始化 <see cref="T:System.ServiceModel.Description.OperationDescription" /> 類別的新執行個體。</summary>
      <param name="name">作業描述的名稱。</param>
      <param name="declaringContract">用於初始化作業描述的 <see cref="T:System.ServiceModel.Description.ContractDescription" />。</param>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.DeclaringContract">
      <summary>取得或設定作業所屬的合約。</summary>
      <returns>作業的 <see cref="T:System.ServiceModel.Description.ContractDescription" />。</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.Faults">
      <summary>取得與作業描述關聯的錯誤的描述。</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.FaultDescriptionCollection" />，包含與作業描述關聯之錯誤的詳細資訊。</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.IsOneWay">
      <summary>取得或設定值，這個值會指出作業是否傳回回覆訊息。</summary>
      <returns>如果此方法接收要求訊息且不會傳回回覆訊息，則為 true，否則為 false。預設為 false。</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.KnownTypes">
      <summary>取得與作業描述關聯的已知型別。</summary>
      <returns>與作業描述關聯的已知型別的集合。</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.Messages">
      <summary>取得或設定組成作業的訊息的描述。</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.MessageDescriptionCollection" />，包含組成作業的訊息的描述。</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.Name">
      <summary>取得或設定作業描述的名稱。</summary>
      <returns>作業描述的名稱。</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.OperationBehaviors">
      <summary>取得作業的行為集合。</summary>
      <returns>作業的行為集。</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.TaskMethod">
      <summary>取得或設定工作作業所使用的方法。</summary>
      <returns>用於工作作業的方法。</returns>
    </member>
    <member name="T:System.ServiceModel.Description.OperationDescriptionCollection">
      <summary>表示包含作業描述的集合。</summary>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescriptionCollection.Find(System.String)">
      <summary>從作業描述的集合傳回具有指定名稱的作業描述。</summary>
      <returns>具有指定名稱的 <see cref="T:System.ServiceModel.Description.OperationDescription" />。</returns>
      <param name="name">此作業的名稱。</param>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescriptionCollection.FindAll(System.String)">
      <summary>從具有指定名稱的集合傳回所有作業描述的集合。</summary>
      <returns>型別 <see cref="T:System.ServiceModel.Description.OperationDescription" /> 的 <see cref="T:System.Collections.ObjectModel.Collection`1" />，包含具有指定名稱的作業描述。</returns>
      <param name="name">此作業的名稱。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescriptionCollection.InsertItem(System.Int32,System.ServiceModel.Description.OperationDescription)">
      <summary>將項目插入作業描述集合的指定索引處。</summary>
      <param name="index">應該插入 <paramref name="item" /> 之以零起始的索引。</param>
      <param name="item">要插入的 <see cref="T:System.ServiceModel.Description.OperationDescription" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescriptionCollection.SetItem(System.Int32,System.ServiceModel.Description.OperationDescription)">
      <summary>取代集合中指定索引處的作業描述項目。</summary>
      <param name="index">應該插入 <paramref name="item" /> 之以零起始的索引。</param>
      <param name="item">要設定的 <see cref="T:System.ServiceModel.Description.OperationDescription" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> 為 null。</exception>
    </member>
    <member name="T:System.ServiceModel.Description.ServiceEndpoint">
      <summary>表示服務的端點，允許服務的用戶端尋找並與服務通訊。</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceEndpoint.#ctor(System.ServiceModel.Description.ContractDescription)">
      <summary>初始化指定合約的 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> 類別的新執行個體。</summary>
      <param name="contract">服務端點的 <see cref="T:System.ServiceModel.Description.ContractDescription" />。</param>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceEndpoint.#ctor(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>使用指定的合約、繫結和位址，初始化 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> 類別的新執行個體。</summary>
      <param name="contract">服務端點的 <see cref="T:System.ServiceModel.Description.ContractDescription" />。</param>
      <param name="binding">指定服務端點如何與外界溝通的 <see cref="T:System.ServiceModel.Channels.Binding" />。</param>
      <param name="address">服務端點的 <see cref="T:System.ServiceModel.EndpointAddress" />。</param>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceEndpoint.Address">
      <summary>取得或設定服務端點的端點位址。</summary>
      <returns>指定服務端點的位置的 <see cref="T:System.ServiceModel.EndpointAddress" />。</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceEndpoint.Binding">
      <summary>取得或設定服務端點的繫結。</summary>
      <returns>服務端點的 <see cref="T:System.ServiceModel.Channels.Binding" />。</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceEndpoint.Contract">
      <summary>取得服務端點的合約。</summary>
      <returns>指定服務端點的合約的 <see cref="T:System.ServiceModel.Description.ContractDescription" />。</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceEndpoint.EndpointBehaviors">
      <summary>取得服務的端點行為。</summary>
      <returns>服務的端點行為。</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceEndpoint.Name">
      <summary>取得或設定服務端點的名稱。</summary>
      <returns>服務端點的名稱。預設值是繫結名稱和合約描述名稱的串連。例如，<see cref="P:System.ServiceModel.Channels.Binding.Name" /> +'_' + <see cref="P:System.ServiceModel.Description.ContractDescription.Name" />。</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.ClientOperation">
      <summary>用於修改或擴充用戶端物件或用戶端通道物件中特定合約作業的執行行為。此類別無法被繼承。</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ClientOperation.#ctor(System.ServiceModel.Dispatcher.ClientRuntime,System.String,System.String)">
      <summary>使用指定的 <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" />、名稱和動作值，初始化 <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /> 類別的新執行個體。</summary>
      <param name="parent">
        <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" /> 包含物件。</param>
      <param name="name">此作業的名稱。</param>
      <param name="action">作業的動作。</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ClientOperation.#ctor(System.ServiceModel.Dispatcher.ClientRuntime,System.String,System.String,System.String)">
      <summary>使用指定的 <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" />、名稱、動作和回覆動作值，初始化 <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /> 類別的新執行個體。</summary>
      <param name="parent">
        <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" /> 包含物件。</param>
      <param name="name">此作業的名稱。</param>
      <param name="action">作業的動作。</param>
      <param name="replyAction">回覆訊息的動作。</param>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.Action">
      <summary>取得作業的動作。</summary>
      <returns>作業的動作。</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.ClientParameterInspectors">
      <summary>取得用來檢視或修改用戶端呼叫之前或之後參數的參數偵測器物件集合。</summary>
      <returns>用來檢視或修改用戶端呼叫之前或之後參數的參數偵測器物件集合。</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.DeserializeReply">
      <summary>取得或設定值，這個值會指出是否使用 <see cref="P:System.ServiceModel.Dispatcher.ClientOperation.Formatter" /> 屬性值來還原序列化回覆訊息。</summary>
      <returns>如果傳回型別不是 <see cref="T:System.ServiceModel.Channels.Message" />，則為 true ，否則為 false。</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.Formatter">
      <summary>取得或設定格式器，這個格式器會將物件序列化為訊息以及將訊息還原序列化為物件。</summary>
      <returns>
        <see cref="T:System.ServiceModel.Dispatcher.IClientMessageFormatter" /> 實作。</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.IsOneWay">
      <summary>取得或設定值，這個值會指出作業是否為單向作業。</summary>
      <returns>如果 indigo2 用戶端不應期待回覆，則為 true，否則為 false。預設值是 false。</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.Name">
      <summary>取得此作業的名稱。</summary>
      <returns>此作業的名稱。</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.Parent">
      <summary>取得 <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" /> 包含物件。</summary>
      <returns>
        <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" /> 包含物件。</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.ReplyAction">
      <summary>取得這項作業之回覆訊息的動作。</summary>
      <returns>回覆的動作。</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.SerializeRequest">
      <summary>取得或設定值，這個值會指定 <see cref="P:System.ServiceModel.Dispatcher.ClientOperation.Formatter" /> 物件是否序列化傳出訊息。</summary>
      <returns>如果 <see cref="P:System.ServiceModel.Dispatcher.ClientOperation.Formatter" /> 屬性會將傳回值序列化為回覆訊息，則為 true，否則為 false。預設為 true。</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.TaskMethod">
      <summary>取得或設定與工作相關聯的方法。</summary>
      <returns>表示與工作相關聯之方法的 <see cref="T:System.Reflection.MethodInfo" /> 物件。</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.TaskTResult">
      <summary>取得或設定與工作相關聯之方法的結果型別。</summary>
      <returns>與工作相關聯之方法的結果的 <see cref="T:System.Type" />。</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.ClientRuntime">
      <summary>表示類別的插入點，這些類別會針對用戶端應用程式處理的所有訊息，擴充 Windows Communication Foundation (WCF) 用戶端物件的功能。</summary>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ClientMessageInspectors">
      <summary>取得用來檢視或修改特定服務作業之訊息的訊息偵測器物件集合。</summary>
      <returns>用來檢視或修改特定服務作業之訊息的訊息偵測器物件集合。</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ClientOperations">
      <summary>取得用戶端作業物件的集合，這些物件是用來附加檢查或修改特定服務作業之訊息及行為的擴充物件。</summary>
      <returns>用戶端作業物件的集合，這些物件是用來附加檢查或修改特定服務作業之訊息及行為的擴充物件。</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ContractClientType">
      <summary>取得或設定與用戶端相關聯之合約的類型。</summary>
      <returns>
        <see cref="T:System.Type" /> 物件，表示與這個用戶端相關聯的合約。</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ContractName">
      <summary>取得與用戶端相關聯之合約的名稱。</summary>
      <returns>用戶端的合約名稱。</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ContractNamespace">
      <summary>取得與用戶端相關聯之合約的命名空間。</summary>
      <returns>與用戶端相關聯之合約的命名空間。</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ManualAddressing">
      <summary>取得或設定值，指出用戶端是否將定址標頭加入至要求-回覆訊息。</summary>
      <returns>如果用戶端不會加入任何定址標頭，則為 true，否則為 false。預設為 false。請參閱＜備註＞。</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.MaxFaultSize">
      <summary>取得或設定最大錯誤大小。</summary>
      <returns>表示最大錯誤大小的整數。</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.OperationSelector">
      <summary>取得或設定 <see cref="T:System.ServiceModel.Dispatcher.IClientOperationSelector" /> 實作，這個實作可以用來選取 <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" />。</summary>
      <returns>
        <see cref="T:System.ServiceModel.Dispatcher.IClientOperationSelector" /> 物件，此物件會選取 <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" />。</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.UnhandledClientOperation">
      <summary>取得方法的用戶端作業，這些方法在 <see cref="P:System.ServiceModel.Dispatcher.ClientRuntime.Operations" /> 集合中沒有任何對應的 <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" />。</summary>
      <returns>
        <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" />，表示當作業選取器找不到與訊息相符的作業時，目前訊息內容將路由到至其中的方法。</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.Via">
      <summary>取得或設定透過用戶端傳送訊息時使用的傳輸位址。</summary>
      <returns>
        <see cref="T:System.Uri" />，這是傳輸的目的端位址。預設值為用戶端的 <see cref="P:System.ServiceModel.EndpointAddress.Uri" /> 值。</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.DispatchOperation">
      <summary>用來修改或擴充服務端點中特定服務作業的執行行為。此類別無法被繼承。</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.DispatchOperation.#ctor(System.ServiceModel.Dispatcher.DispatchRuntime,System.String,System.String)">
      <summary>使用指定的分派執行階段、名稱和動作值，初始化 <see cref="T:System.ServiceModel.Dispatcher.DispatchOperation" /> 類別的新執行個體。</summary>
      <param name="parent">關聯的 <see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" /> 物件。</param>
      <param name="name">分派作業的名稱，這個名稱會當做 <see cref="P:System.ServiceModel.Dispatcher.DispatchRuntime.Operations" /> 集合的索引鍵使用。</param>
      <param name="action">將要建立這個分派作業的訊息動作。</param>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.Action">
      <summary>取得這個作業的動作值。</summary>
      <returns>這個作業的動作值。</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.AutoDisposeParameters">
      <summary>取得或設定是否要自動處置參數。</summary>
      <returns>如果要自動處置參數，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.DeserializeRequest">
      <summary>取得或設定值，這個值會指出是否使用 <see cref="P:System.ServiceModel.Dispatcher.DispatchOperation.Formatter" /> 屬性值還原序列化要求訊息。</summary>
      <returns>如果傳回類型是 <see cref="T:System.ServiceModel.Channels.Message" /> 類型，而且沒有 out 參數，則為 false，否則為 true。</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.IsOneWay">
      <summary>取得值，這個值會指出作業是否為單向作業。</summary>
      <returns>如果作業只有輸入，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.Name">
      <summary>取得此作業的名稱。</summary>
      <returns>此作業的名稱。這會當做 <see cref="P:System.ServiceModel.Dispatcher.DispatchRuntime.Operations" /> 集合的索引鍵使用。</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.Parent">
      <summary>取得關聯的 <see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" /> 物件。</summary>
      <returns>關聯的 <see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" /> 物件。</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.SerializeReply">
      <summary>取得或設定值，這個值會指定 <see cref="P:System.ServiceModel.Dispatcher.DispatchOperation.Formatter" /> 物件是否要序列化回覆訊息。</summary>
      <returns>如果 <see cref="P:System.ServiceModel.Dispatcher.DispatchOperation.Formatter" /> 屬性會將傳回值序列化為回覆訊息，則為 true，否則為 false。</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.DispatchRuntime">
      <summary>公開屬性，這些屬性可用於修改預設服務行為以及附加自訂物件，而這些物件可以修改將傳入訊息轉換成物件並分派至作業的方式。此類別無法被繼承。</summary>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.EndpointDispatcher">
      <summary>表示用於公開一些屬性的執行階段物件，而這些屬性可以在服務應用程式中插入訊息的執行階段擴充或修改。</summary>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IClientMessageFormatter">
      <summary>定義方法，這些方法可以用來為用戶端應用程式控制訊息與物件之間的轉換。</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IClientMessageFormatter.DeserializeReply(System.ServiceModel.Channels.Message,System.Object[])">
      <summary>將訊息轉換為會傳送回到呼叫作業的傳回值及 out 參數。</summary>
      <returns>作業的傳回值。</returns>
      <param name="message">傳入訊息。</param>
      <param name="parameters">任何 out 值。</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IClientMessageFormatter.SerializeRequest(System.ServiceModel.Channels.MessageVersion,System.Object[])">
      <summary>將 <see cref="T:System.Object" /> 陣列轉換為傳出的 <see cref="T:System.ServiceModel.Channels.Message" />。</summary>
      <returns>傳送至服務作業的 SOAP 訊息。</returns>
      <param name="messageVersion">要使用的 SOAP 訊息版本。</param>
      <param name="parameters">傳遞給 WCF 用戶端作業的參數。</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IClientMessageInspector">
      <summary>定義訊息偵測器物件，您可以將這個物件加入至 <see cref="P:System.ServiceModel.Dispatcher.ClientRuntime.MessageInspectors" /> 集合以檢視或修改訊息。</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IClientMessageInspector.AfterReceiveReply(System.ServiceModel.Channels.Message@,System.Object)">
      <summary>啟用在收到回覆訊息之後但在將它傳遞回用戶端應用程式之前的訊息檢查或修改。</summary>
      <param name="reply">要轉換成各種型別並交還給用戶端應用程式的訊息。</param>
      <param name="correlationState">相互關聯狀態資料。</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IClientMessageInspector.BeforeSendRequest(System.ServiceModel.Channels.Message@,System.ServiceModel.IClientChannel)">
      <summary>啟用在向服務傳送要求訊息之前的訊息檢查或修改。</summary>
      <returns>當做 <see cref="M:System.ServiceModel.Dispatcher.IClientMessageInspector.AfterReceiveReply(System.ServiceModel.Channels.Message@,System.Object)" /> 方法的 <paramref name="correlationState " /> 引數傳回的物件。如果未使用任何相互關聯狀態，這會是 null。最好是為這個物件建立 <see cref="T:System.Guid" />，以確保不會出現兩個相同的 <paramref name="correlationState" /> 物件。</returns>
      <param name="request">要傳送至服務的訊息。</param>
      <param name="channel">WCF 用戶端物件通道。</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IClientOperationSelector">
      <summary>定義作業選取器的合約。</summary>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.IClientOperationSelector.AreParametersRequiredForSelection">
      <summary>取得值，這個值會指出是否必須有參數才能判定選取項目。</summary>
      <returns>如果需要參數，則為 true，否則為 false。</returns>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IClientOperationSelector.SelectOperation(System.Reflection.MethodBase,System.Object[])">
      <summary>傳回所選取的作業。</summary>
      <returns>自訂作業選取器所選取的作業。</returns>
      <param name="method">叫用的方法。</param>
      <param name="parameters">傳遞給方法的參數。</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IParameterInspector">
      <summary>定義可透過自訂參數偵測器實作的合約，您可以在用戶端或服務上進行呼叫前後，使用這個參數偵測器來檢查或修改資訊。</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IParameterInspector.AfterCall(System.String,System.Object[],System.Object,System.Object)">
      <summary>當用戶端呼叫已傳回後，且在服務回應傳送之前進行呼叫。</summary>
      <param name="operationName">叫用的作業名稱。</param>
      <param name="outputs">任何輸出物件。</param>
      <param name="returnValue">作業的傳回值。</param>
      <param name="correlationState">從 <see cref="M:System.ServiceModel.Dispatcher.IParameterInspector.BeforeCall(System.String,System.Object[])" /> 方法傳回的任何相互關聯狀態，或是 null。</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IParameterInspector.BeforeCall(System.String,System.Object[])">
      <summary>在用戶端呼叫傳送前，且在服務回應傳回之後進行呼叫。</summary>
      <returns>在 <see cref="M:System.ServiceModel.Dispatcher.IParameterInspector.AfterCall(System.String,System.Object[],System.Object,System.Object)" /> 中當做 <paramref name="correlationState" /> 參數傳回的相互關聯狀態。如果您不想要使用相互關聯狀態，請傳回 null。</returns>
      <param name="operationName">此作業的名稱。</param>
      <param name="inputs">用戶端傳遞給方法的物件。</param>
    </member>
    <member name="T:System.ServiceModel.Security.HttpDigestClientCredential">
      <summary>用於 HTTP 用戶端的摘要式驗證。</summary>
    </member>
    <member name="P:System.ServiceModel.Security.HttpDigestClientCredential.ClientCredential">
      <summary>取得或設定要用於摘要式驗證的網路認證。</summary>
      <returns>要用於摘要式驗證的 <see cref="T:System.Net.NetworkCredential" />。</returns>
    </member>
    <member name="T:System.ServiceModel.Security.MessageSecurityException">
      <summary>表示在套用至訊息的安全性發生問題時所出現的例外狀況。</summary>
    </member>
    <member name="M:System.ServiceModel.Security.MessageSecurityException.#ctor(System.String)">
      <summary>使用錯誤字串，初始化 <see cref="T:System.ServiceModel.Security.MessageSecurityException" /> 類別的新執行個體。</summary>
      <param name="message">錯誤訊息。</param>
    </member>
    <member name="M:System.ServiceModel.Security.MessageSecurityException.#ctor(System.String,System.Exception)">
      <summary>使用錯誤字串以及對造成此例外狀況之內部例外狀況的參考，初始化 <see cref="T:System.ServiceModel.Security.MessageSecurityException" /> 類別的新執行個體。</summary>
      <param name="message">錯誤訊息。</param>
      <param name="innerException">內部例外狀況參考。</param>
    </member>
    <member name="T:System.ServiceModel.Security.SecurityAccessDeniedException">
      <summary>表示在安全性驗證要求失敗時擲回的安全性例外狀況。</summary>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityAccessDeniedException.#ctor(System.String)">
      <summary>使用指定的訊息，初始化 <see cref="T:System.ServiceModel.Security.SecurityAccessDeniedException" /> 類別的新執行個體。</summary>
      <param name="message">錯誤條件的描述。</param>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityAccessDeniedException.#ctor(System.String,System.Exception)">
      <summary>使用指定的訊息和內部例外狀況，初始化 <see cref="T:System.ServiceModel.Security.SecurityAccessDeniedException" /> 類別的新執行個體。</summary>
      <param name="message">錯誤條件的描述。</param>
      <param name="innerException">要使用的內部例外狀況。</param>
    </member>
    <member name="T:System.ServiceModel.Security.UserNamePasswordClientCredential">
      <summary>表示以使用者名稱和密碼為基礎的用戶端認證。</summary>
    </member>
    <member name="P:System.ServiceModel.Security.UserNamePasswordClientCredential.Password">
      <summary>取得或設定密碼。</summary>
      <returns>密碼。</returns>
    </member>
    <member name="P:System.ServiceModel.Security.UserNamePasswordClientCredential.UserName">
      <summary>取得或設定使用者名稱。</summary>
      <returns>使用者名稱。</returns>
    </member>
    <member name="T:System.ServiceModel.Security.WindowsClientCredential">
      <summary>允許您指定與要用於代表用戶端之 Windows 認證有關的屬性。</summary>
    </member>
    <member name="P:System.ServiceModel.Security.WindowsClientCredential.AllowedImpersonationLevel">
      <summary>取得或設定允許的模擬等級。</summary>
      <returns>其中一個 <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值。</returns>
    </member>
    <member name="P:System.ServiceModel.Security.WindowsClientCredential.ClientCredential">
      <summary>取得或設定 Windows 用戶端認證。</summary>
      <returns>用戶端的 <see cref="T:System.Net.NetworkCredential" />。</returns>
    </member>
  </members>
</doc>
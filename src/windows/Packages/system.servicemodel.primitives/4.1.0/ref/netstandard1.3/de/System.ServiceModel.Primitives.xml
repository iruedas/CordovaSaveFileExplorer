<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.ServiceModel.Primitives</name>
  </assembly>
  <members>
    <member name="T:System.ServiceModel.ActionNotSupportedException">
      <summary>Diese Ausnahme wird in der Regel auf dem Client ausgelöst, wenn die mit zum aufgerufenen Vorgang gehörende Aktion mit keiner Vorgangsaktion auf dem Server übereinstimmt.</summary>
    </member>
    <member name="M:System.ServiceModel.ActionNotSupportedException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.ActionNotSupportedException" />-Klasse. </summary>
    </member>
    <member name="M:System.ServiceModel.ActionNotSupportedException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.ActionNotSupportedException" />-Klasse mit einer angegebenen Fehlermeldung.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
    </member>
    <member name="M:System.ServiceModel.ActionNotSupportedException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.ActionNotSupportedException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
      <param name="innerException">Die <see cref="T:System.Exception" />, die dazu geführt hat, dass die aktuelle Ausnahme ausgelöst wurde. </param>
    </member>
    <member name="T:System.ServiceModel.ChannelFactory">
      <summary>Erstellt und verwaltet die Kanäle, die von Clients zum Senden von Nachrichten an Dienstendpunkte verwendet werden.</summary>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.ChannelFactory" />-Klasse.  </summary>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)">
      <summary>Initialisiert die Kanalfactory mit den Verhaltensweisen, die von einer bestimmten Konfigurationsdatei bereitgestellt werden, sowie mit den Verhaltensweisen im Dienstendpunkt der Kanalfactory.</summary>
      <param name="configurationName">Der Name der Konfigurationsdatei.</param>
      <exception cref="T:System.InvalidOperationException">Der Dienstendpunkt der Kanalfactory ist null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.CreateDescription">
      <summary>Erstellt beim Implementieren in einer abgeleiteten Klasse eine Beschreibung des Dienstendpunkts, der der Kanalfactory zugeordnet ist.</summary>
      <returns>Die <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />-Einstellung, die der Kanalfactory zugeordnet ist.</returns>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.CreateFactory">
      <summary>Erstellt die Kanalfactory für den aktuellen Endpunkt der Factory.</summary>
      <returns>Eine <see cref="T:System.ServiceModel.Channels.IChannelFactory" />-Einstellung für den Endpunkt der aktuellen Factory.</returns>
      <exception cref="T:System.InvalidOperationException">Der Endpunkt des Diensts, zu dem die Factorykanäle eine Verbindung aufbauen, ist null, oder die Bindung des Endpunkts ist null oder enthält kein Element mit dem Konfigurationsnamen.</exception>
    </member>
    <member name="P:System.ServiceModel.ChannelFactory.Credentials">
      <summary>Ruft die Anmeldeinformationen ab, die von Clients für die Kommunikation mit einem Dienstendpunkt über die von der Factory erzeugten Kanäle verwendet werden.</summary>
      <returns>Die von Clients verwendeten <see cref="T:System.ServiceModel.Description.ClientCredentials" />-Informationen, sofern sie für die Factory konfiguriert sind, oder sofern der Endpunkt nicht null ist und sich entweder im Erstellt-Zustand oder im Zustand des Öffnens für die Kommunikation befindet; andernfalls null.</returns>
    </member>
    <member name="P:System.ServiceModel.ChannelFactory.DefaultCloseTimeout">
      <summary>Ruft das Standardzeitintervall ab, das für den Abschluss eines Schließvorgangs bereitgestellt wird.</summary>
      <returns>Die Standard-<see cref="T:System.Timespan" />, die angibt, wie viel Zeit für das Schließen bleibt, bevor ein Timeout eintritt.</returns>
    </member>
    <member name="P:System.ServiceModel.ChannelFactory.DefaultOpenTimeout">
      <summary>Ruft das Zeitintervall ab, das für den Abschluss eines Öffnungsvorgangs bereitgestellt wird.</summary>
      <returns>Die Standard-<see cref="T:System.Timespan" />, die angibt, wie viel Zeit für das Öffnen bleibt, bevor ein Timeout eintritt.</returns>
    </member>
    <member name="P:System.ServiceModel.ChannelFactory.Endpoint">
      <summary>Ruft den Dienstendpunkt ab, zu dem die von der Factory erzeugten Kanäle eine Verbindung aufbauen.</summary>
      <returns>Die <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />-Einstellung, zu der die von der Factory erzeugte Kanäle eine Verbindung aufbauen.</returns>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.EnsureOpened">
      <summary>Öffnet die aktuelle Kanalfactory, sofern diese noch nicht geöffnet ist.</summary>
      <exception cref="T:System.ObjectDisposedException">Die aktuelle Factory wird entweder geschlossen oder ist bereits geschlossen und kann daher nicht geöffnet werden.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.GetProperty``1">
      <summary>Gibt das angeforderte typisierte Objekt von der entsprechenden Ebene im Kanalstapel zurück, wenn es vorhanden ist, oder null, wenn es nicht vorhanden ist.</summary>
      <returns>Das von <paramref name="T" /> angeforderte typisierte Objekt, oder null, falls das Objekt nicht vorhanden ist.</returns>
      <typeparam name="T">Das typisierte Objekt, das von der Methode abgefragt wird.</typeparam>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Initialisiert den Dienstendpunkt der Kanalfactory mit einer angegebenen Bindung und Adresse.</summary>
      <param name="binding">Die <see cref="T:System.ServiceModel.Channels.Binding" />-Einstellung zum Initialisieren der Kanalfactory.</param>
      <param name="address">Die <see cref="T:System.ServiceModel.EndpointAddress" />-Einstellung zum Initialisieren der Kanalfactory.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Initialisiert den Dienstendpunkt der Kanalfactory mit einem angegebenen Endpunkt.</summary>
      <param name="endpoint">Die <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />-Einstellung zum Initialisieren der Kanalfactory.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="endpoint" /> ist null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.String,System.ServiceModel.EndpointAddress)">
      <summary>Initialisiert den Dienstendpunkt der Kanalfactory mit einer angegebenen Adresse und Konfiguration.</summary>
      <param name="configurationName">Der Name der zum Initialisieren der Kanalfactory verwendeten Konfigurationsdatei.</param>
      <param name="address">Die <see cref="T:System.ServiceModel.EndpointAddress" />-Einstellung zum Initialisieren der Kanalfactory.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnAbort">
      <summary>Beendet die innere Kanalfactory der aktuellen Kanalfactory.</summary>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Startet einen asynchronen Schließvorgang in der inneren Kanalfactory der aktuellen Kanalfactory, der ein Statusobjekt zugeordnet ist. </summary>
      <returns>Die <see cref="T:System.IAsyncResult" />-Einstellung, die auf den asynchronen Vorgang verweist.</returns>
      <param name="timeout">Der <see cref="T:System.Timespan" />-Wert, der angibt, welcher Zeitraum für den Vorgang verbleibt, bevor ein Timeout auftritt.</param>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat, der die Benachrichtigung über den Abschluss des asynchronen Vorgangs erhält.</param>
      <param name="state">Ein durch die Anwendung festgelegtes Objekt, das dem asynchronen Vorgang zugeordnete Statusinformationen enthält.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Startet einen asynchronen Öffnungsvorgang in der inneren Kanalfactory der aktuellen Kanalfactory, der ein Statusobjekt zugeordnet ist. </summary>
      <returns>Die <see cref="T:System.IAsyncResult" />-Einstellung, die auf den asynchronen Vorgang verweist.</returns>
      <param name="timeout">Der <see cref="T:System.Timespan" />-Wert, der angibt, welcher Zeitraum für den Vorgang verbleibt, bevor ein Timeout auftritt.</param>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat, der die Benachrichtigung über den Abschluss des asynchronen Vorgangs erhält.</param>
      <param name="state">Ein durch die Anwendung festgelegtes Objekt, das dem asynchronen Vorgang zugeordnete Statusinformationen enthält.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnClose(System.TimeSpan)">
      <summary>Aufrufe werden in der inneren Kanalfactory mit einem angegebenen Timeout zum Abschluss des Vorgangs geschlossen.</summary>
      <param name="timeout">Der <see cref="T:System.Timespan" />-Wert, der angibt, welcher Zeitraum für den Vorgang verbleibt, bevor ein Timeout auftritt.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnEndClose(System.IAsyncResult)">
      <summary>Schließt einen asynchronen Schließvorgang in der inneren Kanalfactory der aktuellen Kanalfactory ab. </summary>
      <param name="result">Die <see cref="T:System.IAsyncResult" />-Einstellung, die durch einen Aufruf der <see cref="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />-Methode zurückgegeben wurde.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnEndOpen(System.IAsyncResult)">
      <summary>Schließt einen asynchronen Öffnungsvorgang in der inneren Kanalfactory der aktuellen Kanalfactory ab. </summary>
      <param name="result">Die <see cref="T:System.IAsyncResult" />-Einstellung, die durch einen Aufruf der <see cref="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />-Methode zurückgegeben wurde.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnOpen(System.TimeSpan)">
      <summary>Aufrufe werden in der inneren Kanalfactory der aktuellen Kanalfactory mit einem angegebenen Timeout zum Abschluss des Vorgangs geöffnet.</summary>
      <param name="timeout">Die <see cref="T:System.Timespan" />, die angibt, welcher Zeitraum für das Öffnen bleibt, bevor ein Timeout auftritt.</param>
      <exception cref="T:System.InvalidOperationException">Der innere Kanal des aktuellen Kanals ist null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnOpened">
      <summary>Initialisiert eine schreibgeschützte Kopie des <see cref="T:System.ServiceModel.Description.ClientCredentials" />-Objekts für die Kanalfactory.</summary>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnOpening">
      <summary>Erstellt die innere Kanalfactory für den aktuellen Kanal.</summary>
      <exception cref="T:System.InvalidOperationException">Die innere Kanalfactory für die Kanalfactory lautet null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.System#IDisposable#Dispose">
      <summary>Schließt die aktuelle Kanalfactory.</summary>
    </member>
    <member name="T:System.ServiceModel.ChannelFactory`1">
      <summary>Eine Factory, die verschiedene Kanaltypen erstellt, die von Clients zum Senden von Nachrichten an unterschiedlich konfigurierte Dienstendpunkte verwendet werden.</summary>
      <typeparam name="TChannel">Der von der Kanalfactory erzeugte Kanaltyp.Dieser Typ muss entweder <see cref="T:System.ServiceModel.Channels.IOutputChannel" /> oder <see cref="T:System.ServiceModel.Channels.IRequestChannel" /> sein.</typeparam>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.ChannelFactory`1" />-Klasse mit einer angegebenen Bindung und Endpunktadresse.</summary>
      <param name="binding">Die <see cref="T:System.ServiceModel.Channels.Binding" />, die zur Konfiguration des Endpunkts verwendet wird.</param>
      <param name="remoteAddress">Der <see cref="T:System.ServiceModel.EndpointAddress" />, der den Speicherort des Diensts bereitstellt.</param>
      <exception cref="T:System.ArgumentNullException">Die <paramref name="binding" /> ist null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.ChannelFactory`1" />-Klasse mit einem angegebenen Endpunktkonfigurationsnamen.</summary>
      <param name="endpointConfigurationName">Der für die Endpunktkonfiguration verwendete Name.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="endpointConfigurationName" /> ist null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.#ctor(System.String,System.ServiceModel.EndpointAddress)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.ChannelFactory`1" />-Klasse, die einem angegebenen Namen für die Endpunktkonfiguration und der Remoteadresse zugeordnet ist.</summary>
      <param name="endpointConfigurationName">Der für die Endpunktkonfiguration verwendete Name.</param>
      <param name="remoteAddress">Der <see cref="T:System.ServiceModel.EndpointAddress" />, der den Speicherort des Diensts bereitstellt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="endpointConfigurationName" /> oder <paramref name="remoteAddress" /> ist null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.#ctor(System.Type)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.ChannelFactory`1" />-Klasse.  </summary>
      <param name="channelType">Der <see cref="T:System.Type" /> des von der Factory erzeugten Kanals.</param>
      <exception cref="T:System.ArgumentNullException">Die <paramref name="channelType" /> ist null.</exception>
      <exception cref="T:System.InvalidOperationException">Der <paramref name="channelType" /> ist eine Klasse oder ein Werttyp und keine Schnittstelle.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.CreateChannel">
      <summary>Erstellt den Kanal eines angegebenen Typs für eine angegebene Endpunktadresse.</summary>
      <returns>Der von der Factory erstellte <paramref name="TChannel" /> des Typs <see cref="T:System.ServiceModel.Channels.IChannel" />.</returns>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)">
      <summary>Erstellt einen Kanal zum Senden von Nachrichten an einen Dienst an einer bestimmten Endpunktadresse.</summary>
      <returns>Der von der Factory erstellte <paramref name="TChannel" /> des Typs <see cref="T:System.ServiceModel.Channels.IChannel" />.</returns>
      <param name="address">Der <see cref="T:System.ServiceModel.EndpointAddress" />, der den Speicherort des Diensts bereitstellt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> ist null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>Erstellt einen Kanal zum Senden von Nachrichten an einen Dienst an einer bestimmten Endpunktadresse durch eine angegebene Transportadresse.</summary>
      <returns>Der von der Factory erstellte <paramref name="TChannel" /> des Typs <see cref="T:System.ServiceModel.Channels.IChannel" />.</returns>
      <param name="address">Der <see cref="T:System.ServiceModel.EndpointAddress" />, der den Speicherort des Diensts bereitstellt.</param>
      <param name="via">Der <see cref="T:System.Uri" />, der die Transportadresse enthält, an die auf dem Kanal Nachrichten gesendet werden.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> ist null.</exception>
      <exception cref="T:System.InvalidOperationException">Die <see cref="T:System.ServiceModel.ChannelFactory" /> weist Duplexvorgänge auf, die nicht unterstützt werden.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.CreateDescription">
      <summary>Erstellt eine Beschreibung des Dienstendpunkts.</summary>
      <returns>Der <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> des Diensts.</returns>
      <exception cref="T:System.InvalidOperationException">Der Rückrufvertrag ist null, aber der Dienstendpunkt erfordert den Status Nicht-null.</exception>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1">
      <summary>Stellt die Basisimplementierung bereit, die verwendet wird, um Windows Communication Foundation (WCF)-Clientobjekte zu erstellen, die Dienste anrufen können.</summary>
      <typeparam name="TChannel">Der Kanal, der für die Verbindung mit dem Dienst verwendet werden soll.</typeparam>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.ClientBase`1" />-Klasse, indem der standardmäßige Zielendpunkt der Anwendungskonfigurationsdatei verwendet wird. </summary>
      <exception cref="T:System.InvalidOperationException">Entweder weist die Konfigurationsdatei keine standardmäßigen Endpunktinformationen auf, oder sie enthält mehrere Endpunkte, oder es liegt keine Konfigurationsdatei vor.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.ClientBase`1" />-Klasse unter Verwendung der angegebenen Bindung und Endpunktadresse. </summary>
      <param name="binding">Die Bindung, mit der der Dienst aufgerufen werden soll.</param>
      <param name="remoteAddress">Die Adresse des Dienstendpunkts.</param>
      <exception cref="T:System.ArgumentNullException">Die Bindung ist null.</exception>
      <exception cref="T:System.ArgumentNullException">Die Remoteadresse ist null.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.ClientBase`1" />-Klasse, indem die in der Anwendungskonfigurationsdatei angegebenen Konfigurationsinformationen von <paramref name="endpointConfigurationName" /> verwendet werden. </summary>
      <param name="endpointConfigurationName">Der Name des Endpunkts der Anwendungskonfigurationsdatei.</param>
      <exception cref="T:System.ArgumentNullException">Die angegebenen Endpunktinformationen sind null.</exception>
      <exception cref="T:System.InvalidOperationException">Der Endpunkt kann nicht gefunden werden, oder der Endpunktvertrag ist nicht gültig.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.String,System.ServiceModel.EndpointAddress)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.ClientBase`1" />-Klasse unter Verwendung der angegebenen Zieladresse und den Endpunktinformationen. </summary>
      <param name="endpointConfigurationName">Der Name des Endpunkts der Anwendungskonfigurationsdatei.</param>
      <param name="remoteAddress">Die Adresse des Diensts.</param>
      <exception cref="T:System.ArgumentNullException">Der Endpunkt ist null.</exception>
      <exception cref="T:System.ArgumentNullException">Die Remoteadresse ist null.</exception>
      <exception cref="T:System.InvalidOperationException">Der Endpunkt kann nicht gefunden werden, oder der Endpunktvertrag ist nicht gültig.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.ClientBase`1" />-Klasse.</summary>
      <param name="endpointConfigurationName">Der Name des Endpunkts der Anwendungskonfigurationsdatei.</param>
      <param name="remoteAddress">Die Adresse des Diensts.</param>
      <exception cref="T:System.ArgumentNullException">Der Endpunkt ist null.</exception>
      <exception cref="T:System.ArgumentNullException">Die Remoteadresse ist null.</exception>
      <exception cref="T:System.InvalidOperationException">Der Endpunkt kann nicht gefunden werden, oder der Endpunktvertrag ist nicht gültig.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.Abort">
      <summary>Bewirkt, dass das <see cref="T:System.ServiceModel.ClientBase`1" />-Objekt von seinem aktuellen Zustand in den geschlossenen Zustand übergeht.</summary>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.Channel">
      <summary>Ruft den inneren Kanal ab, der verwendet wird, um Meldungen an unterschiedlich konfigurierte Endpunkte zu senden.</summary>
      <returns>Ein Kanal eines angegebenen Typs.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelFactory">
      <summary>Ruft das zugrunde liegende <see cref="T:System.ServiceModel.ChannelFactory`1" />-Objekt ab.</summary>
      <returns>Ein <see cref="T:System.ServiceModel.ChannelFactory`1" />-Objekt.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ClientCredentials">
      <summary>Ruft die Clientanmeldeinformationen ab, die verwendet werden, um einen Vorgang aufzurufen.</summary>
      <returns>Gibt eine <see cref="T:System.ServiceModel.Description.ClientCredentials" />-Eigenschaft zurück, die den Beweis der vom Client präsentierten Identität darstellt.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.CreateChannel">
      <summary>Gibt einen neuen Kanal an den Dienst zurück.</summary>
      <returns>Ein Kanal vom Typ des Dienstvertrags.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.Endpoint">
      <summary>Ruft den Zielendpunkt für den Dienst ab, mit dem der WCF-Client eine Verbindung herstellen kann.</summary>
      <returns>Der Zielendpunkt.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.GetDefaultValueForInitialization``1">
      <summary>Repliziert das Verhalten des Standardschlüsselworts in C#.</summary>
      <returns>Gibt null zurück, wenn T ein Verweistyp ist, und 0 (null), wenn T ein numerischer Werttyp ist.</returns>
      <typeparam name="T">Der Typ, der vom Schlüsselword als Verweis oder numerisch identifiziert wird.</typeparam>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.InnerChannel">
      <summary>Ruft die zugrunde liegende <see cref="T:System.ServiceModel.IClientChannel" />-Implementierung ab.</summary>
      <returns>Der Clientkanal für das WCF-Clientobjekt.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase{`0}.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase{`0}.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)">
      <summary>Bietet Unterstützung für das Implementieren des ereignisbasierten asynchronen Musters.Weitere Informationen finden Sie unter zu diesem Muster finden Sie unter Übersicht über ereignisbasierte asynchrone Muster.</summary>
      <param name="beginOperationDelegate">Ein Delegat, der zum Aufrufen des asynchronen Vorgangs verwendet wird.</param>
      <param name="inValues">Die Eingabewerte für den asynchronen Aufruf.</param>
      <param name="endOperationDelegate">Ein Delegat, der verwendet wird, um den asynchronen Aufruf nach dem Abschluss zu beenden.</param>
      <param name="operationCompletedCallback">Ein vom Client bereitgestellter Rückruf, der aufgerufen wird, wenn die asynchrone Methode abgeschlossen ist.Der Rückruf wird an <see cref="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate" /> übergeben.</param>
      <param name="userState">Das dem asynchronen Aufruf zuzuordnende <paramref name="userState" />-Objekt.</param>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.State">
      <summary>Ruft den aktuellen Zustand des <see cref="T:System.ServiceModel.ClientBase`1" />-Objekts ab.</summary>
      <returns>Der Wert für den <see cref="T:System.ServiceModel.CommunicationState" /> des Objekts.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)">
      <summary>Beginnt einen asynchronen Vorgang, um <see cref="T:System.ServiceModel.ClientBase`1" /> zu schließen.</summary>
      <returns>Die <see cref="T:System.IAsyncResult" />-Einstellung, die auf den asynchronen Schließvorgang verweist.</returns>
      <param name="callback">Die Methode, die beim Abschluss den Rückruf empfängt.</param>
      <param name="state">Die Zustandsdaten.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Startet einen asynchronen Vorgang, um <see cref="T:System.ServiceModel.ClientBase`1" /> mit einem angegebenen Timeout zu schließen.</summary>
      <returns>Die <see cref="T:System.IAsyncResult" />-Einstellung, die auf den asynchronen Start-/Schließvorgang verweist.</returns>
      <param name="timeout">Der Zeitraum, in dem der Aufruf abgeschlossen werden muss.</param>
      <param name="callback">Das beim Abschluss des Vorgangs aufgerufene Rückrufobjekt.</param>
      <param name="state">Die Zustandsdaten.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)">
      <summary>Startet einen asynchronen Vorgang, um das <see cref="T:System.ServiceModel.ClientBase`1" />-Objekt zu öffnen.</summary>
      <returns>Der <see cref="T:System.IAsyncResult" />-Wert, der auf den asynchronen Öffnungsvorgang verweist. </returns>
      <param name="callback">Die Methode, die beim Abschluss den Rückruf empfängt.</param>
      <param name="state">Die Zustandsdaten.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Startet einen asynchronen Vorgang, um das <see cref="T:System.ServiceModel.ClientBase`1" />-Objekt innerhalb eines angegebenen Zeitintervalls zu öffnen.</summary>
      <returns>Der <see cref="T:System.IAsyncResult" />-Wert, der auf den asynchronen Öffnungsvorgang verweist.</returns>
      <param name="timeout">Der Zeitraum, in dem der Aufruf abgeschlossen werden muss.</param>
      <param name="callback">Die Methode, die beim Abschluss den Rückruf empfängt.</param>
      <param name="state">Die Zustandsdaten.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Close"></member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)">
      <summary>Bewirkt, dass ein <see cref="T:System.ServiceModel.ClientBase`1" />-Objekt von seinem aktuellen Zustand in den geschlossenen Zustand wechselt.</summary>
      <param name="timeout">Der Zeitraum, in dem der Aufruf abgeschlossen werden muss.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Closed">
      <summary>Der Ereignishandler, der aufgerufen wird, wenn das <see cref="T:System.ServiceModel.ClientBase`1" />-Objekt von seinem aktuellen Zustand in den geschlossenen Zustand übergegangen ist.</summary>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Closing">
      <summary>Der Ereignishandler, der aufgerufen wird, wenn das <see cref="T:System.ServiceModel.ClientBase`1" />-Objekt von seinem aktuellen Zustand in den geschlossenen Zustand übergeht.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)">
      <summary>Beendet einen asynchronen Vorgang, um das <see cref="T:System.ServiceModel.ClientBase`1" />-Objekt zu schließen.</summary>
      <param name="result">Die <see cref="T:System.IAsyncResult" />-Einstellung, die zum Abschluss des asynchronen Schließvorgangs verwendet wird.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)">
      <summary>Beendet einen asynchronen Vorgang, um das <see cref="T:System.ServiceModel.ClientBase`1" />-Objekt zu öffnen.</summary>
      <param name="result">Die <see cref="T:System.IAsyncResult" />-Einstellung, die zum Abschluss des asynchronen Beende-/Öffnungsvorgangs verwendet wird.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Faulted">
      <summary>Der Ereignishandler, der aufgerufen wird, wenn beim Ausführen eines Vorgangs auf dem <see cref="T:System.ServiceModel.ClientBase`1" />-Objekt ein Fehler auftritt.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Open"></member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)">
      <summary>Bewirkt, dass das <see cref="T:System.ServiceModel.ClientBase`1" />-Objekt innerhalb eines angegebenen Zeitraums vom Erstellt-Zustand in den Geöffnet-Zustand übergeht.</summary>
      <param name="timeout">Der Zeitraum, in dem der Aufruf abgeschlossen werden muss.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Opened">
      <summary>Der Ereignishandler, der aufgerufen wird, wenn das <see cref="T:System.ServiceModel.ClientBase`1" />-Objekt vom Erstellt-Zustand in den Geöffnet-Zustand übergeht.</summary>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Opening">
      <summary>Der Ereignishandler, der aufgerufen wird, wenn das <see cref="T:System.ServiceModel.ClientBase`1" />-Objekt vom Erstellt-Zustand in den Geöffnet-Zustand übergeht.</summary>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate">
      <summary>Ein Delegat, der von <see cref="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" /> zum Aufrufen asynchroner Vorgänge auf dem Client verwendet wird. </summary>
      <param name="inValues">Die Eingabewerte für den asynchronen Aufruf.</param>
      <param name="asyncCallback">Verweis auf die Methode, die aufgerufen wird, sobald ein entsprechender asynchroner Vorgang abgeschlossen wird.</param>
      <param name="state">Ein <see cref="T:System.Object" />, das den Client zwischen anderen asynchronen Aufrufen unterscheiden lässt.Es wird im Argumentparameter des Ereignisabschlussrückrufs für den Client verfügbar gemacht.</param>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1.ChannelBase`1">
      <summary>Stellt die generische ChannelBase-Klasse dar.</summary>
      <typeparam name="T">Generische Klasse</typeparam>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.#ctor(System.ServiceModel.ClientBase{`1})">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.ClientBase`1.ChannelBase`1" />-Klasse aus einer bestehenden Instanz der Klasse.</summary>
      <param name="client">Das -Objekt, das zum Initialisieren der neuen Instanz der Klasse verwendet wird.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
      <summary>Startet einen asynchronen Aufruf einer über den Namen angegebenen Methode.</summary>
      <returns>Das <see cref="T:System.IAsyncResult" />, das auf die aufgerufene asynchrone Methode verweist.</returns>
      <param name="methodName">Der Name der asynchron aufzurufenden Methode.</param>
      <param name="args">Ein Array von Argumenten für die aufgerufene Methode.</param>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat.</param>
      <param name="state">Das Zustandsobjekt.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.EndInvoke(System.String,System.Object[],System.IAsyncResult)">
      <summary>Schließt einen asynchronen Aufruf einer über den Namen angegebenen Methode ab.</summary>
      <returns>Die <see cref="T:System.Object" />-Ausgabe nach der aufgerufenen Methode.</returns>
      <param name="methodName">Der Name der asynchron aufgerufenen Methode.</param>
      <param name="args">Ein Array von Argumenten für die aufgerufene Methode.</param>
      <param name="result">Die Ergebnis, das durch Aufruf zurückgegeben wird.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#IDisposable#Dispose">
      <summary>Führt anwendungsspezifische Aufgaben bezüglich der Freisetzung, des Freigebens bzw. des Zurücksetzens nicht verwalteter Ressourcen, die mit dem Channel zusammenhängen.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IChannel#GetProperty``1">
      <summary>Gibt ggf. ein angefordertes typisiertes Objekt von der entsprechenden Ebene im Channelstapel zurück.</summary>
      <returns>Das von T angeforderte typisierte Objekt, falls vorhanden, oder null, falls das Objekt nicht vorhanden ist.</returns>
      <typeparam name="TProperty">Das Typenobjekt, das von der Methode abgefragt wird.</typeparam>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>Startet einen asynchronen Vorgang, um eine Nachricht zum Ziel des Ausgabekanals zu übertragen.</summary>
      <returns>Eine <see cref="T:System.IAsyncResult" />, die auf die asynchrone Nachrichtenübertragung verweist.</returns>
      <param name="message">Die Nachricht, die auf dem Ausgabechannel gesendet wird.</param>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat.</param>
      <param name="state">Ein durch die Anwendung festgelegtes Objekt, das dem asynchronen Sendevorgang zugeordnete Statusinformationen enthält.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Startet einen asynchronen Vorgang, um eine Nachricht zum Ziel des Ausgabekanals innerhalb eines festgelegten Zeitintervalls zu übertragen.</summary>
      <returns>Der <see cref="T:System.IAsyncResult" />-Wert, der auf den asynchronen Sendevorgang verweist.</returns>
      <param name="message">Die Nachricht, die auf dem Ausgabechannel gesendet wird.</param>
      <param name="timeout">Die Zeitspanne, die angibt, welcher Zeitraum für den Sendevorgang bleibt, bevor ein Timeout eintritt.</param>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat, der die Benachrichtigung über den Abschluss des asynchronen Sendevorgangs erhält.</param>
      <param name="state">Ein durch die Anwendung festgelegtes Objekt, das dem asynchronen Sendevorgang zugeordnete Statusinformationen enthält.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#EndSend(System.IAsyncResult)">
      <summary>Schließt einen asynchronen Vorgang ab, um eine Nachricht zum Ziel des Ausgabekanals zu übertragen.</summary>
      <param name="result">Die Ergebnis, das durch Aufruf zurückgegeben wird.</param>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#RemoteAddress">
      <summary>Ruft das Ziel des Diensts ab, zu dem Nachrichten auf dem Ausgabekanal gesendet werden.</summary>
      <returns>Die <see cref="T:System.ServiceModel.EndpointAddress" /> des Diensts, zu dem der Ausgabekanal Nachrichten sendet.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send(System.ServiceModel.Channels.Message)">
      <summary>Überträgt eine Nachricht an das Ziel des Ausgabekanals.</summary>
      <param name="message">Die Nachricht, die auf dem Ausgabechannel gesendet wird.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <summary>Sendet eine Nachricht auf dem aktuellen Ausgabekanal innerhalb eines angegebenen Zeitintervalls.</summary>
      <param name="message">Die Nachricht, die auf dem Ausgabechannel gesendet wird.</param>
      <param name="timeout">Die Zeitspanne, die angibt, welcher Zeitraum für den Sendevorgang bleibt, bevor ein Timeout eintritt.</param>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Via">
      <summary>Ruft den URI ab, der die Transportadresse enthält, an die Nachrichten auf dem Ausgabekanal gesendet werden.</summary>
      <returns>Der <see cref="T:System.Uri" />, der die Transportadresse enthält, an die Nachrichten auf dem Ausgabekanal gesendet werden.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>Startet einen asynchronen Vorgang, um eine Anforderungsnachricht zur Antwortseite eines Anforderung-Antwort-Nachrichtenaustauschs zu übertragen.</summary>
      <returns>Eine <see cref="T:System.IAsyncResult" />, die auf die asynchrone Nachrichtenübertragung verweist.</returns>
      <param name="message">Die zu übertragende Anforderungsnachricht ().</param>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat, der die Benachrichtigung über den Abschluss des asynchronen Vorgangs zur Übertragung einer Anforderungsnachricht empfängt.</param>
      <param name="state">Ein von der Anwendung spezifiziertes Objekt, das Zustandsinformationen enthält, die dem asynchronen Vorgang zur Übertragung einer Anforderungsnachricht zugeordnet sind.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Startet einen asynchronen Vorgang, um eine Anforderungsnachricht zur Antwortseite eines Anforderung-Antwort-Nachrichtenaustauschs innerhalb eines festgelegten Zeitintervalls zu senden.</summary>
      <returns>Eine <see cref="T:System.IAsyncResult" />, die auf die asynchrone Nachrichtenübertragung verweist.</returns>
      <param name="message">Die zu übertragende Anforderungsnachricht ().</param>
      <param name="timeout">Die Zeitspanne, die das Zeitintervall angibt, innerhalb dessen eine Antwort empfangen werden muss.</param>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat, der die Benachrichtigung über den Abschluss des asynchronen Vorgangs zur Übertragung einer Anforderungsnachricht empfängt.</param>
      <param name="state">Ein von der Anwendung spezifiziertes Objekt, das Zustandsinformationen enthält, die dem asynchronen Vorgang zur Übertragung einer Anforderungsnachricht zugeordnet sind.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#EndRequest(System.IAsyncResult)">
      <summary>Schließt einen asynchronen Vorgang ab, um die nachrichtenbasierte Antwort auf eine übertragene Anforderung zurückzugeben.</summary>
      <returns>Die als Antwort auf die Anforderung empfangene Nachricht.</returns>
      <param name="result">Das Ergebnis der Operation.</param>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#RemoteAddress">
      <summary>Ruft die Remoteadresse ab, an die der Anforderungskanal Nachrichten sendet.</summary>
      <returns>Die <see cref="T:System.ServiceModel.EndpointAddress" />, zu der der Anforderungskanal Nachrichten sendet.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request(System.ServiceModel.Channels.Message)">
      <summary>Sendet eine nachrichtenbasierte Anforderung und gibt die korrelierte nachrichtenbasierte Antwort zurück.</summary>
      <returns>Die als Antwort auf die Anforderung empfangene Nachricht.</returns>
      <param name="message">Die zu übertragende Anforderungsnachricht ().</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <summary>Sendet eine nachrichtenbasierte Anforderung und gibt die korrelierte nachrichtenbasierte Antwort innerhalb eines festgelegten Zeitintervalls zurück.</summary>
      <returns>Die als Antwort auf die Anforderung empfangene Nachricht.</returns>
      <param name="message">Die zu übertragende Anforderungsnachricht ().</param>
      <param name="timeout">Die Zeitspanne, die das Zeitintervall angibt, innerhalb dessen eine Antwort empfangen werden muss.</param>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Via">
      <summary>Ruft die Transportadresse ab, zu der die Anforderung gesendet wird.</summary>
      <returns>Der <see cref="T:System.Uri" />, der die Transportadresse enthält, an die die Nachricht gesendet wird.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#AllowInitializationUI">
      <summary>Ruft einen Wert ab, der angibt, ob für den Clientchannel eine Initialisierungs-URL zulässig ist, oder legt diesen fest.</summary>
      <returns>True, wenn für den Clientchannel eine Initialisierungs-URL zulässig ist; andernfalls false.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#BeginDisplayInitializationUI(System.AsyncCallback,System.Object)">
      <summary>Ein asynchroner Aufruf, um mit der Verwendung einer Benutzeroberfläche zum Abrufen der Anmeldeinformationen zu beginnen.</summary>
      <returns>Das <see cref="T:System.IAsyncResult" />, das für den Rückruf nach Abschluss der Verarbeitung verwendet wird.</returns>
      <param name="callback">Die Methode, die beim Abschluss dieser Methode aufgerufen wird.</param>
      <param name="state">Informationen über den Zustand des Kanals.</param>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#DidInteractiveInitialization">
      <summary>Ruft einen Wert ab, der angibt, ob ein Aufruf bei einer Benutzeroberfläche erfolgte, um Anmeldeinformationen zu erhalten.</summary>
      <returns>True, wenn ein Aufruf einer Benutzeroberfläche vorgenommen wurde, um Anmeldeinformationen abzurufen; andernfalls false.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#DisplayInitializationUI">
      <summary>Gibt einen Aufruf bei einer Benutzeroberfläche an, um Anmeldeinformationen zu erhalten.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#EndDisplayInitializationUI(System.IAsyncResult)">
      <summary>Wird aufgerufen, wenn der Aufruf von BeginDisplayInitializationUI beendet wurde.</summary>
      <param name="result">Das Ergebnis der Operation.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#UnknownMessageReceived">
      <summary>Der Ereignishandler, der aufgerufen wird, wenn das ClientBase-Objekt eine unbekannte Nachricht empfängt.</summary>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#Via">
      <summary>Ruft die URI ab, die die Transportadresse enthält, an die Nachrichten im Clientkanal gesendet werden.</summary>
      <returns>Der URI, der die Transportadresse enthält, an die Nachrichten im Kanal gesendet werden.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Abort">
      <summary>Bewirkt, dass ein Kommunikationsobjekt unmittelbar vom aktuellen Zustand in den geschlossenen Zustand übergeht.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)">
      <summary>Startet einen asynchronen Vorgang, um ein Kommunikationsobjekt zu schließen.</summary>
      <returns>Ein <see cref="T:System.IAsyncResult" />, die auf den asynchronen Schließvorgang verweist.</returns>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat, der die Benachrichtigung über den Abschluss des asynchronen Schließvorgangs empfängt.</param>
      <param name="state">Ein von der Anwendung angegebenes Objekt, das dem asynchronen Schließvorgang zugeordnete Statusinformationen enthält.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Startet einen asynchronen Vorgang, um mit einem festgelegten Timeout ein Kommunikationsobjekt zu schließen.</summary>
      <returns>Die <see cref="T:System.IAsyncResult" />-Einstellung, die auf den asynchronen Schließvorgang verweist.</returns>
      <param name="timeout">Die Zeitspanne, die angibt, welcher Zeitraum für den Sendevorgang bleibt, bevor ein Timeout eintritt.</param>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat, der die Benachrichtigung über den Abschluss des asynchronen Schließvorgangs empfängt.</param>
      <param name="state">Ein von der Anwendung angegebenes Objekt, das dem asynchronen Schließvorgang zugeordnete Statusinformationen enthält.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)">
      <summary>Startet einen asynchronen Vorgang, um ein Kommunikationsobjekt zu öffnen.</summary>
      <returns>Der <see cref="T:System.IAsyncResult" />-Wert, der auf den asynchronen Öffnungsvorgang verweist.</returns>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat, der die Benachrichtigung erhält, dass der asynchrone Öffnungsvorgang abgeschlossen wurde.</param>
      <param name="state">Ein durch die Anwendung festgelegtes Objekt, das dem asynchronen Öffnungsvorgang zugeordnete Zustandsinformationen enthält.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Startet einen asynchronen Vorgang, um ein Kommunikationsobjekt innerhalb eines festgelegten Zeitraums zu öffnen.</summary>
      <returns>Der <see cref="T:System.IAsyncResult" />-Wert, der auf den asynchronen Öffnungsvorgang verweist.</returns>
      <param name="timeout">Die Zeitspanne, die angibt, welcher Zeitraum für den Sendevorgang bleibt, bevor ein Timeout eintritt.</param>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat, der die Benachrichtigung erhält, dass der asynchrone Öffnungsvorgang abgeschlossen wurde.</param>
      <param name="state">Ein durch die Anwendung festgelegtes Objekt, das dem asynchronen Öffnungsvorgang zugeordnete Zustandsinformationen enthält.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close">
      <summary>Bewirkt, dass ein Kommunikationsobjekt vom aktuellen Zustand in den geschlossenen Zustand übergeht.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)">
      <summary>Bewirkt, dass ein Kommunikationsobjekt vom aktuellen Zustand in den geschlossenen Zustand übergeht.</summary>
      <param name="timeout">Die Zeitspanne, die angibt, welcher Zeitraum für den Sendevorgang bleibt, bevor ein Timeout eintritt.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Closed">
      <summary>Der Ereignishandler, der aufgerufen wird, wenn das ClientBase-Objekt von seinem aktuellen Zustand in den geschlossenen Zustand übergegangen ist.</summary>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Closing">
      <summary>Der Ereignishandler, der aufgerufen wird, wenn das ClientBase-Objekt von seinem aktuellen Zustand in den geschlossenen Zustand übergeht.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)">
      <summary>Beendet einen asynchronen Vorgang, um ein Kommunikationsobjekt zu schließen.</summary>
      <param name="result">Das <see cref="T:System.IAsyncResult" />, das von einem Aufruf der BeginClose()-Methode zurückgegeben wird.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)">
      <summary>Beendet einen asynchronen Vorgang, um ein Kommunikationsobjekt zu öffnen.</summary>
      <param name="result">Das <see cref="T:System.IAsyncResult" />, das von einem Aufruf der BeginOpen()-Methode zurückgegeben wird.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Faulted">
      <summary>Der Ereignishandler, der aufgerufen wird, wenn beim Ausführen eines Vorgangs auf dem ClientBase -Objekt ein Fehler auftritt.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open">
      <summary>Bewirkt den Übergang eines Kommunikationsobjekts aus dem Erstellt-Zustand in den Geöffnet-Zustand.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)">
      <summary>Bewirkt den Übergang eines Kommunikationsobjekts innerhalb eines angegebenen Zeitraums vom Erstellt-Zustand in den Geöffnet-Zustand.</summary>
      <param name="timeout">Die Zeitspanne, die angibt, welcher Zeitraum für den Sendevorgang bleibt, bevor ein Timeout eintritt.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Opened">
      <summary>Der Ereignishandler, der aufgerufen wird, wenn das ClientBase -Objekt vom Erstellt-Zustand in den Geöffnet-Zustand übergegangen ist.</summary>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Opening">
      <summary>Der Ereignishandler, der aufgerufen wird, wenn das ClientBase-Objekt vom Erstellt-Zustand in den Geöffnet-Zustand übergeht.</summary>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#State">
      <summary>Ruft den aktuellen Zustand des kommunikationsorientierten Objekts ab.</summary>
      <returns>Der Wert für den <see cref="T:System.ServiceModel.CommunicationState" /> des Objekts.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#AllowOutputBatching">
      <summary>Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob die Batchverarbeitung von ausgehenden Nachrichten zulässig ist; andernfalls False.</summary>
      <returns>True, wenn die Stapelung von ausgehenden Nachrichten zulässig ist, andernfalls false.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#InputSession">
      <summary>Ruft die Eingabesitzung für den Kanal ab.</summary>
      <returns>Die Eingabesitzung für den Channel.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#LocalAddress">
      <summary>Ruft den lokalen Endpunkt für den Kanal ab.</summary>
      <returns>Der lokale Endpunkt für den Kanal.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#OperationTimeout">
      <summary>Ruft den Zeitraum ab oder legt ihn fest, innerhalb dessen ein Vorgang abgeschlossen werden muss oder eine Ausnahme ausgelöst wird.</summary>
      <returns>Die Zeitspanne, die den Zeitraum angibt, innerhalb dessen ein Vorgang abgeschlossen werden muss.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#OutputSession">
      <summary>Ruft ggf. die dem Kanal zugeordnete Ausgabesitzung ab.</summary>
      <returns>Eine <see cref="T:System.ServiceModel.Channels.IOutputSession" />-Implementierung, wenn eine Eingabesitzung vorhanden ist, andernfalls NULL.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#RemoteAddress">
      <summary>Ruft die dem Kanal zugeordnete Remote-Adresse ab.</summary>
      <returns>Die Remote-<see cref="T:System.ServiceModel.EndpointAddress" /> für den Kanal.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#SessionId">
      <summary>Ruft ggf. einen Bezeichner für die aktuelle Sitzung zurück.</summary>
      <returns>Die aktuelle Sitzungs-ID, falls vorhanden.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IExtensibleObject{T}#Extensions">
      <summary>Ruft eine Auflistung der Erweiterungsobjekte für dieses erweiterbare Objekt ab.</summary>
      <returns>Eine <see cref="T:System.ServiceModel.IExtensionCollection`1" /> von Erweiterungsobjekten.</returns>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1.EndOperationDelegate">
      <summary>Stellt ein Delegat dar, das bei erfolgreichem Abschluss des von <see cref="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" /> vorgenommenen Aufrufs von <see cref="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" /> durch <see cref="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate" /> ausgelöst wird.</summary>
      <param name="result">Die zurückgegebenen Ergebnisse des Aufrufs durch <see cref="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" />an <see cref="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate" />.</param>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1.InvokeAsyncCompletedEventArgs">
      <summary>Speichert die Ergebnisse von einem asynchronen Aufruf durch den Client.</summary>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.InvokeAsyncCompletedEventArgs.Results">
      <summary>Ruft die Ergebnisse von einem asynchronen Aufruf durch den Client ab.</summary>
      <returns>Ein Array von <see cref="T:System.Object" />, das die Ergebnisse von einem asynchronen Aufruf durch den Client enthält.</returns>
    </member>
    <member name="T:System.ServiceModel.CommunicationException">
      <summary>Stellt einen Kommunikationsfehler in der Dienst- oder der Clientanwendung dar.</summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.CommunicationException" />-Klasse. </summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.CommunicationException" />-Klasse unter Verwendung der angegebenen Nachricht.</summary>
      <param name="message">Die Beschreibung des Fehlerzustands.</param>
    </member>
    <member name="M:System.ServiceModel.CommunicationException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.CommunicationException" />-Klasse unter Verwendung der angegebenen Nachricht und der internen Ausnahme.</summary>
      <param name="message">Die Beschreibung des Fehlerzustands.</param>
      <param name="innerException">Die zu verwendende interne Ausnahme.</param>
    </member>
    <member name="T:System.ServiceModel.CommunicationObjectAbortedException">
      <summary>Diese Ausnahme wird ausgelöst, wenn der Aufruf an ein <see cref="T:System.ServiceModel.ICommunicationObject" />-Objekt abgebrochen wurde.</summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.CommunicationObjectAbortedException" />-Klasse.  </summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.CommunicationObjectAbortedException" />-Klasse mit der angegebenen Meldung. </summary>
      <param name="message">Die von der Ausnahme ausgegebene Nachricht.</param>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.CommunicationObjectAbortedException" />-Klasse unter Verwendung der angegebenen Nachricht und der internen Ausnahme. </summary>
      <param name="message">Die Ausnahmemeldung.</param>
      <param name="innerException">Die innere Ausnahme.</param>
    </member>
    <member name="T:System.ServiceModel.CommunicationObjectFaultedException">
      <summary>Die Ausnahme, die ausgelöst wird, wenn ein Kommunikationsobjekt aufgerufen wird, das fehlerhaft ist. </summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" />-Klasse. </summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" />-Klasse unter Verwendung der angegebenen Meldung.</summary>
      <param name="message">Die Meldung, in der die Ausnahme beschrieben wird</param>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" />-Klasse unter Verwendung der angegebenen Nachricht und der internen Ausnahme.</summary>
      <param name="message">Die Ausnahmemeldung.</param>
      <param name="innerException">Die innere Ausnahme.</param>
    </member>
    <member name="T:System.ServiceModel.CommunicationState">
      <summary>Definiert die Zustände, in denen ein <see cref="T:System.ServiceModel.ICommunicationObject" /> existieren kann. </summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Closed">
      <summary>Gibt an, dass das Kommunikationsobjekt geschlossen wurde und nicht länger verwendbar ist. </summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Closing">
      <summary>Gibt an, dass das Kommunikationsobjekt in den Zustand <see cref="F:System.ServiceModel.CommunicationState.Closed" /> übergeht. </summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Created">
      <summary>Gibt an, dass das Kommunikationsobjekt instantiiert wurde und konfigurierbar ist, jedoch noch nicht geöffnet oder bereit für die Verwendung.</summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Faulted">
      <summary>Gibt an, dass das Kommunikationsobjekt auf einen Fehler gestoßen ist, den es nicht beheben kann und ab dem es nicht mehr verwendbar ist. </summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Opened">
      <summary>Gibt an, dass das Kommunikationsobjekt jetzt geöffnet und verwendungsbereit ist. </summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Opening">
      <summary>Gibt an, dass das Kommunikationsobjekt vom Zustand <see cref="F:System.ServiceModel.CommunicationState.Created" /> in den Zustand <see cref="F:System.ServiceModel.CommunicationState.Opened" /> übergeht. </summary>
    </member>
    <member name="T:System.ServiceModel.DataContractFormatAttribute">
      <summary>Weist die Windows Communication Foundation (WCF)-Infrastruktur an, <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> zu verwenden.</summary>
    </member>
    <member name="M:System.ServiceModel.DataContractFormatAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.DataContractFormatAttribute" />-Klasse. </summary>
    </member>
    <member name="P:System.ServiceModel.DataContractFormatAttribute.Style">
      <summary>Ruft das SOAP-Format der serialisierten Daten ab oder legt es fest.</summary>
      <returns>Einer der <see cref="T:System.ServiceModel.OperationFormatStyle" />-Werte.Die Standardeinstellung ist <see cref="F:System.ServiceModel.OperationFormatStyle.Document" />.</returns>
    </member>
    <member name="T:System.ServiceModel.EndpointAddress">
      <summary>Stelle eine eindeutige Netzwerkadresse bereit, die ein Client verwendet, um mit einem Dienst-Endpunkt zu kommunizieren.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.EndpointAddress" />-Klasse mit einer angegebenen URI-Zeichenfolge.</summary>
      <param name="uri">Der URI, der den Endpunkt identifiziert.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.#ctor(System.Uri,System.ServiceModel.Channels.AddressHeader[])">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.EndpointAddress" />-Klasse mit einem angegebenen URI und Headern.</summary>
      <param name="uri">Der <see cref="T:System.Uri" />, der die Endpunktposition identifiziert.</param>
      <param name="addressHeaders">Das <see cref="T:System.Array" /> vom Typ <see cref="T:System.ServiceModel.Channels.AddressHeader" />, das Adressinformationen für die Interaktion mit dem Endpunkt enthält.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.#ctor(System.Uri,System.ServiceModel.EndpointIdentity,System.ServiceModel.Channels.AddressHeader[])">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.EndpointAddress" />-Klasse mit einem angegebenen URI, Identität und Headern.</summary>
      <param name="uri">Der <see cref="T:System.Uri" />, der die Endpunktposition identifiziert.</param>
      <param name="identity">Die <see cref="T:System.ServiceModel.EndpointIdentity" /> für den Endpunkt.</param>
      <param name="addressHeaders">Das <see cref="T:System.Array" /> vom Typ <see cref="T:System.ServiceModel.Channels.AddressHeader" />, das Adressinformationen für die Interaktion mit dem Endpunkt enthält.</param>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.AnonymousUri">
      <summary>Ruft eine versionsunabhängige Darstellung des anonymen URI ab.</summary>
      <returns>Ein <see cref="T:System.Uri" /> mit dem Wert http://schemas.microsoft.com/2005/12/ServiceModel/Addressing/Anonymous.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.ApplyTo(System.ServiceModel.Channels.Message)">
      <summary>Weist den URI und die Eigenschaften der Endpunktadresse den Werten der Header einer angegebenen Nachricht zu.</summary>
      <param name="message">Die <see cref="T:System.ServiceModel.Channels.Message" />, deren Headerwerte zugewiesen werden.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> ist null.</exception>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.Equals(System.Object)">
      <summary>Gibt einen Wert zurück, der angibt, ob ein angegebenes Objekt der aktuellen Endpunktadresse entspricht.</summary>
      <returns>true, wenn das angegebene Objekt der aktuellen Klasse entspricht, andernfalls false.</returns>
      <param name="obj">Das <see cref="T:System.Object" />, das mit der aktuellen Endpunktadresse verglichen wird.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.GetHashCode">
      <summary>Stellt einen eindeutigen Hashcode für die aktuelle Endpunktadresse bereit. </summary>
      <returns>Ein eindeutiger Hashcode für die aktuelle Endpunktadresse.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.Headers">
      <summary>Ruft die Auflistung von Adressenheadern für die Endpunkte ab, die der Generator erzeugen kann.</summary>
      <returns>Die <see cref="T:System.ServiceModel.Channels.AddressHeaderCollection" />, die Adresseninformationen für den Endpunkt enthält.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.Identity">
      <summary>Ruft die Identität für den Endpunkt ab, die zum Authentifizieren verwendet wird.</summary>
      <returns>Die <see cref="T:System.ServiceModel.EndpointIdentity" /> für den Endpunkt.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.IsAnonymous">
      <summary>Ruft einen Wert ab, der angibt, ob der Endpunkt anonym ist.</summary>
      <returns>true, wenn der Endpunkt <see cref="P:System.ServiceModel.EndpointAddress.AnonymousUri" /> ist, andernfalls false.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.IsNone">
      <summary>Ruft einen Wert ab, der angibt, ob der URI für den Endpunkt <see cref="P:System.ServiceModel.EndpointAddress.NoneUri" /> ist.</summary>
      <returns>true, wenn der URI für den Endpunkt<see cref="P:System.ServiceModel.EndpointAddress.NoneUri" /> ist, andernfalls false. </returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.NoneUri">
      <summary>Ruft einen versionsunabhängigen URI ab, der für die Adresse eines Endpunkts verwendet wird, an die keine Meldung gesendet werden darf.</summary>
      <returns>Ein <see cref="T:System.Uri" /> mit dem Wert http://schemas.microsoft.com/2005/12/ServiceModel/Addressing/None.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.op_Equality(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress)">
      <summary>Gibt einen Wert zurück, der angibt, ob angegebene Endpunktadressen nicht äquivalent sind.</summary>
      <returns>true, wenn die Endpunktadressen äquivalent sind, andernfalls false.</returns>
      <param name="address1">Eines der <see cref="T:System.ServiceModel.EndpointAddress" />-Objekte, die verglichen werden.</param>
      <param name="address2">Eines der <see cref="T:System.ServiceModel.EndpointAddress" />-Objekte, die verglichen werden.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.op_Inequality(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress)">
      <summary>Gibt einen Wert zurück, der angibt, ob angegebene Endpunktadressen nicht äquivalent sind.</summary>
      <returns>true, wenn die Endpunktadressen nicht äquivalent sind, andernfalls false.</returns>
      <param name="address1">Eines der <see cref="T:System.ServiceModel.EndpointAddress" />-Objekte, die verglichen werden.</param>
      <param name="address2">Eines der <see cref="T:System.ServiceModel.EndpointAddress" />-Objekte, die verglichen werden.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.ReadFrom(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryReader)">
      <summary>Liest eine Endpunktadresse für eine angegebene Adressenversion von einem angegebenen XML-Wörterbuch-Reader.</summary>
      <returns>Die von dem XML-Wörterbuch-Reader gelesene <see cref="T:System.ServiceModel.EndpointAddress" />.</returns>
      <param name="addressingVersion">Die <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> der aktuellen Endpunktadresse.</param>
      <param name="reader">Das <see cref="T:System.Xml.XmlDictionaryReader" />-Objekt, von dem die Endpunktadresse abgerufen wird.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.ToString">
      <summary>Gibt einen kanonische Zeichenfolgendarstellung des URI zurück, der in der Endpunktadresse enthalten ist.</summary>
      <returns>Der URI, der den Endpunkt identifiziert.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.Uri">
      <summary>Ruft den URI für den Endpunkt ab.</summary>
      <returns>Der <see cref="T:System.Uri" /> für den Endpunkt.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.WriteContentsTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryWriter)">
      <summary>Speichert alle untergeordneten Knoten des Knotens im angegebenen XML-Wörterbuch-Writer.</summary>
      <param name="addressingVersion">Die <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> der aktuellen Endpunktadresse.</param>
      <param name="writer">Der <see cref="T:System.Xml.XmlDictionaryWriter" />, in dem die Endpunktadresse gespeichert wird.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> oder <paramref name="addressingVersion" /> ist null.</exception>
    </member>
    <member name="T:System.ServiceModel.EndpointAddressBuilder">
      <summary>Eine Factory für die Erzeugung von neuen (unveränderlichen) Endpunktadressen mit bestimmten Eigenschaftenwerten.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressBuilder.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.EndpointAddressBuilder" />-Klasse.  </summary>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressBuilder.#ctor(System.ServiceModel.EndpointAddress)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.EndpointAddressBuilder" />-Klasse mit einer vorhandenen Endpunktadresse.</summary>
      <param name="address">
        <see cref="T:System.ServiceModel.EndpointAddress" />, wovon die Eigenschaftenwerte verwendet werden, um die Eigenschaftenwerte dieser Instanz zu initialisieren.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> ist null.</exception>
    </member>
    <member name="P:System.ServiceModel.EndpointAddressBuilder.Headers">
      <summary>Ruft die Liste mit Adressheadern für die Endpunkte ab, die der Generator erstellen kann.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.List`1" /> des Typs <see cref="T:System.ServiceModel.Channels.AddressHeader" />, der die Adressheader für die Endpunkte enthält, die der Generator erstellen kann.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddressBuilder.Identity">
      <summary>Ruft die Identität für die Endpunkte, die der Generator erstellen kann, ab oder legt sie fest.</summary>
      <returns>Die <see cref="T:System.ServiceModel.EndpointIdentity" /> für den Endpunkt.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressBuilder.ToEndpointAddress">
      <summary>Erstellt eine neue mit den Eigenschaftenwerten des aktuellen Endpunktadress-Generators initialisierte Endpunktadresse.</summary>
      <returns>
        <see cref="T:System.ServiceModel.EndpointAddress" />, wovon die Eigenschaften mit den Werten des aktuellen Endpunktadress-Generators initialisiert werden.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddressBuilder.Uri">
      <summary>Ruft die URI für die Endpunkte, die der Generator erstellen kann, ab oder legt sie fest.</summary>
      <returns>
        <see cref="T:System.Uri" />, was die Endpunktadresse angibt.</returns>
    </member>
    <member name="T:System.ServiceModel.EndpointIdentity">
      <summary>Eine abstrakte Klasse, die (falls implementiert) eine Identität bereitstellt, die die Authentifizierung eines Endpunkts durch Clients ermöglicht, die Nachrichten mit ihr austauschen.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointIdentity.#ctor">
      <summary>Erstellt eine leere <see cref="T:System.ServiceModel.EndpointIdentity" />-Instanz.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointIdentity.Equals(System.Object)">
      <summary>Gibt einen Wert zurück, der bestimmt, ob ein angegebenes Objekt gleich dem aktuellen Identitätsobjekt ist, oder ob sie über gleiche Sicherheitseinstellungen verfügen.</summary>
      <returns>true, wenn das angegebene Objekt <paramref name="obj" /> gleich der aktuellen Identität ist oder die gleichen Sicherheitseigenschaften beinhaltet, andernfalls false.</returns>
      <param name="obj">Das <see cref="T:System.Object" />, das in Bezug auf die Gleichheit mit der aktuellen Identität verglichen wird.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointIdentity.GetHashCode">
      <summary>Gibt einen Hashcode für die aktuelle Instanz der Identität zurück.</summary>
      <returns>Der Hashcode für die aktuelle Identität.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointIdentity.ToString">
      <summary>Gibt die Identität zurück.</summary>
      <returns>Eine <see cref="T:System.String" /> im Format "identity(string)", wobei string = <see cref="P:System.ServiceModel.EndpointIdentity.IdentityClaim" />.</returns>
    </member>
    <member name="T:System.ServiceModel.EndpointNotFoundException">
      <summary>Die Ausnahme, die ausgelöst wird, wenn ein Remoteendpunkt nicht gefunden oder erreicht werden konnte.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointNotFoundException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.EndpointNotFoundException" />-Klasse mit einer angegebenen Fehlermeldung.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.EndpointNotFoundException" />-Klasse mit einer angegebenen Fehlermeldung und der internen Ausnahme, die die aktuelle Ausnahme verursacht hat.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
      <param name="innerException">Die <see cref="T:System.Exception" />, die dazu geführt hat, dass die aktuelle Ausnahme ausgelöst wurde.</param>
    </member>
    <member name="T:System.ServiceModel.EnvelopeVersion">
      <summary>Enthält Informationen über die SOAP-Version, die zu einer Nachricht und deren Austausch gehört.</summary>
    </member>
    <member name="M:System.ServiceModel.EnvelopeVersion.GetUltimateDestinationActorValues">
      <summary>Ruft eine Zeichenfolge ab, die den URI-Namen für die SOAP-Rolle enthält, die der aktuellen Nachrichtenversion für das letzte Ziel zugeordnet ist.</summary>
      <returns>Eine leere Zeichenfolge, wenn SOAP1.1 verwendet wird; eine Zeichenfolge, die http://www.w3.org/2003/05/soap-envelope/role/ultimateReceiver enthält, wenn SOAP1.2 verwendet wird.</returns>
    </member>
    <member name="P:System.ServiceModel.EnvelopeVersion.NextDestinationActorValue">
      <summary>Ruft eine Zeichenfolge ab, die den URI-Namen für die SOAP-Rolle enthält, die der aktuellen Nachrichtenversion für das nächste Ziel zugeordnet ist.</summary>
      <returns>Eine Zeichenfolge, die http://schemas.xmlsoap.org/soap/actor/next enthält, wenn SOAP1.1 verwendet wird; eine Zeichenfolge, die http://www.w3.org/2003/05/soap-envelope/role/next enthält, wenn SOAP1.2 verwendet wird, und eine leere Zeichenfolge, wenn die Nachrichtenversion NONE ist.</returns>
    </member>
    <member name="P:System.ServiceModel.EnvelopeVersion.None">
      <summary>Ruft die Umschlagversion ohne SOAP-Version ab.</summary>
      <returns>Die Umschlagversion ohne eine SOAP-Formatierung.</returns>
    </member>
    <member name="P:System.ServiceModel.EnvelopeVersion.Soap11">
      <summary>Ruft die SOAP1.1-Umschlagversion ab.</summary>
      <returns>Das SOAP1.1 <see cref="T:System.ServiceModel.EnvelopeVersion" />-Objekt.</returns>
    </member>
    <member name="P:System.ServiceModel.EnvelopeVersion.Soap12">
      <summary>Ruft die SOAP1.2-Umschlagversion ab.</summary>
      <returns>Das SOAP1.2 <see cref="T:System.ServiceModel.EnvelopeVersion" />-Objekt.</returns>
    </member>
    <member name="M:System.ServiceModel.EnvelopeVersion.ToString">
      <summary>Ruft eine Zeichenfolge ab, die die aktuelle Umschlagversion darstellt.</summary>
      <returns>Die Zeichenfolgendarstellung des aktuellen Umschlagsversion.</returns>
    </member>
    <member name="T:System.ServiceModel.ExceptionDetail">
      <summary>Stellt Fehlerdetailinformationen dar.</summary>
    </member>
    <member name="M:System.ServiceModel.ExceptionDetail.#ctor(System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.ExceptionDetail" />-Klasse aus der Ausnahme. </summary>
      <param name="exception">Die Ausnahme, die als <see cref="T:System.ServiceModel.ExceptionDetail" />-Objekt serialisiert werden soll.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="exception" />-Parameter ist null.</exception>
    </member>
    <member name="P:System.ServiceModel.ExceptionDetail.HelpLink">
      <summary>Ruft die Hilfeverknüpfung aus der Ausnahme, die an den Konstruktur weitergeleitet wurde, ab oder legt diese fest.</summary>
      <returns>Die Hilfeverknüpfungsinformationen der Ausnahme.</returns>
    </member>
    <member name="P:System.ServiceModel.ExceptionDetail.InnerException">
      <summary>Ruft das <see cref="T:System.ServiceModel.ExceptionDetail" />-Objekt ab oder legt es fest, das die innere Ausnahme darstellt.</summary>
      <returns>Die Informationen der inneren Ausnahme.</returns>
    </member>
    <member name="P:System.ServiceModel.ExceptionDetail.Message">
      <summary>Ruft die Nachricht aus der Ausnahme, die an den Konstruktur weitergeleitet wurde, ab oder legt diese fest.</summary>
      <returns>Die Ausnahmemeldung.</returns>
    </member>
    <member name="P:System.ServiceModel.ExceptionDetail.StackTrace">
      <summary>Ruft die Stapelüberwachungsinformationen aus der Ausnahme, die an den Konstruktor weitergeleitet wird, ab oder legt sie fest.</summary>
      <returns>Die Stapelüberwachung der Ausnahme.</returns>
    </member>
    <member name="M:System.ServiceModel.ExceptionDetail.ToString">
      <summary>Gibt die Ausnahmedetailinformationen für die Ausnahme, die an den Konstruktor weitergeleitet wird, zurück.</summary>
      <returns>Die Meldung und die Stapelüberwachung der Ausnahme.</returns>
    </member>
    <member name="P:System.ServiceModel.ExceptionDetail.Type">
      <summary>Ruft die Typzeichenfolge für die Ausnahme, die an den Konstruktor weitergeleitet wird, ab oder legt sie fest.</summary>
      <returns>Die Typzeichenfolge für die Ausnahme, die an den Konstruktor weitergeleitet wird.</returns>
    </member>
    <member name="T:System.ServiceModel.FaultCode">
      <summary>Stellt einen SOAP-Fehlercode dar. </summary>
    </member>
    <member name="M:System.ServiceModel.FaultCode.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.FaultCode" />-Klasse.  </summary>
      <param name="name">Der Name des Fehlercodes.</param>
    </member>
    <member name="M:System.ServiceModel.FaultCode.#ctor(System.String,System.ServiceModel.FaultCode)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.FaultCode" />-Klasse. </summary>
      <param name="name">Der Name des Fehlercodes.</param>
      <param name="subCode">Der Fehlersubcode.</param>
    </member>
    <member name="M:System.ServiceModel.FaultCode.#ctor(System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.FaultCode" />-Klasse mit dem angegebenen Namen und Namespace. </summary>
      <param name="name">Der lokale Name des Fehlercodes. </param>
      <param name="ns">Der Namespacename des Fehlercodes. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> oder <paramref name="ns" /> ist null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="name" /> ist eine leere Zeichenfolge. </exception>
    </member>
    <member name="M:System.ServiceModel.FaultCode.#ctor(System.String,System.String,System.ServiceModel.FaultCode)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.FaultCode" />-Klasse mit dem angegebenen Namen, Namespace und Fehlersubcode. </summary>
      <param name="name">Der lokale Name des Fehlercodes. </param>
      <param name="ns">Der Namespacename des Fehlercodes. </param>
      <param name="subCode">Ein <see cref="T:System.ServiceModel.FaultCode" />-Objekt, das den Fehlersubcode darstellt. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> oder <paramref name="ns" /> ist null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="name" /> ist eine leere Zeichenfolge. </exception>
    </member>
    <member name="M:System.ServiceModel.FaultCode.CreateSenderFaultCode(System.ServiceModel.FaultCode)">
      <summary>Erstellt einen Senderfehlercode mit dem angegebenen Subcode. </summary>
      <returns>Ein <see cref="T:System.ServiceModel.FaultCode" />-Objekt mit dem erstellten SOAP-Fehlersubcode in der <see cref="P:System.ServiceModel.FaultCode.SubCode" />-Eigenschaft. </returns>
      <param name="subCode">Ein <see cref="T:System.ServiceModel.FaultCode" />-Objekt, das den Fehlersubcode darstellt. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="subCode" /> ist null. </exception>
    </member>
    <member name="P:System.ServiceModel.FaultCode.IsPredefinedFault">
      <summary>Ruft einen Wert ab, der angibt, ob der Fehler ein SOAP 1.1- oder SOAP 1.2-Fehler ist.</summary>
      <returns>true, wenn der Fehler ein SOAP 1.1- oder SOAP 1.2-Fehler ist, andernfalls false.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.IsReceiverFault">
      <summary>Ruft einen Wert ab, der angibt, ob der Fehler ein SOAP 1.1-Serverfehler oder ein SOAP 1.2-Empfängerfehler ist.</summary>
      <returns>true, wenn der Fehler ein SOAP 1.1-Serverfehler oder ein SOAP 1.2-Empfängerfehler ist, andernfalls false.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.IsSenderFault">
      <summary>Ruft einen Wert ab, der angibt, ob der Fehler ein SOAP 1.1-Clientfehler oder ein SOAP 1.2-Senderfehler ist.</summary>
      <returns>true, wenn der Fehler ein SOAP 1.1-Clientfehler oder ein SOAP 1.2-Senderfehler ist, andernfalls false.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.Name">
      <summary>Ruft den lokalen Namen des Fehlercodes ab. </summary>
      <returns>Der lokale Name des Fehlercodes. </returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.Namespace">
      <summary>Ruft den Namespace des Fehlercodes ab. </summary>
      <returns>Ein URI (Uniform Resource Identifier) für den Namespacenamen. </returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.SubCode">
      <summary>Ruft den Fehlersubcode ab. </summary>
      <returns>Ein <see cref="T:System.ServiceModel.FaultCode" />-Objekt, das den Fehlersubcode darstellt. </returns>
    </member>
    <member name="T:System.ServiceModel.FaultContractAttribute">
      <summary>Gibt einen oder mehrere SOAP-Fehler an, die zurückgegeben werden, wenn bei einem Dienstvorgang ein Verarbeitungsfehler festgestellt werden.</summary>
    </member>
    <member name="M:System.ServiceModel.FaultContractAttribute.#ctor(System.Type)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.FaultContractAttribute" />-Klasse.  </summary>
      <param name="detailType">Der serialisierbare Typ, der Fehlerinformationen für den Aufrufer enthält.</param>
      <exception cref="T:System.ArgumentNullException">Das <paramref name="detailType" />-Argument ist null.</exception>
    </member>
    <member name="P:System.ServiceModel.FaultContractAttribute.Action">
      <summary>Ruft die Aktion der SOAP-Fehlernachricht ab, die als Bestandteil des Vorgangsvertrags angegeben wurde, oder legt sie fest.</summary>
      <returns>Der Wert der Aktion für die SOAP-Fehlernachricht.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultContractAttribute.DetailType">
      <summary>Ruft den Typ eines serialisierbaren Objekts ab, das Fehlerinformationen enthält.</summary>
      <returns>Der Typ, der die serialisierbare Fehlerklasse darstellt. </returns>
    </member>
    <member name="P:System.ServiceModel.FaultContractAttribute.Name">
      <summary>Ruft ab oder legt den Namen der Fehlernachricht in WSDL (Web Services Description Language) fest.</summary>
      <returns>Der Fehlernachrichten name.Standardmäßig wird der Name des als Fehlerdetail verwendeten Typs verwendet.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultContractAttribute.Namespace">
      <summary>Ruft den Namespace des SOAP-Fehlers ab oder legt diesen fest.</summary>
      <returns>Der Namespace des SOAP-Fehlers.</returns>
    </member>
    <member name="T:System.ServiceModel.FaultException">
      <summary>Stellt einen SOAP-Fehler dar.</summary>
    </member>
    <member name="M:System.ServiceModel.FaultException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.FaultException" />-Klasse.  </summary>
    </member>
    <member name="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.Channels.MessageFault,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.FaultException" />-Klasse mit den angegebenen Nachrichtenfehlerwerten und der bereitgestellten Aktionszeichenfolge.</summary>
      <param name="fault">Der Nachrichtenfehler, der die zu verwendenden Standard-SOAP-Fehlerwerte enthält.</param>
      <param name="action">Die Aktion des SOAP-Fehlers.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.FaultReason,System.ServiceModel.FaultCode,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.FaultException" />-Klasse unter Verwendung des angegebenen Grunds, Fehlercodes und Aktionswerts.</summary>
      <param name="reason">Der Grund für den SOAP-Fehler.</param>
      <param name="code">Der Fehlercode für den SOAP-Fehler.</param>
      <param name="action">Der Aktionswert für den SOAP-Fehler.</param>
    </member>
    <member name="P:System.ServiceModel.FaultException.Action">
      <summary>Ruft den Wert der SOAP-Aktion für die Fehlermeldung ab.</summary>
      <returns>Der Wert der SOAP-Aktion für die Fehlermeldung.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultException.Code">
      <summary>Ruft den Fehlercode für den SOAP-Fehler ab.</summary>
      <returns>Der Fehlercode für den SOAP-Fehler.</returns>
    </member>
    <member name="M:System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.String,System.Type[])">
      <summary>Gibt ein <see cref="T:System.ServiceModel.Channels.FaultException" />-Objekt aus dem angegebenen Nachrichtenfehler, der Aktion und einem Array von Detailtypen zurück.</summary>
      <returns>Ein <see cref="T:System.ServiceModel.FaultException" />-Objekt, das Sie auslösen können, um anzugeben, dass eine SOAP-Fehlermeldung empfangen wurde.</returns>
      <param name="messageFault">Der Nachrichtenfehler, der Standard-SOAP-Fehlerinformationen enthält.</param>
      <param name="action">Der Fehleraktionswert.</param>
      <param name="faultDetailTypes">Ein Array von Typen, das Fehlerdetails enthält.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.Type[])">
      <summary>Gibt ein <see cref="T:System.ServiceModel.Channels.FaultException" />-Objekt aus dem angegebenen Nachrichtenfehler und einem Array von Detailtypen zurück.</summary>
      <returns>Ein <see cref="T:System.ServiceModel.FaultException" />-Objekt, das Sie auslösen können, um anzugeben, dass eine SOAP-Fehlermeldung empfangen wurde.</returns>
      <param name="messageFault">Der Nachrichtenfehler, der Standard-SOAP-Fehlerinformationen enthält.</param>
      <param name="faultDetailTypes">Ein Array von Typen, das Fehlerdetails enthält.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException.CreateMessageFault">
      <summary>Gibt ein <see cref="T:System.ServiceModel.Channels.MessageFault" />-Objekt zurück.</summary>
      <returns>Stellt eine speicherinterne Darstellung eines SOAP-Fehlers dar, die an <see cref="Overload:System.ServiceModel.Channels.Message.CreateMessage" /> übergeben werden kann, um eine Meldung zu erstellen, die einen Fehler enthält.Für <see cref="T:System.ServiceModel.FaultException" />-Objekte, die sich aus Fehlermeldungen ergeben, ist dieses <see cref="T:System.ServiceModel.Channels.MessageFault" />-Objekt der eintreffende Fehler.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultException.Message">
      <summary>Ruft die Meldung für die Ausnahme ab.</summary>
      <returns>Die Ausnahmemeldung.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultException.Reason">
      <summary>Ruft <see cref="T:System.ServiceModel.FaultReason" /> für den SOAP-Fehler ab.</summary>
      <returns>Der Grund für den SOAP-Fehler.</returns>
    </member>
    <member name="T:System.ServiceModel.FaultException`1">
      <summary>Wird in einer Clientanwendung verwendet, um vertraglich angegebene SOAP-Fehler abzufangen.</summary>
      <typeparam name="TDetail">Der serialisierbare Fehlerdetailtyp.</typeparam>
    </member>
    <member name="M:System.ServiceModel.FaultException`1.#ctor(`0,System.ServiceModel.FaultReason,System.ServiceModel.FaultCode,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.FaultException`1" />-Klasse, die das angegebene Detailobjekt, die SOAP-Fehlerursache, den Code und die Aktionswerte verwendet. </summary>
      <param name="detail">Das als SOAP-Fehlerdetail verwendete Objekt.</param>
      <param name="reason">Der Grund für den SOAP-Fehler.</param>
      <param name="code">Der Fehlercode für den SOAP-Fehler.</param>
      <param name="action">Die Aktion des SOAP-Fehlers.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException`1.CreateMessageFault">
      <summary>Erstellt ein <see cref="T:System.ServiceModel.Channels.MessageFault" />-Objekt, das verwendet werden kann, um eine <see cref="T:System.ServiceModel.Channels.Message" /> zu erstellen, die den SOAP-Fehler darstellt.</summary>
      <returns>Der erstellte Nachrichtenfehler.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultException`1.Detail">
      <summary>Ruft das Objekt ab, das die Detailinformationen zur Fehlerbedingung enthält.</summary>
      <returns>Das Detailobjekt, das der Typparameter des <see cref="T:System.ServiceModel.FaultException`1" />-Objekts ist.</returns>
    </member>
    <member name="M:System.ServiceModel.FaultException`1.ToString">
      <summary>Gibt eine Zeichenfolge für das <see cref="T:System.ServiceModel.FaultException`1" />-Objekt zurück.</summary>
      <returns>Die Zeichenfolge für den SOAP-Fehler.</returns>
    </member>
    <member name="T:System.ServiceModel.FaultReason">
      <summary>Bietet eine Textbeschreibung eines SOAP-Fehlers. </summary>
    </member>
    <member name="M:System.ServiceModel.FaultReason.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.FaultReasonText})">
      <summary>Initialisiert mit der angegebenen Liste von Fehlerübersetzungen eine neue Instanz der <see cref="T:System.ServiceModel.FaultReason" />-Klasse. </summary>
      <param name="translations">Eine Liste von <see cref="T:System.ServiceModel.FaultReasonText" />-Objekten; jedes Objekt beschreibt den Fehler in einer bestimmten Sprache. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="translations" /> ist null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="translations" /> ist leer, oder ein oder mehrere Elemente ist null. </exception>
    </member>
    <member name="M:System.ServiceModel.FaultReason.#ctor(System.ServiceModel.FaultReasonText)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.FaultReason" />-Klasse unter Verwendung des angegebenen Textelements, das den Fehler in einer bestimmten Sprache beschreibt. </summary>
      <param name="translation">Ein Array von <see cref="T:System.ServiceModel.FaultReasonText" />-Objekten, das Fehlerbeschreibungen in anderen Sprachen entspricht. </param>
    </member>
    <member name="M:System.ServiceModel.FaultReason.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.FaultReason" />-Klasse mit der angegebenen Fehlerbeschreibung. </summary>
      <param name="text">Eine Beschreibung des Grunds, warum der Fehler aufgetreten ist. </param>
    </member>
    <member name="M:System.ServiceModel.FaultReason.GetMatchingTranslation">
      <summary>Ruft die Fehlerbeschreibung in der vom aktuellen Thread verwendeten Sprache ab. </summary>
      <returns>Ein <see cref="T:System.ServiceModel.FaultReasonText" />-Objekt, das die Fehlerbeschreibung enthält. </returns>
    </member>
    <member name="M:System.ServiceModel.FaultReason.GetMatchingTranslation(System.Globalization.CultureInfo)">
      <summary>Ruft die Fehlerbeschreibung in der angegebenen Sprache ab. </summary>
      <returns>Der Fehlertext in der angegebenen Sprache.</returns>
      <param name="cultureInfo">Ein <see cref="T:System.Globalization.CultureInfo" />-Objekt, das die Sprache der Fehlerbeschreibung angibt. </param>
      <exception cref="T:System.ArgumentNullException">Die <see cref="T:System.Globalization.CultureInfo" /> ist null.</exception>
    </member>
    <member name="M:System.ServiceModel.FaultReason.ToString">
      <summary>Gibt den Grund für den Fehler als Zeichenfolge zurück.</summary>
      <returns>Eine Zeichenfolge, die den Grund für den Fehler enthält.</returns>
    </member>
    <member name="T:System.ServiceModel.FaultReasonText">
      <summary>Stellt den Text zur Ursache eines SOAP-Fehlers dar.</summary>
    </member>
    <member name="M:System.ServiceModel.FaultReasonText.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.FaultReasonText" />-Klasse, die den angegebenen Fehlertext verwendet.</summary>
      <param name="text">Der Text, der die SOAP-Fehlerursache enthält.</param>
    </member>
    <member name="M:System.ServiceModel.FaultReasonText.#ctor(System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.FaultReasonText" />-Klasse. </summary>
      <param name="text">Der Text der Fehlerursache.</param>
      <param name="xmlLang">Die Sprache des Fehlers.</param>
    </member>
    <member name="M:System.ServiceModel.FaultReasonText.Matches(System.Globalization.CultureInfo)">
      <summary>Gibt einen Wert zurück, der angibt, ob die Sprache der Beschreibung mit dem bereitgestellten <see cref="T:System.Globalization.CultureInfo" />-Objekt übereinstimmt.</summary>
      <returns>true, wenn die angegebene <see cref="T:System.Globalization.CultureInfo" /> übereinstimmt, andernfalls false.</returns>
      <param name="cultureInfo">Das <see cref="T:System.Globalization.CultureInfo" />-Objekt, das mit der Sprache der Beschreibung verglichen werden soll.</param>
    </member>
    <member name="P:System.ServiceModel.FaultReasonText.Text">
      <summary>Ruft den Text der SOAP-Fehlerursache ab.</summary>
      <returns>Der Text der SOAP-Fehlerursache.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultReasonText.XmlLang">
      <summary>Ruft die Sprache der SOAP-Fehlerursache ab.</summary>
      <returns>Die Sprache der SOAP-Fehlerursache.</returns>
    </member>
    <member name="T:System.ServiceModel.IClientChannel">
      <summary>Definiert das Verhalten ausgehender Anforderungen und von Anforderung-Antwort-Kanälen, die von der Clientanwendung verwendet werden.</summary>
    </member>
    <member name="P:System.ServiceModel.IClientChannel.AllowInitializationUI">
      <summary>Dient zum Abrufen oder Festlegen eines Werts, der angibt, ob <see cref="M:System.ServiceModel.IClientChannel.DisplayInitializationUI" /> versucht, die <see cref="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer" />-Objekte in der <see cref="P:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers" />-Eigenschaft aufzurufen, oder der ausgelöst wird, wenn diese Sammlung nicht leer ist. </summary>
      <returns>true, wenn Windows Communication Foundation (WCF) interaktive Kanalinitialisierer aufrufen darf, andernfalls false. </returns>
    </member>
    <member name="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)">
      <summary>Ein asynchroner Aufruf, um mit der Verwendung einer Benutzeroberfläche zum Abrufen der Anmeldeinformationen zu beginnen.</summary>
      <returns>Das <see cref="T:System.IAsyncResult" />, das für den Rückruf nach Abschluss der Verarbeitung verwendet wird.</returns>
      <param name="callback">Die Methode, die beim Abschluss dieser Methode aufgerufen wird.</param>
      <param name="state">Informationen über den Zustand des Kanals.</param>
    </member>
    <member name="P:System.ServiceModel.IClientChannel.DidInteractiveInitialization">
      <summary>Ruft einen Wert ab, der angibt, ob ein Aufruf bei einer Benutzeroberfläche erfolgte, um Anmeldeinformationen zu erhalten. </summary>
      <returns>true, wenn die <see cref="M:System.ServiceModel.IClientChannel.DisplayInitializationUI" />-Methode aufgerufen wird (oder die <see cref="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" />-Methode und <see cref="M:System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)" />-Methode), andernfalls false.</returns>
    </member>
    <member name="M:System.ServiceModel.IClientChannel.DisplayInitializationUI">
      <summary>Ein Aufruf bei einer Benutzeroberfläche, um Anmeldeinformationen zu erhalten.</summary>
    </member>
    <member name="M:System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)">
      <summary>Wird aufgerufen, wenn der Aufruf von <see cref="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" /> beendet wurde.</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" />.</param>
    </member>
    <member name="E:System.ServiceModel.IClientChannel.UnknownMessageReceived">
      <summary>Dies ist ein reserviertes Ereignis. </summary>
    </member>
    <member name="P:System.ServiceModel.IClientChannel.Via">
      <summary>Ruft die URI ab, die die Transportadresse enthält, an die Nachrichten im Clientkanal gesendet werden.</summary>
      <returns>Die <see cref="T:System.Uri" />, die die Transportadresse enthält, an die Nachrichten im Kanal gesendet werden.</returns>
    </member>
    <member name="T:System.ServiceModel.ICommunicationObject">
      <summary>Definiert den Vertrag für den Computer im Grundzustand für alle kommunikationsorientierten Objekte im System, darunter Kanäle, Kanal-Manager, Factorys, Listener und Verteiler sowie Diensthosts.</summary>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Abort">
      <summary>Bewirkt, dass ein Kommunikationsobjekt unmittelbar vom aktuellen Zustand in den geschlossenen Zustand übergeht.  </summary>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
      <summary>Startet einen asynchronen Vorgang, um ein Kommunikationsobjekt zu schließen.</summary>
      <returns>Die <see cref="T:System.IAsyncResult" />-Einstellung, die auf den asynchronen Schließvorgang verweist. </returns>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat, der die Benachrichtigung über den Abschluss des asynchronen Schließvorgangs empfängt.</param>
      <param name="state">Ein von der Anwendung angegebenes Objekt, das dem asynchronen Schließvorgang zugeordnete Statusinformationen enthält.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" /> wurde für ein Objekt im <see cref="F:System.ServiceModel.CommunicationState.Faulted" />-Zustand aufgerufen.</exception>
      <exception cref="T:System.TimeoutException">Das standardmäßige Timeout ist verstrichen, bevor <see cref="T:System.ServiceModel.ICommunicationObject" /> ordnungsgemäß geschlossen werden konnte.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Startet einen asynchronen Vorgang, um mit einem festgelegten Timeout ein Kommunikationsobjekt zu schließen.</summary>
      <returns>Die <see cref="T:System.IAsyncResult" />-Einstellung, die auf den asynchronen Schließvorgang verweist.</returns>
      <param name="timeout">Der <see cref="T:System.Timespan" />-Wert, der angibt, welcher Zeitraum für den Sendevorgang bleibt, bevor ein Timeout eintritt.</param>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat, der die Benachrichtigung über den Abschluss des asynchronen Schließvorgangs empfängt.</param>
      <param name="state">Ein von der Anwendung angegebenes Objekt, das dem asynchronen Schließvorgang zugeordnete Statusinformationen enthält.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" /> wurde für ein Objekt im <see cref="F:System.ServiceModel.CommunicationState.Faulted" />-Zustand aufgerufen.</exception>
      <exception cref="T:System.TimeoutException">Das festgelegte Timeout ist verstrichen, bevor <see cref="T:System.ServiceModel.ICommunicationObject" /> ordnungsgemäß geschlossen werden konnte.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
      <summary>Startet einen asynchronen Vorgang, um ein Kommunikationsobjekt zu öffnen.</summary>
      <returns>Der <see cref="T:System.IAsyncResult" />-Wert, der auf den asynchronen Öffnungsvorgang verweist. </returns>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat, der die Benachrichtigung erhält, dass der asynchrone Öffnungsvorgang abgeschlossen wurde.</param>
      <param name="state">Ein durch die Anwendung festgelegtes Objekt, das dem asynchronen Öffnungsvorgang zugeordnete Zustandsinformationen enthält.</param>
      <exception cref="T:System.ServiceModel.CommunicationException">
        <see cref="T:System.ServiceModel.ICommunicationObject" /> kann nicht geöffnet werden und hat den <see cref="F:System.ServiceModel.CommunicationState.Faulted" />-Zustand angenommen.</exception>
      <exception cref="T:System.TimeoutException">Das standardmäßige Öffnungstimeout ist verstrichen, bevor <see cref="T:System.ServiceModel.ICommunicationObject" /> den <see cref="F:System.ServiceModel.CommunicationState.Opened" />-Zustand annehmen konnte. Es hat jetzt den <see cref="F:System.ServiceModel.CommunicationState.Faulted" />-Zustand.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Startet einen asynchronen Vorgang, um ein Kommunikationsobjekt innerhalb eines festgelegten Zeitraums zu öffnen.</summary>
      <returns>Der <see cref="T:System.IAsyncResult" />-Wert, der auf den asynchronen Öffnungsvorgang verweist. </returns>
      <param name="timeout">Der <see cref="T:System.Timespan" />-Wert, der angibt, welcher Zeitraum für den Sendevorgang bleibt, bevor ein Timeout eintritt.</param>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat, der die Benachrichtigung erhält, dass der asynchrone Öffnungsvorgang abgeschlossen wurde.</param>
      <param name="state">Ein durch die Anwendung festgelegtes Objekt, das dem asynchronen Öffnungsvorgang zugeordnete Zustandsinformationen enthält.</param>
      <exception cref="T:System.ServiceModel.CommunicationException">
        <see cref="T:System.ServiceModel.ICommunicationObject" /> kann nicht geöffnet werden und hat den <see cref="F:System.ServiceModel.CommunicationState.Faulted" />-Zustand angenommen.</exception>
      <exception cref="T:System.TimeoutException">Das festgelegte Timeout ist verstrichen, bevor <see cref="T:System.ServiceModel.ICommunicationObject" /> den <see cref="F:System.ServiceModel.CommunicationState.Opened" />-Zustand annehmen konnte. Es weist jetzt den <see cref="F:System.ServiceModel.CommunicationState.Faulted" />-Zustand auf.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Close">
      <summary>Bewirkt, dass ein Kommunikationsobjekt vom aktuellen Zustand in den geschlossenen Zustand übergeht.  </summary>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> wurde für ein Objekt im <see cref="F:System.ServiceModel.CommunicationState.Faulted" />-Zustand aufgerufen.</exception>
      <exception cref="T:System.TimeoutException">Das standardmäßige Schließen-Timeout ist verstrichen, bevor <see cref="T:System.ServiceModel.ICommunicationObject" /> ordnungsgemäß geschlossen werden konnte.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)">
      <summary>Bewirkt, dass ein Kommunikationsobjekt vom aktuellen Zustand in den geschlossenen Zustand übergeht.  </summary>
      <param name="timeout">Der <see cref="T:System.Timespan" />-Wert, der angibt, welcher Zeitraum für den Sendevorgang bleibt, bevor ein Timeout eintritt.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> wurde für ein Objekt im <see cref="F:System.ServiceModel.CommunicationState.Faulted" />-Zustand aufgerufen.</exception>
      <exception cref="T:System.TimeoutException">Das Timeout ist verstrichen, bevor <see cref="T:System.ServiceModel.ICommunicationObject" /> ordnungsgemäß geschlossen werden konnte.</exception>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Closed">
      <summary>Tritt ein, sobald der Übergang des Kommunikationsobjekts vom Schließen-Zustand in den Geschlossen-Zustand abgeschlossen ist.</summary>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Closing">
      <summary>Tritt ein, sobald das Kommunikationsobjekt den Schließzustand annimmt.</summary>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)">
      <summary>Beendet einen asynchronen Vorgang, um ein Kommunikationsobjekt zu schließen.</summary>
      <param name="result">Das <see cref="T:System.IAsyncResult" />, das von einem Aufruf der <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" />-Methode zurückgegeben wird.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" /> wurde für ein Objekt im <see cref="F:System.ServiceModel.CommunicationState.Faulted" />-Zustand aufgerufen.</exception>
      <exception cref="T:System.TimeoutException">Das Timeout ist verstrichen, bevor <see cref="T:System.ServiceModel.ICommunicationObject" /> ordnungsgemäß geschlossen werden konnte.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)">
      <summary>Beendet einen asynchronen Vorgang, um ein Kommunikationsobjekt zu öffnen.</summary>
      <param name="result">Das <see cref="T:System.IAsyncResult" />, das von einem Aufruf der <see cref="M:System.ServiceModel.ICommunicationObject.BeginOpen" />-Methode zurückgegeben wird.</param>
      <exception cref="T:System.ServiceModel.CommunicationException">
        <see cref="T:System.ServiceModel.ICommunicationObject" /> kann nicht geöffnet werden und hat den <see cref="F:System.ServiceModel.CommunicationState.Faulted" />-Zustand angenommen.</exception>
      <exception cref="T:System.TimeoutException">Das Timeout ist verstrichen, bevor <see cref="T:System.ServiceModel.ICommunicationObject" /> den <see cref="F:System.ServiceModel.CommunicationState.Opened" />-Zustand annehmen konnte. Es hat jetzt den <see cref="F:System.ServiceModel.CommunicationState.Faulted" />-Zustand.</exception>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Faulted">
      <summary>Tritt ein, sobald das Kommunikationsobjekt den Fehlerzustand annimmt.</summary>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Open">
      <summary>Bewirkt den Übergang eines Kommunikationsobjekts aus dem Erstellt-Zustand in den Geöffnet-Zustand.  </summary>
      <exception cref="T:System.ServiceModel.CommunicationException">
        <see cref="T:System.ServiceModel.ICommunicationObject" /> kann nicht geöffnet werden und hat den <see cref="F:System.ServiceModel.CommunicationState.Faulted" />-Zustand angenommen.</exception>
      <exception cref="T:System.TimeoutException">Das standardmäßige Öffnungstimeout ist verstrichen, bevor <see cref="T:System.ServiceModel.ICommunicationObject" /> den <see cref="F:System.ServiceModel.CommunicationState.Opened" />-Zustand annehmen konnte. Es hat jetzt den <see cref="F:System.ServiceModel.CommunicationState.Faulted" />-Zustand.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)">
      <summary>Bewirkt den Übergang eines Kommunikationsobjekts innerhalb eines angegebenen Zeitraums vom Erstellt-Zustand in den Geöffnet-Zustand.</summary>
      <param name="timeout">Der <see cref="T:System.Timespan" />-Wert, der angibt, welcher Zeitraum für den Sendevorgang bleibt, bevor ein Timeout eintritt.</param>
      <exception cref="T:System.ServiceModel.CommunicationException">
        <see cref="T:System.ServiceModel.ICommunicationObject" /> kann nicht geöffnet werden und hat den <see cref="F:System.ServiceModel.CommunicationState.Faulted" />-Zustand angenommen.</exception>
      <exception cref="T:System.TimeoutException">Das festgelegte Timeout ist verstrichen, bevor <see cref="T:System.ServiceModel.ICommunicationObject" /> den <see cref="F:System.ServiceModel.CommunicationState.Opened" />-Zustand annehmen konnte. Es weist jetzt den <see cref="F:System.ServiceModel.CommunicationState.Faulted" />-Zustand auf.</exception>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Opened">
      <summary>Tritt ein, sobald der Übergang des Kommunikationsobjekts vom Öffnungszustand in den Geöffnet-Zustand abgeschlossen ist.</summary>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Opening">
      <summary>Tritt ein, sobald das Kommunikationsobjekt den Öffnungszustand annimmt.</summary>
    </member>
    <member name="P:System.ServiceModel.ICommunicationObject.State">
      <summary>Ruft den aktuellen Zustand des kommunikationsorientierten Objekts ab.</summary>
      <returns>Der Wert für den <see cref="T:System.ServiceModel.CommunicationState" /> des Objekts.</returns>
    </member>
    <member name="T:System.ServiceModel.IContextChannel">
      <summary>Definiert die Schnittstelle für das Kontextsteuerelement eines Kanals.</summary>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.AllowOutputBatching">
      <summary>Ruft einen Wert ab oder legt ihn fest, der Windows Communication Foundation (WCF) anweist, einen Nachrichtensatz zu speichern, bevor die Nachrichten zum Transport weitergeleitet werden.</summary>
      <returns>true, wenn die Stapelung von ausgehenden Nachrichten zulässig ist, andernfalls false.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.InputSession">
      <summary>Ruft die Eingabesitzung für den Kanal ab.</summary>
      <returns>Die <see cref="T:System.ServiceModel.Channels.IInputSession" /> für den Kanal.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.LocalAddress">
      <summary>Ruft den lokalen Endpunkt für den Kanal ab.</summary>
      <returns>Die lokale <see cref="T:System.ServiceModel.EndpointAddress" /> für den Kanal.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.OperationTimeout">
      <summary>Ruft den Zeitraum ab oder legt ihn fest, innerhalb dessen ein Vorgang abgeschlossen werden muss oder eine Ausnahme ausgelöst wird.</summary>
      <returns>Die <see cref="T:System.TimeSpan" />, die den Zeitraum angibt, innerhalb dessen ein Vorgang abgeschlossen werden muss.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.OutputSession">
      <summary>Ruft ggf. die dem Kanal zugeordnete Ausgabesitzung ab.</summary>
      <returns>Eine <see cref="T:System.ServiceModel.Channels.IOutputSession" />-Implementierung, wenn eine Eingabesitzung vorhanden ist, andernfalls null.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.RemoteAddress">
      <summary>Ruft die dem Kanal zugeordnete Remote-Adresse ab.</summary>
      <returns>Die Remote-<see cref="T:System.ServiceModel.EndpointAddress" /> für den Kanal.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.SessionId">
      <summary>Gibt ggf. für die aktuelle Sitzung einen Bezeichner zurück.</summary>
      <returns>Die aktuelle Sitzungs-ID, falls vorhanden.</returns>
    </member>
    <member name="T:System.ServiceModel.IDefaultCommunicationTimeouts">
      <summary>Definiert die Schnittstelle zum Angeben von Kommunikationstimeouts, die von Kanälen, Kanal-Managern wie Kanallistenern und Kanalfactories, und Diensthosts verwendet werden.</summary>
    </member>
    <member name="P:System.ServiceModel.IDefaultCommunicationTimeouts.CloseTimeout">
      <summary>Ruft das Zeitintervall ab, nach dem die von einem Kommunikationsobjekt aufgerufene Schließmethode das Zeitlimit überschreitet.</summary>
      <returns>Die <see cref="T:System.Timespan" />, die das Zeitintervall angibt, bis die Schließmethode das Zeitlimit überschreitet.</returns>
    </member>
    <member name="P:System.ServiceModel.IDefaultCommunicationTimeouts.OpenTimeout">
      <summary>Ruft das Zeitintervall ab, nach dem die von einem Kommunikationsobjekt aufgerufene Öffnungsmethode das Zeitlimit überschreitet.</summary>
      <returns>Die <see cref="T:System.Timespan" />, die das Zeitintervall angibt, bis die Öffnungsmethode das Zeitlimit überschreitet.</returns>
    </member>
    <member name="P:System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout">
      <summary>Ruft das Zeitintervall ab, nach dem die von einem Kommunikationsobjekt aufgerufene Empfangsmethode das Zeitlimit überschreitet.</summary>
      <returns>Die <see cref="T:System.Timespan" />, die das Zeitintervall angibt, bis die Empfangsmethode das Zeitlimit überschreitet.</returns>
    </member>
    <member name="P:System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout">
      <summary>Ruft das Zeitintervall ab, nach dem die von einem Kommunikationsobjekt aufgerufene Sendemethode das Zeitlimit überschreitet.</summary>
      <returns>Die <see cref="T:System.Timespan" />, die das Zeitintervall angibt, bis die Sendemethode das Zeitlimit überschreitet.</returns>
    </member>
    <member name="T:System.ServiceModel.IExtensibleObject`1">
      <summary>Aktivieren Sie ein Objekt, um am benutzerdefinierte Verhalten, z.&amp;nbsp;B. dem Registrieren für Ereignisse oder dem Überwachen von Zustandsübergängen, teilzunehmen.</summary>
      <typeparam name="T">Der Typ der Erweiterungsklasse. </typeparam>
    </member>
    <member name="P:System.ServiceModel.IExtensibleObject`1.Extensions">
      <summary>Ruft eine Auflistung der Erweiterungsobjekte für dieses erweiterbare Objekt ab.</summary>
      <returns>Eine <see cref="T:System.ServiceModel.IExtensionCollection`1" /> von Erweiterungsobjekten.</returns>
    </member>
    <member name="T:System.ServiceModel.IExtension`1">
      <summary>Aktiviert ein Objekt, um durch Aggregation ein anderes Objekt zu erweitern.</summary>
      <typeparam name="T">Das Objekt, das am benutzerdefinierten Verhalten teilnimmt.</typeparam>
    </member>
    <member name="M:System.ServiceModel.IExtension`1.Attach(`0)">
      <summary>Aktiviert ein Erweiterungsobjekt, um herauszufinden, wann es aggregiert wurde.Wird aufgerufen, wenn die Erweiterung in die <see cref="P:System.ServiceModel.IExtensibleObject`1.Extensions" />-Eigenschaft eingefügt wird.</summary>
      <param name="owner">Das erweiterbare Objekt, das diese Erweiterung aggregiert.</param>
    </member>
    <member name="M:System.ServiceModel.IExtension`1.Detach(`0)">
      <summary>Aktiviert ein Objekt, um zu kennzeichnen, wenn es nicht mehr aggregiert wird.Wird aufgerufen, wenn eine Erweiterung aus der <see cref="P:System.ServiceModel.IExtensibleObject`1.Extensions" />-Eigenschaft entfernt wird.</summary>
      <param name="owner">Das erweiterbare Objekt, das diese Erweiterung aggregiert.</param>
    </member>
    <member name="T:System.ServiceModel.IExtensionCollection`1">
      <summary>Eine Auflistung der <see cref="T:System.ServiceModel.IExtension`1" />-Objekte, für die der Abruf von <see cref="T:System.ServiceModel.IExtension`1" /> anhand des Typs zulässig ist.</summary>
      <typeparam name="T">Der Typ der Erweiterungsobjekte.</typeparam>
    </member>
    <member name="M:System.ServiceModel.IExtensionCollection`1.Find``1">
      <summary>Sucht das angegebene Erweiterungsobjekt in der Auflistung.</summary>
      <returns>Das Erweiterungsobjekt, das gefunden wurde.</returns>
      <typeparam name="E">Der Typ des Erweiterungsobjekts.</typeparam>
    </member>
    <member name="M:System.ServiceModel.IExtensionCollection`1.FindAll``1">
      <summary>Sucht alle Erweiterungsobjekt in der von <paramref name="E" /> angegebenen Auflistung.</summary>
      <returns>Eine Auflistung aller Erweiterungsobjekte in der Auflistung, die den angegebenen Typ implementieren.</returns>
      <typeparam name="E">Der Typ des Erweiterungsobjekts.</typeparam>
    </member>
    <member name="T:System.ServiceModel.InvalidMessageContractException">
      <summary>Stellt einen Nachrichtenvertrag dar, der nicht gültig ist.</summary>
    </member>
    <member name="M:System.ServiceModel.InvalidMessageContractException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.InvalidMessageContractException" />-Klasse. </summary>
    </member>
    <member name="M:System.ServiceModel.InvalidMessageContractException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.InvalidMessageContractException" />-Klasse unter Verwendung der angegebenen Meldung.</summary>
      <param name="message">Die Meldung für die Ausnahme.</param>
    </member>
    <member name="M:System.ServiceModel.InvalidMessageContractException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.InvalidMessageContractException" />-Klasse, die die angegebene Nachricht und die interne Ausnahme verwendet.</summary>
      <param name="message">Die Ausnahmemeldung.</param>
      <param name="innerException">Die innere Ausnahme.</param>
    </member>
    <member name="T:System.ServiceModel.MessageBodyMemberAttribute">
      <summary>Gibt an, dass ein Member als Element innerhalb des SOAP-Texts serialisiert ist.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageBodyMemberAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.MessageBodyMemberAttribute" />-Klasse. </summary>
    </member>
    <member name="P:System.ServiceModel.MessageBodyMemberAttribute.Order">
      <summary>Ruft einen Wert ab, der die Position angibt, in der der Member im SOAP-Text serialisiert wird, bzw. legt diesen fest.</summary>
      <returns>Die Position des Elements im SOAP-Text.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Der an den Eigenschaftensetter übergebene Wert ist eine negative Ganzzahl.</exception>
    </member>
    <member name="T:System.ServiceModel.MessageContractAttribute">
      <summary>Definiert eine stark typisierte Klasse, die einer SOAP-Nachricht entspricht.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageContractAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.MessageContractAttribute" />-Klasse. </summary>
    </member>
    <member name="P:System.ServiceModel.MessageContractAttribute.IsWrapped">
      <summary>Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob der Nachrichtentext über ein Wrapperelement verfügt.</summary>
      <returns>true, wenn der Nachrichtentext über ein Wrapperelement verfügt, andernfalls false.Die Standardeinstellung ist true.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageContractAttribute.WrapperName">
      <summary>Ruft den Wrapperelementnamen des Nachrichtentexts ab, oder legt ihn fest.</summary>
      <returns>Der Name des Wrapperelements befindet sich im Nachrichtentext.</returns>
      <exception cref="T:System.ArgumentNullException">Der Wert ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der Wert ist eine leere Zeichenfolge.</exception>
    </member>
    <member name="P:System.ServiceModel.MessageContractAttribute.WrapperNamespace">
      <summary>Ruft den Namespace des Nachrichtentext-Wrapperelements ab oder legt ihn fest.</summary>
      <returns>Der Namespace des Wrapperelements.</returns>
    </member>
    <member name="T:System.ServiceModel.MessageContractMemberAttribute">
      <summary>Deklariert die Basismember für <see cref="T:System.ServiceModel.MessageBodyMemberAttribute" /> und <see cref="T:System.ServiceModel.MessageHeaderAttribute" />.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageContractMemberAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.MessageContractMemberAttribute" />-Klasse.</summary>
    </member>
    <member name="P:System.ServiceModel.MessageContractMemberAttribute.Name">
      <summary>Gibt den Namen des Elements an, das diesem Member entspricht. </summary>
      <returns>Der Name des Elements, das diesem Member entspricht.Diese Zeichenfolge muss einem gültigen XML-Elementnamen entsprechen.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageContractMemberAttribute.Namespace">
      <summary>Gibt den Namespace des Elements an, das diesem Member entspricht. </summary>
      <returns>Ein Namespace-URI des Elements, das diesem Member entspricht. </returns>
    </member>
    <member name="T:System.ServiceModel.MessageCredentialType">
      <summary>Listet die gültigen Anmeldeinformationstypen für Nachrichten auf.</summary>
    </member>
    <member name="F:System.ServiceModel.MessageCredentialType.Certificate">
      <summary>Gibt die Clientauthentifizierung mit einem Zertifikat an.</summary>
    </member>
    <member name="F:System.ServiceModel.MessageCredentialType.IssuedToken">
      <summary>Gibt die Clientauthentifizierung mit einem ausgestellten Token an.</summary>
    </member>
    <member name="F:System.ServiceModel.MessageCredentialType.None">
      <summary>Gibt anonyme Authentifizierung an.</summary>
    </member>
    <member name="F:System.ServiceModel.MessageCredentialType.UserName">
      <summary>Gibt die Clientauthentifizierung mit einem Benutzernamen an.</summary>
    </member>
    <member name="F:System.ServiceModel.MessageCredentialType.Windows">
      <summary>Gibt die Clientauthentifizierung mit Windows an.</summary>
    </member>
    <member name="T:System.ServiceModel.MessageHeader`1">
      <summary>Stellt den Inhalt eines SOAP-Headers dar.</summary>
      <typeparam name="T">Der Typ des Nachrichtenheaders.</typeparam>
    </member>
    <member name="M:System.ServiceModel.MessageHeader`1.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.MessageHeader`1" />-Klasse.  </summary>
    </member>
    <member name="M:System.ServiceModel.MessageHeader`1.#ctor(`0)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.MessageHeader`1" />-Klasse mit dem angegebenen Headerinhalt.</summary>
      <param name="content">Der Inhalt des neuen Headers.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeader`1.#ctor(`0,System.Boolean,System.String,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.MessageHeader`1" />-Klasse mit dem angegebenen Headerinhalt und den Metadaten. </summary>
      <param name="content">Der Inhalt des neuen Headers.</param>
      <param name="mustUnderstand">Ein Wert, der angibt, ob der Header verstanden werden muss.</param>
      <param name="actor">Der Empfänger des Nachrichtenheaders.</param>
      <param name="relay">Ein Wert, der angibt, ob der Header weitergeleitet werden soll.</param>
    </member>
    <member name="P:System.ServiceModel.MessageHeader`1.Actor">
      <summary>Ruft den Empfänger des Nachrichtenheaders ab oder legt diesen fest.</summary>
      <returns>Der Empfänger des Nachrichtenheaders.Der Standardwert ist eine leere Zeichenfolge ("").</returns>
    </member>
    <member name="P:System.ServiceModel.MessageHeader`1.Content">
      <summary>Ruft den Inhalt des Headers ab oder legt diesen fest.</summary>
      <returns>Der Inhalt des Headers.</returns>
    </member>
    <member name="M:System.ServiceModel.MessageHeader`1.GetUntypedHeader(System.String,System.String)">
      <summary>Ruft den Nachrichtenheader mit dem angegebenen Namespace und dem lokalen Namen ab.</summary>
      <returns>Ein Nachrichtenheader mit dem angegebenen Namespace und dem lokalen Namen.</returns>
      <param name="name">Der lokale Name des Header-XML-Elements.</param>
      <param name="ns">Der Namespace-URI des Header-XML-Elements.</param>
    </member>
    <member name="P:System.ServiceModel.MessageHeader`1.MustUnderstand">
      <summary>Ruft einen Wert ab, der angibt, ob der Header gemäß der SOAP-1.1/1.2-Spezifikation verstanden werden muss, oder legt diesen fest. </summary>
      <returns>true, wenn der Header verstanden werden muss, andernfalls false.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageHeader`1.Relay">
      <summary>Ruft einen Wert ab, der angibt, ob der Header weitergeleitet werden soll.</summary>
      <returns>true, wenn der Header weitergeleitet werden soll, andernfalls false.</returns>
    </member>
    <member name="T:System.ServiceModel.MessageHeaderException">
      <summary>Die Ausnahme, die ausgelöst wird, wenn die Erwartungen hinsichtlich der Header einer SOAP-Nachricht beim Verarbeiten der Nachricht nicht erfüllt werden.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.MessageHeaderException" />-Klasse mit der angegebenen Meldung.</summary>
      <param name="message">Die von der Ausnahme ausgegebene Nachricht.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.MessageHeaderException" />-Klasse unter Verwendung der angegebenen Nachricht und eines Werts, der angibt, ob es sich beim Nachrichten-Header um ein Duplikat handelt oder ob er fehlt.</summary>
      <param name="message">Die Ausnahmemeldung.</param>
      <param name="isDuplicate">true, wenn der Header für mehrere Nachrichten ein Duplikat ist; false, wenn es keine Nachrichten-Header gibt.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.MessageHeaderException" />-Klasse unter Verwendung der angegebenen Nachricht und der angegebenen internen Ausnahme, die die Ausnahme ausgelöst hat.</summary>
      <param name="message">Die Ausnahmemeldung.</param>
      <param name="innerException">Die <see cref="T:System.Exception" />, die die innere Ausnahme enthält, die die Ausnahme ausgelöst hat.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.MessageHeaderException" />-Klasse unter Verwendung der angegebenen Nachricht, des Header-Namens und des Namespace.</summary>
      <param name="message">Die Ausnahmemeldung.</param>
      <param name="headerName">Der Name des Nachrichtenheaders.</param>
      <param name="ns">Der Namespace des Nachrichtenheaders.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.MessageHeaderException" />-Klasse unter Verwendung der angegebenen Nachricht, des Header-Namens und des Namespace und eines Werts, der angibt, ob es sich beim Nachrichten-Header um ein Duplikat handelt oder ob er fehlt.</summary>
      <param name="message">Die Ausnahmemeldung.</param>
      <param name="headerName">Der Name des Nachrichtenheaders.</param>
      <param name="ns">Der Namespace des Nachrichtenheaders.</param>
      <param name="isDuplicate">true, wenn der Header für mehrere Nachrichten ein Duplikat ist; false, wenn es keine Nachrichten-Header gibt.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.MessageHeaderException" />-Klasse unter Verwendung der angegebenen Nachricht, des Header-Namens und des Namespace, eines Werts, der angibt, ob es sich beim Nachrichten-Header um ein Duplikat handelt oder ob er fehlt, und der inneren Ausnahme, die die Ausnahme ausgelöst hat.</summary>
      <param name="message">Die Ausnahmemeldung.</param>
      <param name="headerName">Der Name des Nachrichtenheaders.</param>
      <param name="ns">Der Namespace des Nachrichtenheaders.</param>
      <param name="isDuplicate">true, wenn der Header für mehrere Nachrichten ein Duplikat ist; false, wenn es keine Nachrichten-Header gibt.</param>
      <param name="innerException">Die <see cref="T:System.Exception" />, die die innere Ausnahme enthält, die die Ausnahme ausgelöst hat.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.MessageHeaderException" />-Klasse unter Verwendung der angegebenen Nachricht, des Header-Namens und des Namespace und der internen Ausnahme, die die Ausnahme ausgelöst hat.</summary>
      <param name="message">Die Ausnahmemeldung.</param>
      <param name="headerName">Der Name des Nachrichtenheaders.</param>
      <param name="ns">Der Namespace des Nachrichtenheaders.</param>
      <param name="innerException">Die <see cref="T:System.Exception" />, die die innere Ausnahme enthält, die die Ausnahme ausgelöst hat.</param>
    </member>
    <member name="P:System.ServiceModel.MessageHeaderException.HeaderName">
      <summary>Ruft den Namen des SOAP-Headers ab, durch den die Ausnahme ausgelöst wurde.</summary>
      <returns>Der Name des SOAP-Headers.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageHeaderException.HeaderNamespace">
      <summary>Ruft den Namespace des SOAP-Headers ab, durch den die Ausnahme ausgelöst wurde.</summary>
      <returns>Der Namespace des SOAP-Headers.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageHeaderException.IsDuplicate">
      <summary>Ruft einen Wert ab, der angibt, ob es mehrere Nachrichten-Header oder keine Nachrichten-Header gibt.</summary>
      <returns>true, wenn der Header für mehrere Nachrichten ein Duplikat ist; false, wenn es keine Nachrichten-Header gibt.</returns>
    </member>
    <member name="T:System.ServiceModel.MessageParameterAttribute">
      <summary>Steuert den Namen der Anforderung und die Namen der Antwortparameter.Kann nicht mit <see cref="T:System.ServiceModel.Channels.Message" /> oder Meldungsverträgen verwendet werden.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageParameterAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.MessageParameterAttribute" />-Klasse. </summary>
    </member>
    <member name="P:System.ServiceModel.MessageParameterAttribute.Name">
      <summary>Ruft das Namensattribut des Parameters im XML-Schema (XSD) ab, bzw. legt ihn fest.</summary>
      <returns>Das Namensattribut des Parameters in XSD.</returns>
    </member>
    <member name="T:System.ServiceModel.OperationContext">
      <summary>Stellt Zugriff auf den Ausführungskontext einer Dienstmethode bereit.</summary>
    </member>
    <member name="M:System.ServiceModel.OperationContext.#ctor(System.ServiceModel.IContextChannel)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.OperationContext" />-Klasse, die den angegebenen <see cref="T:System.ServiceModel.IContextChannel" /> in einer Clientanwendung verwendet. </summary>
      <param name="channel">Der zum Erstellen eines neuen Client-<see cref="T:System.ServiceModel.OperationContext" /> verwendete <see cref="T:System.ServiceModel.IContextChannel" />.</param>
      <exception cref="T:System.ArgumentNullException">Der Kanal ist NULL.</exception>
    </member>
    <member name="P:System.ServiceModel.OperationContext.Current">
      <summary>Ruft den Ausführungskontext für den aktuellen Thread ab oder legt ihn fest.</summary>
      <returns>Der <see cref="T:System.ServiceModel.OperationContext" />, der den Nachrichten- und Ausführungskontext der aktuellen Methode angibt.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.Extensions">
      <summary>Ruft die Diensterweiterungsauflistung vom aktuellen Nachrichtenkontext ab.</summary>
      <returns>Eine Auflistung der Erweiterungen von <see cref="T:System.ServiceModel.OperationContext" />.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.IncomingMessageHeaders">
      <summary>Ruft die eingehenden Nachrichtenheader für den <see cref="T:System.ServiceModel.OperationContext" /> ab.</summary>
      <returns>Ein <see cref="T:System.ServiceModel.Channels.MessageHeaders" />-Objekt, das die eingehenden Nachrichtenheader enthält.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.IncomingMessageProperties">
      <summary>Ruft die Nachrichteneigenschaften für die eingehende Nachricht im <see cref="T:System.ServiceModel.OperationContext" /> ab.</summary>
      <returns>Ein <see cref="T:System.ServiceModel.Channels.MessageProperties" />-Objekt, das die Nachrichteneigenschaften für die eingehende Nachricht enthält.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.IncomingMessageVersion">
      <summary>Ruft die eingehende SOAP-Nachrichtenversion für den <see cref="T:System.ServiceModel.OperationContext" /> ab.</summary>
      <returns>Die SOAP-Version der eingehenden Nachricht.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.IsUserContext">
      <summary>Diese Eigenschaft ist zur Verwendung durch das System bestimmt und sollte nicht von Benutzern aufgerufen werden.</summary>
      <returns>true.</returns>
    </member>
    <member name="E:System.ServiceModel.OperationContext.OperationCompleted">
      <summary>Tritt nach dem Abschluss eines Vorgangs ein. </summary>
    </member>
    <member name="P:System.ServiceModel.OperationContext.OutgoingMessageHeaders">
      <summary>Ruft die ausgehenden Nachrichtenheader für den aktiven <see cref="T:System.ServiceModel.OperationContext" /> ab.</summary>
      <returns>Ein <see cref="T:System.ServiceModel.Channels.MessageHeaders" />-Objekt, das ausgehende Nachrichtenheader für den aktiven <see cref="T:System.ServiceModel.OperationContext" /> enthält.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.OutgoingMessageProperties">
      <summary>Ruft die Nachrichteneigenschaften für die ausgehende Nachricht im aktiven <see cref="T:System.ServiceModel.OperationContext" /> ab.</summary>
      <returns>Ein <see cref="T:System.ServiceModel.Channels.MessageProperties" />-Objekt, das die Nachrichteneigenschaften für die ausgehende Nachricht enthält.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.RequestContext">
      <summary>Ruft die <see cref="T:System.ServiceModel.Channels.RequestContext" />-Implementierung für diese Methode ab oder legt sie fest.</summary>
      <returns>Eine <see cref="T:System.ServiceModel.Channels.RequestContext" />-Implementierung oder NULL, wenn kein Anforderungskontext vorhanden ist.</returns>
    </member>
    <member name="T:System.ServiceModel.OperationContextScope">
      <summary>Erstellt einen Block, in dessen Bereich sich ein <see cref="T:System.ServiceModel.OperationContext" />-Objekt befindet.</summary>
    </member>
    <member name="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.IContextChannel)">
      <summary>Initalisiert eine neue Instanz der <see cref="T:System.ServiceModel.OperationContextScope" />-Klasse, die mit dem angegebenen <see cref="T:System.ServiceModel.IContextChannel" /> einen neuen <see cref="T:System.ServiceModel.OperationContext" /> für den Bereich erstellt.</summary>
      <param name="channel">Der bei der Erstellung des Bereichs für einen neuen <see cref="T:System.ServiceModel.OperationContext" /> zu verwendende Kanal.</param>
    </member>
    <member name="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.OperationContext)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.OperationContextScope" />-Klasse zur Erstellung eines Bereichs für das angegebene <see cref="T:System.ServiceModel.OperationContext" />-Objekt.</summary>
      <param name="context">Der aktive <see cref="T:System.ServiceModel.OperationContext" /> im erstellten Bereich.</param>
    </member>
    <member name="M:System.ServiceModel.OperationContextScope.Dispose">
      <summary>Stellt den ursprünglichen <see cref="T:System.ServiceModel.OperationContext" /> wieder als aktiven Kontext her und verwendet das <see cref="T:System.ServiceModel.OperationContextScope" />-Objekt wieder.</summary>
    </member>
    <member name="T:System.ServiceModel.OperationContractAttribute">
      <summary>Gibt an, dass eine Methode einen Vorgang definiert, der Bestandteil eines Dienstvertrags in einer Windows Communication Foundation (WCF)-Anwendung ist. </summary>
    </member>
    <member name="M:System.ServiceModel.OperationContractAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.OperationContractAttribute" />-Klasse. </summary>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.Action">
      <summary>Ruft ab oder legt die WS-Adressierungsaktion der Anforderungsnachricht fest. </summary>
      <returns>Die beim Generieren des WS-Adressierungsaktionsheaders zu verwendende Aktion.</returns>
      <exception cref="T:System.ArgumentNullException">Der Wert ist null.</exception>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.AsyncPattern">
      <summary>Gib an, dass ein Vorgang mit dem Methodenpaar Begin&lt;methodName&gt; und End&lt;methodName&gt; in einem Dienstvertrag asynchron implementiert wird. </summary>
      <returns>true, wenn die Begin&lt;methodName&gt;-Methode mit einer End&lt;methodName&gt;-Methode übereinstimmt und von der Infrastruktur als Vorgang behandelt werden kann, der als asynchrones Methodenpaar in der Dienstschnittstelle implementiert wird, andernfalls false.Die Standardeinstellung ist false.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
      <summary>Ruft einen Wert ab, der angibt, ob ein Vorgang eine Antwortnachricht zurückgibt, oder legt diesen fest.</summary>
      <returns>true, wenn diese Methode eine Anforderungsnachricht empfängt und keine Antwortnachricht zurückgibt, andernfalls false.Die Standardeinstellung ist false.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.Name">
      <summary>Ruft den Namen des Vorgangs ab oder legt diesen fest.</summary>
      <returns>Der Name des Vorgangs.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.ServiceModel.OperationContractAttribute.Name" /> ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der Wert ist eine leere Zeichenfolge.</exception>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.ReplyAction">
      <summary>Ruft ab oder legt den Wert der SOAP-Aktion für die Antwortnachricht des Vorgangs fest.</summary>
      <returns>Der Wert der SOAP-Aktion für die Antwortnachtricht.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.ServiceModel.OperationContractAttribute.ReplyAction" /> ist null.</exception>
    </member>
    <member name="T:System.ServiceModel.OperationFormatStyle">
      <summary>Stellt das SOAP-Format dar, das bestimmt, wie die WSDL-Metadaten für den Dienst formatiert werden.</summary>
    </member>
    <member name="F:System.ServiceModel.OperationFormatStyle.Document">
      <summary>Veranlasst die WSDL-Darstellung, ein einzelnes Element zu enthalten, dass das gegen einen Vorgang ausgetauschte Dokument darstellt.</summary>
    </member>
    <member name="F:System.ServiceModel.OperationFormatStyle.Rpc">
      <summary>Veranlasst die WSDL-Darstellung von Nachrichten, die für einen Vorgang ausgetauscht wurden, und enthält Parameter entsprechend eines Remoteprozeduraufrufs.</summary>
    </member>
    <member name="T:System.ServiceModel.ProtocolException">
      <summary>Die auf dem Client angezeigte Ausnahme, die ausgelöst wird, wenn die Kommunikation mit dem Remoteteilnehmer aufgrund nicht übereinstimmender Datentransferprotokolle fehlschlägt.</summary>
    </member>
    <member name="M:System.ServiceModel.ProtocolException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.ProtocolException" />-Klasse mit einer angegebenen Fehlermeldung.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
    </member>
    <member name="M:System.ServiceModel.ProtocolException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.ProtocolException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
      <param name="innerException">Die <see cref="T:System.Exception" />, die dazu geführt hat, dass die aktuelle Ausnahme ausgelöst wurde. </param>
    </member>
    <member name="T:System.ServiceModel.QuotaExceededException">
      <summary>Eine Ausnahme, die ausgelöst wird, wenn ein Nachrichtenkontingent überschritten wurde.</summary>
    </member>
    <member name="M:System.ServiceModel.QuotaExceededException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.QuotaExceededException" />-Klasse mit einer angegebenen Fehlermeldung.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
    </member>
    <member name="M:System.ServiceModel.QuotaExceededException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.QuotaExceededException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
      <param name="innerException">Die <see cref="T:System.Exception" />, die dazu geführt hat, dass die aktuelle Ausnahme ausgelöst wurde.</param>
    </member>
    <member name="T:System.ServiceModel.SecurityMode">
      <summary>Legt die Sicherheitseinstellungen für eine Bindung fest.</summary>
    </member>
    <member name="F:System.ServiceModel.SecurityMode.Message">
      <summary>Sicherheit wird über die SOAP-Nachrichtensicherheit bereitgestellt.</summary>
    </member>
    <member name="F:System.ServiceModel.SecurityMode.None">
      <summary>Die Sicherheitsfunktionen sind deaktiviert.</summary>
    </member>
    <member name="F:System.ServiceModel.SecurityMode.Transport">
      <summary>Sicherheit wird unter Verwendung eines sicheren Transports (z.&amp;nbps;B. HTTPS) bereitgestellt.</summary>
    </member>
    <member name="F:System.ServiceModel.SecurityMode.TransportWithMessageCredential">
      <summary>Ein sicherer Transport (z.&amp;nbps;HTTPS) stellt Integrität, Vertraulichkeit und die Authentifizierung bereit, während die SOAP-Nachrichtensicherheit die Clientauthentifizierung bereitstellt.</summary>
    </member>
    <member name="T:System.ServiceModel.ServerTooBusyException">
      <summary>Die Ausnahme, die ausgelöst wird, wenn ein Server zu stark ausgelastet ist, um eine Nachricht übernehmen zu können.</summary>
    </member>
    <member name="M:System.ServiceModel.ServerTooBusyException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.ServerTooBusyException" />-Klasse mit einer angegebenen Fehlermeldung.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
    </member>
    <member name="M:System.ServiceModel.ServerTooBusyException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.ServerTooBusyException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
      <param name="innerException">Die <see cref="T:System.Exception" />, die dazu geführt hat, dass die aktuelle Ausnahme ausgelöst wurde.</param>
    </member>
    <member name="T:System.ServiceModel.ServiceActivationException">
      <summary>Die Ausnahme, die ausgelöst wird, wenn die Aktivierung eines Diensts fehlschlägt.</summary>
    </member>
    <member name="M:System.ServiceModel.ServiceActivationException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.ServiceActivationException" />-Klasse mit einer angegebenen Fehlermeldung.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceActivationException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.ServiceActivationException" />-Klasse mit der angegebenen Fehlermeldung und der internen Ausnahme.  </summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
      <param name="innerException">Die <see cref="T:System.Exception" />, die dazu geführt hat, dass die aktuelle Ausnahme ausgelöst wurde. </param>
    </member>
    <member name="T:System.ServiceModel.ServiceContractAttribute">
      <summary>Gibt an, dass eine Schnittstelle oder eine Klasse einen Dienstvertrag in einer Windows Communication Foundation (WCF)-Anwendung definiert. </summary>
    </member>
    <member name="M:System.ServiceModel.ServiceContractAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.ServiceContractAttribute" />-Klasse. </summary>
    </member>
    <member name="P:System.ServiceModel.ServiceContractAttribute.CallbackContract">
      <summary>Ruft den Typ des Rückrufvertrags ab oder legt ihn fest, wenn es sich beim Vertrag um einen Duplexvertrag handelt.</summary>
      <returns>Ein <see cref="T:System.Type" />, der den Rückrufvertrag angibt.Die Standardeinstellung ist null.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceContractAttribute.ConfigurationName">
      <summary>Ruft den Namen ab, mit dem der Dienst in einer Anwendungskonfigurationsdatei gesucht wird, oder legt ihn fest.</summary>
      <returns>Der Name, mit dem das Dienstelement in einer Anwendungskonfigurationsdatei gesucht wird.Der Standardwert ist der Name der Dienstimplementierungsklasse.</returns>
      <exception cref="T:System.ArgumentNullException">Der Wert ist NULL.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der Wert ist eine leere Zeichenfolge.</exception>
    </member>
    <member name="P:System.ServiceModel.ServiceContractAttribute.Name">
      <summary>Ruft den Namen für das &lt;portType&gt;-Element in Web Services Description Language (WSDL) ab oder legt ihn fest. </summary>
      <returns>Der Standardwert ist der Name der Klasse oder Schnittstelle, auf den <see cref="T:System.ServiceModel.ServiceContractAttribute" /> angewendet wird. </returns>
      <exception cref="T:System.ArgumentNullException">Der Wert ist NULL.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der Wert ist eine leere Zeichenfolge.</exception>
    </member>
    <member name="P:System.ServiceModel.ServiceContractAttribute.Namespace">
      <summary>Ruft den Namespace des &lt;portType&gt;-Elements in der Web Services Description Language (WSDL) ab oder legt ihn fest.</summary>
      <returns>Der WSDL-Namespace des &lt;portType&gt;-Elements.Der Standardwert ist "http://tempuri.org".</returns>
    </member>
    <member name="T:System.ServiceModel.ServiceKnownTypeAttribute">
      <summary>Gibt die von einem Dienst bei der Serialisierung beziehungsweise Deserialisierung zu verwendenden bekannten Typen an.</summary>
    </member>
    <member name="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.ServiceKnownTypeAttribute" />-Klasse und gibt den Namen einer Methode an, die bekannte Typen zurückgibt.</summary>
      <param name="methodName">Der Name einer Methode, die die bekannten Typen zurückgibt.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.String,System.Type)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.ServiceKnownTypeAttribute" />-Klasse mit dem Namen einer Methode, die bekannte Typen zurückgibt, und den Typ, der die Methoden beinhaltet, die die bekannten Typen zurückgeben.</summary>
      <param name="methodName">Der Name einer Methode, die die bekannten Typen zurückgibt.</param>
      <param name="declaringType">Der Typ, der die bekannten Typen in seinem Objektdiagramm verwenden kann.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.Type)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.ServiceKnownTypeAttribute" />-Klasse mit dem angegebenen bekannten Typ.</summary>
      <param name="type">Gibt einen bekannten Typ an, der in einem Parameter oder in einem vom Dienst definierten Rückgabewert verwendet werden kann.</param>
    </member>
    <member name="P:System.ServiceModel.ServiceKnownTypeAttribute.DeclaringType">
      <summary>Ruft den Typ ab, der die Methoden enthält, die die bekannten Typen zurückgeben.</summary>
      <returns>Der <see cref="T:System.Type" />¸ der die Methoden enthält, die die bekannten Typen zurückgeben.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceKnownTypeAttribute.MethodName">
      <summary>Ruft den Namen einer Methode ab, die die Auflistung bekannter Typen zurückgibt.</summary>
      <returns>Der Name der Methode, die die bekannten Typen zurückgibt.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceKnownTypeAttribute.Type">
      <summary>Der bekannte Typ, der in einem Objektdiagramm enthalten sein kann.</summary>
      <returns>Der <see cref="T:System.Type" /> des bekannten Typs.</returns>
    </member>
    <member name="T:System.ServiceModel.TransferMode">
      <summary>Gibt an, ob ein Kanal den Stream- oder Puffermodus für die Übertragung von Anforderungs- und Antwortnachrichten verwendet.</summary>
    </member>
    <member name="F:System.ServiceModel.TransferMode.Buffered">
      <summary>Die Anforderungs- und Antwortnachrichten werden gepuffert.</summary>
    </member>
    <member name="F:System.ServiceModel.TransferMode.Streamed">
      <summary>Die Anforderungs- und Antwortnachrichten werden per Stream übertragen.</summary>
    </member>
    <member name="F:System.ServiceModel.TransferMode.StreamedRequest">
      <summary>Die Anforderungsnachricht wird per Stream übertragen, und die Antwortnachricht wird gepuffert.</summary>
    </member>
    <member name="F:System.ServiceModel.TransferMode.StreamedResponse">
      <summary>Die Anforderungsnachricht wird gepuffert, und die Antwortnachricht wird per Stream übertragen.</summary>
    </member>
    <member name="T:System.ServiceModel.UnknownMessageReceivedEventArgs">
      <summary>Enthält die Nachricht, die von einem Kanal empfangen wurde und keinem Rückrufvorgang und keiner ausstehenden Anforderung zugeordnet werden kann.</summary>
    </member>
    <member name="P:System.ServiceModel.UnknownMessageReceivedEventArgs.Message">
      <summary>Ruft die unbekannte Nachricht ab, die das Ereignis verursacht hat.</summary>
      <returns>Die <see cref="T:System.ServiceModel.Channels.Message" />, die das Ereignis verursacht hat.</returns>
    </member>
    <member name="T:System.ServiceModel.XmlSerializerFormatAttribute">
      <summary>Weist die Windows Communication Foundation (WCF)-Infrastruktur an, den <see cref="T:System.Xml.Serialization.XmlSerializer" /> anstelle des <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> zu verwenden.</summary>
    </member>
    <member name="M:System.ServiceModel.XmlSerializerFormatAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.XmlSerializerFormatAttribute" />-Klasse. </summary>
    </member>
    <member name="P:System.ServiceModel.XmlSerializerFormatAttribute.Style">
      <summary>Ruft das SOAP-Format von <see cref="T:System.Xml.Serialization.XmlSerializer" /> ab oder legt es fest.</summary>
      <returns>Einer der <see cref="T:System.ServiceModel.OperationFormatStyle" />-Werte.Die Standardeinstellung ist <see cref="F:System.ServiceModel.OperationFormatStyle.Document" />.</returns>
    </member>
    <member name="P:System.ServiceModel.XmlSerializerFormatAttribute.SupportFaults">
      <summary>Ruft einen Wert ab oder legt einen Wert fest, der angibt, dass das <see cref="T:System.Xml.Serialization.XmlSerializer" /> zum Lesen und Schreiben von Fehlern verwendet werden soll. </summary>
      <returns>true, falls <see cref="T:System.Xml.Serialization.XmlSerializer" /> zum Lesen und Schreiben von Fehlern verwendet werden soll; false, falls <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> verwendet werden soll.Die Standardeinstellung ist false.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.AddressHeader">
      <summary>Stellt einen Header dar, der ein Adressinformationselement einkapselt, das verwendet wird, um einen Endpunkt zu identifizieren oder mit diesem zu interagieren.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.AddressHeader" />-Klasse.  </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.CreateAddressHeader(System.String,System.String,System.Object)">
      <summary>Erstellt eine neue Instanz der <see cref="T:System.ServiceModel.Channels.AddressHeader" />-Klasse mit einem festgelegten Wert, dem Namen und Namespace.</summary>
      <returns>Der <see cref="T:System.ServiceModel.Channels.AddressHeader" /> mit festgelegtem <paramref name="name" /> und <paramref name="ns" />, der das durch den <paramref name="value" /> festgelegte Informationselement enthält.</returns>
      <param name="name">Der Name des Adressheaders.</param>
      <param name="ns">Der Namespace des Adressheaders.</param>
      <param name="value">Das Informationselement für den Adressheader.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> ist null oder <paramref name="name" />. Länge == 0.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.CreateAddressHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Erstellt eine neue Instanz der <see cref="T:System.ServiceModel.Channels.AddressHeader" />-Klasse mit festgelegtem Namen und Namespace, die einen festgelegten Formatierer für die Serialisierung des Informationselements aus einem festgelegten Objekt verwendet.</summary>
      <returns>Der <see cref="T:System.ServiceModel.Channels.AddressHeader" /> mit festgelegtem <paramref name="name" /> und <paramref name="ns" />, der das durch den <paramref name="value" /> festgelegte Informationselement enthält.</returns>
      <param name="name">Der Name des Adressheaders.</param>
      <param name="ns">Der Namespace des Adressheaders.</param>
      <param name="value">Das Informationselement für den Adressheader.</param>
      <param name="serializer">Der <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />, der verwendet wird, um das angegebene Objekt im <paramref name="value" />-Parameter zu serialisieren.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> oder <paramref name="serializer" /> ist null oder <paramref name="name" />. Länge == 0.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.Equals(System.Object)">
      <summary>Bestimmt, ob das Informationselement in einem festgelegten Objekt mit dem im aktuellen Adressheader enthaltenen Objekt übereinstimmt.</summary>
      <returns>true, wenn das Informationselement in einem festgelegten <paramref name="obj" /> mit dem im aktuellen Adressheader enthaltenen Objekt übereinstimmt, andernfalls false.Gibt insbesondere false aus, wenn <paramref name="obj" /> gleich null.</returns>
      <param name="obj">
        <see cref="T:System.Object" /> für den Vergleich mit dem im aktuellen Adressheader enthaltenen Objekt.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.GetAddressHeaderReader">
      <summary>Gibt einen XML-Reader zurück, der das aktuelle Adressheaderobjekt serialisieren kann.</summary>
      <returns>Eine Instanz von <see cref="T:System.Xml.XmlDictionaryReader" />, die das aktuelle Adressheaderobjekt serialisieren kann.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.GetHashCode">
      <summary>Stellt einen eindeutigen Hashcode für einen Adressheader bereit. </summary>
      <returns>Ein eindeutiger Hashcode für den aktuellen Adressheader.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.GetValue``1">
      <summary>Deserialisiert das Informationselement vom aktuellen Adressheader zu einem Objekt eines angegebenen Typs.</summary>
      <returns>Eine Instanz einer Klasse vom Typ <paramref name="T" /> mit den Feldern und Eigenschaften, die auf die vom aktuellen Adressheaderobjekt bereitgestellten Werte gesetzt sind.</returns>
      <typeparam name="T">Eine Klasse vom Typ <paramref name="T" /> mit den Feldern und Eigenschaften, die auf die vom aktuellen Adressheaderobjekt bereitgestellten Werte gesetzt sind.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.GetValue``1(System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Deserialisiert das Informationselement vom aktuellen Adressheader zu einem Objekt eines angegebenen Typs, das einen angegebenen Formatierer zur Serialisierung dieser Informationen nutzt.</summary>
      <returns>Eine Instanz einer Klasse vom Typ <paramref name="T" /> mit den Feldern und Eigenschaften, die auf die vom aktuellen Adressheaderobjekt bereitgestellten Werte gesetzt sind.</returns>
      <param name="serializer">Der <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />, der verwendet wird, um das Informationselement vom aktuellen Adressheaderobjekt zu deserialisieren.</param>
      <typeparam name="T">Eine Klasse vom Typ <paramref name="T" /> mit den Feldern und Eigenschaften, die auf die vom aktuellen Adressheaderobjekt bereitgestellten Werte gesetzt sind.</typeparam>
      <exception cref="T:System.ArgumentNullException">Die <paramref name="serializer" /> ist null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.AddressHeader.Name">
      <summary>Ruft den Namen des Adressheaders ab (wenn implementiert).</summary>
      <returns>Der Name des Adressheaders.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.AddressHeader.Namespace">
      <summary>Ruft den Namespace des Adressheaders ab (wenn implementiert).</summary>
      <returns>Der Namespace des Adressheaders.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.OnWriteAddressHeaderContents(System.Xml.XmlDictionaryWriter)">
      <summary>Wird beim Überschreiben in einer abgeleiteten Klasse aufgerufen, wenn die Inhalte des Adressheaders in einen Stream oder eine Datei geschrieben werden.</summary>
      <param name="writer">Der für das Schreiben der Inhalte des Adressheaders in einen Stream oder eine Datei verwendete <see cref="T:System.Xml.XmlDictionaryWriter" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.OnWriteStartAddressHeader(System.Xml.XmlDictionaryWriter)">
      <summary>Wird beim Überschreiben in einer abgeleiteten Klasse aufgerufen, wenn begonnen wird, die Inhalte des Adressheaders in einen Stream oder eine Datei zu schreiben.</summary>
      <param name="writer">Der <see cref="T:System.Xml.XmlDictionaryWriter" />, der verwendet wird, um den Adressheader in einen Datenstrom oder eine Datei zu schreiben.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.ToMessageHeader">
      <summary>Bindet den Adressheader als Nachrichtenheader ein.</summary>
      <returns>Der <see cref="T:System.ServiceModel.Channels.MessageHeader" />, der den aktuellen Adressheader einbindet.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.WriteAddressHeader(System.Xml.XmlDictionaryWriter)">
      <summary>Schreibt den Adressheader in einen Stream oder eine Datei mit einem angegebenen <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer">Der <see cref="T:System.Xml.XmlDictionaryWriter" />, der verwendet wird, um den Adressheader in einen Datenstrom oder eine Datei zu schreiben.</param>
      <exception cref="T:System.ArgumentNullException">Die <paramref name="writer" /> ist null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.WriteAddressHeader(System.Xml.XmlWriter)">
      <summary>Schreibt den Adressheader in einen Stream oder eine Datei mit einem angegebenen <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Der <see cref="T:System.Xml.XmlWriter" />, der verwendet wird, um den Adressheader in einen Datenstrom oder eine Datei zu schreiben.</param>
      <exception cref="T:System.ArgumentNullException">Die <paramref name="writer" /> ist null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.WriteAddressHeaderContents(System.Xml.XmlDictionaryWriter)">
      <summary>Schreibt den Adressheaderinhalt in einen Stream oder eine Datei.</summary>
      <param name="writer">Der für das Schreiben der Inhalte des Adressheaders in einen Stream oder eine Datei verwendete <see cref="T:System.Xml.XmlDictionaryWriter" />.</param>
      <exception cref="T:System.ArgumentNullException">Die <paramref name="writer" /> ist null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.WriteStartAddressHeader(System.Xml.XmlDictionaryWriter)">
      <summary>Beginnt mit dem Schreiben der Inhalte des Adressheaders in einen Stream oder eine Datei.</summary>
      <param name="writer">Der <see cref="T:System.Xml.XmlDictionaryWriter" />, der verwendet wird, um den Adressheader in einen Datenstrom oder eine Datei zu schreiben.</param>
      <exception cref="T:System.ArgumentNullException">Die <paramref name="writer" /> ist null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.AddressHeaderCollection">
      <summary>Stellt eine threadsichere, schreibgeschützte Auflistung von Adressheadern dar.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.AddressHeaderCollection" />-Klasse.  </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.Channels.AddressHeader})">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.AddressHeaderCollection" />-Klasse aus einer zählbaren Reihe von Adressheadern.</summary>
      <param name="addressHeaders">Die <see cref="T:System.Collections.Generic.IEnumerable`1" />-Reihe von <see cref="T:System.ServiceModel.Channels.AddressHeader" />-Objekten, mit denen die Auflistung initialisiert wird.</param>
      <exception cref="T:System.ArgumentException">Einer der Adressheader im <paramref name="addressHeaders" />-Parameter ist null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.AddHeadersTo(System.ServiceModel.Channels.Message)">
      <summary>Fügt den Headern einer angegebenen Nachricht die Header in der Auflistung hinzu.</summary>
      <param name="message">Die <see cref="T:System.ServiceModel.Channels.Message" />, der die Header hinzugefügt werden.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> ist null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.FindAll(System.String,System.String)">
      <summary>Sucht alle Adressheader in der Auflistung mit dem angegebenen Namen und dem angegebenen Namespace.</summary>
      <returns>Das <see cref="T:System.Array" /> vom Typ <see cref="T:System.ServiceModel.Channels.AddressHeader" />, das alle Header in der Auflistung mit dem angegebenen Namen und dem angegebenen Namespace enthält.</returns>
      <param name="name">Der Name des Adressheaders, der gesucht werden soll.</param>
      <param name="ns">Der Namespace des Adressheaders, der gesucht werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> oder <paramref name="ns" /> ist null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.FindHeader(System.String,System.String)">
      <summary>Sucht den ersten Adressheader in der Auflistung mit dem angegebenen Namen und dem angegebenen Namespace.</summary>
      <returns>Der <see cref="T:System.ServiceModel.Channels.AddressHeader" /> in der Auflistung mit dem angegebenen Namen und dem angegebenen Namespace.</returns>
      <param name="name">Der Name des Adressheaders, der gesucht werden soll.</param>
      <param name="ns">Der Namespace des Adressheaders, der gesucht werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> oder <paramref name="ns" /> ist null.</exception>
      <exception cref="T:System.ArgumentException">Es sind mehrere Header mit dem angegebenen <paramref name="name" /> und dem angegebenen <paramref name="ns" /> vorhanden.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.AddressingVersion">
      <summary>Die Version der WS-Adressierung, die mit einer SOAP-Nachricht verknüpft oder die für einen Endpunkt verständlich ist.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.AddressingVersion.None">
      <summary>Ruft die Version der Adressierung ab, die nicht der Version der WS-Adressierung zugeordnet ist.</summary>
      <returns>Die <see cref="T:System.ServiceModel.Channels.AddressingVersion" />, die keine zugeordnete WS-Adressierungs-Version ist.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressingVersion.ToString">
      <summary>Gibt eine Zeichenfolgendarstellung des aktuell adressierenden Version zurück.</summary>
      <returns>Eine Zeichenfolge, die die aktuelle Version der Adressierung darstellt.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.AddressingVersion.WSAddressing10">
      <summary>Ruft einen Bezeichner für die Version der Adressierung ab, die der WS-Adressierung, Version&amp;nbsp;1.0 zugeordnet ist.</summary>
      <returns>Eine Singleton-Instanz, mit der die <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> identifiziert wird, die der WS-Adressierung, Version&amp;nbsp;1.0, zugeordnet ist.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement">
      <summary>Das Bindungselement, das das .NET Binary XML-Format angibt, das verwendet wird, um Nachrichten zu codieren.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement" />-Klasse. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Erstellt den Kanalfactorystapel auf dem Client, der einen angegebenen Kanaltyp für einen angegebenen Kontext erstellt.</summary>
      <returns>Ein <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" />-Element vom Typ <paramref name="TChannel" /> für den angegebenen Kontext.</returns>
      <param name="context">Das <see cref="T:System.ServiceModel.Channels.BindingContext" />-Element für den Kanal.</param>
      <typeparam name="TChannel">Der Kanaltyp, der von der Kanalfactory erzeugt wird.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.Clone">
      <summary>Erstellt ein neues, aus dem aktuellen Objekt initialisiertes <see cref="T:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement" />-Objekt.</summary>
      <returns>Ein <see cref="T:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement" />-Objekt mit Eigenschaftswerten, die denen des aktuellen Elements entsprechen.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.CompressionFormat">
      <summary>Ruft das Komprimierungsformat für das Bindungselement ab oder legt dieses fest.</summary>
      <returns>Das Komprimierungsformat für das Bindungselement.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.CreateMessageEncoderFactory">
      <summary>Erstellt eine Factory für binäre Nachrichtenencoder, die die SOAP- und WS-Adressierungsversionen und die Zeichencodierung, die vom aktuellen Codierungsbindungselement festgelegt wurden, verwenden.</summary>
      <returns>Die von diesem Bindungselement erstellte <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Gibt ggf. ein angefordertes typisiertes Objekt von der entsprechenden Ebene im Bindungselementstapel zurück.</summary>
      <returns>Das von <paramref name="T" /> angeforderte typisierte Objekt, oder null, falls das Objekt nicht vorhanden ist.</returns>
      <param name="context">Der <see cref="T:System.ServiceModel.Channels.BindingContext" /> für das Bindungselement.</param>
      <typeparam name="T">Das typisierte Objekt, das von der Methode abgefragt wird.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.MaxSessionSize">
      <summary>Ruft die Höchstmenge an Arbeitsspeicher innerhalb einer Sitzung ab oder legt sie fest, die verfügbar ist, um Übertragungsprozeduren zu optimieren.</summary>
      <returns>Die maximale Größe einer Sitzung in Byte.Der Standardwert ist 2048 Bytes.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Der Wert ist kleiner als oder gleich 0 (null).</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.MessageVersion">
      <summary>Ruft die Versionen der SOAP-Nachricht und WS-Adressierung ab, die verwendet oder erwartet werden, bzw. legt diese fest.</summary>
      <returns>Die <see cref="T:System.ServiceModel.Channels.MessageVersion" />, die verwendet oder erwartet wird.</returns>
      <exception cref="T:System.ArgumentNullException">Der festgelegte Wert ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der Wert ist eine nicht unterstützte Umschlagversion.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.ReaderQuotas">
      <summary>Ruft Beschränkungen der Komplexität von XML-Meldungen ab oder legt Beschränkungen fest, die von Endpunkten verarbeitet werden können, die mit diesem Bindungselement konfiguriert werden.</summary>
      <returns>Das <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />, das die Komplexitätseinschränkungen für ausgetauschte SOAP-Nachrichten angibt.Die Standardwerte für diese Einschränkungen werden in den folgenden Hinweisabschnitten angegeben.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.Binding">
      <summary>Enthält die Bindungselemente, die die Protokolle, Transporte und Nachrichtenencoder enthalten, die für die Kommunikation zwischen Clients und Diensten verwendet werden.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.Binding" />-Klasse mit einem Standardnamen und -Namespace. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.#ctor(System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.Binding" />-Klasse aus einer festgelegten Bindung des Diensts.</summary>
      <param name="name">Der <see cref="P:System.ServiceModel.Channels.Binding.Name" /> der Bindung.</param>
      <param name="ns">Der <see cref="P:System.ServiceModel.Channels.Binding.Namespace" /> der Bindung.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> ist null oder eine leere Zeichenfolge.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ns" /> ist null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])">
      <summary>Erstellt den Kanalfactorystapel auf dem Client, der einen festgelegten Kanaltyp erstellt und der die Funktionen erfüllt, die von einem Objektarray festgelegt werden.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> vom Typ <paramref name="TChannel" />, der die von der Auflistung festgelegten Funktionen erfüllt.</returns>
      <param name="parameters">Das Objektarray, das Anforderungen für die zu erstellende Kanalfactory angibt.</param>
      <typeparam name="TChannel">Der Kanaltyp, der von der Kanalfactory erzeugt wird.</typeparam>
      <exception cref="T:System.InvalidOperationException">Transportelement fehlt oder ist falsch oder Schema ist ungültig oder die Nachrichtenversion ist nicht angegeben.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Erstellt den Kanalfactorystapel auf dem Client, der einen festgelegten Kanaltyp erstellt und der die Funktionen erfüllt, die von einer Auflistung von Bindungsparametern festgelegt werden.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> vom Typ <paramref name="TChannel" />, der die von der Auflistung festgelegten Funktionen erfüllt.</returns>
      <param name="parameters">
        <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" />, der Anforderungen für die erstellte Kanalfactory festlegt.</param>
      <typeparam name="TChannel">Der Kanaltyp, der von der Kanalfactory erzeugt wird.</typeparam>
      <exception cref="T:System.InvalidOperationException">Transportelement fehlt oder ist falsch oder Schema ist ungültig oder die Nachrichtenversion ist nicht angegeben.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])">
      <summary>Gibt einen Wert zurück, der angibt, ob die aktuelle Bindung einen Kanalfactorystapel auf dem Client erstellen kann, der die von einem Objektarray festgelegten Anforderungen erfüllt.</summary>
      <returns>true, wenn der angegebene Kanalfactorystapel auf dem Client erstellt werden kann, andernfalls false.</returns>
      <param name="parameters">Das Objektarray, das Anforderungen für die zu erstellende Kanalfactory angibt.</param>
      <typeparam name="TChannel">Der Kanaltyp, für den die Factory getestet wird.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Gibt einen Wert zurück, der angibt, ob die aktuelle Bindung einen Kanalfactorystapel auf dem Client erstellen kann, der die Auflistung festgelegter Bindungsparameter erfüllt.</summary>
      <returns>true, wenn der angegebene Kanalfactorystapel auf dem Client erstellt werden kann, andernfalls false.</returns>
      <param name="parameters">
        <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" />, der die Anforderungen für die Kanalfactory angibt, die erstellt wird.</param>
      <typeparam name="TChannel">Der Kanaltyp, für den die Factory getestet wird.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.CloseTimeout">
      <summary>Ruft das Zeitintervall ab, das für eine Verbindung eingerichtet ist, die geschlossen wird, bevor ein Transport eine Ausnahme auslöst, oder legt dieses fest.</summary>
      <returns>Die <see cref="T:System.Timespan" />, die angibt, welcher Zeitraum für das Schließen bleibt, bevor ein Timeout auftritt.Der Standardwert beträgt 1 Minute.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Der Wert ist kleiner als 0 (null) oder zu lang.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.CreateBindingElements">
      <summary>Wenn dieser in einer abgeleiteten Klasse überschrieben wird, wird eine Auflistung mit Bindungselementen erstellt, die zur aktuellen Bindung gehören. </summary>
      <returns>Ein <see cref="T:System.Collections.Generic.ICollection`1" />-Objekt vom Typ <see cref="T:System.ServiceModel.Channels.BindingElement" />, das die Bindungselemente vom aktuellen Bindungsobjekt in der richtigen Reihenfolge enthält.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Gibt ggf. ein angefordertes typisiertes Objekt von der entsprechenden Ebene im Bindungsstapel zurück.</summary>
      <returns>Das von <paramref name="T" /> angeforderte typisierte Objekt, oder null, falls das Objekt nicht vorhanden ist.</returns>
      <param name="parameters">
        <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" />, der die Anforderungen für den Kanallistener angibt, der erstellt wird.</param>
      <typeparam name="T">Das typisierte Objekt, das von der Methode abgefragt wird.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.MessageVersion">
      <summary>Ruft die Nachrichtenversion ab, die von den Clients und Diensten verwendet wird, die mit der Bindung konfiguriert wurden.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageVersion" />, die von Clients und Diensten verwendet wird, die mit der Bindung konfiguriert wurden.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.Name">
      <summary>Ruft den Namen der Bindung ab oder legt diesen fest.</summary>
      <returns>Der Name der Bindung.Der Standardname ist null.</returns>
      <exception cref="T:System.ArgumentException">Der eingerichtete Wert kann nicht null oder eine leere Zeichenfolge sein.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.Namespace">
      <summary>Ruft den XML-Namespace einer Bindung ab oder legt diesen fest.</summary>
      <returns>Der XML-Namespace der Bindung.Der Standardwert ist 'http://tempuri.org/'.</returns>
      <exception cref="T:System.ArgumentNullException">Der Wert kann nicht null sein.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.OpenTimeout">
      <summary>Ruft das Zeitintervall ab, das für eine Verbindung eingerichtet ist, die geöffnet wird, bevor ein Transport eine Ausnahme auslöst, oder legt dieses fest.</summary>
      <returns>Die <see cref="T:System.Timespan" />, die angibt, welcher Zeitraum für das Öffnen bleibt, bevor ein Timeout auftritt.Der Standardwert beträgt 1 Minute.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Der Wert ist kleiner als 0 (null) oder zu lang.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.ReceiveTimeout">
      <summary>Ruft ein Zeitintervall ab oder legt ein Zeitintervall fest, während dessen eine Verbindung inaktiv bleiben kann und keine Anwendungsnachrichten empfangen werden, bevor sie verworfen werden.</summary>
      <returns>Die <see cref="T:System.Timespan" />, die angibt, welcher Zeitraum der Anwendung vor dem Eintreten eines Timeouts bleibt, um eine Nachricht zu empfangen.Der Standardwert beträgt 10 Minute.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Der Wert ist kleiner als 0 (null) oder zu lang.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.Scheme">
      <summary>Bei Implementierung in einer abgeleiteten Klasse richtet dieser Wert das URI-Schema ein, das den Transport festlegt, der von den Kanal- und Listenerfactorys verwendet wird, die von den Bindungen erstellt werden.</summary>
      <returns>Das URI-Schema, das von den Kanälen oder Listenern verwendet wird, die von den von der aktuellen Bindung erzeugten Factorys erstellt werden.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.SendTimeout">
      <summary>Ruft das Zeitintervall ab, das für einen Schreibvorgang eingerichtet ist, der abgeschlossen wird, bevor ein Transport eine Ausnahme auslöst, oder legt dieses fest.</summary>
      <returns>Der <see cref="T:System.Timespan" />-Wert, der angibt, welcher Zeitraum für den Schreibvorgang bleibt, bevor ein Timeout eintritt.Der Standardwert beträgt 1 Minute.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Der Wert ist kleiner als 0 (null) oder zu lang.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.BindingContext">
      <summary>Stellt Informationen über Adressen, Bindungen, Bindungselemente und Bindungsparameter bereit, die zur Erstellung von Kanallistener und Kanalfactorys erforderlich sind.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.#ctor(System.ServiceModel.Channels.CustomBinding,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.BindingContext" />-Klasse für eine angegebene Bindung und für eine angegebene Auflistung von Bindungsparametern.</summary>
      <param name="binding">Das <see cref="T:System.ServiceModel.Channels.CustomBinding" />-Element für den Kanal.</param>
      <param name="parameters">Das <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" />-Element für den Kanal.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binding" /> ist null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.BindingContext.Binding">
      <summary>Ruft die Bindung für den Kanal ab, der im aktuellen Kontext erstellt wird.</summary>
      <returns>Die <see cref="T:System.ServiceModel.Channels.CustomBinding" /> für den Kanal, der im aktuellen Kontext erstellt wird.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.BindingContext.BindingParameters">
      <summary>Ruft die Auflistung von Bindungsparametern für den Kanal ab, der im aktuellen Kontext erstellt wird.</summary>
      <returns>Die <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> für den Kanal, der im aktuellen Kontext erstellt wird.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.BuildInnerChannelFactory``1">
      <summary>Erstellt die innere Kanalfactory für Kanäle eines angegebenen Typs unter der aktuellen Kanalfactory.</summary>
      <returns>Die <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> vom Typ <see cref="T:System.ServiceModel.Channels.IChannel" />, die die innere Kanalfactory der aktuellen Kanalfactory darstellt.</returns>
      <typeparam name="TChannel">Der <see cref="T:System.ServiceModel.Channels.IChannel" />-Objekttyp, der von der inneren Kanalfactory erzeugt wird.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.CanBuildInnerChannelFactory``1">
      <summary>Gibt einen Wert zurück, der angibt, ob von der inneren Kanalfactory ein angegebener Kanaltyp erzeugt werden kann.</summary>
      <returns>true, wenn der angegebene <paramref name="TChannel" /> von der inneren Kanalfactory erzeugt werden kann, andernfalls false.</returns>
      <typeparam name="TChannel">Der <see cref="T:System.ServiceModel.Channels.IChannel" />-Objekttyp, der von der inneren Kanalfactory erzeugt wird.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.Clone">
      <summary>Gibt eine Kopie des aktuellen Kontexts für die Kanalerstellung zurück.</summary>
      <returns>Ein <see cref="T:System.ServiceModel.Channels.BindingContext" />-Objekt, das eine Kopie des aktuellen Kontexts für die Kanalerstellung darstellt.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.GetInnerProperty``1">
      <summary>Gibt ggf. ein angefordertes typisiertes Objekt von der entsprechenden Ebene im Bindungsstapel zurück.</summary>
      <returns>Das von <paramref name="T" /> angeforderte typisierte Objekt, oder null, falls das Objekt nicht vorhanden ist.</returns>
      <typeparam name="T">Das typisierte Objekt, das von der Methode abgefragt wird.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.BindingContext.RemainingBindingElements">
      <summary>Ruft die Bindungselemente ab, die von anderen Bindungselementen verwendet werden, um den Kanalstapel zu erstellen.</summary>
      <returns>Die <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> mit den Bindungselementen, die von anderen Bindungselementen zum Erstellen des Kanalstapels verwendet werden.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.BindingElement">
      <summary>Die Bindungselemente, die Kanalfactorys und Kanallistener für verschiedene Kanaltypen erstellen, die notwendig sind, um ausgehende und eingehende Nachrichten zu verarbeiten.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.BindingElement" />-Klasse.  </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.#ctor(System.ServiceModel.Channels.BindingElement)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.BindingElement" />-Klasse aus einem angegebenen Bindungselement.</summary>
      <param name="elementToBeCloned">Das <see cref="T:System.ServiceModel.Channels.BindingElement" />, das geklont werden soll.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Initialisiert eine Kanalfactory zum Erstellen von Kanälen eines bestimmten Typs aus dem Bindungskontext.</summary>
      <returns>Die <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> des Typs <paramref name="TChannel" />, initialisiert aus dem <paramref name="context" />.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" />, der den Kontext für das Bindungselement bereitstellt. </param>
      <typeparam name="TChannel">Der Typ des Kanals, der von der Factory erstellt wird.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> ist null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Gibt einen Wert zurück, der angibt, ob das Bindungselement eine Kanalfactory für einen bestimmten Typ von Kanal erstellen kann.</summary>
      <returns>true, wenn die <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> vom Typ <paramref name="TChannel" /> durch das Bindungselement erstellt werden kann, andernfalls false.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" />, der den Kontext für das Bindungselement bereitstellt. </param>
      <typeparam name="TChannel">Der Kanaltyp, der von der Kanalfactory erzeugt wird.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> ist null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.Clone">
      <summary>Gibt beim Überschreiben in einer abgeleiteten Klasse eine Kopie des Bindungselementobjekts zurück.</summary>
      <returns>Ein <see cref="T:System.ServiceModel.Channels.BindingElement" />-Objekt, bei dem es sich um einen tiefen Klon des Originals handelt.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Gibt beim Überschreiben in einer abgeleiteten Klasse ggf. ein angefordertes typisiertes Objekt von der entsprechenden Ebene im Bindungsstapel zurück.</summary>
      <returns>Das von <paramref name="T" /> angeforderte typisierte Objekt, falls vorhanden, oder null, falls das Objekt nicht vorhanden ist.</returns>
      <param name="context">Der <see cref="T:System.ServiceModel.Channels.BindingContext" /> für das Bindungselement.</param>
      <typeparam name="T">Das typisierte Objekt, das von der Methode abgefragt wird.</typeparam>
    </member>
    <member name="T:System.ServiceModel.Channels.BindingElementCollection">
      <summary>Stellt die Auflistung der Bindungselemente dar, die in einer Bindung verwendet werden.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.BindingElementCollection" />-Klasse.  </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.Channels.BindingElement})">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.BindingElementCollection" />-Klasse aus einer zählbaren Reihe von Bindungselementen.</summary>
      <param name="elements">Das <see cref="T:System.Collections.Generic.IEnumerable`1" /> des generischen Typs <see cref="T:System.ServiceModel.Channels.BindingElement" />, das verwendet wird, um die Auflistung zu initialisieren.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elements" /> ist null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.#ctor(System.ServiceModel.Channels.BindingElement[])">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.BindingElementCollection" />-Klasse aus einem Array von Bindungselementen.</summary>
      <param name="elements">Das <see cref="T:System.Array" /> des Typs <see cref="T:System.ServiceModel.Channels.BindingElement" />, das verwendet wird, um die Auflistung zu initialisieren.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elements" /> ist null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.AddRange(System.ServiceModel.Channels.BindingElement[])">
      <summary>Fügt Bindungselemente aus einem Array zur Auflistung der Bindungselemente hinzu.</summary>
      <param name="elements">
        <see cref="T:System.Array" /> vom Typ <see cref="T:System.ServiceModel.Channels.BindingElement" />, das zur Auflistung hinzugefügt werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elements" /> ist null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.Clone">
      <summary>Erstellt eine Kopie der Bindungselementauflistung.</summary>
      <returns>Eine Kopie von <see cref="T:System.ServiceModel.Channels.BindingElementCollection" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.Contains(System.Type)">
      <summary>Gibt einen Wert aus, der angibt, ob ein festgelegter Typ eines Bindungselements zu einer Auflistung von Bindungselementen gehört.</summary>
      <returns>true, wenn der festgelegte Typ des Bindungselements in der Auflistung enthalten ist, andernfalls false.</returns>
      <param name="bindingElementType">Der Typ des Bindungselements, der im Zusammenhang mit der Zugehörigkeit zur Auflistung getestet wird.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bindingElementType" /> ist null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.Find``1">
      <summary>Gibt das erste Element eines angegebenen Typs aus der Auflistung der Bindungselemente zurück.</summary>
      <returns>Das Element des Typs <see cref="T:System.Type" />, wenn es gefunden wird; wenn es nicht gefunden wird, 0, für den Fall, dass <paramref name="T" /> ein Werttyp ist, und null für den Fall, dass <paramref name="T" /> ein Verweistyp ist.</returns>
      <typeparam name="T">Der zu suchende <see cref="T:System.Type" /> des Elements.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.FindAll``1">
      <summary>Gibt alle Elemente eines angegebenen Typs aus der Auflistung der Bindungselemente zurück.</summary>
      <returns>
        <see cref="T:System.Collections.ObjectModel.Collection`1" /> aller Elemente des Typs <see cref="T:System.Type" />, wenn sie gefunden werden; werden keine gefunden, 0, wenn <paramref name="T" /> ein Werttyp ist und null, wenn <paramref name="T" /> ein Verweistyp ist.</returns>
      <typeparam name="T">Der zu suchende <see cref="T:System.Type" /> des Elements.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.InsertItem(System.Int32,System.ServiceModel.Channels.BindingElement)">
      <summary>Setzt ein Bindungselement an einen bestimmten Ort innerhalb der Auflistung der Bindungselemente ein.</summary>
      <param name="index">Der Ort, an dem das Bindungselement innerhalb der Auflistung eingesetzt wird.</param>
      <param name="item">Das einzufügende <see cref="T:System.ServiceModel.Channels.BindingElement" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> ist null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.Remove``1">
      <summary>Entfernt ein Bindungselement eines angegebenen Typs aus der Auflistung der Bindungselemente.</summary>
      <returns>Das entfernte Element vom Typ <see cref="T:System.Type" />.</returns>
      <typeparam name="T">Der zu suchende <see cref="T:System.Type" /> des Elements.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.RemoveAll``1">
      <summary>Entfernt alle Bindungselemente eines festgelegten Typs aus der Auflistung der Bindungselemente.</summary>
      <returns>
        <see cref="T:System.Collections.ObjectModel.Collection`1" /> aller gefundenen Elemente vom Typ <see cref="T:System.Type" />.</returns>
      <typeparam name="T">Der zu suchende <see cref="T:System.Type" /> des Elements.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.SetItem(System.Int32,System.ServiceModel.Channels.BindingElement)">
      <summary>Ersetzt ein Bindungselement am angegebenen Index in der Auflistung der Bindungselemente.</summary>
      <param name="index">Der nullbasierte Index des zu ersetzenden Elements.</param>
      <param name="item">Der neue Wert für das <see cref="T:System.ServiceModel.Channels.BindingElement" />-Element am festgelegten <paramref name="index" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> ist null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.BindingParameterCollection">
      <summary>Stellt eine Auflistung an Bindungsparametern dar, die Informationen speichern, die von Bindungselementen für die Erstellung von Factorys verwendet werden.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingParameterCollection.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" />-Klasse. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingParameterCollection.GetKeyForItem(System.Object)">
      <summary>Ruft den Schlüssel eines Elements in der Auflistung ab. </summary>
      <returns>Das <see cref="T:System.Type" />-Objekt, das den Schlüssel des angegebenen <paramref name="item" /> in der Auflistung darstellt.</returns>
      <param name="item">Das Element in der Auflistung, dessen Schlüssel abgerufen werden soll.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingParameterCollection.InsertItem(System.Int32,System.Object)">
      <summary>Fügt ein Element am angegebenen Index dieser Auflistung ein.</summary>
      <param name="index">Der nullbasierte Index in der Auflistung, an dem <paramref name="item" /> eingefügt werden soll.</param>
      <param name="item">Das Objekt, das in die Auflistung eingefügt werden soll.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingParameterCollection.SetItem(System.Int32,System.Object)">
      <summary>Ersetzt das Element am angegebenen Index durch ein neues Objekt.</summary>
      <param name="index">Der nullbasierte Index, an dem das neue <paramref name="item" /> festgelegt werden soll.</param>
      <param name="item">Das Objekt, das in die Auflistung festgelegt werden soll.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.BodyWriter">
      <summary>Stellt den Writer des Nachrichtentexts dar.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BodyWriter.#ctor(System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.BodyWriter" />-Klasse, die explizit angibt, ob eine Pufferung erforderlich ist.</summary>
      <param name="isBuffered">true, wenn das Body Writer-Objekt mehrfach aufgerufen werden kann, andernfalls false.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.BodyWriter.CreateBufferedCopy(System.Int32)">
      <summary>Erstellt eine gepufferte Kopie des Texts.</summary>
      <returns>Ein <see cref="T:System.ServiceModel.Channels.BodyWriter" />, der eine Kopie des Objekts enthält.</returns>
      <param name="maxBufferSize">Die maximale Größe des Puffers für den Text.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Die <paramref name="maxBufferSize" /> ist kleiner als 0 (null).</exception>
      <exception cref="T:System.InvalidOperationException">Der Text wurde bereits geschrieben und kann nicht erneut geschrieben werden, oder das Body Writer-Objekt wurde nicht gepuffert.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.BodyWriter.IsBuffered">
      <summary>Ruft einen Wert ab, der angibt, ob die write-Methode mehrfach aufgerufen werden kann.</summary>
      <returns>true, wenn das Body Writer-Objekt mehrfach aufgerufen werden kann, andernfalls false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BodyWriter.OnCreateBufferedCopy(System.Int32)">
      <summary>Stellt einen Erweiterungspunkt bereit, wenn der Textinhalt geschrieben wird.</summary>
      <returns>Der <see cref="T:System.ServiceModel.Channels.BodyWriter" /> mit der angegebenen maximalen Puffergröße.</returns>
      <param name="maxBufferSize">Die maximale Größe des Puffers für den Text.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.BodyWriter.OnWriteBodyContents(System.Xml.XmlDictionaryWriter)">
      <summary>Stellt bei Implementierung einen Erweiterungspunkt bereit, wenn der Textinhalt geschrieben wird.</summary>
      <param name="writer">Der <see cref="T:System.Xml.XmlDictionaryWriter" />, mit dem der Nachrichtentext geschrieben wird.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.BodyWriter.WriteBodyContents(System.Xml.XmlDictionaryWriter)">
      <summary>Schreibt den Inhalt des Nachrichtentexts.</summary>
      <param name="writer">Der <see cref="T:System.Xml.XmlDictionaryWriter" />, mit dem der Nachrichtentext geschrieben wird.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> ist null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.BufferManager">
      <summary>Viele Windows Communication Foundation (WCF)-Features erfordern die Verwendung von Puffern, deren Erstellung und Zerstörung kostenaufwändig ist.Mit der <see cref="T:System.ServiceModel.Channels.BufferManager" />-Klasse können Sie einen Pufferpool verwalten.Der Pool und die zugehörigen Puffer werden beim Instanziieren dieser Klasse erstellt und nach der Freigabe von der Garbage Collection wieder zerstört.Wenn Sie einen Puffer verwenden möchten, können Sie einen aus dem Pool nehmen und nach Abschluss der Arbeit wieder im Pool ablegen.Dieser Vorgang ist wesentlich schneller, als jedes Mal, wenn Sie einen Puffer benötigen, eine neuen zu erstellen und wieder zu zerstören.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.BufferManager" />-Klasse. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.Clear">
      <summary>Gibt die derzeit im Manager zwischengespeicherten Puffer frei.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.CreateBufferManager(System.Int64,System.Int32)">
      <summary>Erstellt einen neuen Puffermanager mit einer angegebenen maximalen Pufferpoolgröße und einer maximalen Größe für jeden einzelnen Puffer im Pool</summary>
      <returns>Gibt ein <see cref="T:System.ServiceModel.Channels.BufferManager" />-Objekt mit den angegebenen Parametern zurück.</returns>
      <param name="maxBufferPoolSize">Die maximale Größe des Pools.</param>
      <param name="maxBufferSize">Die maximale Größe eines einzelnen Puffers.</param>
      <exception cref="T:System.InsufficientMemoryException">Unter .NET for Windows Store apps oder in der Portable Klassenbibliothek verwenden Sie stattdessen die Basisklassenausnahme <see cref="T:System.OutOfMemoryException" />.Der Arbeitsspeicher reichte nicht aus, um den angeforderten Pufferpool zu erstellen.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="maxBufferPoolSize" /> oder <paramref name="maxBufferSize" /> war kleiner als 0 (Null).</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.ReturnBuffer(System.Byte[])">
      <summary>Gibt einen Puffer an den Pool zurück.</summary>
      <param name="buffer">Ein Verweis auf den Puffer, der zurückgegeben wird.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" />-Verweis darf nicht null sein.</exception>
      <exception cref="T:System.ArgumentException">Die Länge des <paramref name="buffer" /> entspricht nicht der Pufferlängeneigenschaft des Pools.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.TakeBuffer(System.Int32)">
      <summary>Ruft einen Puffer mit mindestens der angegebenen Größe aus dem Pool ab. </summary>
      <returns>Ein Bytearray, das der angeforderten Größe des Puffers entspricht.</returns>
      <param name="bufferSize">Die Größe des angeforderten Puffers in Byte.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="bufferSize" /> darf nicht kleiner 0 (Null) sein.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelBase">
      <summary>Stellt die Basisimplementierung für benutzerdefinierte Kanäle bereit.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelBase.#ctor(System.ServiceModel.Channels.ChannelManagerBase)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.ChannelBase" />-Klasse.  </summary>
      <param name="channelManager">Die <see cref="T:System.ServiceModel.Channels.ChannelManagerBase" />, die die Standardtimeoutwerte für Kanalvorgänge (Senden, Empfangen, Öffnen und Schließen) festlegen.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="channelManager" /> ist null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.DefaultCloseTimeout">
      <summary>Ruft das Standardzeitintervall ab, das für den Abschluss eines Schließvorgangs bereitgestellt wird.</summary>
      <returns>Die Standard-<see cref="T:System.Timespan" />, die angibt, wie viel Zeit für das Schließen bleibt, bevor ein Timeout eintritt.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.DefaultOpenTimeout">
      <summary>Ruft das Zeitintervall ab, das für den Abschluss eines Öffnungsvorgangs bereitgestellt wird.</summary>
      <returns>Die Standard-<see cref="T:System.Timespan" />, die angibt, wie viel Zeit für das Öffnen bleibt, bevor ein Timeout eintritt.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.DefaultReceiveTimeout">
      <summary>Ruft das Standardzeitintervall ab, das für den Abschluss eines Empfangsvorgangs bereitgestellt wird, oder legt dieses fest.</summary>
      <returns>Die Standard-<see cref="T:System.Timespan" />, die angibt, welcher Zeitraum für den Empfang bleibt, bevor ein Timeout eintritt.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.DefaultSendTimeout">
      <summary>Ruft das Standardzeitintervall ab, das für den Abschluss eines Sendevorgangs bereitgestellt wird, oder legt dieses fest.</summary>
      <returns>Die Standard-<see cref="T:System.Timespan" />, die angibt, welcher Zeitraum für das Senden bleibt, bevor ein Timeout eintritt.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelBase.GetProperty``1">
      <summary>Gibt ggf. das angeforderte typisierte Objekt von der entsprechenden Ebene im Kanalstapel zurück.</summary>
      <returns>Das von <paramref name="T" /> angeforderte typisierte Objekt, falls vorhanden, oder null, falls das Objekt nicht vorhanden ist.</returns>
      <typeparam name="T">Das typisierte Objekt, das von der Methode abgefragt wird.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.Manager">
      <summary>Ruft den Kanal-Manager ab, der dem aktuellen Kanal zugeordnet ist.</summary>
      <returns>Die <see cref="T:System.ServiceModel.Channels.ChannelManagerBase" />, die dem aktuellen Kanal zugeordnet ist.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelBase.OnClosed">
      <summary>Verwendet Diagnoseablaufverfolgung während des Übergangs in den Schließzustand.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#CloseTimeout">
      <summary>Ruft das Zeitintervall ab, nach dem die von einem Kommunikationsobjekt aufgerufene Schließmethode das Zeitlimit überschreitet.</summary>
      <returns>Die <see cref="T:System.Timespan" />, die das Zeitintervall angibt, bis die Schließmethode das Zeitlimit überschreitet.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#OpenTimeout">
      <summary>Ruft das Zeitintervall ab, nach dem die von einem Kommunikationsobjekt aufgerufene Öffnungsmethode das Zeitlimit überschreitet.</summary>
      <returns>Die <see cref="T:System.Timespan" />, die das Zeitintervall angibt, bis die Öffnungsmethode das Zeitlimit überschreitet.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#ReceiveTimeout">
      <summary>Ruft das Zeitintervall ab, nach dem die von einem Kommunikationsobjekt aufgerufene Empfangsmethode das Zeitlimit überschreitet.</summary>
      <returns>Die <see cref="T:System.Timespan" />, die das Zeitintervall angibt, bis die Empfangsmethode das Zeitlimit überschreitet.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#SendTimeout">
      <summary>Ruft das Zeitintervall ab, nach dem die von einem Kommunikationsobjekt aufgerufene Sendemethode das Zeitlimit überschreitet.</summary>
      <returns>Die <see cref="T:System.Timespan" />, die das Zeitintervall angibt, bis die Sendemethode das Zeitlimit überschreitet.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelFactoryBase">
      <summary>Stellt eine allgemeine Basisimplementierung für alle benutzerdefinierten Kanalfactorys bereit.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.ChannelFactoryBase" />-Klasse.  </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.ChannelFactoryBase" />-Klasse mit den angegebenen Standardtimeoutwerten für die Kommunikation.</summary>
      <param name="timeouts">Die <see cref="T:System.ServiceModel.IDefaultCommunicationTimeouts" />, die die Standardtimeoutwerte für das Öffnen, Senden und Empfangen sowie für das Schließen beim Austauschen von Nachrichten festlegen. </param>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelFactoryBase.DefaultCloseTimeout">
      <summary>Ruft das Standardzeitintervall ab, das für den Abschluss eines Schließvorgangs bereitgestellt wird.</summary>
      <returns>Die Standard-<see cref="T:System.Timespan" />, die angibt, wie viel Zeit für das Schließen bleibt, bevor ein Timeout eintritt.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelFactoryBase.DefaultOpenTimeout">
      <summary>Ruft das Zeitintervall ab, das für den Abschluss eines Öffnungsvorgangs bereitgestellt wird.</summary>
      <returns>Die Standard-<see cref="T:System.Timespan" />, die angibt, wie viel Zeit für das Öffnen bleibt, bevor ein Timeout eintritt.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelFactoryBase.DefaultReceiveTimeout">
      <summary>Ruft das Standardzeitintervall ab, das für den Abschluss eines Empfangsvorgangs bereitgestellt wird, oder legt dieses fest.</summary>
      <returns>Die Standard-<see cref="T:System.Timespan" />, die angibt, welcher Zeitraum für den Empfang bleibt, bevor ein Timeout eintritt.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelFactoryBase.DefaultSendTimeout">
      <summary>Ruft das Standardzeitintervall ab, das für den Abschluss eines Sendevorgangs bereitgestellt wird, oder legt dieses fest.</summary>
      <returns>Die Standard-<see cref="T:System.Timespan" />, die angibt, welcher Zeitraum für das Senden bleibt, bevor ein Timeout eintritt.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.GetProperty``1">
      <summary>Gibt ggf. ein angefordertes typisiertes Objekt von der entsprechenden Ebene im Kanalstapel zurück.</summary>
      <returns>Das angeforderte typisierte Objekt T, falls vorhanden, oder null, falls das Objekt nicht vorhanden ist.</returns>
      <typeparam name="T">Das typisierte Objekt, das von der Methode abgefragt wird.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.OnAbort">
      <summary>Setzt Verarbeitung auf einem Kommunikationsobjekt ein, nachdem aufgrund des Aufrufs eines synchronen Abbruchvorgangs der Übergang in den Schließen-Zustand stattgefunden hat.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Startet einen asynchronen Schließvorgang für jeden Kanal, der von der Factory erstellt wurde.</summary>
      <returns>Das <see cref="T:System.IAsyncResult" />, das auf den asynchronen Beim-Schließen-Vorgang verweist. </returns>
      <param name="timeout">Die <see cref="T:System.Timespan" />, die angibt, wie viel Zeit für den Beim-Schließen-Vorgang bleibt, bevor ein Timeout eintritt.</param>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat, der die Benachrichtigung über den asynchronen Vorgang bei Abschluss des Schließens empfängt.</param>
      <param name="state">Ein von der Anwendung angegebenes Objekt, das dem asynchronen Beim-Schließen-Vorgang zugeordnete Zustandsinformationen enthält.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.OnClose(System.TimeSpan)">
      <summary>Fügt Verarbeitung auf einem Kommunikationsobjekt ein, nachdem der Übergang zum Öffnungsstatus stattgefunden hat, der innerhalb eines festgelegten Zeitintervalls abgeschlossen sein muss.</summary>
      <param name="timeout">Die <see cref="T:System.Timespan" />, die angibt, wie viel Zeit für den Beim-Schließen-Vorgang bleibt, bevor ein Timeout eintritt.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.OnEndClose(System.IAsyncResult)">
      <summary>Schließt einen asynchronen Schließvorgang von Kanälen ab, die von der Factory geöffnet wurden.</summary>
      <param name="result">Der <see cref="T:System.IAsyncResult" />, der durch einen Aufruf der <see cref="M:System.ServiceModel.Channels.ChannelFactoryBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />-Methode zurückgegeben wurde.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelFactoryBase`1">
      <summary>Stellt eine allgemeine Basisimplementierung für Kanalfactorys auf dem Client bereit, um Kanäle eines angegebenen Typs zu erstellen, die mit einer spezifischen Adresse verbunden sind.</summary>
      <typeparam name="TChannel">Der Typ des Kanals, der von der Factory erzeugt wird.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.ChannelFactoryBase`1" />-Klasse.  </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.ChannelFactoryBase`1" />-Klasse mit den angegebenen Standardtimeoutwerten für die Kommunikation.</summary>
      <param name="timeouts">Die <see cref="T:System.ServiceModel.IDefaultCommunicationTimeouts" />-Schnittstelle mit den Standardtimeoutwerten für das Öffnen, Senden und Empfangen sowie für das Schließen beim Austauschen von Nachrichten.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.CreateChannel(System.ServiceModel.EndpointAddress)">
      <summary>Erstellt einen bestimmten Kanaltyp mit einer angegebenen Endpunktadresse.</summary>
      <returns>Ein Kanal vom Typ <paramref name="TChannel" /> mit der angegebenen <paramref name="address" />.</returns>
      <param name="address">Die <see cref="T:System.ServiceModel.EndpointAddress" /> des Remoteendpunkts, an den Nachrichten vom Kanal gesendet werden.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> ist null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>Erstellt einen bestimmten Kanaltyp mit der angegebenen Transportadresse und der angegebenen Endpunktadresse.</summary>
      <returns>Ein Kanal vom Typ <paramref name="TChannel" /> mit der angegebenen Remoteadresse und der angegebenen Transportadresse.</returns>
      <param name="address">Die <see cref="T:System.ServiceModel.EndpointAddress" /> des Remoteendpunkts, an den Nachrichten vom Kanal gesendet werden.</param>
      <param name="via">Der <see cref="T:System.Uri" />, der die Transportadresse enthält, an die Nachrichten auf dem Ausgabekanal gesendet werden.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnAbort">
      <summary>Bricht jeden Kanal ab, der von der Kanalfactory verwaltet wird.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Startet einen asynchronen Vorgang zum Schließen aller Kanäle innerhalb eines bestimmten Zeitraums, die mit der Kanalfactory verknüpft sind.</summary>
      <returns>Die <see cref="T:System.IAsyncResult" />-Einstellung, die auf den asynchronen Schließvorgang verweist. </returns>
      <param name="timeout">Der <see cref="T:System.Timespan" />, der angibt, welcher Zeitraum für das Schließen bleibt, bevor ein Timeout eintritt.</param>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat, der die Benachrichtigung über den asynchronen Abschluss des Schließvorgangs empfängt.</param>
      <param name="state">Ein von der Anwendung angegebenes Zustandsobjekt, das dem asynchronen Schließvorgang zugeordnete Statusinformationen enthält.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnClose(System.TimeSpan)">
      <summary>Schließt alle Kanäle innerhalb eines angegebenen Zeitraums, die mit der Kanalfactory verknüpft sind.</summary>
      <param name="timeout">Der <see cref="T:System.Timespan" />, der angibt, welcher Zeitraum für das Schließen bleibt, bevor ein Timeout eintritt.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnCreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>Stellt im Rahmen der Implementierung in einer abgeleiteten Klasse einen Erweiterungspunkt beim Erstellen von Kanälen bereit.</summary>
      <returns>Ein Kanal vom Typ <paramref name="TChannel" /> mit den angegebenen Adressen.</returns>
      <param name="address">Die <see cref="T:System.ServiceModel.EndpointAddress" /> des Remoteendpunkts, an den Nachrichten vom Kanal gesendet werden.</param>
      <param name="via">Der <see cref="T:System.Uri" />, der die Transportadresse enthält, an die Nachrichten auf dem Ausgabekanal gesendet werden.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnEndClose(System.IAsyncResult)">
      <summary>Schließt einen asynchronen Vorgang zum Schließen aller Kanäle innerhalb eines bestimmten Zeitraums ab, die mit der Kanalfactory verknüpft sind.</summary>
      <param name="result">Der <see cref="T:System.IAsyncResult" />, der durch einen Aufruf der <see cref="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />-Methode zurückgegeben wurde.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.ValidateCreateChannel">
      <summary>Bestätigt, dass die Kanalfactory geöffnet ist und Kanäle erstellen kann.</summary>
      <exception cref="T:System.ObjectDisposedException">Das Kommunikationsobjekt ist in einem <see cref="F:System.ServiceModel.CommunicationState.Closing" />-Zustand oder in einem <see cref="F:System.ServiceModel.CommunicationState.Closed" />-Zustand.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Das Kommunikationsobjekt befindet sich in einem <see cref="F:System.ServiceModel.CommunicationState.Faulted" />-Zustand.</exception>
      <exception cref="T:System.InvalidOperationException">Die aktuelle Kanalfactory weist einen anderen Zustand als <see cref="F:System.ServiceModel.CommunicationState.Opened" /> auf.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelManagerBase">
      <summary>Stellt eine Basisimplementierung zum Verwalten der Standardtimeouts bereit, die Kanal- und Listenerfactorys zugeordnet sind.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelManagerBase.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.ChannelManagerBase" />-Klasse. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.DefaultReceiveTimeout">
      <summary>Wenn dies in einer abgeleiteten Klasse überschrieben wird, wird hierdurch das Standardzeitintervall, in dem ein Kanal den Empfang einer Nachricht abschließen muss, abgerufen.</summary>
      <returns>Die Standard-<see cref="T:System.Timespan" />, die festlegt, wie viel Zeit dem Kanal ab dem Abruf der Empfangsmethode bleibt, um den Empfang einer Nachricht vor dem Timeout abzuschließen.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.DefaultSendTimeout">
      <summary>Wenn dies in einer abgeleiteten Klasse überschrieben wird, wird hierdurch das Standardzeitintervall abgerufen, in dem ein Kanal den Versand einer Nachricht abschließen muss.</summary>
      <returns>Die Standard-<see cref="T:System.Timespan" />, die festlegt, wie viel Zeit dem Kanal ab dem Aufruf der Versandmethode bleibt, um den Versand einer Nachricht vor dem Timeout abzuschließen.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#CloseTimeout">
      <summary>Ruft das Zeitintervall ab, nach dem die von einem Kommunikationsobjekt aufgerufene Schließmethode das Zeitlimit überschreitet.</summary>
      <returns>Die <see cref="T:System.Timespan" />, die das Zeitintervall angibt, bis die Schließmethode das Zeitlimit überschreitet.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#OpenTimeout">
      <summary>Ruft das Zeitintervall ab, nach dem die von einem Kommunikationsobjekt aufgerufene Öffnungsmethode das Zeitlimit überschreitet.</summary>
      <returns>Die <see cref="T:System.Timespan" />, die das Zeitintervall angibt, bis die Öffnungsmethode das Zeitlimit überschreitet.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#ReceiveTimeout">
      <summary>Ruft das Zeitintervall ab, nach dem die von einem Kommunikationsobjekt aufgerufene Empfangsmethode das Zeitlimit überschreitet.</summary>
      <returns>Die <see cref="T:System.Timespan" />, die das Zeitintervall angibt, bis die Empfangsmethode das Zeitlimit überschreitet.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#SendTimeout">
      <summary>Ruft das Zeitintervall ab, nach dem die von einem Kommunikationsobjekt aufgerufene Sendemethode das Zeitlimit überschreitet.</summary>
      <returns>Die <see cref="T:System.Timespan" />, die das Zeitintervall angibt, bis die Sendemethode das Zeitlimit überschreitet.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelParameterCollection">
      <summary>Stellt eine Auflistung von Kanalparametern dar.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.ChannelParameterCollection" />-Klasse.  </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.#ctor(System.ServiceModel.Channels.IChannel)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.ChannelParameterCollection" />-Klasse.  </summary>
      <param name="channel">Der Kanal, dessen Parameter in der Auflistung enthalten sind.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelParameterCollection.Channel">
      <summary>Ruft den Kanal ab, dessen Parameter in der Auflistung enthalten sind. </summary>
      <returns>Der <see cref="T:System.ServiceModel.Channels.IChannel" />, dessen Parameter in der Auflistung enthalten sind.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.ClearItems">
      <summary>Löscht die Parameterauflistung.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.InsertItem(System.Int32,System.Object)">
      <summary>Fügt das angegebene Element mit dem angegebenen Index in die Auflistung ein.</summary>
      <param name="index">Der Index des Elements in der Auflistung.</param>
      <param name="item">Das Element, das der Auflistung hinzugefügt werden soll.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.PropagateChannelParameters(System.ServiceModel.Channels.IChannel)">
      <summary>Fügt die Parameter in der aktuellen Auflistung der <see cref="T:System.ServiceModel.Channels.ChannelParameterCollection" /> eines angegebenen Kanals hinzu.</summary>
      <param name="innerChannel">Der Kanal, der die Parameter der aktuellen Auflistung empfängt.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.RemoveItem(System.Int32)">
      <summary>Entfernt einen Parameter aus der Auflistung.</summary>
      <param name="index">Der Index des Parameters, der entfernt werden soll.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.SetItem(System.Int32,System.Object)">
      <summary>Ersetzt ein Element in der Auflistung am angegebenen Index.</summary>
      <param name="index">Der Index des Elements, der ersetzt werden soll.</param>
      <param name="item">Der Wert des Ersatzelements.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.CommunicationObject">
      <summary>Stellt eine allgemeine Basisimplementierung für den Computer im Grundzustand bereit für alle kommunikationsorientierten Objekte im System, darunter Kanäle, Listener sowie Kanal- und Listenerfactorys.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.CommunicationObject" />-Klasse.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.#ctor(System.Object)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.CommunicationObject" />-Klasse mit der gegenseitig exklusiven Sperre, um die angegebenen Zustandsübergänge zu schützen.</summary>
      <param name="mutex">Die gegenseitig exklusive Sperre, die die Klasseninstanz während eines Zustandsübergangs schützt.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Abort">
      <summary>Bewirkt, dass ein Kommunikationsobjekt unmittelbar vom aktuellen Zustand in den Schließzustand übergeht.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
      <summary>Startet einen asynchronen Vorgang, um ein Kommunikationsobjekt zu schließen.</summary>
      <returns>Die <see cref="T:System.IAsyncResult" />-Einstellung, die auf den asynchronen Schließvorgang verweist. </returns>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat, der die Benachrichtigung über den Abschluss des asynchronen Schließvorgangs empfängt.</param>
      <param name="state">Ein von der Anwendung angegebenes Objekt, das dem asynchronen Schließvorgang zugeordnete Statusinformationen enthält.</param>
      <exception cref="T:System.InvalidOperationException">Das Kommunikationsobjekt befindet sich nicht in einem <see cref="F:System.ServiceModel.CommunicationState.Opened" />-Zustand oder einem <see cref="F:System.ServiceModel.CommunicationState.Opening" />-Zustand und kann nicht geändert werden.</exception>
      <exception cref="T:System.ObjectDisposedException">Das Kommunikationsobjekt befindet sich in einem <see cref="F:System.ServiceModel.CommunicationState.Closing" />-Zustand oder einem <see cref="F:System.ServiceModel.CommunicationState.Closed" />-Zustand und kann nicht geändert werden.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Das Kommunikationsobjekt befindet sich in einem <see cref="F:System.ServiceModel.CommunicationState.Faulted" />-Zustand und kann nicht geändert werden.</exception>
      <exception cref="T:System.TimeoutException">Das Standardzeitintervall, das dem Vorgang zugewiesen wurde, wurde vor dem Abschluss des Vorgangs überschritten.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Startet einen asynchronen Vorgang, um mit einem festgelegten Timeout ein Kommunikationsobjekt zu schließen.</summary>
      <returns>Die <see cref="T:System.IAsyncResult" />-Einstellung, die auf den asynchronen Schließvorgang verweist.</returns>
      <param name="timeout">Die <see cref="T:System.Timespan" />, die angibt, welcher Zeitraum für das Schließen bleibt, bevor ein Timeout auftritt.</param>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat, der die Benachrichtigung über den Abschluss des asynchronen Schließvorgangs empfängt.</param>
      <param name="state">Ein von der Anwendung angegebenes Objekt, das dem asynchronen Schließvorgang zugeordnete Statusinformationen enthält.</param>
      <exception cref="T:System.InvalidOperationException">Das Kommunikationsobjekt befindet sich nicht in einem <see cref="F:System.ServiceModel.CommunicationState.Opened" />-Zustand oder einem <see cref="F:System.ServiceModel.CommunicationState.Opening" />-Zustand und kann nicht geändert werden.</exception>
      <exception cref="T:System.ObjectDisposedException">Das Kommunikationsobjekt befindet sich in einem <see cref="F:System.ServiceModel.CommunicationState.Closing" />-Zustand oder einem <see cref="F:System.ServiceModel.CommunicationState.Closed" />-Zustand und kann nicht geändert werden.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Das Kommunikationsobjekt befindet sich in einem <see cref="F:System.ServiceModel.CommunicationState.Faulted" />-Zustand und kann nicht geändert werden.</exception>
      <exception cref="T:System.TimeoutException">Das Standardzeitintervall, das dem Vorgang zugewiesen wurde, wurde vor dem Abschluss des Vorgangs überschritten.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
      <summary>Startet einen asynchronen Vorgang, um ein Kommunikationsobjekt zu öffnen.</summary>
      <returns>Der <see cref="T:System.IAsyncResult" />-Wert, der auf den asynchronen Öffnungsvorgang verweist. </returns>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat, der die Benachrichtigung erhält, dass der asynchrone Öffnungsvorgang abgeschlossen wurde.</param>
      <param name="state">Ein durch die Anwendung festgelegtes Objekt, das dem asynchronen Öffnungsvorgang zugeordnete Zustandsinformationen enthält.</param>
      <exception cref="T:System.InvalidOperationException">Das Kommunikationsobjekt befindet sich nicht in einem <see cref="F:System.ServiceModel.CommunicationState.Opened" />-Zustand oder einem <see cref="F:System.ServiceModel.CommunicationState.Opening" />-Zustand und kann nicht geändert werden.</exception>
      <exception cref="T:System.ObjectDisposedException">Das Kommunikationsobjekt befindet sich in einem <see cref="F:System.ServiceModel.CommunicationState.Closing" />-Zustand oder einem <see cref="F:System.ServiceModel.CommunicationState.Closed" />-Zustand und kann nicht geändert werden.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Das Kommunikationsobjekt befindet sich in einem <see cref="F:System.ServiceModel.CommunicationState.Faulted" />-Zustand und kann nicht geändert werden.</exception>
      <exception cref="T:System.TimeoutException">Das Standardzeitintervall, das dem Vorgang zugewiesen wurde, wurde vor dem Abschluss des Vorgangs überschritten.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Startet einen asynchronen Vorgang, um ein Kommunikationsobjekt innerhalb eines festgelegten Zeitraums zu öffnen.</summary>
      <returns>Der <see cref="T:System.IAsyncResult" />-Wert, der auf den asynchronen Öffnungsvorgang verweist. </returns>
      <param name="timeout">Der <see cref="T:System.Timespan" />-Wert, der angibt, welcher Zeitraum für den Sendevorgang bleibt, bevor ein Timeout eintritt.</param>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat, der die Benachrichtigung erhält, dass der asynchrone Öffnungsvorgang abgeschlossen wurde.</param>
      <param name="state">Ein durch die Anwendung festgelegtes Objekt, das dem asynchronen Öffnungsvorgang zugeordnete Zustandsinformationen enthält.</param>
      <exception cref="T:System.InvalidOperationException">Das Kommunikationsobjekt befindet sich nicht in einem <see cref="F:System.ServiceModel.CommunicationState.Opened" />-Zustand oder einem <see cref="F:System.ServiceModel.CommunicationState.Opening" />-Zustand und kann nicht geändert werden.</exception>
      <exception cref="T:System.ObjectDisposedException">Das Kommunikationsobjekt befindet sich in einem <see cref="F:System.ServiceModel.CommunicationState.Closing" />-Zustand oder einem <see cref="F:System.ServiceModel.CommunicationState.Closed" />-Zustand und kann nicht geändert werden.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Das Kommunikationsobjekt befindet sich in einem <see cref="F:System.ServiceModel.CommunicationState.Faulted" />-Zustand und kann nicht geändert werden.</exception>
      <exception cref="T:System.TimeoutException">Das Standardzeitintervall, das dem Vorgang zugewiesen wurde, wurde vor dem Abschluss des Vorgangs überschritten.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Close">
      <summary>Bewirkt, dass ein Kommunikationsobjekt vom aktuellen Zustand in den geschlossenen Zustand übergeht.</summary>
      <exception cref="T:System.InvalidOperationException">Das Kommunikationsobjekt befindet sich nicht in einem <see cref="F:System.ServiceModel.CommunicationState.Opened" />-Zustand oder einem <see cref="F:System.ServiceModel.CommunicationState.Opening" />-Zustand und kann nicht geändert werden.</exception>
      <exception cref="T:System.ObjectDisposedException">Das Kommunikationsobjekt befindet sich in einem <see cref="F:System.ServiceModel.CommunicationState.Closing" />-Zustand oder einem <see cref="F:System.ServiceModel.CommunicationState.Closed" />-Zustand und kann nicht geändert werden.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Das Kommunikationsobjekt befindet sich in einem <see cref="F:System.ServiceModel.CommunicationState.Faulted" />-Zustand und kann nicht geändert werden.</exception>
      <exception cref="T:System.TimeoutException">Das Standardzeitintervall, das dem Vorgang zugewiesen wurde, wurde vor dem Abschluss des Vorgangs überschritten.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)">
      <summary>Bewirkt den Übergang eines Kommunikationsobjekts innerhalb eines angegebenen Zeitraums vom aktuellen Zustand in den geschlossenen Zustand.</summary>
      <param name="timeout">Die <see cref="T:System.Timespan" />, die angibt, welcher Zeitraum für das Schließen bleibt, bevor ein Timeout auftritt.</param>
      <exception cref="T:System.InvalidOperationException">Das Kommunikationsobjekt befindet sich nicht in einem <see cref="F:System.ServiceModel.CommunicationState.Opened" />-Zustand oder einem <see cref="F:System.ServiceModel.CommunicationState.Opening" />-Zustand und kann nicht geändert werden.</exception>
      <exception cref="T:System.ObjectDisposedException">Das Kommunikationsobjekt befindet sich in einem <see cref="F:System.ServiceModel.CommunicationState.Closing" />-Zustand oder einem <see cref="F:System.ServiceModel.CommunicationState.Closed" />-Zustand und kann nicht geändert werden.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Das Kommunikationsobjekt befindet sich in einem <see cref="F:System.ServiceModel.CommunicationState.Faulted" />-Zustand und kann nicht geändert werden.</exception>
      <exception cref="T:System.TimeoutException">Das Standardzeitintervall, das dem Vorgang zugewiesen wurde, wurde vor dem Abschluss des Vorgangs überschritten.</exception>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Closed">
      <summary>Tritt ein, sobald ein Kommunikationsobjekt in den geschlossenen Zustand übergeht.</summary>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Closing">
      <summary>Tritt ein, sobald ein Kommunikationsobjekt in den Schließzustand übergeht.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.DefaultCloseTimeout">
      <summary>Wenn dies in einer abgeleiteten Klasse überschrieben wird, wird hierdurch das Standardzeitintervall, in dem ein Schließvorgang abgeschlossen werden kann, abgerufen.</summary>
      <returns>Die Standard-<see cref="T:System.Timespan" />, die angibt, wie viel Zeit für das Schließen bleibt, bevor ein Timeout eintritt.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.DefaultOpenTimeout">
      <summary>Wenn dies in einer abgeleiteten Klasse überschrieben wird, wird hierdurch das Standardzeitintervall, in dem ein Öffnungsvorgang abgeschlossen werden kann, abgerufen.</summary>
      <returns>Die Standard-<see cref="T:System.Timespan" />, die angibt, wie viel Zeit für das Öffnen bleibt, bevor ein Timeout eintritt.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)">
      <summary>Beendet einen asynchronen Vorgang, um ein Kommunikationsobjekt zu schließen.</summary>
      <param name="result">Das <see cref="T:System.IAsyncResult" />, das von einem Aufruf der <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.BeginClose" />-Methode zurückgegeben wird.</param>
      <exception cref="T:System.InvalidOperationException">Das Kommunikationsobjekt befindet sich nicht in einem <see cref="F:System.ServiceModel.CommunicationState.Opened" />-Zustand oder einem <see cref="F:System.ServiceModel.CommunicationState.Opening" />-Zustand und kann nicht geändert werden.</exception>
      <exception cref="T:System.ObjectDisposedException">Das Kommunikationsobjekt befindet sich in einem <see cref="F:System.ServiceModel.CommunicationState.Closing" />-Zustand oder einem <see cref="F:System.ServiceModel.CommunicationState.Closed" />-Zustand und kann nicht geändert werden.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Das Kommunikationsobjekt befindet sich in einem <see cref="F:System.ServiceModel.CommunicationState.Faulted" />-Zustand und kann nicht geändert werden.</exception>
      <exception cref="T:System.TimeoutException">Das Standardzeitintervall, das dem Vorgang zugewiesen wurde, wurde vor dem Abschluss des Vorgangs überschritten.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)">
      <summary>Beendet einen asynchronen Vorgang, um ein Kommunikationsobjekt zu öffnen.</summary>
      <param name="result">Das <see cref="T:System.IAsyncResult" />, das von einem Aufruf der <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.BeginClose" />-Methode zurückgegeben wird.</param>
      <exception cref="T:System.InvalidOperationException">Das Kommunikationsobjekt befindet sich nicht in einem <see cref="F:System.ServiceModel.CommunicationState.Opened" />-Zustand oder einem <see cref="F:System.ServiceModel.CommunicationState.Opening" />-Zustand und kann nicht geändert werden.</exception>
      <exception cref="T:System.ObjectDisposedException">Das Kommunikationsobjekt befindet sich in einem <see cref="F:System.ServiceModel.CommunicationState.Closing" />-Zustand oder einem <see cref="F:System.ServiceModel.CommunicationState.Closed" />-Zustand und kann nicht geändert werden.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Das Kommunikationsobjekt befindet sich in einem <see cref="F:System.ServiceModel.CommunicationState.Faulted" />-Zustand und kann nicht geändert werden.</exception>
      <exception cref="T:System.TimeoutException">Das Standardzeitintervall, das dem Vorgang zugewiesen wurde, wurde vor dem Abschluss des Vorgangs überschritten.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Fault">
      <summary>Bewirkt, dass ein Kommunikationsobjekt vom aktuellen Zustand in den Fehlerzustand übergeht.</summary>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Faulted">
      <summary>Tritt ein, sobald ein Kommunikationsobjekt in den Fehlerzustand übergeht.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType">
      <summary>Ruft den Typ des Kommunikationsobjekts ab.</summary>
      <returns>Der Typ des Kommunikationsobjekts.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.IsDisposed">
      <summary>Ruft einen Wert ab, mit dem angegeben wird, ob das Kommunikationsobjekt verworfen wurde.</summary>
      <returns>true, wenn das Kommunikationsobjekt sich in einem geschlossenen Zustand befindet, andernfalls false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnAbort">
      <summary>Setzt Verarbeitung auf einem Kommunikationsobjekt ein, nachdem aufgrund des Aufrufs eines synchronen Abbruchvorgangs der Übergang in den Schließen-Zustand stattgefunden hat.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Fügt nach dem Übergang des Kommunikationsobjekts in den Schließzustand aufgrund des Aufrufs eines asynchronen Schließvorgangs Verarbeitungen ein.</summary>
      <returns>Das <see cref="T:System.IAsyncResult" />, das auf den asynchronen Beim-Schließen-Vorgang verweist. </returns>
      <param name="timeout">Die <see cref="T:System.Timespan" />, die angibt, wie viel Zeit für den Beim-Schließen-Vorgang bleibt, bevor ein Timeout eintritt.</param>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat, der die Benachrichtigung über den Abschluss des asynchronen Schließvorgangs empfängt.</param>
      <param name="state">Ein von der Anwendung angegebenes Objekt, das dem asynchronen Beim-Schließen-Vorgang zugeordnete Zustandsinformationen enthält.</param>
      <exception cref="T:System.InvalidOperationException">Das Kommunikationsobjekt befindet sich nicht in einem <see cref="F:System.ServiceModel.CommunicationState.Opened" />-Zustand oder einem <see cref="F:System.ServiceModel.CommunicationState.Opening" />-Zustand und kann nicht geändert werden.</exception>
      <exception cref="T:System.ObjectDisposedException">Das Kommunikationsobjekt befindet sich in einem <see cref="F:System.ServiceModel.CommunicationState.Closing" />-Zustand oder einem <see cref="F:System.ServiceModel.CommunicationState.Closed" />-Zustand und kann nicht geändert werden.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Das Kommunikationsobjekt befindet sich in einem <see cref="F:System.ServiceModel.CommunicationState.Faulted" />-Zustand und kann nicht geändert werden.</exception>
      <exception cref="T:System.TimeoutException">Das Standardzeitintervall, das dem Vorgang zugewiesen wurde, wurde vor dem Abschluss des Vorgangs überschritten.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Fügt Verarbeitung auf einem Kommunikationsobjekt ein, nachdem aufgrund des Aufrufs eines asynchronen Öffnungsvorgangs der Übergang in den Öffnungszustand stattgefunden hat.</summary>
      <returns>Das <see cref="T:System.IAsyncResult" />, das auf den asynchronen Beim-Öffnen-Vorgang verweist. </returns>
      <param name="timeout">Die <see cref="T:System.Timespan" />, die angibt, wie viel Zeit für den Beim-Öffnen-Vorgang bleibt, bevor ein Timeout eintritt.</param>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat, der die Benachrichtigung über den Abschluss des asynchronen Beim-Öffnen-Vorgangs empfängt.</param>
      <param name="state">Ein von der Anwendung definiertes Objekt, das dem asynchronen Beim-Öffnen-Vorgang zugeordnete Zustandsinformationen enthält.</param>
      <exception cref="T:System.InvalidOperationException">Das Kommunikationsobjekt befindet sich nicht in einem <see cref="F:System.ServiceModel.CommunicationState.Opened" />-Zustand oder einem <see cref="F:System.ServiceModel.CommunicationState.Opening" />-Zustand und kann nicht geändert werden.</exception>
      <exception cref="T:System.ObjectDisposedException">Das Kommunikationsobjekt befindet sich in einem <see cref="F:System.ServiceModel.CommunicationState.Closing" />-Zustand oder einem <see cref="F:System.ServiceModel.CommunicationState.Closed" />-Zustand und kann nicht geändert werden.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Das Kommunikationsobjekt befindet sich in einem <see cref="F:System.ServiceModel.CommunicationState.Faulted" />-Zustand und kann nicht geändert werden.</exception>
      <exception cref="T:System.TimeoutException">Das Standardzeitintervall, das dem Vorgang zugewiesen wurde, wurde vor dem Abschluss des Vorgangs überschritten.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)">
      <summary>Fügt Verarbeitung auf einem Kommunikationsobjekt ein, nachdem aufgrund des Aufrufs eines synchronen Schließvorgangs der Übergang zum Schließenzustand stattgefunden hat.</summary>
      <param name="timeout">Die <see cref="T:System.Timespan" />, die angibt, wie viel Zeit für den Beim-Schließen-Vorgang bleibt, bevor ein Timeout eintritt.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.Close" /> wurde für ein Objekt im <see cref="F:System.ServiceModel.CommunicationState.Faulted" />-Zustand aufgerufen.</exception>
      <exception cref="T:System.TimeoutException">Das Standardzeitintervall, das dem Vorgang zugewiesen wurde, wurde vor dem Abschluss des Vorgangs überschritten.</exception>
      <exception cref="T:System.ServiceModel.CommunicationException">Beim Schließen des Objekts ist ein Kommunikationsfehler aufgetreten.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnClosed">
      <summary>Wird während des Übergangs eines Kommunikationsobjekts in den Schließzustand aufgerufen.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnClosing">
      <summary>Wird während des Übergangs eines Kommunikationsobjekts in den Schließzustand aufgerufen.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)">
      <summary>Beendet beim Schließen eines Kommunikationsobjekts einen asynchronen Vorgang.</summary>
      <param name="result">Das <see cref="T:System.IAsyncResult" />, das von einem Aufruf der <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)" />-Methode zurückgegeben wird.</param>
      <exception cref="T:System.InvalidOperationException">Das Kommunikationsobjekt befindet sich nicht in einem <see cref="F:System.ServiceModel.CommunicationState.Opened" />-Zustand oder einem <see cref="F:System.ServiceModel.CommunicationState.Opening" />-Zustand und kann nicht geändert werden.</exception>
      <exception cref="T:System.ObjectDisposedException">Das Kommunikationsobjekt befindet sich in einem <see cref="F:System.ServiceModel.CommunicationState.Closing" />-Zustand oder einem <see cref="F:System.ServiceModel.CommunicationState.Closed" />-Zustand und kann nicht geändert werden.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Das Kommunikationsobjekt befindet sich in einem <see cref="F:System.ServiceModel.CommunicationState.Faulted" />-Zustand und kann nicht geändert werden.</exception>
      <exception cref="T:System.TimeoutException">Das Standardzeitintervall, das dem Vorgang zugewiesen wurde, wurde vor dem Abschluss des Vorgangs überschritten.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)">
      <summary>Beendet beim Öffnen eines Kommunikationsobjekts einen asynchronen Vorgang.</summary>
      <param name="result">Das <see cref="T:System.IAsyncResult" />, das von einem Aufruf der <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)" />-Methode zurückgegeben wird.</param>
      <exception cref="T:System.InvalidOperationException">Das Kommunikationsobjekt befindet sich nicht in einem <see cref="F:System.ServiceModel.CommunicationState.Opened" />-Zustand oder einem <see cref="F:System.ServiceModel.CommunicationState.Opening" />-Zustand und kann nicht geändert werden.</exception>
      <exception cref="T:System.ObjectDisposedException">Das Kommunikationsobjekt befindet sich in einem <see cref="F:System.ServiceModel.CommunicationState.Closing" />-Zustand oder einem <see cref="F:System.ServiceModel.CommunicationState.Closed" />-Zustand und kann nicht geändert werden.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Das Kommunikationsobjekt befindet sich in einem <see cref="F:System.ServiceModel.CommunicationState.Faulted" />-Zustand und kann nicht geändert werden.</exception>
      <exception cref="T:System.TimeoutException">Das Standardzeitintervall, das dem Vorgang zugewiesen wurde, wurde vor dem Abschluss des Vorgangs überschritten.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnFaulted">
      <summary>Fügt Verarbeitung auf einem Kommunikationsobjekt ein, nachdem aufgrund des Aufrufs eines synchronen Fehlervorgangs der Übergang zum Fehlerzustand stattgefunden hat.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)">
      <summary>Fügt Verarbeitung auf einem Kommunikationsobjekt ein, nachdem der Übergang zum Öffnungsstatus stattgefunden hat, der innerhalb eines festgelegten Zeitintervalls abgeschlossen sein muss.</summary>
      <param name="timeout">Die <see cref="T:System.Timespan" />, die angibt, wie viel Zeit für den Beim-Öffnen-Vorgang bleibt, bevor ein Timeout eintritt.</param>
      <exception cref="T:System.InvalidOperationException">Das Kommunikationsobjekt befindet sich nicht in einem <see cref="F:System.ServiceModel.CommunicationState.Opened" />-Zustand oder einem <see cref="F:System.ServiceModel.CommunicationState.Opening" />-Zustand und kann nicht geändert werden.</exception>
      <exception cref="T:System.ObjectDisposedException">Das Kommunikationsobjekt befindet sich in einem <see cref="F:System.ServiceModel.CommunicationState.Closing" />-Zustand oder einem <see cref="F:System.ServiceModel.CommunicationState.Closed" />-Zustand und kann nicht geändert werden.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Das Kommunikationsobjekt befindet sich in einem <see cref="F:System.ServiceModel.CommunicationState.Faulted" />-Zustand und kann nicht geändert werden.</exception>
      <exception cref="T:System.TimeoutException">Das Standardzeitintervall, das dem Vorgang zugewiesen wurde, wurde vor dem Abschluss des Vorgangs überschritten.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnOpened">
      <summary>Wird während des Übergangs eines Kommunikationsobjekts in den Geöffnet-Zustand aufgerufen.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnOpening">
      <summary>Wird während des Übergangs eines Kommunikationsobjekts in den Öffnungszustand aufgerufen.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Open">
      <summary>Bewirkt den Übergang eines Kommunikationsobjekts aus dem Erstellt-Zustand in den Geöffnet-Zustand.</summary>
      <exception cref="T:System.InvalidOperationException">Das Kommunikationsobjekt befindet sich nicht in einem <see cref="F:System.ServiceModel.CommunicationState.Opened" />-Zustand oder einem <see cref="F:System.ServiceModel.CommunicationState.Opening" />-Zustand und kann nicht geändert werden.</exception>
      <exception cref="T:System.ObjectDisposedException">Das Kommunikationsobjekt befindet sich in einem <see cref="F:System.ServiceModel.CommunicationState.Closing" />-Zustand oder einem <see cref="F:System.ServiceModel.CommunicationState.Closed" />-Zustand und kann nicht geändert werden.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Das Kommunikationsobjekt befindet sich in einem <see cref="F:System.ServiceModel.CommunicationState.Faulted" />-Zustand und kann nicht geändert werden.</exception>
      <exception cref="T:System.TimeoutException">Das Standardzeitintervall, das dem Vorgang zugewiesen wurde, wurde vor dem Abschluss des Vorgangs überschritten.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)">
      <summary>Bewirkt den Übergang eines Kommunikationsobjekts innerhalb eines angegebenen Zeitraums vom Erstellt-Zustand in den Geöffnet-Zustand.</summary>
      <param name="timeout">Die <see cref="T:System.Timespan" />, die angibt, welcher Zeitraum für das Öffnen bleibt, bevor ein Timeout auftritt.</param>
      <exception cref="T:System.InvalidOperationException">Das Kommunikationsobjekt befindet sich nicht in einem <see cref="F:System.ServiceModel.CommunicationState.Opened" />-Zustand oder einem <see cref="F:System.ServiceModel.CommunicationState.Opening" />-Zustand und kann nicht geändert werden.</exception>
      <exception cref="T:System.ObjectDisposedException">Das Kommunikationsobjekt befindet sich in einem <see cref="F:System.ServiceModel.CommunicationState.Closing" />-Zustand oder einem <see cref="F:System.ServiceModel.CommunicationState.Closed" />-Zustand und kann nicht geändert werden.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Das Kommunikationsobjekt befindet sich in einem <see cref="F:System.ServiceModel.CommunicationState.Faulted" />-Zustand und kann nicht geändert werden.</exception>
      <exception cref="T:System.TimeoutException">Das Standardzeitintervall, das dem Vorgang zugewiesen wurde, wurde vor dem Abschluss des Vorgangs überschritten.</exception>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Opened">
      <summary>Tritt ein, sobald ein Kommunikationsobjekt in den Geöffnet-Zustand übergeht.</summary>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Opening">
      <summary>Tritt ein, sobald ein Kommunikationsobjekt in den Öffnungszustand übergeht.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.State">
      <summary>Ruft einen Wert ab, der den aktuellen Zustand des Kommunikationsobjekts angibt.</summary>
      <returns>Ein Wert aus der <see cref="T:System.ServiceModel.CommunicationState" />-Enumeration, der den aktuellen Zustand des Objekts angibt.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.ThisLock">
      <summary>Ruft die gegenseitig exklusive Sperre ab, die die Klasseninstanz während eines Zustandsübergangs schützt.</summary>
      <returns>Die gegenseitig exklusive Sperre, die die Klasseninstanz während eines Zustandsübergangs schützt.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.CompressionFormat">
      <summary>Gibt das Komprimierungsformat der Kanäle an.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.CompressionFormat.Deflate">
      <summary>Das Deflate-Komprimierungsformat zur verlustlosen Datenkompression.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.CompressionFormat.GZip">
      <summary>Das GZip-Komprimierungsformat.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.CompressionFormat.None">
      <summary>Das unkomprimierte Format.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.CustomBinding">
      <summary>Definiert eine Bindung aus einer Liste mit Bindungselementen. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.CustomBinding" />-Klasse.  </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.Channels.BindingElement})">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.CustomBinding" />-Klasse mit den Bindungselementen aus einem vollständigen Kanalstapel.</summary>
      <param name="bindingElementsInTopDownChannelStackOrder">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> vom Typ <see cref="T:System.ServiceModel.Channels.BindingElement" />, der die Bindungselemente des Kanalstapels in der Reihenfolge von oben nach unten enthält.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bindingElementsInTopDownChannelStackOrder" /> ist null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor(System.ServiceModel.Channels.Binding)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.CustomBinding" />-Klasse aus den Werten einer angegebenen Bindung.</summary>
      <param name="binding">
        <see cref="T:System.ServiceModel.Channels.Binding" />, die verwendet wird, um eine benutzerdefinierte Bindung zu initialisieren.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binding" /> ist null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor(System.ServiceModel.Channels.BindingElement[])">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.CustomBinding" />-Klasse aus einem Array von Bindungselementen.</summary>
      <param name="bindingElementsInTopDownChannelStackOrder">Der <see cref="T:System.Array" /> des Typs <see cref="T:System.ServiceModel.Channels.BindingElement" />, der verwendet wird, um die benutzerdefinierte Bindung zu initialisieren.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bindingElementsInTopDownChannelStackOrder" /> ist null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor(System.String,System.String,System.ServiceModel.Channels.BindingElement[])">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.CustomBinding" />-Klasse aus einem Array an Bindungselementen mit einem spezifischen Namen und Namespace.</summary>
      <param name="name">Der Name der Bindung.</param>
      <param name="ns">Der Namespace der Bindung.</param>
      <param name="bindingElementsInTopDownChannelStackOrder">Der <see cref="T:System.Array" /> des Typs <see cref="T:System.ServiceModel.Channels.BindingElement" />, der verwendet wird, um die benutzerdefinierte Bindung zu initialisieren.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bindingElementsInTopDownChannelStackOrder" /> ist null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.CreateBindingElements">
      <summary>Gibt eine generische Auflistung der Bindungselemente von der benutzerdefinierten Bindung zurück.</summary>
      <returns>Ein <see cref="T:System.Collections.Generic.ICollection`1" />-Objekt vom Typ <see cref="T:System.ServiceModel.Channels.BindingElement" />, das die Bindungselemente aus der benutzerdefinierten Bindung enthält.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CustomBinding.Elements">
      <summary>Ruft die Bindungselemente aus der benutzerdefinierten Bindung ab.</summary>
      <returns>Der <see cref="T:System.ServiceModel.Channels.BindingElementCollection" />, der die Bindungselemente von der benutzerdefinierten Bindung enthält.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CustomBinding.Scheme">
      <summary>Ruft das URI-Schema für den Transport ab, das von der benutzerdefinierten Bindung verwendet wird.</summary>
      <returns>Das URI-Schema für den Transport, das von der benutzerdefinierten Bindung verwendet wird, oder eine leere Zeichenfolge, wenn kein Transport verfügbar ist (<see cref="T:System.ServiceModel.Channels.TransportBindingElement" /> ist null).</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.FaultConverter">
      <summary>Konvertiert von einem Kanal ausgelöste Ausnahmen in SOAP-Fehlernachrichten, die dem Protokoll des Kanals entsprechen.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.FaultConverter" />-Klasse.  </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.GetDefaultFaultConverter(System.ServiceModel.Channels.MessageVersion)">
      <summary>Ruft den Standard-FaultConverter ab.</summary>
      <returns>Eine Instanz von <see cref="T:System.ServiceModel.Channels.FaultConverter" />.</returns>
      <param name="version">Die Nachrichtenversion.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)">
      <summary>Versucht, die Ausnahme zu erstellen.</summary>
      <returns>true, wenn der Fehler erfolgreich konvertiert wurde, andernfalls false.Die Standardeinstellung ist false.</returns>
      <param name="message">Die Fehlernachricht.</param>
      <param name="fault">Der Fehler.</param>
      <param name="exception">Wenn die Konvertierung erfolgreich ist, die SOAP-Ausnahme, als out-Parameter zurückgegeben.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)">
      <summary>Versucht, die Fehlernachricht zu erstellen, sobald der Fehler in eine SOAP-Ausnahme konvertiert wurde.</summary>
      <returns>true, wenn die Fehlernachricht erfolgreich erstellt wurde, andernfalls false.Die Standardeinstellung ist false.</returns>
      <param name="exception">Die SOAP-Ausnahme.</param>
      <param name="message">Die Fehlernachricht, als out-Parameter zurückgegeben.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.TryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)">
      <summary>Schließt <see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" /> mit Fehlerüberprüfung ein.</summary>
      <returns>true, wenn der Fehler erfolgreich konvertiert wurde, andernfalls false.Die Standardeinstellung ist false.</returns>
      <param name="message">Die Fehlernachricht.</param>
      <param name="fault">Der Fehler.</param>
      <param name="exception">Wenn die Konvertierung erfolgreich ist, die SOAP-Ausnahme, als out-Parameter zurückgegeben.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> oder <paramref name="fault" /> ist null.</exception>
      <exception cref="T:System.ArgumentNullException">
        <see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" /> hat true zurückgegeben, <paramref name="exception" /> ist jedoch null.</exception>
      <exception cref="T:System.ArgumentNullException">
        <see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" /> hat false zurückgegeben, <paramref name="exception" /> ist jedoch nicht null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.IChannel">
      <summary>Definiert die grundlegende Schnittstelle, die von allen Kanalobjekten implementiert werden muss.Voraussetzung hierfür ist die Implementierung der Statuscomputerschnittelle, die von allen Kommunikationsobjekten verwendet wird, sowie einer Methode zum Abrufen von Objekten aus dem Kanalstapel.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannel.GetProperty``1">
      <summary>Gibt ggf. ein angefordertes typisiertes Objekt von der entsprechenden Ebene im Kanalstapel zurück.</summary>
      <returns>Das von <paramref name="T" /> angeforderte typisierte Objekt, oder null, falls das Objekt nicht vorhanden ist.</returns>
      <typeparam name="T">Das typisierte Objekt, das von der Methode abgefragt wird.</typeparam>
    </member>
    <member name="T:System.ServiceModel.Channels.IChannelFactory">
      <summary>Definiert die Schnittstelle, die von einer Kanalfactory implementiert werden muss, um Kanäle zu erzeugen.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannelFactory.GetProperty``1">
      <summary>Gibt ggf. ein angefordertes typisiertes Objekt von der entsprechenden Ebene im Kanalstapel zurück.</summary>
      <returns>Das von <paramref name="T" /> angeforderte typisierte Objekt, falls vorhanden, oder null, falls das Objekt nicht vorhanden ist.</returns>
      <typeparam name="T">Das typisierte Objekt, das von der Methode abgefragt wird.</typeparam>
    </member>
    <member name="T:System.ServiceModel.Channels.IChannelFactory`1">
      <summary>Definiert die Schnittstelle, die von Kanalfactorys implementiert werden muss, mit denen typspezifische Kanäle erstellt werden.</summary>
      <typeparam name="TChannel">Der Kanaltyp, der von der Kanalfactory erstellt wird.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)">
      <summary>Erstellt den Kanal eines angegebenen Typs für eine angegebene Endpunktadresse.</summary>
      <returns>Ein Kanal vom Typ <paramref name="TChannel" /> für die angegebene Endpunktadresse.</returns>
      <param name="to">Der <see cref="T:System.ServiceModel.EndpointAddress" />, der den Speicherort des Diensts bereitstellt.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>Erstellt einen Kanal des angegebenen Typs für eine angegebene Endpunktadresse sowie für eine Transportadresse, an die die Nachrichten gesendet werden.</summary>
      <returns>Ein Kanal vom Typ <paramref name="TChannel" /> für die angegebene Endpunktadresse und die angegebene Transportadresse.</returns>
      <param name="to">Der <see cref="T:System.ServiceModel.EndpointAddress" />, der den Speicherort des Diensts bereitstellt.</param>
      <param name="via">Der <see cref="T:System.Uri" />, der die Transportadresse enthält, an die die Nachricht gesendet wird.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.IDuplexChannel">
      <summary>Definiert die Schnittstelle, die ein Kanal implementieren muss, um Nachrichten senden und empfangen zu können. </summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IDuplexSession">
      <summary>Definiert die Schnittstelle für die auf jeder Seite einer bidirektionalen Kommunikation zwischen Messagingendpunkten implementierte Sitzung. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession(System.AsyncCallback,System.Object)">
      <summary>Startet einen asynchronen Vorgang zum Beenden der ausgehenden Sitzung.</summary>
      <returns>Der <see cref="T:System.IAsyncResult" />, der auf das asynchrone Beenden der ausgehenden Sitzung verweist. </returns>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat. </param>
      <param name="state">Ein Objekt (object), das Statusinformationen für diese Anforderung enthält. </param>
    </member>
    <member name="M:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Startet einen asynchronen Vorgang zum Beenden der ausgehenden Sitzung mit einem festgelegten Timeout, innerhalb dessen der Vorgang abgeschlossen sein muss.</summary>
      <returns>Der <see cref="T:System.IAsyncResult" />, der auf das asynchrone Beenden der ausgehenden Sitzung verweist. </returns>
      <param name="timeout">Die <see cref="T:System.TimeSpan" />, die das Zeitintervall angibt, innerhalb dessen der Vorgang abgeschlossen werden muss.</param>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat. </param>
      <param name="state">Ein Objekt (object), das Statusinformationen für diese Anforderung enthält. </param>
    </member>
    <member name="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession">
      <summary>Beendet die ausgehende Sitzung, wobei angegeben wird, dass keine weiteren Nachrichten mehr von diesem Endpunkt aus auf dem zur Sitzung gehörenden Kanal versendet werden. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession(System.TimeSpan)">
      <summary>Beendet die ausgehende Sitzung, wobei angegeben wird, dass innerhalb eines angegebenen Zeitintervalls keine weiteren Nachrichten mehr von diesem Endpunkt aus auf dem zur Sitzung gehörenden Kanal versendet werden.</summary>
      <param name="timeout">Die <see cref="T:System.TimeSpan" />, die das Zeitintervall angibt, innerhalb dessen der Vorgang abgeschlossen werden muss.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IDuplexSession.EndCloseOutputSession(System.IAsyncResult)">
      <summary>Schließt einen asynchronen Vorgang ab, der die ausgehende Sitzung beendet, wobei angegeben wird, dass keine weiteren Nachrichten mehr von diesem Endpunkt aus auf dem zur Sitzung gehörenden Kanal versendet werden. </summary>
      <param name="result">Der <see cref="T:System.IAsyncResult" />, der durch einen Aufruf einer der <see cref="Overload:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession" />-Methoden zurückgegeben wurde.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.IDuplexSessionChannel">
      <summary>Definiert die Schnittstelle, die einer Sitzung einen Duplexkanal zuordnet.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IInputChannel">
      <summary>Definiert die Schnittstelle, die ein Kanal implementieren muss, um eine Nachricht zu empfangen. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.BeginReceive(System.AsyncCallback,System.Object)">
      <summary>Startet einen asynchronen Vorgang, um eine Nachricht zu empfangen, die über ein ihm zugeordnetes Statusobjekt verfügt. </summary>
      <returns>Der <see cref="T:System.IAsyncResult" />-Wert, der auf den asynchronen Nachrichtenempfang verweist. </returns>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat, der die Benachrichtigung über den Abschluss des asynchronen Vorgangs erhält.</param>
      <param name="state">Ein durch die Anwendung festgelegtes Objekt, das dem asynchronen Vorgang zugeordnete Statusinformationen enthält.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.BeginReceive(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Startet einen asynchronen Vorgang, eine Nachricht zu empfangen, die über einen angegebenen Timeout und ein zugeordnetes Statusobjekt verfügt. </summary>
      <returns>Der <see cref="T:System.IAsyncResult" />-Wert, der auf den asynchronen Empfangsvorgang verweist.</returns>
      <param name="timeout">Der <see cref="T:System.Timespan" />-Wert, der das Zeitintervall für das Warten darauf angibt, das eine Nachricht verfügbar wird.</param>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat, der die Benachrichtigung über den Abschluss des asynchronen Vorgangs erhält.</param>
      <param name="state">Ein durch die Anwendung festgelegtes Objekt, das dem asynchronen Vorgang zugeordnete Statusinformationen enthält.</param>
      <exception cref="T:System.TimeoutException">Der festgelegte <paramref name="timeout" /> wird überstiegen, bevor der Vorgang abgeschlossen ist.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der festgelegte Timeout ist kleiner als 0 (null).</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.BeginTryReceive(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Startet einen asynchronen Vorgang, eine Nachricht zu empfangen, die über einen angegebenen Timeout und ein zugeordnetes Statusobjekt verfügt. </summary>
      <returns>Der <see cref="T:System.IAsyncResult" />-Wert, der auf den asynchronen Empfangsvorgang verweist.</returns>
      <param name="timeout">Der <see cref="T:System.Timespan" />-Wert, der das Zeitintervall für das Warten darauf angibt, das eine Nachricht verfügbar wird.</param>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat, der die Benachrichtigung über den Abschluss des asynchronen Vorgangs erhält.</param>
      <param name="state">Ein durch die Anwendung festgelegtes Objekt, das dem asynchronen Vorgang zugeordnete Statusinformationen enthält.</param>
      <exception cref="T:System.TimeoutException">Der festgelegte <paramref name="timeout" /> wird überstiegen, bevor der Vorgang abgeschlossen ist.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der festgelegte Timeout ist kleiner als 0 (null).</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Startet einen asynchronen Vorgang für das Warten auf den Nachrichteneingang, der über einen angegebenen Timeout und ein zugeordnetes Statusobjekt verfügt. </summary>
      <returns>Der <see cref="T:System.IAsyncResult" />-Wert, der auf den asynchronen Vorgang für das Warten auf den Nachrichteneingang verweist.</returns>
      <param name="timeout">Der <see cref="T:System.Timespan" />-Wert, der das Zeitintervall für das Warten darauf angibt, das eine Nachricht verfügbar wird.</param>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat, der die Benachrichtigung über den Abschluss des asynchronen Vorgangs erhält.</param>
      <param name="state">Ein durch die Anwendung festgelegtes Objekt, das dem asynchronen Vorgang zugeordnete Statusinformationen enthält.</param>
      <exception cref="T:System.TimeoutException">Der festgelegte <paramref name="timeout" /> wird überstiegen, bevor der Vorgang abgeschlossen ist.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der festgelegte Timeout ist kleiner als 0 (null).</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.EndReceive(System.IAsyncResult)">
      <summary>Schließt einen asynchronen Vorgang zum Empfang einer Nachricht ab. </summary>
      <returns>Der empfangene <see cref="T:System.ServiceModel.Channels.Message" />. </returns>
      <param name="result">Der <see cref="T:System.IAsyncResult" />, der durch einen Aufruf einer der <see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" />-Methoden zurückgegeben wurde.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.EndTryReceive(System.IAsyncResult,System.ServiceModel.Channels.Message@)">
      <summary>Schließt den angegebenen asynchronen Vorgang ab, um eine Nachricht zu empfangen.</summary>
      <returns>true, wenn eine Nachricht empfangen wird, bevor das angegebene Zeitintervall abgelaufen ist, andernfalls false.</returns>
      <param name="result">Der <see cref="T:System.IAsyncResult" />, der durch einen Aufruf der <see cref="M:System.ServiceModel.Channels.IInputChannel.BeginTryReceive(System.TimeSpan,System.AsyncCallback,System.Object)" />-Methode zurückgegeben wurde.</param>
      <param name="message">Der empfangene <see cref="T:System.ServiceModel.Channels.Message" />. </param>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.EndWaitForMessage(System.IAsyncResult)">
      <summary>Schließt den angegebenen asynchronen Vorgang des Wartens auf eine Nachricht ab.</summary>
      <returns>true, wenn eine Nachricht angekommen ist, bevor der <paramref name="timeout" /> überschritten wurde, andernfalls false.</returns>
      <param name="result">Das <see cref="T:System.IAsyncResult" />, das den abzuschließenden <see cref="M:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage(System.TimeSpan,System.AsyncCallback,System.Object)" />-Vorgang bestimmt und über das das Endergebnis abgerufen werden kann.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.IInputChannel.LocalAddress">
      <summary>Ruft die Adresse ab, auf der der Eingabekanal Nachrichten empfängt. </summary>
      <returns>Die <see cref="T:System.ServiceModel.EndpointAddress" />, auf der der Eingabekanal Nachrichten empfängt. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.Receive">
      <summary>Gibt die empfangene Nachricht zurück, wenn eine verfügbar ist.Ist keine Nachricht verfügbar, erfolgt eine Blockade für die Dauer des Standardzeitintervalls.</summary>
      <returns>Der empfangene <see cref="T:System.ServiceModel.Channels.Message" />. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.Receive(System.TimeSpan)">
      <summary>Gibt die empfangene Nachricht zurück, wenn eine verfügbar ist.Ist keine Nachricht verfügbar, erfolgt eine Blockade für die Dauer eines festgelegten Zeitintervalls.</summary>
      <returns>Der empfangene <see cref="T:System.ServiceModel.Channels.Message" />. </returns>
      <param name="timeout">Der <see cref="T:System.Timespan" />-Wert, der angibt, wie lange der Empfangsvorgang vor Timeout und Ausgabe von <see cref="T:System.TimeoutException" /> abgeschlossen sein muss.</param>
      <exception cref="T:System.TimeoutException">Der festgelegte <paramref name="timeout" /> wird überstiegen, bevor der Vorgang abgeschlossen ist.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der festgelegte Timeout ist kleiner als 0 (null).</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.TryReceive(System.TimeSpan,System.ServiceModel.Channels.Message@)">
      <summary>Versucht, eine Nachricht innerhalb eines angegebenen Zeitintervalls zu empfangen. </summary>
      <returns>true, wenn eine Nachricht empfangen wird, bevor der <paramref name="timeout" /> überschritten wurde, andernfalls false.</returns>
      <param name="timeout">Der <see cref="T:System.IAsyncResult" />, der durch einen Aufruf einer der <see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" />-Methoden zurückgegeben wurde.</param>
      <param name="message">Der empfangene <see cref="T:System.ServiceModel.Channels.Message" />. </param>
      <exception cref="T:System.TimeoutException">Der festgelegte <paramref name="timeout" /> wird überstiegen, bevor der Vorgang abgeschlossen ist.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der festgelegte Timeout ist kleiner als 0 (null).</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.WaitForMessage(System.TimeSpan)">
      <summary>Gibt einen Wert zurück, der angibt, ob eine Nachricht innerhalb eines angegebenen Zeitintervalls angekommen ist.</summary>
      <returns>true, wenn eine Nachricht angekommen ist, bevor der <paramref name="timeout" /> überschritten wurde, andernfalls false.</returns>
      <param name="timeout">Der <see cref="T:System.Timespan" />-Wert, der das maximale Zeitintervall für das Warten auf den Nachrichteneingang vor dem Timeout angibt.</param>
      <exception cref="T:System.TimeoutException">Der festgelegte <paramref name="timeout" /> wird überstiegen, bevor der Vorgang abgeschlossen ist.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der festgelegte Timeout ist kleiner als 0 (null).</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.IInputSession">
      <summary>Definiert die Schnittstelle für die Sitzung, die auf der Empfangsseite einer unidirektionalen Kommunikation zwischen Messagingendpunkten implementiert ist. </summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IInputSessionChannel">
      <summary>Definiert die Schnittstelle, die einem Eingabekanal eine Sitzung zuordnet.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IMessageProperty">
      <summary>Definiert eine Schnittstelle, die Sie implementieren können, um für eine Nachricht einen Eigenschaftensatz zu beschreiben.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IMessageProperty.CreateCopy">
      <summary>Erstellt eine Kopie der aktuellen Instanz.</summary>
      <returns>Ein <see cref="T:System.ServiceModel.Channels.IMessageProperty" />-Objekt, das eine Kopie der aktuellen Instanz ist.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.IOutputChannel">
      <summary>Definiert die Schnittstelle, die ein Kanal implementieren muss, um eine Nachricht zu senden. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>Startet einen asynchronen Vorgang, um eine Nachricht zum Ziel des Ausgabekanals zu übertragen. </summary>
      <returns>Eine <see cref="T:System.IAsyncResult" />, die auf die asynchrone Nachrichtenübertragung verweist. </returns>
      <param name="message">Die <see cref="T:System.ServiceModel.Channels.Message" />, die auf dem Ausgabekanal gesendet wird. </param>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat. </param>
      <param name="state">Ein durch die Anwendung festgelegtes Objekt, das dem asynchronen Sendevorgang zugeordnete Statusinformationen enthält.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Startet einen asynchronen Vorgang, um eine Nachricht zum Ziel des Ausgabekanals innerhalb eines festgelegten Zeitintervalls zu übertragen.</summary>
      <returns>Der <see cref="T:System.IAsyncResult" />-Wert, der auf den asynchronen Sendevorgang verweist.</returns>
      <param name="message">Die <see cref="T:System.ServiceModel.Channels.Message" />, die auf dem Ausgabekanal gesendet wird.</param>
      <param name="timeout">Der <see cref="T:System.Timespan" />-Wert, der angibt, welcher Zeitraum für den Sendevorgang bleibt, bevor ein Timeout eintritt.</param>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat, der die Benachrichtigung über den Abschluss des asynchronen Sendevorgangs erhält.</param>
      <param name="state">Ein durch die Anwendung festgelegtes Objekt, das dem asynchronen Sendevorgang zugeordnete Statusinformationen enthält.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IOutputChannel.EndSend(System.IAsyncResult)">
      <summary>Schließt einen asynchronen Vorgang ab, um eine Nachricht zum Ziel des Ausgabekanals zu übertragen. </summary>
      <param name="result">Das <see cref="T:System.IAsyncResult" />, das durch einen Aufruf der <see cref="Overload:System.ServiceModel.Channels.IOutputChannel.BeginSend" />-Methode zurückgegeben wurde. </param>
    </member>
    <member name="P:System.ServiceModel.Channels.IOutputChannel.RemoteAddress">
      <summary>Ruft das Ziel des Diensts ab, zu dem Nachrichten auf dem Ausgabekanal gesendet werden. </summary>
      <returns>Die <see cref="T:System.ServiceModel.EndpointAddress" /> des Diensts, zu dem der Ausgabekanal Nachrichten sendet. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message)">
      <summary>Überträgt eine Nachricht an das Ziel des Ausgabekanals. </summary>
      <param name="message">Die <see cref="T:System.ServiceModel.Channels.Message" />, die auf dem Ausgabekanal gesendet wird.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <summary>Sendet eine Nachricht auf dem aktuellen Ausgabekanal innerhalb eines angegebenen Zeitintervalls.</summary>
      <param name="message">Die <see cref="T:System.ServiceModel.Channels.Message" />, die auf dem Ausgabekanal gesendet wird.</param>
      <param name="timeout">Der <see cref="T:System.Timespan" />-Wert, der angibt, welcher Zeitraum für den Sendevorgang bleibt, bevor ein Timeout eintritt.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.IOutputChannel.Via">
      <summary>Ruft den URI ab, der die Transportadresse enthält, an die Nachrichten auf dem Ausgabekanal gesendet werden.</summary>
      <returns>Der <see cref="T:System.Uri" />, der die Transportadresse enthält, an die Nachrichten auf dem Ausgabekanal gesendet werden.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.IOutputSession">
      <summary>Definiert die Schnittstelle für die Sitzung, die auf der sendenden Seite einer unidirektionalen Kommunikation zwischen Messagingendpunkten implementiert ist. </summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IOutputSessionChannel">
      <summary>Definiert die Schnittstelle, die einem Ausgabekanal eine Sitzung zuordnet. </summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IRequestChannel">
      <summary>Definiert den Vertrag, den ein Kanal implementieren muss, um auf der Anforderungsseite einer Anforderung-Antwort-Kommunikation zwischen Messagingendpunkten zu stehen. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>Startet einen asynchronen Vorgang, um eine Anforderungsnachricht zur Antwortseite eines Anforderung-Antwort-Nachrichtenaustauschs zu übertragen. </summary>
      <returns>Eine <see cref="T:System.IAsyncResult" />, die auf die asynchrone Nachrichtenübertragung verweist. </returns>
      <param name="message">Die zu übertragende Anforderungsnachricht (<see cref="T:System.ServiceModel.Channels.Message" />).</param>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat, der die Benachrichtigung über den Abschluss des asynchronen Vorgangs zur Übertragung einer Anforderungsnachricht empfängt.</param>
      <param name="state">Ein von der Anwendung spezifiziertes Objekt, das Zustandsinformationen enthält, die dem asynchronen Vorgang zur Übertragung einer Anforderungsnachricht zugeordnet sind.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Startet einen asynchronen Vorgang, eine Anforderungsnachricht zur Antwortseite eines Anforderung-Antwort-Nachrichtenaustauschs innerhalb eines festgelegten Zeitintervalls zu senden.</summary>
      <returns>Eine <see cref="T:System.IAsyncResult" />, die auf die asynchrone Nachrichtenübertragung verweist. </returns>
      <param name="message">Die zu übertragende Anforderungsnachricht (<see cref="T:System.ServiceModel.Channels.Message" />).</param>
      <param name="timeout">Die <see cref="T:System.TimeSpan" />, die das Zeitintervall angibt, innerhalb dessen eine Antwort empfangen werden muss. (Die Standardeinstellungen finden Sie im Abschnitt "Hinweise".)</param>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat, der die Benachrichtigung über den Abschluss des asynchronen Vorgangs zur Übertragung einer Anforderungsnachricht empfängt.</param>
      <param name="state">Ein von der Anwendung spezifiziertes Objekt, das Zustandsinformationen enthält, die dem asynchronen Vorgang zur Übertragung einer Anforderungsnachricht zugeordnet sind.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IRequestChannel.EndRequest(System.IAsyncResult)">
      <summary>Schließt einen asynchronen Vorgang ab, um die nachrichtenbasierte Antwort auf eine übertragene Anforderung zurückzugeben. </summary>
      <returns>Die als Antwort auf die Anforderung empfangene <see cref="T:System.ServiceModel.Channels.Message" />. </returns>
      <param name="result">Der <see cref="T:System.IAsyncResult" />, der durch einen Aufruf der <see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" />-Methode zurückgegeben wurde. </param>
    </member>
    <member name="P:System.ServiceModel.Channels.IRequestChannel.RemoteAddress">
      <summary>Ruft die Remoteadresse ab, an die der Anforderungskanal Nachrichten sendet. </summary>
      <returns>Die <see cref="T:System.ServiceModel.EndpointAddress" />, zu der der Anforderungskanal Nachrichten sendet. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message)">
      <summary>Sendet eine nachrichtenbasierte Anforderung und gibt die korrelierte nachrichtenbasierte Antwort zurück. </summary>
      <returns>Die als Antwort auf die Anforderung empfangene <see cref="T:System.ServiceModel.Channels.Message" />. </returns>
      <param name="message">Die zu übertragende Anforderungsnachricht (<see cref="T:System.ServiceModel.Channels.Message" />).</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <summary>Sendet eine nachrichtenbasierte Anforderung und gibt die korrelierte nachrichtenbasierte Antwort innerhalb eines festgelegten Zeitintervalls zurück.</summary>
      <returns>Die als Antwort auf die Anforderung empfangene <see cref="T:System.ServiceModel.Channels.Message" />. </returns>
      <param name="message">Die zu übertragende Anforderungsnachricht (<see cref="T:System.ServiceModel.Channels.Message" />).</param>
      <param name="timeout">Die <see cref="T:System.TimeSpan" />, die das Zeitintervall angibt, innerhalb dessen eine Antwort empfangen werden muss.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.IRequestChannel.Via">
      <summary>Ruft die Transportadresse ab, zu der die Anforderung gesendet wird.</summary>
      <returns>Der <see cref="T:System.Uri" />, der die Transportadresse enthält, an die die Nachricht gesendet wird.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.IRequestSessionChannel">
      <summary>Definiert die Schnittstelle, um einer Sitzung einen Anforderungskanal zuzuordnen.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.ISession">
      <summary>Definiert die Schnittstelle zur Erstellung eines für Parteien freigegebenen Kontexts, die Nachrichten austauschen, indem sie eine ID für die Kommunikationssitzung bereitstellen. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.ISession.Id">
      <summary>Ruft die ID ab, die die Sitzung eindeutig identifiziert. </summary>
      <returns>Die ID, die die Sitzung eindeutig identifiziert. </returns>
    </member>
    <member name="T:System.ServiceModel.Channels.ISessionChannel`1">
      <summary>Definiert die Schnittstelle, die einem bestimmten Sitzungstyp einen Kanal zuordnet.</summary>
      <typeparam name="TSession">Der <see cref="T:System.ServiceModel.Channels.ISession" />-Typ, der dem Kanal zugeordnet ist.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.ISessionChannel`1.Session">
      <summary>Ruft den Sitzungstyp ab, der dem Kanal zugeordnet ist. </summary>
      <returns>Der <see cref="T:System.ServiceModel.Channels.ISession" />-Typ, der dem Kanal zugeordnet ist. </returns>
    </member>
    <member name="T:System.ServiceModel.Channels.Message">
      <summary>Stellt die Kommunikationseinheit zwischen Endpunkten in einer verteilten Umgebung dar. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.Message" />-Klasse. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.Close">
      <summary>Schließt <see cref="T:System.ServiceModel.Channels.Message" /> und gibt alle Ressourcen frei. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateBufferedCopy(System.Int32)">
      <summary>Speichert eine gesamte <see cref="T:System.ServiceModel.Channels.Message" /> in einem Speicherpuffer für den späteren Zugriff.</summary>
      <returns>Ein neu erstelltes <see cref="T:System.ServiceModel.Channels.MessageBuffer" />-Objekt.</returns>
      <param name="maxBufferSize">Die maximale Größe des zu erstellenden Puffers.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="maxBufferSize " /> ist kleiner als 0 (null).</exception>
      <exception cref="T:System.ObjectDisposedException">Die Nachricht ist geschlossen.</exception>
      <exception cref="T:System.InvalidOperationException">Die Nachricht wurde kopiert, gelesen oder geschrieben.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String)">
      <summary>Erstellt eine Nachricht, die eine Version und eine Aktion enthält.</summary>
      <returns>Ein <see cref="T:System.ServiceModel.Channels.Message" />-Objekt für die erstellte Nachricht. </returns>
      <param name="version">Ein <see cref="T:System.ServiceModel.Channels.MessageVersion" />-Objekt, das die für die Nachricht zu verwendende SOAP-Version angibt.</param>
      <param name="action">Beschreibt, wie die Nachricht verarbeitet werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" /> oder <paramref name="action" /> ist null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.Object)">
      <summary>Erstellt eine Nachricht mit der angegebenen Version, Aktion und angegebenem Text. </summary>
      <returns>Ein <see cref="T:System.ServiceModel.Channels.Message" />-Objekt für die erstellte Nachricht. </returns>
      <param name="version">Ein <see cref="T:System.ServiceModel.Channels.MessageVersion" />-Objekt, das die für die Nachricht zu verwendende SOAP-Version angibt. </param>
      <param name="action">Beschreibt, wie die Nachricht verarbeitet werden soll. </param>
      <param name="body">Der Nachrichtentext.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" />, <paramref name="action" /> oder <paramref name="body" /> ist null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Erstellt eine Nachricht mit der angegebenen Version, Aktion, dem Nachrichtentext und Serialisierungsprogramm.</summary>
      <returns>Ein <see cref="T:System.ServiceModel.Channels.Message" />-Objekt für die erstellte Nachricht. </returns>
      <param name="version">Ein <see cref="T:System.ServiceModel.Channels.MessageVersion" />-Objekt, das die für die Nachricht zu verwendende SOAP-Version angibt. </param>
      <param name="action">Beschreibt, wie die Nachricht verarbeitet werden soll. </param>
      <param name="body">Der Nachrichtentext. </param>
      <param name="serializer">Ein <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />-Objekt, das verwendet wird, um die Meldung zu serialisieren.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" />, <paramref name="fault" /> oder <paramref name="action" /> ist null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.ServiceModel.Channels.BodyWriter)">
      <summary>Erstellt eine Nachricht mit einem Text, der aus einem Array von Byte besteht.</summary>
      <returns>Ein <see cref="T:System.ServiceModel.Channels.Message" />-Objekt für die erstellte Nachricht. </returns>
      <param name="version">Ein <see cref="T:System.ServiceModel.Channels.MessageVersion" />-Objekt, das die für die Nachricht zu verwendende SOAP-Version angibt. </param>
      <param name="action">Beschreibt, wie die Nachricht verarbeitet werden soll. </param>
      <param name="body">
        <see cref="T:System.ServiceModel.Channels.BodyWriter" /> vom Typ Byte. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Version" />, <paramref name="action" /> oder <paramref name="body" /> ist null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.Xml.XmlDictionaryReader)">
      <summary>Erstellt eine Nachricht mit der angegebenen Version, Aktion und angegebenem Text.</summary>
      <returns>Ein <see cref="T:System.ServiceModel.Channels.Message" />-Objekt für die erstellte Nachricht. </returns>
      <param name="version">Ein <see cref="T:System.ServiceModel.Channels.MessageVersion" />-Objekt, das die für die Nachricht zu verwendende SOAP-Version angibt. </param>
      <param name="action">Beschreibt, wie die Nachricht verarbeitet werden soll. </param>
      <param name="body">Der Nachrichtentext.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" />, <paramref name="action" /> oder <paramref name="body" /> ist null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.Xml.XmlReader)">
      <summary>Erstellt eine Nachricht mit dem angegebenen Reader, der Aktion und Version.</summary>
      <returns>Ein <see cref="T:System.ServiceModel.Channels.Message" />-Objekt für die erstellte Nachricht. </returns>
      <param name="version">Ein <see cref="T:System.ServiceModel.Channels.MessageVersion" />-Objekt, das die für die Nachricht zu verwendende SOAP-Version angibt. </param>
      <param name="action">Beschreibt, wie die Nachricht verarbeitet werden soll. </param>
      <param name="body">Das <see cref="T:System.Xml.XmlReader" />-Objekt, das zum Lesen der SOAP-Nachricht verwendet werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" />, <paramref name="action" /> oder <paramref name="body" /> ist null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.Xml.XmlDictionaryReader,System.Int32,System.ServiceModel.Channels.MessageVersion)">
      <summary>Erstellt eine Nachricht mit dem angegebenen Reader, der Aktion und Version.</summary>
      <returns>Ein <see cref="T:System.ServiceModel.Channels.Message" />-Objekt für die erstellte Nachricht. </returns>
      <param name="envelopeReader">Das <see cref="T:System.Xml.XmlDictionaryReader" />-Objekt, das zum Lesen der SOAP-Nachricht verwendet werden soll.</param>
      <param name="maxSizeOfHeaders">Die maximale Größe eines Headers in Byte. </param>
      <param name="version">Ein gültiger <see cref="T:System.ServiceModel.Channels.MessageVersion" />-Wert, der die für die Nachricht zu verwendende SOAP-Version angibt. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="envelopeReader" /> oder <paramref name="version" /> ist null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.Xml.XmlReader,System.Int32,System.ServiceModel.Channels.MessageVersion)">
      <summary>Erstellt eine Nachricht mit dem angegebenen Reader, der Aktion und Version.</summary>
      <returns>Ein <see cref="T:System.ServiceModel.Channels.Message" />-Objekt für die erstellte Nachricht. </returns>
      <param name="envelopeReader">Das <see cref="T:System.Xml.XmlReader" />-Objekt, das zum Lesen der SOAP-Nachricht verwendet werden soll.</param>
      <param name="maxSizeOfHeaders">Die maximale Größe eines Headers in Byte. </param>
      <param name="version">Ein <see cref="T:System.ServiceModel.Channels.MessageVersion" />-Objekt, das die für die Nachricht zu verwendende SOAP-Version angibt. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="envelopeReader" /> oder <paramref name="version" /> ist null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.GetBody``1">
      <summary>Ruft den Text dieser <see cref="T:System.ServiceModel.Channels.Message" />-Instanz ab.</summary>
      <returns>Ein Objekt des Typs <paramref name="T" />, das den Text dieser Nachricht enthält.</returns>
      <typeparam name="T">Der Nachrichtentext.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.GetBody``1(System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Ruft den Text dieser <see cref="T:System.ServiceModel.Channels.Message" /> mit dem angegebenen Serialisierungsprogramm ab.</summary>
      <returns>Ein Objekt des Typs <paramref name="T" />, das den Text dieser Nachricht enthält.</returns>
      <param name="serializer">Ein <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />-Objekt, mit dem der Text der Nachricht gelesen werden soll.</param>
      <typeparam name="T">Der Nachrichtentext.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serializer" /> ist null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.GetBodyAttribute(System.String,System.String)">
      <summary>Ruft die Attribute des Nachrichtentexts ab.</summary>
      <returns>Die Attribute des Nachrichtentexts.</returns>
      <param name="localName">Der lokale Name des XML-Knotens.Der Name des Elements, das diesem Member entspricht.Diese Zeichenfolge muss einem gültigen XML-Elementnamen entsprechen.</param>
      <param name="ns">Der Namespace, zu dem dieses XML-Element gehört.Der Namespace-URI des Elements, das diesem Member entspricht.Das System überprüft keine URIs außer den Transportadressen.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localName" /> oder <paramref name="ns" /> ist null. </exception>
      <exception cref="T:System.ObjectDisposedException">Die Nachricht ist geschlossen.</exception>
      <exception cref="T:System.InvalidOperationException">Die Nachricht wurde kopiert, gelesen oder geschrieben.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.GetReaderAtBodyContents">
      <summary>Ruft den XML-Wörterbuchreader ab, der auf den Textinhalt dieser Nachricht zugreift.</summary>
      <returns>Ein <see cref="T:System.Xml.XmlDictionaryReader" />-Objekt, das auf den Textinhalt dieser Nachricht zugreifen kann.</returns>
      <exception cref="T:System.ObjectDisposedException">Die Nachricht ist geschlossen.</exception>
      <exception cref="T:System.InvalidOperationException">Die Nachricht ist leer oder wurde kopiert, gelesen oder geschrieben.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.Headers">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse die Header der Nachricht ab. </summary>
      <returns>Ein <see cref="T:System.ServiceModel.Channels.MessageHeaders" />-Objekt, das die Header der Nachricht darstellt. </returns>
      <exception cref="T:System.ObjectDisposedException">Die Nachricht wurde verworfen.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.IsDisposed">
      <summary>Gibt einen Wert zurück, der angibt, ob <see cref="T:System.ServiceModel.Channels.Message" /> verworfen wurde. </summary>
      <returns>true, wenn die Nachricht verworfen wurde, andernfalls false. </returns>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.IsEmpty">
      <summary>Gibt einen Wert zurück, der angibt, ob <see cref="T:System.ServiceModel.Channels.Message" /> leer ist. </summary>
      <returns>true, wenn die Nachricht leer ist, andernfalls false. </returns>
      <exception cref="T:System.ObjectDisposedException">Die Nachricht wurde verworfen.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.IsFault">
      <summary>Ruft einen Wert ab, der angibt, ob diese Nachricht SOAP-Fehler generiert.</summary>
      <returns>true, wenn diese Nachricht SOAP-Fehler generiert, andernfalls false.</returns>
      <exception cref="T:System.ObjectDisposedException">Die Nachricht wurde verworfen.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnBodyToString(System.Xml.XmlDictionaryWriter)">
      <summary>Wird aufgerufen, wenn der Nachrichtentext in eine Zeichenfolge konvertiert wird.</summary>
      <param name="writer">Ein <see cref="T:System.Xml.XmlDictionaryWriter" />, der zum Konvertieren des Nachrichtentexts in eine Zeichenfolge verwendet wird. </param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnClose">
      <summary>Wird aufgerufen, wenn die Nachricht geschlossen wird.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnCreateBufferedCopy(System.Int32)">
      <summary>Wird aufgerufen, wenn ein Nachrichtenpuffer erstellt wird, um diese Nachricht zu speichern.</summary>
      <returns>Ein <see cref="T:System.ServiceModel.Channels.MessageBuffer" />-Objekt für die neu erstellte Nachrichtenkopie.</returns>
      <param name="maxBufferSize">Die maximale Größe des zu erstellenden Puffers.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnGetBody``1(System.Xml.XmlDictionaryReader)">
      <summary>Wird aufgerufen, wenn der Nachrichtentext abgerufen wird.</summary>
      <returns>Ein <see cref="T:System.ServiceModel.Channels.MessageBuffer" />, der den Textkörper der Nachricht darstellt.</returns>
      <param name="reader">Ein <see cref="T:System.Xml.XmlDictionaryReader)" />-Objekt, mit dem der Text der Nachricht gelesen werden soll.</param>
      <typeparam name="T">Der Typ des Nachrichtenkörpers.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnGetBodyAttribute(System.String,System.String)">
      <summary>Wird aufgerufen, wenn die Attribute des Nachrichtentexts abgerufen werden.</summary>
      <returns>Die Attribute des Nachrichtentexts.</returns>
      <param name="localName">Der lokale Name des XML-Knotens.Der Name des Elements, das diesem Member entspricht.Diese Zeichenfolge muss einem gültigen XML-Elementnamen entsprechen.</param>
      <param name="ns">Der Namespace, zu dem dieses XML-Element gehört.Der Namespace-URI des Elements, das diesem Member entspricht.Das System überprüft keine URIs außer den Transportadressen.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnGetReaderAtBodyContents">
      <summary>Wird aufgerufen, wenn ein XML-Wörterbuchreader abgerufen wird, der auf den Textinhalt dieser Nachricht zugreift.</summary>
      <returns>Ein <see cref="T:System.Xml.XmlDictionaryReader" />-Objekt, das auf den Textinhalt dieser Nachricht zugreifen kann.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnWriteBodyContents(System.Xml.XmlDictionaryWriter)">
      <summary>Wird aufgerufen, wenn der Nachrichtentext in eine XML-Datei geschrieben wird.</summary>
      <param name="writer">Ein <see cref="T:System.Xml.XmlDictionaryWriter" />, der zum Schreiben dieses Nachrichtentexts in eine XML-Datei verwendet wird.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnWriteMessage(System.Xml.XmlDictionaryWriter)">
      <summary>Wird aufgerufen, wenn die gesamte Nachricht in eine XML-Datei geschrieben wird.</summary>
      <param name="writer">Ein <see cref="T:System.Xml.XmlDictionaryWriter" />, der zum Schreiben dieser Nachricht in eine XML-Datei verwendet wird.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnWriteStartBody(System.Xml.XmlDictionaryWriter)">
      <summary>Wird aufgerufen, wenn der Starttext in eine XML-Datei geschrieben wird.</summary>
      <param name="writer">Ein <see cref="T:System.Xml.XmlDictionaryWriter" />, der zum Schreiben des Starttexts in eine XML-Datei verwendet wird.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnWriteStartEnvelope(System.Xml.XmlDictionaryWriter)">
      <summary>Wird aufgerufen, wenn der Startumschlag in eine XML-Datei geschrieben wird.</summary>
      <param name="writer">Ein <see cref="T:System.Xml.XmlDictionaryWriter" />, der zum Schreiben des Startumschlags in eine XML-Datei verwendet wird.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnWriteStartHeaders(System.Xml.XmlDictionaryWriter)">
      <summary>Wird aufgerufen, wenn der Startheader in eine XML-Datei geschrieben wird.</summary>
      <param name="writer">Ein <see cref="T:System.Xml.XmlDictionaryWriter" />, der zum Schreiben des Startheaders in eine XML-Datei verwendet wird.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.Properties">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse einen Satz von Anmerkungen auf Vearbeitungsebene für die Nachricht ab. </summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageProperties" /> mit einem Satz von Anmerkungen auf Verarbeitungsebene für die Nachricht.</returns>
      <exception cref="T:System.ObjectDisposedException">Die Nachricht wurde verworfen.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.State">
      <summary>Ruft den aktuellen Status dieser <see cref="T:System.ServiceModel.Channels.Message" /> ab.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageState" /> mit dem aktuellen Status dieser <see cref="T:System.ServiceModel.Channels.Message" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.System#IDisposable#Dispose">
      <summary>Schließt alle Ressourcen, die von dieser Nachricht verwendet werden.Diese Methode kann nicht geerbt werden.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.ToString">
      <summary>Gibt eine Zeichenfolge zurück, die die aktuelle <see cref="T:System.ServiceModel.Channels.Message" />-Instanz darstellt. </summary>
      <returns>Die Zeichenfolgendarstellung der aktuellen <see cref="T:System.ServiceModel.Channels.Message" />-Instanz. </returns>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.Version">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse die SOAP-Version der Nachricht ab.</summary>
      <returns>Ein <see cref="T:System.ServiceModel.Channels.MessageVersion" />-Objekt, das die SOAP-Version darstellt. </returns>
      <exception cref="T:System.ObjectDisposedException">Die Nachricht wurde verworfen.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteBody(System.Xml.XmlDictionaryWriter)">
      <summary>Schreibt das Textelement mit dem angegebenen <see cref="T:System.Xml.XmlDictionaryWriter" />. </summary>
      <param name="writer">Ein <see cref="T:System.Xml.XmlDictionaryWriter" />-Objekt, mit dem das Textelement geschrieben werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> ist null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteBody(System.Xml.XmlWriter)">
      <summary>Serialisiert den Nachrichtentext mit dem angegebenen <see cref="T:System.Xml.XmlWriter" />. </summary>
      <param name="writer">Ein <see cref="T:System.Xml.XmlWriter" />-Objekt, mit dem der Text der Nachricht geschrieben werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> ist null. </exception>
      <exception cref="T:System.ObjectDisposedException">Die Nachricht ist verworfen. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteBodyContents(System.Xml.XmlDictionaryWriter)">
      <summary>Serialisiert den Textinhalt mit dem angegebenen <see cref="T:System.Xml.XmlDictionaryWriter" />. </summary>
      <param name="writer">Ein <see cref="T:System.Xml.XmlDictionaryWriter" />-Objekt, mit dem das Textelement geschrieben werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer " />ist null.</exception>
      <exception cref="T:System.ObjectDisposedException">Die Nachricht ist geschlossen.</exception>
      <exception cref="T:System.InvalidOperationException">Die Nachricht wurde kopiert, gelesen oder geschrieben.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteMessage(System.Xml.XmlDictionaryWriter)">
      <summary>Serialisiert die gesamte Nachricht mit dem angegebenen <see cref="T:System.Xml.XmlDictionaryWriter" />. </summary>
      <param name="writer">Ein <see cref="T:System.Xml.XmlDictionaryWriter" />-Objekt, das zum Schreiben der Nachricht verwendet werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> ist null. </exception>
      <exception cref="T:System.ObjectDisposedException">Die Nachricht ist geschlossen.</exception>
      <exception cref="T:System.InvalidOperationException">Die Nachricht wurde kopiert, gelesen oder geschrieben.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteMessage(System.Xml.XmlWriter)">
      <summary>Serialisiert die gesamte Nachricht mit dem angegebenen <see cref="T:System.Xml.XmlWriter" />. </summary>
      <param name="writer">Ein <see cref="T:System.Xml.XmlWriter" />-Objekt, das zum Schreiben der gesamten Nachricht verwendet werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> ist null. </exception>
      <exception cref="T:System.ObjectDisposedException">Die Nachricht ist geschlossen.</exception>
      <exception cref="T:System.InvalidOperationException">Die Nachricht wurde kopiert, gelesen oder geschrieben.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteStartBody(System.Xml.XmlDictionaryWriter)">
      <summary>Serialisiert den Anfangstext der Nachricht mit dem angegebenen <see cref="T:System.Xml.XmlDictionaryWriter" />. </summary>
      <param name="writer">Ein <see cref="T:System.Xml.XmlDictionaryWriter" />-Objekt, mit dem der Starttext geschrieben werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> ist null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteStartBody(System.Xml.XmlWriter)">
      <summary>Serialisiert den Anfangstext der Nachricht mit dem angegebenen <see cref="T:System.Xml.XmlDictionaryWriter" />. </summary>
      <param name="writer">Ein <see cref="T:System.Xml.XmlDictionaryWriter" />-Objekt, mit dem der Starttext der Nachricht geschrieben werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> ist null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteStartEnvelope(System.Xml.XmlDictionaryWriter)">
      <summary>Serialisiert den Startumschlag mit dem angegebenen <see cref="T:System.Xml.XmlDictionaryWriter" />. </summary>
      <param name="writer">Ein <see cref="T:System.Xml.XmlDictionaryWriter" />-Objekt, mit dem der Startumschlag der Nachricht geschrieben werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer " />ist null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageBuffer">
      <summary>Stellt einen Arbeitsspeicherpuffer dar, der eine gesamte Nachricht zur zukünftigen Verwendung speichert.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.MessageBuffer" />-Klasse.  </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageBuffer.BufferSize">
      <summary>Ruft die ungefähre Anzahl von Byte ab, die von diesem <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> verwendet werden. </summary>
      <returns>Die ungefähre Anzahl von Byte, die von diesem <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> verwendet werden. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.Close">
      <summary>Beendet die Arbeit mit dem Puffer.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.CreateMessage">
      <summary>Gibt eine Kopie der ursprünglichen Nachrichten zurück.</summary>
      <returns>Eine identische Kopie der ursprünglichen <see cref="T:System.ServiceModel.Channels.Message" />-Instanz, die Sie zuvor der <see cref="M:System.ServiceModel.Channels.Message.CreateBufferedCopy(System.Int32)" />-Methode einer <see cref="T:System.ServiceModel.Channels.Message" />-Instanz bereitgestellt haben. </returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageBuffer.MessageContentType">
      <summary>Ruft den Typ des in diesem Puffer gespeicherten Meldungsinhalts ab.</summary>
      <returns>Der Typ des in diesem Puffer gespeicherten Meldungsinhalts.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.System#IDisposable#Dispose">
      <summary>Gibt die von <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.Diese Methode kann nicht geerbt werden.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.WriteMessage(System.IO.Stream)">
      <summary>Schreibt den gesamten Inhalt dieses Puffers in den angegebenen E/A-Stream.</summary>
      <param name="stream">Ein E/A-Stream, in den der gesamte Inhalt dieses Puffers geschrieben wird.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageEncoder">
      <summary>Der Encoder ist die Komponente, die zum Schreiben von Nachrichten in einen Stream und Lesen von Nachrichten aus einem Stream dient.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.MessageEncoder" />-Klasse.  </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncoder.ContentType">
      <summary>Beim Überschreiben in einer abgeleiteten Klasse wird der vom Encoder verwendete MIME-Inhaltstyp abgerufen.</summary>
      <returns>Der Inhaltstyp, der vom Nachrichtenencoder unterstützt wird.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.GetProperty``1">
      <summary>Gibt ggf. ein angefordertes typisiertes Objekt von der entsprechenden Ebene im Kanalstapel zurück.</summary>
      <returns>Das von <paramref name="T " />angeforderte typisierte Objekt oder null, falls das Objekt nicht vorhanden ist.</returns>
      <typeparam name="T">Das typisierte Objekt, das von der Methode abgefragt wird.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.IsContentTypeSupported(System.String)">
      <summary>Gibt einen Wert zurück, der anzeigt, ob ein angegebener Content-Type-Wert auf Nachrichtenebene vom Nachrichtenencoder unterstützt wird.</summary>
      <returns>true, wenn der angegebene Content-Type auf Nachrichtenebene unterstützt wird, andernfalls false.</returns>
      <param name="contentType">Der Content-Type auf Nachrichtenebene, der getestet wird.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncoder.MediaType">
      <summary>Beim Überschreiben in einer abgeleiteten Klasse wird der vom Encoder verwendete Medientypwert abgerufen.</summary>
      <returns>Der Medientyp, der vom Nachrichtenencoder unterstützt wird.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncoder.MessageVersion">
      <summary>Beim Überschreiben in einer abgeleiteten Klasse wird die vom Encoder verwendete Nachrichtenversion abgerufen.</summary>
      <returns>Die vom Encoder verwendete <see cref="T:System.ServiceModel.Channels.MessageVersion" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.ArraySegment{System.Byte},System.ServiceModel.Channels.BufferManager)">
      <summary>Liest beim Überschreiben in einer abgeleiteten Klasse eine Nachricht aus dem angegebenen Puffer.</summary>
      <returns>Die <see cref="T:System.ServiceModel.Channels.Message" />, die vom angegebenen Puffer gelesen wird.</returns>
      <param name="buffer">Ein <see cref="T:System.ArraySegment`1" /> vom Typ <see cref="T:System.Byte" />, das den Puffer bereitstellt, aus dem die Nachricht deserialisiert wird.</param>
      <param name="bufferManager">Der <see cref="T:System.ServiceModel.Channels.BufferManager" />, der den Puffer verwaltet, aus dem die Nachricht deserialisiert wird.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.ArraySegment{System.Byte},System.ServiceModel.Channels.BufferManager,System.String)">
      <summary>Liest beim Überschreiben in einer abgeleiteten Klasse eine Nachricht aus dem angegebenen Stream.</summary>
      <returns>Die <see cref="T:System.ServiceModel.Channels.Message" />, die vom angegebenen Stream gelesen wird.</returns>
      <param name="buffer">Ein <see cref="T:System.ArraySegment`1" /> vom Typ <see cref="T:System.Byte" />, das den Puffer bereitstellt, aus dem die Nachricht deserialisiert wird.</param>
      <param name="bufferManager">Der <see cref="T:System.ServiceModel.Channels.BufferManager" />, der den Puffer verwaltet, aus dem die Nachricht deserialisiert wird.</param>
      <param name="contentType">Der Multipurpose Internet Mail Extensions (MIME)-Content-Type auf Nachrichtenebene.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.IO.Stream,System.Int32)">
      <summary>Liest beim Überschreiben in einer abgeleiteten Klasse eine Nachricht aus dem angegebenen Stream.</summary>
      <returns>Die <see cref="T:System.ServiceModel.Channels.Message" />, die vom angegebenen Stream gelesen wird.</returns>
      <param name="stream">Das <see cref="T:System.IO.Stream" />-Objekt, aus dem die Nachricht gelesen wird.</param>
      <param name="maxSizeOfHeaders">Die maximal zulässige Headergröße, die aus der Nachricht gelesen werden kann.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.IO.Stream,System.Int32,System.String)">
      <summary>Liest beim Überschreiben in einer abgeleiteten Klasse eine Nachricht aus dem angegebenen Stream.</summary>
      <returns>Die <see cref="T:System.ServiceModel.Channels.Message" />, die vom angegebenen Stream gelesen wird.</returns>
      <param name="stream">Das <see cref="T:System.IO.Stream" />-Objekt, aus dem die Nachricht gelesen wird.</param>
      <param name="maxSizeOfHeaders">Die maximal zulässige Headergröße, die aus der Nachricht gelesen werden kann.</param>
      <param name="contentType">Der Multipurpose Internet Mail Extensions (MIME)-Content-Type auf Nachrichtenebene.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ToString">
      <summary>Der Inhaltstyp, der vom Nachrichtenencoder verwendet wird, wird zurückgegeben.</summary>
      <returns>Der Inhaltstyp, der vom Nachrichtenencoder verwendet wird.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.Int32,System.ServiceModel.Channels.BufferManager)">
      <summary>Schreibt eine Nachricht, die kleiner ist als die angegebene Größe, in einen Bytearraypuffer.</summary>
      <returns>Ein <see cref="T:System.ArraySegment`1" /> vom Typ byte, das den Puffer bereitstellt, in dem die Nachricht serialisiert wird.</returns>
      <param name="message">Die in den Nachrichtenpuffer zu schreibende <see cref="T:System.ServiceModel.Channels.Message" />.</param>
      <param name="maxMessageSize">Die maximal zulässige Nachrichtengröße, die geschrieben werden kann.</param>
      <param name="bufferManager">Der <see cref="T:System.ServiceModel.Channels.BufferManager" />, der den Puffer verwaltet, in den die Nachricht geschrieben wird.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.Int32,System.ServiceModel.Channels.BufferManager,System.Int32)">
      <summary>Schreibt beim Überschreiben in einer abgeleiteten Klasse eine Nachricht, die kleiner ist als die angegebene Größe, im angegebenen Offset in einen Bytearraypuffer.</summary>
      <returns>Ein <see cref="T:System.ArraySegment`1" /> vom Typ byte, das den Puffer bereitstellt, in dem die Nachricht serialisiert wird.</returns>
      <param name="message">Die in den Nachrichtenpuffer zu schreibende <see cref="T:System.ServiceModel.Channels.Message" />.</param>
      <param name="maxMessageSize">Die maximal zulässige Nachrichtengröße, die geschrieben werden kann.</param>
      <param name="bufferManager">Der <see cref="T:System.ServiceModel.Channels.BufferManager" />, der den Puffer verwaltet, in den die Nachricht geschrieben wird.</param>
      <param name="messageOffset">Offset des Segments, das am Start des Bytearrays beginnt, das den Puffer bereitstellt.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.IO.Stream)">
      <summary>Schreibt beim Überschreiben in einer abgeleiteten Klasse eine Nachricht in den angegebenen Stream.</summary>
      <param name="message">Die <see cref="T:System.ServiceModel.Channels.Message" />, die in den <paramref name="stream" /> geschrieben werden soll.</param>
      <param name="stream">Das <see cref="T:System.IO.Stream" />-Objekt, in das die <paramref name="message" /> geschrieben wird.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageEncoderFactory">
      <summary>Eine abstrakte Basisklasse, die die Factory zum Erzeugen von Nachrichtenencodern darstellt, die Nachrichten mit unterschiedlichen Codierungen aus einem Stream lesen und in einen Stream schreiben können.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoderFactory.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" />-Klasse. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoderFactory.CreateSessionEncoder">
      <summary>Gibt einen Nachrichtenencoder zurück, mit dem Nachrichten in sitzungsbasierten Austauschprozessen korreliert werden können.</summary>
      <returns>Der <see cref="T:System.ServiceModel.Channels.MessageEncoder" />, der in sitzungsbasierten Austauschprozessen von Nachrichten verwendet wird.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncoderFactory.Encoder">
      <summary>Beim Überschreiben in einer abgeleiteten Klasse wird der Nachrichtenencoder abgerufen, der von der Factory erzeugt wird.</summary>
      <returns>Der <see cref="T:System.ServiceModel.Channels.MessageEncoder" />, der von der Factory verwendet wird.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncoderFactory.MessageVersion">
      <summary>Beim Überschreiben in einer abgeleiteten Klasse wird die Nachrichtenversion abgerufen, mit der Nachrichten durch die von der Factory erzeugten Encoder codiert werden.</summary>
      <returns>Die <see cref="T:System.ServiceModel.Channels.MessageVersion" />, die von der Factory verwendet wird.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageEncodingBindingElement">
      <summary>Das Bindungselement, das die Nachrichtenversion angibt, die verwendet wird, um Nachrichten zu codieren.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncodingBindingElement.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.MessageEncodingBindingElement" />-Klasse.  </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncodingBindingElement.#ctor(System.ServiceModel.Channels.MessageEncodingBindingElement)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.MessageEncodingBindingElement" />-Klasse, die aus einem vorhandenen Element initialisiert wurde.</summary>
      <param name="elementToBeCloned">Das <see cref="T:System.ServiceModel.Channels.MessageEncodingBindingElement" />, das geklont werden soll.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncodingBindingElement.CreateMessageEncoderFactory">
      <summary>Beim Überschreiben in einer abgeleiteten Klasse wird eine Factory zum Erzeugen von Nachrichtenencodern erstellt.</summary>
      <returns>Die zum Erzeugen von Nachrichtenencodern verwendete <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Gibt ggf. das angeforderte typisierte Objekt von der entsprechenden Ebene im Kanalstapel zurück.</summary>
      <returns>Das von <paramref name="T" /> angeforderte typisierte Objekt, oder null, falls das Objekt nicht vorhanden ist.</returns>
      <param name="context">Der <see cref="T:System.ServiceModel.Channels.BindingContext" /> für das aktuelle Bindungselement.</param>
      <typeparam name="T">Das typisierte Objekt, das von der Methode abgefragt wird.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> ist null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncodingBindingElement.MessageVersion">
      <summary>Beim Überschreiben in einer abgeleiteten Klasse wird die Nachrichtenversion abgerufen, die durch die von der Factory erzeugten Nachrichtenencoder verarbeitet werden kann.</summary>
      <returns>Die von den von der Nachrichtenencoderfactory erzeugten Encodern verwendete <see cref="T:System.ServiceModel.Channels.MessageVersion" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageFault">
      <summary>Stellt eine speicherinterne Darstellung eines SOAP-Fehlers dar, die an <see cref="Overload:System.ServiceModel.Channels.Message.CreateMessage" /> weitergegeben werden kann, um eine Nachricht zu erstellen, die einen Fehler enthält. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.#ctor">
      <summary>Initialisiert beim Aufruf in einer abgeleiteten Klasse eine neue Instanz der <see cref="T:System.ServiceModel.Channels.MessageFault" />-Klasse.  </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.Actor">
      <summary>Ruft den Wert des Darstellers ab oder legt diesen fest.</summary>
      <returns>Der Wert des Darstellers.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.Code">
      <summary>Ruft den SOAP-Fehlercode ab. </summary>
      <returns>Ein <see cref="T:System.ServiceModel.FaultCode" /> mit dem SOAP-Fehlercode.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.CreateFault(System.ServiceModel.Channels.Message,System.Int32)">
      <summary>Gibt ein neues <see cref="T:System.ServiceModel.Channels.MessageFault" />-Objekt zurück, das die festgelegte <see cref="T:System.ServiceModel.Channels.Message" /> und die festgelegte maximale Puffergröße für den Nachrichtenpuffer verwendet.</summary>
      <returns>Ein <see cref="T:System.ServiceModel.Channels.MessageFault" />-Objekt mit Anfangswerten aus den übergebenen Parametern.</returns>
      <param name="message">Die festgelegte <see cref="T:System.ServiceModel.Channels.Message" />, die verwendet wird, um das <see cref="T:System.ServiceModel.Channels.MessageFault" />-Objekt zu erstellen.</param>
      <param name="maxBufferSize">Die festgelegte maximale Puffergröße des Nachrichtenpuffers.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.GetDetail``1">
      <summary>Gibt das Detailobjekt des Nachrichtenfehlers zurück.</summary>
      <returns>Das Detailobjekt des Nachrichtenfehlers.</returns>
      <typeparam name="T">Der Typ des Detailobjekts.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.GetDetail``1(System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Gibt das Detailobjekt zurück, das den festgelegten <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> verwendet.</summary>
      <returns>Das im <see cref="T:System.ServiceModel.Channels.MessageFault" /> enthaltene Detailobjekt.</returns>
      <param name="serializer">Der <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />, der für die Deserialisierung des Detailobjekts verwendet wird. </param>
      <typeparam name="T">Der Typ des Detailobjekts.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.GetReaderAtDetailContents">
      <summary>Gibt ein <see cref="T:System.Xml.XmlDictionaryReader" />-Objekt zurück, das sich auf dem Detailobjekt des <see cref="T:System.ServiceModel.Channels.MessageFault" /> befindet.</summary>
      <returns>Ein <see cref="T:System.Xml.XmlDictionaryReader" />-Objekt, das sich auf dem Detailobjekt des <see cref="T:System.ServiceModel.Channels.MessageFault" /> befindet.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.HasDetail">
      <summary>Ruft einen Wert ab, der angibt, ob <see cref="T:System.ServiceModel.Channels.MessageFault" /> über ein Detailobjekt verfügt.</summary>
      <returns>true, wenn <see cref="T:System.ServiceModel.Channels.MessageFault" /> über ein Detailobjekt verfügt, andernfalls false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.Node">
      <summary>Ruft den SOAP-Knoten ab, der Informationen darüber enthält, welcher SOAP-Knoten auf einem Nachrichtenpfad den Fehler enthält.</summary>
      <returns>Der SOAP-Knoten, der Informationen darüber enthält, welcher SOAP-Knoten auf einem Nachrichtenpfad den Fehler enthält.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.OnGetReaderAtDetailContents">
      <summary>Gibt bei Aufruf in einer abgeleiteten Klasse ein <see cref="T:System.Xml.XmlDictionaryReader" />-Objekt zurück, das sich auf dem Detailobjekt des <see cref="T:System.ServiceModel.Channels.MessageFault" /> befindet.</summary>
      <returns>Ein <see cref="T:System.Xml.XmlDictionaryReader" />-Objekt, das sich auf dem Detailobjekt des <see cref="T:System.ServiceModel.Channels.MessageFault" /> befindet.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.OnWriteDetail(System.Xml.XmlDictionaryWriter,System.ServiceModel.EnvelopeVersion)">
      <summary>Wird vor dem Schreiben der Detailinhalte aufgerufen.</summary>
      <param name="writer">Der <see cref="T:System.Xml.XmlDictionaryWriter" />, der verwendet wird, um das Detailelement zu schreiben.</param>
      <param name="version">Die Version des zu schreibenden SOAP-Umschlags.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.OnWriteDetailContents(System.Xml.XmlDictionaryWriter)">
      <summary>Schreibt bei Überschreibung in einer nicht abstrakten abgeleiteten Klasse die Inhalte des Detailelements. </summary>
      <param name="writer">Der <see cref="T:System.Xml.XmlDictionaryWriter" />, der verwendet wird, um das Detailelement zu schreiben.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.OnWriteStartDetail(System.Xml.XmlDictionaryWriter,System.ServiceModel.EnvelopeVersion)">
      <summary>Schreibt das Startelement mithilfe des festgelegten <see cref="T:System.Xml.XmlDictionaryWriter" /> und der SOAP-Umschlagsversion.</summary>
      <param name="writer">Der <see cref="T:System.Xml.XmlDictionaryWriter" />, der verwendet wird, um das Detailelement zu schreiben.</param>
      <param name="version">Die Version des zu schreibenden SOAP-Umschlags.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.Reason">
      <summary>Ruft eine Textbeschreibung eines SOAP-Fehlers ab. </summary>
      <returns>Ein <see cref="T:System.ServiceModel.FaultReason" />, der eine Textbeschreibung eines SOAP-Fehlers enthält.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageHeader">
      <summary>Stellt den Inhalt eines SOAP-Headers dar.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.MessageHeader" />-Klasse.  </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeader.Actor">
      <summary>Ruft den Empfänger des Nachrichtenheaders ab oder legt diesen fest.</summary>
      <returns>Der Empfänger des Nachrichtenheaders.Der Standardwert ist eine leere Zeichenfolge ("").</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object)">
      <summary>Erstellt einen neuen Nachrichtenheader mit den angegebenen Daten.</summary>
      <returns>Ein neues <see cref="T:System.ServiceModel.Channels.MessageHeader" />-Objekt mit den festgelegten Daten.</returns>
      <param name="name">Der lokale Name des Header-XML-Elements.</param>
      <param name="ns">Der Namespace-URI des Header-XML-Elements.</param>
      <param name="value">Der Inhalt des zu erstellenden Headers.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Boolean)">
      <summary>Erstellt einen neuen Nachrichtenheader mit den angegebenen Daten.</summary>
      <returns>Ein neues <see cref="T:System.ServiceModel.Channels.MessageHeader" />-Objekt mit den festgelegten Daten.</returns>
      <param name="name">Der lokale Name des Header-XML-Elements.</param>
      <param name="ns">Der Namespace-URI des Header-XML-Elements.</param>
      <param name="value">Der Inhalt des zu erstellenden Headers.</param>
      <param name="mustUnderstand">Ein Wert, der angibt, ob der Header verstanden werden muss.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Boolean,System.String)">
      <summary>Erstellt einen neuen Nachrichtenheader mit den angegebenen Daten.</summary>
      <returns>Ein neues <see cref="T:System.ServiceModel.Channels.MessageHeader" />-Objekt mit den festgelegten Daten.</returns>
      <param name="name">Der lokale Name des Header-XML-Elements.</param>
      <param name="ns">Der Namespace-URI des Header-XML-Elements.</param>
      <param name="value">Der Inhalt des zu erstellenden Headers.</param>
      <param name="mustUnderstand">Ein Wert, der angibt, ob der Header verstanden werden muss.</param>
      <param name="actor">Der Empfänger des Nachrichtenheaders.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Boolean,System.String,System.Boolean)">
      <summary>Erstellt einen neuen Nachrichtenheader mit den angegebenen Daten.</summary>
      <returns>Ein neues <see cref="T:System.ServiceModel.Channels.MessageHeader" />-Objekt mit den festgelegten Daten.</returns>
      <param name="name">Der lokale Name des Header-XML-Elements.</param>
      <param name="ns">Der Namespace-URI des Header-XML-Elements.</param>
      <param name="value">Der Inhalt des zu erstellenden Headers.</param>
      <param name="mustUnderstand">Ein Wert, der angibt, ob der Header verstanden werden muss.</param>
      <param name="actor">Der Empfänger des Nachrichtenheaders.</param>
      <param name="relay">Ein Wert, der angibt, ob der Header weitergeleitet werden soll.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Erstellt einen Header aus einem Objekt, das mit dem XmlFormatter serialisiert werden soll. </summary>
      <returns>Ein neues <see cref="T:System.ServiceModel.Channels.MessageHeader" />-Objekt mit den festgelegten Daten.</returns>
      <param name="name">Der lokale Name des Header-XML-Elements.</param>
      <param name="ns">Der Namespace-URI des Header-XML-Elements.</param>
      <param name="value">Der Inhalt des zu erstellenden Headers.</param>
      <param name="serializer">Ein <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />, der verwendet wird, um den Header zu serialisieren.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer,System.Boolean)">
      <summary>Erstellt einen neuen Nachrichtenheader mit den angegebenen Daten.</summary>
      <returns>Ein neues <see cref="T:System.ServiceModel.Channels.MessageHeader" />-Objekt mit den festgelegten Daten.</returns>
      <param name="name">Der lokale Name des Header-XML-Elements.</param>
      <param name="ns">Der Namespace-URI des Header-XML-Elements.</param>
      <param name="value">Der Inhalt des zu erstellenden Headers.</param>
      <param name="serializer">Ein <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />, der verwendet wird, um den Header zu serialisieren.</param>
      <param name="mustUnderstand">Ein Wert, der angibt, ob der Header verstanden werden muss.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer,System.Boolean,System.String)">
      <summary>Erstellt einen neuen Nachrichtenheader mit den angegebenen Daten.</summary>
      <returns>Ein neues <see cref="T:System.ServiceModel.Channels.MessageHeader" />-Objekt mit den festgelegten Daten.</returns>
      <param name="name">Der lokale Name des Header-XML-Elements.</param>
      <param name="ns">Der Namespace-URI des Header-XML-Elements.</param>
      <param name="value">Der Inhalt des zu erstellenden Headers.</param>
      <param name="serializer">Ein <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />, der verwendet wird, um den Header zu serialisieren.</param>
      <param name="mustUnderstand">Ein Wert, der angibt, ob der Header verstanden werden muss.</param>
      <param name="actor">Der Empfänger des Nachrichtenheaders.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer,System.Boolean,System.String,System.Boolean)">
      <summary>Erstellt einen neuen Nachrichtenheader mit den angegebenen Daten.</summary>
      <returns>Ein neues <see cref="T:System.ServiceModel.Channels.MessageHeader" />-Objekt mit den festgelegten Daten.</returns>
      <param name="name">Der lokale Name des Header-XML-Elements.</param>
      <param name="ns">Der Namespace-URI des Header-XML-Elements.</param>
      <param name="value">Der Inhalt des zu erstellenden Headers.</param>
      <param name="serializer">Ein <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />, der verwendet wird, um den Header zu serialisieren.</param>
      <param name="mustUnderstand">Ein Wert, der angibt, ob der Header verstanden werden muss.</param>
      <param name="actor">Der Empfänger des Nachrichtenheaders.</param>
      <param name="relay">Ein Wert, der angibt, ob der Header weitergeleitet werden soll.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.IsMessageVersionSupported(System.ServiceModel.Channels.MessageVersion)">
      <summary>Überprüft, ob die angegebene Nachrichtenversion unterstützt wird.</summary>
      <returns>true, wenn die angegebene Nachrichtenversion unterstützt wird, andernfalls false.</returns>
      <param name="messageVersion">Das Objekt, das Informationen über die SOAP-Version enthält, die einer Nachricht und deren Austausch zugeordnet ist.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeader.IsReferenceParameter">
      <summary>Ruft einen Wert ab, der angibt, ob dieser Nachrichtenheader Verweisparameter eines Endpunktverweises enthält.</summary>
      <returns>true, wenn dieser Nachrichtenheader Verweisparameter eines Endpunktverweises enthält, andernfalls false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeader.MustUnderstand">
      <summary>Ruft einen Wert ab, der angibt, ob der Header der SOAP-1.1/1.2-Spezifikation entsprechen muss, oder legt diesen fest. </summary>
      <returns>true, wenn der Header verstanden werden muss, andernfalls false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.OnWriteHeaderContents(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Wird aufgerufen, wenn der Headerinhalt mit dem angegebenen XML-Writer serialisiert wird. </summary>
      <param name="writer">Ein <see cref="T:System.Xml.XmlDictionaryWriter" />, der verwendet wird, um die Headerinhalte zu serialisieren.</param>
      <param name="messageVersion">Das Objekt, das Informationen über die SOAP-Version enthält, die einer Nachricht und deren Austausch zugeordnet ist.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.OnWriteStartHeader(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Wird aufgerufen, wenn der Startheader mit dem angegebenen XML-Writer serialisiert wird. </summary>
      <param name="writer">Ein <see cref="T:System.Xml.XmlDictionaryWriter" />, der verwendet wird, um den Startheader zu serialisieren.</param>
      <param name="messageVersion">Das Objekt, das Informationen über die SOAP-Version enthält, die einer Nachricht und deren Austausch zugeordnet ist.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeader.Relay">
      <summary>Ruft einen Wert ab, der angibt, ob der Header weitergeleitet werden soll.</summary>
      <returns>true, wenn der Header weitergeleitet werden soll, andernfalls false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.ToString">
      <summary>Gibt eine Zeichenfolgendarstellung dieses Meldungsheaders zurück.</summary>
      <returns>Die Zeichenfolgendarstellung dieses Meldungsheaders.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.WriteHeader(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Serialisiert den Header mit dem angegebenen XML-Writer. </summary>
      <param name="writer">Ein <see cref="T:System.Xml.XmlDictionaryWriter" />, der verwendet wird, um den Header zu serialisieren.</param>
      <param name="messageVersion">Das Objekt, das Informationen über die SOAP-Version enthält, die einer Nachricht und deren Austausch zugeordnet ist.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.WriteHeader(System.Xml.XmlWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Serialisiert den Header mit dem angegebenen XML-Writer. </summary>
      <param name="writer">Ein <see cref="T:System.Xml.XmlWriter" />, der verwendet wird, um den Header zu serialisieren.</param>
      <param name="messageVersion">Das Objekt, das Informationen über die SOAP-Version enthält, die einer Nachricht und deren Austausch zugeordnet ist.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.WriteHeaderAttributes(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Serialisiert das Headerattribut mit dem angegebenen XML-Writer. </summary>
      <param name="writer">Ein <see cref="T:System.Xml.XmlDictionaryWriter" />, der verwendet wird, um die Header-Attribute zu serialisieren.</param>
      <param name="messageVersion">Das Objekt, das Informationen über die SOAP-Version enthält, die einer Nachricht und deren Austausch zugeordnet ist.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.WriteHeaderContents(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Serialisiert den Headerinhalt mit dem angegebenen XML-Writer. </summary>
      <param name="writer">Ein <see cref="T:System.Xml.XmlWriter" />, der verwendet wird, um die Headerinhalte zu serialisieren.</param>
      <param name="messageVersion">Das Objekt, das Informationen über die SOAP-Version enthält, die einer Nachricht und deren Austausch zugeordnet ist.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.WriteStartHeader(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Serialisiert den Startheader mit dem angegebenen XML-Writer. </summary>
      <param name="writer">Ein <see cref="T:System.Xml.XmlDictionaryWriter" />, der verwendet wird, um den Startheader zu serialisieren.</param>
      <param name="messageVersion">Das Objekt, das Informationen über die SOAP-Version enthält, die zu einer Nachricht und deren Austausch gehört.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageHeaderInfo">
      <summary>Stellt Systeminformationen hinsichtlich eines SOAP-Nachrichtenheaders dar.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaderInfo.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.MessageHeaderInfo" />-Klasse. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.Actor">
      <summary>Ruft den gewünschten Empfänger des Nachrichtenheaders ab oder legt diesen fest.</summary>
      <returns>Eine URI, die den gewünschten Empfänger des Nachrichtenheaders angibt.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.IsReferenceParameter">
      <summary>Ruft einen Wert ab, der angibt, ob der Nachrichtenheader Verweisparameter eines Endpunktverweises darstellt.</summary>
      <returns>true, wenn der Nachrichtenheader Verweisparameter eines Endpunktverweises darstellt, andernfalls false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.MustUnderstand">
      <summary>Ruft einen Wert ab, der angibt, ob die Verarbeitung des Nachrichtenheaders obligatorisch oder optional ist, oder legt diesen fest.</summary>
      <returns>true, wenn die Verarbeitung des Nachrichtenheaders obligatorisch ist, andernfalls false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.Name">
      <summary>Ruft den Namen des Nachrichtenheaders ab.</summary>
      <returns>Der Name des Nachrichtenheaders.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.Namespace">
      <summary>Ruft den Namespace des Nachrichtenheaders ab.</summary>
      <returns>Der Namespace des Nachrichtenheaders.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.Relay">
      <summary>Ruft einen Wert ab, der angibt, ob der Nachrichtenheader weitergeleitet werden kann, oder legt diesen fest.</summary>
      <returns>true, wenn der Nachrichtenheader weitergeleitet werden kann, andernfalls false.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageHeaders">
      <summary>Stellt eine Auflistung von Nachrichtenheadern für eine Nachricht dar.Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.#ctor(System.ServiceModel.Channels.MessageHeaders)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.MessageHeaders" />-Klasse mit der angegebenen Auflistung von Nachrichtenheadern.</summary>
      <param name="collection">Eine Auflistung von Nachrichtenheadern.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.#ctor(System.ServiceModel.Channels.MessageVersion)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.MessageHeaders" />-Klasse mit der angegebenen Nachrichtenversion.</summary>
      <param name="version">Die SOAP-Version der Nachricht.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.#ctor(System.ServiceModel.Channels.MessageVersion,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.MessageHeaders" />-Klasse mit der angegebenen Nachrichtenversion und -größe.</summary>
      <param name="version">Die SOAP-Version der Nachricht.</param>
      <param name="initialSize">Die Größe des Headers.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.Action">
      <summary>Ruft eine Beschreibung ab, oder legt fest, wie die Nachricht verarbeitet werden sollte.</summary>
      <returns>Beschreibt, wie die Nachricht verarbeitet werden soll.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.Add(System.ServiceModel.Channels.MessageHeader)">
      <summary>Fügt der Sammlung den angegebenen Nachrichtenheader hinzu.</summary>
      <param name="header">Ein Nachrichtenheader der der Sammlung hinzugefügt werden soll.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.Clear">
      <summary>Entfernt alle Header aus der Auflistung.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.CopyHeaderFrom(System.ServiceModel.Channels.Message,System.Int32)">
      <summary>Kopiert den Headerinhalt am angegebenen Index aus einer angegebenen Nachricht in diese Instanz.</summary>
      <param name="message">Eine Meldung, aus der der Header kopiert wird.</param>
      <param name="headerIndex">Der Speicherort des ursprünglichen Nachrichtenheaders, aus dem der Inhalt hinüberkopiert wird.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.CopyHeaderFrom(System.ServiceModel.Channels.MessageHeaders,System.Int32)">
      <summary>Kopiert den Headerinhalt am angegebenen Index aus einer angegebenen Nachrichtenheader-Auflistung in diese Instanz.</summary>
      <param name="collection">Ein <see cref="T:System.ServiceModel.Channels.MessageHeaders" />-Sammlungsobjekt.</param>
      <param name="headerIndex">Der Speicherort des ursprünglichen Nachrichtenheaders, aus dem der Inhalt hinüberkopiert wird.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.CopyHeadersFrom(System.ServiceModel.Channels.Message)">
      <summary>Kopiert den Inhalt aller Header aus der angegebenen Nachricht in diese Instanz.</summary>
      <param name="message">Eine Meldung, aus der die Header kopiert werden.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.CopyHeadersFrom(System.ServiceModel.Channels.MessageHeaders)">
      <summary>Kopiert den Inhalt aus der angegebenen Headerauflistung in diese Instanz.</summary>
      <param name="collection">Ein <see cref="T:System.ServiceModel.Channels.MessageHeaders" />-Sammlungsobjekt, aus dem die Header in diese Instanz kopiert werden.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.CopyTo(System.ServiceModel.Channels.MessageHeaderInfo[],System.Int32)">
      <summary>Kopiert die Header aus dieser Auflistung in ein Array, wobei an einem bestimmten Index des Arrays begonnen wird. </summary>
      <param name="array">Das eindimensionale Array, in das die Nachrichtenheader-Objekte aus dieser Instanz kopiert werden.Für das Array muss eine nullbasierte Indizierung verwendet werden.</param>
      <param name="index">Der nullbasierte Index in dem Array, in dem der Kopiervorgang beginnt. </param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.Count">
      <summary>Ruft die Anzahl der Nachrichtenheader in dieser Auflistung ab.</summary>
      <returns>Die Anzahl der Nachrichtenheader in dieser Auflistung.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.FaultTo">
      <summary>Ruft die Adresse des Knotens ab, an den Fehler gesendet werden sollten, oder legt sie fest.</summary>
      <returns>Eine <see cref="T:System.ServiceModel.EndpointAddress" /> des Knotens, an den die Fehler gesendet werden sollen.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.FindHeader(System.String,System.String)">
      <summary>Sucht einen Nachrichtenheader in dieser Auflistung anhand des angegebenen LocalName und des Namespace-URI der Headerelemente.</summary>
      <returns>Der Index des gefundenen Nachrichtenheaders in dieser Auflistung, oder -1, wenn der angegebene Header nicht vorhanden ist.</returns>
      <param name="name">Der LocalName des Header-XML-Elements.</param>
      <param name="ns">Der Namespace-URI des Header-XML-Elements.</param>
      <exception cref="T:System.ArgumentNullException">Argumente sind null.</exception>
      <exception cref="T:System.ServiceModel.MessageHeaderException">Der Header, der von den Argumenten angegeben wird, ist mehrmals vorhanden ist.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.FindHeader(System.String,System.String,System.String[])">
      <summary>Sucht einen Nachrichtenheader in dieser Auflistung anhand des angegebenen LocalName, des Namespace-URI und der Aktoren der Headerelemente.</summary>
      <returns>Der Index des gefundenen Nachrichtenheaders in dieser Auflistung, oder -1, wenn der angegebene Header nicht vorhanden ist.</returns>
      <param name="name">Der LocalName des Header-XML-Elements.</param>
      <param name="ns">Der Namespace-URI des Header-XML-Elements.</param>
      <param name="actors">Der Empfänger des Nachrichtenheaders.</param>
      <exception cref="T:System.ArgumentNullException">Argumente sind null.</exception>
      <exception cref="T:System.ServiceModel.MessageHeaderException">Der Header, der von den Argumenten angegeben wird, ist mehrmals vorhanden ist.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.From">
      <summary>Ruft die Adresse des Knotens ab, der die Nachricht gesendet hat, oder legt sie fest.</summary>
      <returns>Eine <see cref="T:System.ServiceModel.EndpointAddress" /> des Knotens, der die Nachricht gesendet hat.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetEnumerator">
      <summary>Gibt einen Enumerator zum Durchlaufen der Auflistung zurück.Diese Methode kann nicht geerbt werden.</summary>
      <returns>Ein <see cref="T:System.Collections.IEnumerator" />-Objekt, das zum Durchlaufen der Auflistung verwendet werden kann.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetHeader``1(System.Int32)">
      <summary>Empfängt einen Nachrichtenheader an einer bestimmten Position in dieser Auflistung.</summary>
      <returns>Ein Nachrichtenheader am angegebenen Index.</returns>
      <param name="index">Der nullbasierte Index des abzurufenden Headers.</param>
      <typeparam name="T">Der Typ des Nachrichtenheaders.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetHeader``1(System.Int32,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Empfängt einen Nachrichtenheader an einer bestimmten Position in dieser Auflistung.</summary>
      <returns>Ein Nachrichtenheader am angegebenen Index.</returns>
      <param name="index">Der nullbasierte Index des abzurufenden Headers.</param>
      <param name="serializer">Ein <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />, der verwendet wird, um den Header zu serialisieren.</param>
      <typeparam name="T">Der Typ des Nachrichtenheaders.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetHeader``1(System.String,System.String)">
      <summary>Sucht einen Nachrichtenheader in dieser Auflistung anhand des angegebenen LocalName und des Namespace-URI der Headerelemente.</summary>
      <returns>Ein Nachrichtenheader mit dem angegebenen Namen.</returns>
      <param name="name">Der LocalName des Header-XML-Elements.</param>
      <param name="ns">Der Namespace-URI des Header-XML-Elements.</param>
      <typeparam name="T">Der Typ des Nachrichtenheaders.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetHeader``1(System.String,System.String,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Empfängt einen Nachrichtenheader in dieser Auflistung anhand des angegebenen LocalName, des Namespace-URI und des Serialisierungsprogramms.</summary>
      <returns>Ein Nachrichtenheader mit dem angegebenen Namen.</returns>
      <param name="name">Der LocalName des Header-XML-Elements.</param>
      <param name="ns">Der Namespace-URI des Header-XML-Elements.</param>
      <param name="serializer">Ein <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />, der verwendet wird, um den Header zu serialisieren.</param>
      <typeparam name="T">Der Typ des Nachrichtenheaders.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetHeader``1(System.String,System.String,System.String[])">
      <summary>Empfängt einen Nachrichtenheader in dieser Auflistung anhand des angegebenen LocalName, des Namespace-URI und der Aktoren der Headerelemente.</summary>
      <returns>Ein Nachrichtenheader mit dem angegebenen Namen.</returns>
      <param name="name">Der LocalName des Header-XML-Elements.</param>
      <param name="ns">Der Namespace-URI des Header-XML-Elements.</param>
      <param name="actors">Der Empfänger des Nachrichtenheaders.</param>
      <typeparam name="T">Der Typ des Nachrichtenheaders.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetReaderAtHeader(System.Int32)">
      <summary>Ruft einen XML-Wörterbuchreader ab, der den Nachrichtenheader am angegebenen Speicherort der Auflistung verwendet.</summary>
      <returns>Ein <see cref="T:System.Xml.XmlDictionaryReader" />-Objekt, das den Nachrichtenheader am angegebenen Speicherort der Sammlung verwendet.</returns>
      <param name="headerIndex">Der nullbasierte Index des abzurufenden Headers.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.HaveMandatoryHeadersBeenUnderstood">
      <summary>Überprüft, ob alle mit MustUnderstand markierten Nachrichtenheader ordnungsgemäß interpretiert und verarbeitet wurden. </summary>
      <returns>true, wenn die von <paramref name="actors" /> angegebenen Empfänger alle mit MustUnderstand markierten Nachrichtenheader ordnungsgemäß interpretiert und verarbeitet haben, andernfalls false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.HaveMandatoryHeadersBeenUnderstood(System.String[])">
      <summary>Überprüft, ob die angegebenen Empfänger alle mit MustUnderstand markierten Nachrichtenheader ordnungsgemäß interpretiert und verarbeitet. </summary>
      <returns>true, wenn die von <paramref name="actors" /> angegebenen Empfänger alle mit MustUnderstand markierten Nachrichtenheader ordnungsgemäß interpretiert und verarbeitet haben, andernfalls false.</returns>
      <param name="actors">Der Empfänger des Nachrichtenheaders.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.Insert(System.Int32,System.ServiceModel.Channels.MessageHeader)">
      <summary>Fügt einen Nachrichtenheader beim angegebenen Index in die Auflistung ein.</summary>
      <param name="headerIndex">Der nullbasierte Index, an dem <paramref name="header" /> eingefügt werden soll.</param>
      <param name="header">Ein Nachrichtenheader, der eingefügt werden soll.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.Item(System.Int32)">
      <summary>Ruft einen Header am angegebenen Index ab.</summary>
      <returns>Der <see cref="T:System.ServiceModel.Channels.MessageHeaderInfo" /> in der Auflistung.Wenn <paramref name="index" /> größer oder gleich der Anzahl der Header in der Liste ist, wird null zurückgegeben.</returns>
      <param name="index">Der nullbasierte Index des Headers in der Liste.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.MessageId">
      <summary>Ruft die eindeutige ID der Nachricht ab, oder legt diese fest.</summary>
      <returns>Die eindeutige ID der Nachricht.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.MessageVersion">
      <summary>Ruft die SOAP-Version der Nachricht ab.</summary>
      <returns>Ein <see cref="T:System.ServiceModel.Channels.MessageVersion" />, das die SOAP-Version der Nachricht ist.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.RelatesTo">
      <summary>Ruft die IDs der Nachrichten ab, die zu dieser Nachricht gehören.</summary>
      <returns>Die IDs der Nachrichten, die zu dieser Nachricht gehören.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.RemoveAll(System.String,System.String)">
      <summary>Entfernt alle Header mit dem angegebenen Namen und Namespace aus der Auflistung.</summary>
      <param name="name">Der LocalName des Header-XML-Elements.</param>
      <param name="ns">Der Namespace-URI des Header-XML-Elements.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.RemoveAt(System.Int32)">
      <summary>Entfernt den Nachrichtenheader am angegebenen Index aus der Auflistung.</summary>
      <param name="headerIndex">Der nullbasierte Index des zu entfernenden Headers.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.ReplyTo">
      <summary>Ruft die Adresse des Knotens ab, an den für eine Anforderung eine Antwort gesendet werden soll, oder legt sie fest.</summary>
      <returns>Eine <see cref="T:System.ServiceModel.EndpointAddress" /> des Knotens, an den eine Antwort für eine Anforderung gesendet werden soll.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.SetAction(System.Xml.XmlDictionaryString)">
      <summary>Legt das Action-Element des Headers fest.</summary>
      <param name="action">Beschreibt, wie die Nachricht verarbeitet werden soll.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.System#Collections#IEnumerable#GetEnumerator">
      <summary>Gibt einen Enumerator zum Durchlaufen der Auflistung zurück.Diese Methode kann nicht geerbt werden.</summary>
      <returns>Ein <see cref="T:System.Collections.IEnumerator" />-Objekt, das zum Durchlaufen der Auflistung verwendet werden kann.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.To">
      <summary>Ruft den Zielendpunkt einer Nachricht ab, oder legt ihn fest.</summary>
      <returns>Ein URI, der den Zielendpunkt einer Nachricht enthält.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteHeader(System.Int32,System.Xml.XmlDictionaryWriter)">
      <summary>Serialisiert den Header am angegebenen Speicherort mit dem angegebenen XML-Writer. </summary>
      <param name="headerIndex">Der nullbasierte Index des zu serialisierenden Headers.</param>
      <param name="writer">Ein <see cref="T:System.Xml.XmlDictionaryWriter" />, der verwendet wird, um den Header zu serialisieren.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteHeader(System.Int32,System.Xml.XmlWriter)">
      <summary>Serialisiert den Header am angegebenen Speicherort mit dem angegebenen XML-Writer. </summary>
      <param name="headerIndex">Der nullbasierte Index des zu serialisierenden Headers.</param>
      <param name="writer">Ein <see cref="T:System.Xml.XmlWriter" />, der verwendet wird, um den Header zu serialisieren.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteHeaderContents(System.Int32,System.Xml.XmlDictionaryWriter)">
      <summary>Serialisiert den angegebenen Headerinhalt mit dem angegebenen XML-Writer. </summary>
      <param name="headerIndex">Der nullbasierte Index des zu serialisierenden Headers.</param>
      <param name="writer">Ein <see cref="T:System.Xml.XmlDictionaryWriter" />, der verwendet wird, um die Headerinhalte zu serialisieren.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteHeaderContents(System.Int32,System.Xml.XmlWriter)">
      <summary>Serialisiert den angegebenen Headerinhalt mit dem angegebenen XML-Writer. </summary>
      <param name="headerIndex">Der nullbasierte Index des zu serialisierenden Headers.</param>
      <param name="writer">Ein <see cref="T:System.Xml.XmlWriter" />, der verwendet wird, um die Headerinhalte zu serialisieren.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteStartHeader(System.Int32,System.Xml.XmlDictionaryWriter)">
      <summary>Serialisiert den Startheader mit dem angegebenen XML-Writer. </summary>
      <param name="headerIndex">Der nullbasierte Index des zu serialisierenden Headers.</param>
      <param name="writer">Ein <see cref="T:System.Xml.XmlDictionaryWriter" />, der verwendet wird, um den Startheader zu serialisieren.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteStartHeader(System.Int32,System.Xml.XmlWriter)">
      <summary>Serialisiert den Startheader mit dem angegebenen XML-Writer. </summary>
      <param name="headerIndex">Der nullbasierte Index des zu serialisierenden Headers.</param>
      <param name="writer">Ein <see cref="T:System.Xml.XmlWriter" />, der verwendet wird, um den Startheader zu serialisieren.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageProperties">
      <summary>Stellt eine Gruppe von Eigenschaften für eine Nachricht dar.Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.MessageProperties" />-Klasse. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.#ctor(System.ServiceModel.Channels.MessageProperties)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.MessageProperties" />-Klasse mit vorgegebenen Eigenschaften.</summary>
      <param name="properties">Ein <see cref="T:System.ServiceModel.Channels.MessageProperties" /></param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.Add(System.String,System.Object)">
      <summary>Fügt der <see cref="T:System.ServiceModel.Channels.MessageProperties" />-Auflistung ein Element mit dem angegebenen Namen und der Eigenschaft hinzu.</summary>
      <param name="name">Der Name des hinzuzufügenden Elements.</param>
      <param name="property">Der Wert des hinzuzufügenden Elements. </param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.AllowOutputBatching">
      <summary>Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob die Nachricht gespeichert werden soll, bevor sie zum Transport weitergeleitet wird. </summary>
      <returns>true, wenn die Stapelung von ausgehenden Nachrichten zulässig ist, andernfalls false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.Clear">
      <summary>Entfernt alle Elemente aus der <see cref="T:System.ServiceModel.Channels.MessageProperties" />-Auflistung.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.ContainsKey(System.String)">
      <summary>Bestimmt, ob <see cref="T:System.ServiceModel.Channels.MessageProperties" /> einen bestimmten Namen, einen Schlüssel oder einen Bezeichner enthält.</summary>
      <returns>true, wenn die <see cref="T:System.ServiceModel.Channels.MessageProperties" /> ein Element mit dem angegebenen <paramref name="name" /> enthält, andernfalls false.</returns>
      <param name="name">Der Name, Schlüssel oder Bezeichner, der in <see cref="T:System.ServiceModel.Channels.MessageProperties" /> gesucht werden soll.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.CopyProperties(System.ServiceModel.Channels.MessageProperties)">
      <summary>Kopiert den Inhalt der angegebenen <see cref="T:System.ServiceModel.Channels.MessageProperties" /> in diese Instanz.</summary>
      <param name="properties">Ein <see cref="T:System.ServiceModel.Channels.MessageProperties" />-Objekt, aus dem kopiert werden soll.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Count">
      <summary>Ruft die Gesamtanzahl der Eigenschaften in den <see cref="T:System.ServiceModel.Channels.MessageProperties" /> ab.</summary>
      <returns>Die Gesamtanzahl der Eigenschaften in den <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.Dispose">
      <summary>Gibt alle von der <see cref="T:System.ServiceModel.Channels.MessageProperties" />-Klasse verwendeten Ressourcen frei.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Encoder">
      <summary>Ruft den Encoder ab, der zum Schreiben von Nachrichten in einen Stream und Lesen von Nachrichten aus einem Stream dient.</summary>
      <returns>Ein <see cref="T:System.ServiceModel.Channels.MessageEncoder" />, der zum Schreiben von Nachrichten in einen Stream und Lesen von Nachrichten aus einem Stream dient.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.IsFixedSize">
      <summary>Ruft einen Wert ab, der angibt, ob der <see cref="T:System.ServiceModel.Channels.MessageProperties" /> eine feste Größe hat.</summary>
      <returns>true, wenn <see cref="T:System.ServiceModel.Channels.MessageProperties" /> eine feste Größe hat, andernfalls false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Item(System.String)">
      <summary>Ruft eine Eigenschaft mit dem angegebenen Namen, Bezeichner oder Schlüsselwert ab.</summary>
      <returns>Die Eigenschaft mit dem angegebenen <paramref name="name" /> oder null, wenn die Eigenschaft nicht vorhanden ist.</returns>
      <param name="name">Der Name der Eigenschaft, der aus der Auflistung abgerufen wird.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Keys">
      <summary>Ruft eine <see cref="T:System.Collections.ICollection" /> ab, die die Schlüssel im <see cref="T:System.ServiceModel.Channels.MessageProperties" /> enthält.</summary>
      <returns>Eine <see cref="T:System.Collections.ICollection" />, die die Schlüssel im <see cref="T:System.ServiceModel.Channels.MessageProperties" /> enthält.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.Remove(System.String)">
      <summary>Entfernt das Element mit dem angegebenen Namen aus den <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</summary>
      <returns>true, wenn das <see cref="T:System.ServiceModel.Channels.MessageProperties" />-Objekt ein Element mit dem angegebenen <paramref name="name" /> enthält und entfernt werden kann, andernfalls false.</returns>
      <param name="name">Der Name des zu entfernenden Elements.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#ICollection{T}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Fügt den <see cref="T:System.ServiceModel.Channels.MessageProperties" /> ein Element mit dem angegebenen Namen und der Eigenschaft hinzu.</summary>
      <param name="pair">Ein Attribut-Wert-Paar, das den Namen und den Wert des hinzuzufügenden Elements enthält.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#ICollection{T}#Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Bestimmt, ob die <see cref="T:System.ServiceModel.Channels.MessageProperties" /> einen bestimmten Namen enthalten.</summary>
      <returns>true, wenn die <see cref="T:System.ServiceModel.Channels.MessageProperties" /> ein Element mit dem im <paramref name="pair" /> angegebenen Namen und Wert enthalten, andernfalls false.</returns>
      <param name="pair">Ein Attribut-Wert-Paar, das den Namen und den Wert des in den <see cref="T:System.ServiceModel.Channels.MessageProperties" /> zu suchenden Elements enthält.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#ICollection{T}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary>Kopiert die Elemente der angegebenen <see cref="T:System.ServiceModel.Channels.MessageProperties" /> in ein Array, beginnend am angegebenen Index.</summary>
      <param name="array">Die <see cref="T:System.Array" />-Klasse, in die die Auflistung kopiert werden soll.</param>
      <param name="index">Der Index, ab dem begonnen wird.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>Ruft einen Wert ab, der angibt, ob dieser Satz Eigenschaften schreibgeschützt ist.</summary>
      <returns>true, wenn der Satz Eigenschaften schreibgeschützt ist, andernfalls false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#ICollection{T}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Entfernt das Element mit dem angegebenen Namen aus den <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</summary>
      <returns>true, wenn das <see cref="T:System.ServiceModel.Channels.MessageProperties" />-Objekt ein Element mit dem angegebenen Namen und dem Wert im <paramref name="pair" />-Parameter enthält und entfernt werden kann, andernfalls false.</returns>
      <param name="pair">Ein Attribut-Wert-Paar, das den Namen und den Wert des zu entfernenden Elements enthält.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>Gibt einen Enumerator zurück, der eine Auflistung durchlaufen kann.</summary>
      <returns>Ein <see cref="T:System.Collections.IEnumerator" />, mit dem eine Auflistung durchlaufen werden kann.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#IEnumerable#GetEnumerator">
      <summary>Gibt einen Enumerator zurück, der eine Auflistung durchlaufen kann.</summary>
      <returns>Ein <see cref="T:System.Collections.IEnumerator" />, mit dem eine Auflistung durchlaufen werden kann.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.TryGetValue(System.String,System.Object@)">
      <summary>Bestimmt, ob die <see cref="T:System.ServiceModel.Channels.MessageProperties" /> einen bestimmten Namen enthalten, und ruft den Wert ab. </summary>
      <returns>true, wenn die <see cref="T:System.ServiceModel.Channels.MessageProperties" /> ein Element mit dem angegebenen <paramref name="name" /> enthält, andernfalls false.</returns>
      <param name="name">Der Name des zu suchenden Elements.</param>
      <param name="value">Der Wert des gefundenen Elements. </param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Values">
      <summary>Ruft ein <see cref="T:System.Collections.ICollection" /> ab, das die Werte im <see cref="T:System.ServiceModel.Channels.MessageProperties" /> enthält.</summary>
      <returns>Eine <see cref="T:System.Collections.ICollection" />, die die Werte aus dem <see cref="T:System.ServiceModel.Channels.MessageProperties" /> enthält.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Via">
      <summary>Ruft die Transportadresse ab, die verwendet wird, um Nachrichten zu senden, oder legt diese fest.</summary>
      <returns>Der URI, der die Transportadresse enthält, die zum Senden der Nachricht verwendet wird.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageState">
      <summary>Gibt den Status einer Nachricht an. </summary>
    </member>
    <member name="F:System.ServiceModel.Channels.MessageState.Closed">
      <summary>Die Nachricht wurde geschlossen, und es kann nicht mehr darauf zugegriffen werden.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.MessageState.Copied">
      <summary>Die Nachricht wurde kopiert.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.MessageState.Created">
      <summary>Die Nachricht wurde erstellt. </summary>
    </member>
    <member name="F:System.ServiceModel.Channels.MessageState.Read">
      <summary>Die Nachricht wird gelesen.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.MessageState.Written">
      <summary>Die Nachricht wurde geschrieben.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageVersion">
      <summary>Gibt die SOAP-Version und die Version von WS-Adressierung an, die einer Nachricht und ihrem Austausch zugeordnet sind.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Addressing">
      <summary>Ruft die Version der WS-Adressierung ab, die der aktuellen Nachrichtenversion zugeordnet ist, oder legt diese fest.</summary>
      <returns>Die <see cref="T:System.ServiceModel.Channels.AddressingVersion" />, die der aktuellen Nachrichtenversion zugeordnet ist.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion)">
      <summary>Erstellt ein Nachrichtenversionsobjekt mit der WS-Adressierung, Version&amp;nbsp;1.0, und mit einer angegebenen SOAP-Version.</summary>
      <returns>Die <see cref="T:System.ServiceModel.Channels.MessageVersion" /> mit der angegebenen SOAP-Version und der WS-Adressierung, Version&amp;nbsp;1.0.</returns>
      <param name="envelopeVersion">Die <see cref="T:System.ServiceModel.EnvelopeVersion" />, die die zu verwendende SOAP-Version angibt.</param>
      <exception cref="T:System.ArgumentNullException">Die <paramref name="envelopeVersion" /> ist null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion,System.ServiceModel.Channels.AddressingVersion)">
      <summary>Erstellt ein Nachrichtenversionsobjekt mit der angegebenen SOAP-Version und der angegebenen Version der WS-Adressierung.</summary>
      <returns>Die <see cref="T:System.ServiceModel.Channels.MessageVersion" /> mit der angegebenen SOAP-Version und der angegebenen Version der WS-Adressierung.</returns>
      <param name="envelopeVersion">Die <see cref="T:System.ServiceModel.EnvelopeVersion" />, die die SOAP-Version angibt.</param>
      <param name="addressingVersion">Die <see cref="T:System.ServiceModel.Channels.AddressingVersion" />, die die Version der WS-Adressierung angibt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="envelopeVersion" /> oder <paramref name="addressingVersion" /> ist null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Default">
      <summary>Ruft die Standardnachrichtenversion ab, die von Windows Communication Foundation (WCF) verwendet wird.</summary>
      <returns>Die <see cref="T:System.ServiceModel.Channels.MessageVersion" />, die die WS-Adressierung, Version&amp;nbsp;1.0 und SOAP, Version &amp;nbsp;1.2, verwendet.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Envelope">
      <summary>Ruft die SOAP-Version ab, die mit der aktuellen Nachrichtenversion verknüpft ist.</summary>
      <returns>Die <see cref="T:System.ServiceModel.EnvelopeVersion" />, die der aktuellen Nachrichtenversion zugeordnet ist.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageVersion.Equals(System.Object)">
      <summary>Gibt einen Wert zurück, der angibt, ob die aktuelle Nachrichtenversion gleich einem angegebenen Objekt ist.</summary>
      <returns>true, wenn das angegebene Objekt und das aktuelle <see cref="T:System.ServiceModel.Channels.MessageVersion" />-Objekt gleich sind, andernfalls false.</returns>
      <param name="obj">Der <see cref="T:System.Object" /> für den Vergleich mit der aktuellen Nachrichtenversion.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageVersion.GetHashCode">
      <summary>Ruft einen Hashcode für die aktuelle Nachrichtenversion ab.</summary>
      <returns>Ein eindeutiger Hashcode für die aktuelle <see cref="T:System.ServiceModel.Channels.MessageVersion" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.None">
      <summary>Ruft die Nachrichtenversion ab, die kein SOAP oder keine WS-Adressierung verwendet.</summary>
      <returns>Die <see cref="T:System.ServiceModel.Channels.MessageVersion" />, die kein SOAP oder keine WS-Adressierung verwendet.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Soap11">
      <summary>Ruft die Nachrichtenversion mit SOAP&amp;nbsp;1.1 ab.</summary>
      <returns>Die <see cref="T:System.ServiceModel.Channels.MessageVersion" /> für SOAP&amp;nbsp;1.1, jedoch keine Version der WS-Adressierung.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Soap12WSAddressing10">
      <summary>Ruft die Nachrichtenversion mit der WS-Adressierung&amp;nbsp;1.0 und SOAP&amp;nbsp;&amp;nbsp;1.2 ab.</summary>
      <returns>Die <see cref="T:System.ServiceModel.Channels.MessageVersion" /> mit der WS-Adressierung, Version&amp;nbsp;1.0, und SOAP, Version&amp;nbsp;1.2.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageVersion.ToString">
      <summary>Gibt die Zeichenfolgendarstellung der aktuellen Version der Meldung zurück.</summary>
      <returns>Die Zeichenfolgendarstellung der aktuellen Version der Meldung.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.RequestContext">
      <summary>Stellt eine Antwort bereit, die mit einer eingehenden Anforderung korreliert.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.RequestContext" />-Klasse. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Abort">
      <summary>Bricht beim Überschreiben in einer abgeleiteten Klasse die Verarbeitung der Anforderung, die mit einem Kontext verknüpft ist, ab. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>Startet beim Überschreiben in einer abgeleiteten Klasse einen asynchronen Vorgang, um auf die Anforderung zu antworten, die mit dem aktuellen Kontext verknüpft ist.</summary>
      <returns>Das <see cref="T:System.IAsyncResult" />, das auf den asynchronen Antwortvorgang verweist.</returns>
      <param name="message">Die eingehende <see cref="T:System.ServiceModel.Channels.Message" />, die die Anforderung enthält.</param>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat, der die Benachrichtigung über den Abschluss des asynchronen Antwortvorgangs empfängt.</param>
      <param name="state">Ein von der Anwendung definiertes Objekt, das dem asynchronen Antwortvorgang zugeordnete Zustandsinformationen enthält.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Startet beim Überschreiben in einer abgeleiteten Klasse einen asynchronen Vorgang innerhalb eines bestimmten Zeitintervalls, um auf die Anforderung zu antworten, die mit dem aktuellen Kontext verknüpft ist.</summary>
      <returns>Das <see cref="T:System.IAsyncResult" />, das auf den asynchronen Antwortvorgang verweist.</returns>
      <param name="message">Die eingehende <see cref="T:System.ServiceModel.Channels.Message" />, die die Anforderung enthält.</param>
      <param name="timeout">Die <see cref="T:System.Timespan" />, die das Zeitintervall für das Warten auf die Antwort auf eine verfügbare Anforderung angibt.</param>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat, der die Benachrichtigung über den Abschluss des asynchronen Antwortvorgangs empfängt.</param>
      <param name="state">Ein von der Anwendung definiertes Objekt, das dem asynchronen Antwortvorgang zugeordnete Zustandsinformationen enthält.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Close">
      <summary>Beendet beim Überschreiben in einer abgeleiteten Klasse den Vorgang, der auf den mit dem aktuellen Kontext verknüpften Anforderungskontext antwortet.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Close(System.TimeSpan)">
      <summary>Beendet beim Überschreiben in einer abgeleiteten Klasse den Vorgang, der auf den mit dem aktuellen Kontext verknüpften Anforderungskontext antwortet, innerhalb eines bestimmten Zeitintervalls.</summary>
      <param name="timeout">Die <see cref="T:System.Timespan" />, die das Zeitintervall angibt, in dem der mit dem aktuellen Kontext verknüpfte Antwortvorgang beendet werden muss.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Dispose(System.Boolean)">
      <summary>Gibt die dem Kontext zugeordneten Ressourcen frei.</summary>
      <param name="disposing">true, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, false, um ausschließlich nicht verwaltete Ressourcen freizugeben. </param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.EndReply(System.IAsyncResult)">
      <summary>Schließt bei Überschreibung in einer abgeleiteten Klasse einen asynchronen Vorgang zum Antworten auf eine Anforderungsnachricht ab.</summary>
      <param name="result">Das <see cref="T:System.IAsyncResult" />, das von einem Aufruf der <see cref="Overload:System.ServiceModel.Channels.RequestContext.BeginReply" />-Methoden zurückgegeben wurde.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message)">
      <summary>Antwortet beim Überschreiben in einer abgeleiteten Klasse auf eine Anforderungsnachricht.</summary>
      <param name="message">Die eingehende <see cref="T:System.ServiceModel.Channels.Message" />, die die Anforderung enthält.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <summary>Antwortet bei Überschreibung in einer abgeleiteten Klasse innerhalb eines bestimmten Zeitintervalls auf eine Antwortnachricht.</summary>
      <param name="message">Die eingehende <see cref="T:System.ServiceModel.Channels.Message" />, die die Anforderung enthält.</param>
      <param name="timeout">Die <see cref="T:System.Timespan" />, die das Zeitintervall für das Warten auf die Antwort auf eine Anforderung angibt.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.RequestContext.RequestMessage">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse die Nachricht ab, die die Anforderung enthält.</summary>
      <returns>Die <see cref="T:System.ServiceModel.Channels.Message" />, die die Anforderung enthält.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.System#IDisposable#Dispose">
      <summary>Gibt sowohl verwaltete als auch nicht verwaltete Ressourcen, die mit dem Kontext verknüpft sind, frei.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement">
      <summary>Das Bindungselement, das die Zeichencodierung und Nachrichtenversion für textbasierte SOAP-Nachrichten angibt.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement" />-Klasse. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.#ctor(System.ServiceModel.Channels.MessageVersion,System.Text.Encoding)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement" />-Klasse mit einer angegebenen Nachrichtenversion und -codierung.</summary>
      <param name="messageVersion">Die <see cref="T:System.ServiceModel.Channels.MessageVersion" />, die für die Nachrichtenversion verwendet wird.</param>
      <param name="writeEncoding">Die <see cref="T:System.Text.Encoding" />, die zur Formatierung der Nachrichtenzeichen verwendet wird.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="messageVersion" /> oder <paramref name="writeEncoding" /> ist null.</exception>
      <exception cref="T:System.ArgumentException">Der <paramref name="writeEncoding" />-Wert ist ungültig.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Erstellt den Kanalfactorystapel auf dem Client, der einen angegebenen Kanaltyp für einen angegebenen Kontext erstellt.</summary>
      <returns>Ein <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" />-Element vom Typ <paramref name="TChannel" /> für den angegebenen Kontext.</returns>
      <param name="context">Das <see cref="T:System.ServiceModel.Channels.BindingContext" />-Element für den Kanal.</param>
      <typeparam name="TChannel">Der Kanaltyp, der von der Kanalfactory erzeugt wird.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.Clone">
      <summary>Erstellt ein neues, aus dem aktuellen Objekt initialisiertes <see cref="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement" />-Objekt.</summary>
      <returns>Ein <see cref="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement" />-Objekt mit Eigenschaftswerten, die denen des aktuellen Elements entsprechen.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.CreateMessageEncoderFactory">
      <summary>Erstellt eine Factory für Textnachrichtenencoder, die die Nachrichtenversion und Zeichencodierung verwenden, die vom aktuellen Codierungsbindungselement festgelegt wurden.</summary>
      <returns>Die <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" />, die diese Factory erstellt.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Gibt ggf. ein angefordertes typisiertes Objekt von der entsprechenden Ebene im Bindungselementstapel zurück.</summary>
      <returns>Das von <paramref name="T" /> angeforderte typisierte Objekt, oder null, falls das Objekt nicht vorhanden ist.</returns>
      <param name="context">Der <see cref="T:System.ServiceModel.Channels.BindingContext" /> für das Bindungselement.</param>
      <typeparam name="T">Das typisierte Objekt, das von der Methode abgefragt wird.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.TextMessageEncodingBindingElement.MessageVersion">
      <summary>Ruft die SOAP- und WS-Addressing-Versionen ab, oder legt sie fest, die zum Formatieren der Textnachricht verwendet werden.</summary>
      <returns>Die <see cref="T:System.ServiceModel.Channels.MessageVersion" />, die zum Formatieren von Nachrichten verwendet wird.Der Standardwert ist <see cref="P:System.ServiceModel.Channels.MessageVersion.Soap12WSAddressing10" />.</returns>
      <exception cref="T:System.ArgumentNullException">Der Wert ist null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.TextMessageEncodingBindingElement.ReaderQuotas">
      <summary>Ruft Beschränkungen der Komplexität von SOAP-Nachrichten ab oder legt Beschränkungen fest, die von Endpunkten verarbeitet werden können, die mit dieser Bindung konfiguriert werden.</summary>
      <returns>Das <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />, das die Komplexitätseinschränkungen für ausgetauschte SOAP-Nachrichten angibt.Die Standardwerte für diese Einschränkungen werden im folgenden Hinweisabschnitt angegeben.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.TextMessageEncodingBindingElement.WriteEncoding">
      <summary>Ruft die Codierung ab, oder legt sie fest, die zur Formatierung der Zeichen in der Textnachricht verwendet wird.</summary>
      <returns>Die <see cref="T:System.Text.Encoding" />, die zur Formatierung der Zeichen in der Textnachricht verwendet wird.Die Standardtextcodierung ist das UTF-8-Format.</returns>
      <exception cref="T:System.ArgumentNullException">Der Wert ist null.</exception>
      <exception cref="T:System.ArgumentException">Der <paramref name="writeEncoding" />-Wert ist ungültig.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.TransportBindingElement">
      <summary>Eine abstract-Basisklasse, die ein Transportbindungselement darstellt.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportBindingElement.#ctor">
      <summary>Erstellt eine neue Instanz dieser Klasse.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportBindingElement.#ctor(System.ServiceModel.Channels.TransportBindingElement)">
      <summary>Erstellt eine neue Instanz dieser Klasse aus einer vorhandenen Instanz.</summary>
      <param name="elementToBeCloned">Das <see cref="T:System.ServiceModel.Channels.TransportBindingElement" />, das geklont werden soll. </param>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Ruft eine Eigenschaft aus dem angegebenen <see cref="T:System.ServiceModel.Channels.BindingContext" /> ab.</summary>
      <returns>Die Eigenschaft für den angegebenen <see cref="T:System.ServiceModel.Channels.BindingContext" />.</returns>
      <param name="context">Ein <see cref="T:System.ServiceModel.Channels.BindingContext" /></param>
      <typeparam name="T">Die abzurufende Eigenschaft.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.TransportBindingElement.ManualAddressing">
      <summary>Ruft einen Wert ab, der angibt, ob eine manuelle Adressierung der Nachricht erforderlich ist, oder legt diesen fest.</summary>
      <returns>true, wenn eine manuelle Adressierung der Nachricht erforderlich ist, andernfalls  false.Die Standardeinstellung ist false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize">
      <summary>Ruft die maximal zulässige Meldungsgröße in Byte ab, die empfangen werden können, und legt diese fest.</summary>
      <returns>Die maximale zulässige Nachrichtengröße, die empfangen werden kann.Der Standardwert ist 65,536 Bytes.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.TransportBindingElement.Scheme">
      <summary>Ruft das URI-Schema für den Transport ab.</summary>
      <returns>Gibt das URI-Schema für den Transport in Abhängigkeit von der abgeleiteten Klasse zurück, die diese Methode implementiert.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.ClientCredentials">
      <summary>Ermöglicht es dem Benutzer, die Client- und Dienstanmeldeinformationen sowie die auf der Clientseite der Kommunikation zu verwendenden Authentifizierungseinstellungen für die Dienstanmeldeinformationen zu konfigurieren.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Description.ClientCredentials" />-Klasse. </summary>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.#ctor(System.ServiceModel.Description.ClientCredentials)">
      <summary>Dies ist ein Kopierkonstruktor. </summary>
      <param name="other">Ein <see cref="T:System.ServiceModel.Description.ClientCredentials" />Alle Eigenschaften der neu erstellten Instanz enthalten die Werte dieses Parameters.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <summary>Wendet das angegebene Clientverhalten auf den Endpunkt an.</summary>
      <param name="serviceEndpoint">Der Endpunkt, auf den das angegebene Clientverhalten angewendet wird.</param>
      <param name="behavior">Das Clientverhalten, das auf den angegebenen Endpunkt angewendet wird.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceEndpoint" /> oder <paramref name=" behavior" /> ist null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.Clone">
      <summary>Erstellt eine neue Kopie dieser <see cref="T:System.ServiceModel.Description.ClientCredentials" />-Instanz.</summary>
      <returns>Eine <see cref="T:System.ServiceModel.Description.ClientCredentials" />-Instanz.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.CloneCore">
      <summary>Erstellt eine neue Kopie dieser <see cref="T:System.ServiceModel.Description.ClientCredentials" />-Instanz.</summary>
      <returns>Eine <see cref="T:System.ServiceModel.Description.ClientCredentials" />-Instanz.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ClientCredentials.HttpDigest">
      <summary>Ruft die aktuellen HTTP-Digestanmeldeinformationen ab.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Security.HttpDigestClientCredential" /> zur Darstellung der Anmeldeinformationen, die der Client zur Authentifizierung für den Dienst verwendet, wenn die HTTP-Digestauthentifizierung ausgewählt wurde. </returns>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.System#ServiceModel#Description#IEndpointBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Fügt diese Instanz dieser Klasse einer Bindungsparameterauflistung hinzu.</summary>
      <param name="serviceEndpoint">Die zu addierende <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />.</param>
      <param name="bindingParameters">Die Auflistung der Bindungsparameter.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.System#ServiceModel#Description#IEndpointBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
      <summary>Implementiert eine Änderung oder eine Erweiterung des Diensts in einem Endpunkt.</summary>
      <param name="serviceEndpoint">Der Endpunkt, der den Vertrag verfügbar macht.</param>
      <param name="endpointDispatcher">Der Endpunktverteiler, der geändert oder erweitert werden soll.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.System#ServiceModel#Description#IEndpointBehavior#Validate(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Für zukünftige Verwendung reserviert.</summary>
      <param name="serviceEndpoint">Der zu validierende <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />.</param>
    </member>
    <member name="P:System.ServiceModel.Description.ClientCredentials.UserName">
      <summary>Ruft ein Anmeldeinformationsobjekt ab, mit dem Sie den Benutzernamen und das Kennwort festlegen können, die der Client verwendet, um sich dem Dienst gegenüber zu authentifizieren. </summary>
      <returns>
        <see cref="T:System.ServiceModel.Security.UserNamePasswordClientCredential" /> zur Darstellung der aktuellen UserName-Anmeldeinformationen.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ClientCredentials.Windows">
      <summary>Ruft ein Objekt zur Steuerung der Windows-Anmeldeinformationen ab, die der Client verwendet, um sich dem Dienst gegenüber zu authentifizieren. </summary>
      <returns>
        <see cref="T:System.ServiceModel.Security.WindowsClientCredential" /> zur Darstellung der aktuellen Windows-Anmeldeinformationen.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.ContractDescription">
      <summary>Beschreibt einen Windows Communication Foundation (WCF)-Vertrag, der angibt, was ein Endpunkt an die Außenwelt kommuniziert.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ContractDescription.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Description.ContractDescription" />-Klasse mit einem angegebenen Namen.</summary>
      <param name="name">Der Name des Vertrags.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="name" /> ist leer.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.ContractDescription.#ctor(System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Description.ContractDescription" />-Klasse mit einem angegebenen, durch Namespace gekennzeichneten Namen.</summary>
      <param name="name">Der Name des Vertrags.</param>
      <param name="ns">Der Namespace, der den Namen des Vertrags enthält.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="name" /> ist leer.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.CallbackContractType">
      <summary>Ruft den in der Vertragsbeschreibung angegebenen Rückrufvertragstyp ab oder legt diesen fest.</summary>
      <returns>Der <see cref="T:System.Type" /> des Rückrufvertrags, der in der Vertragsbeschreibung angegeben ist.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.ConfigurationName">
      <summary>Ruft den Konfigurationsnamen für die Vertragsbeschreibung ab oder legt diesen fest.</summary>
      <returns>Der Konfigurationsname für den Vertrag.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.ContractBehaviors">
      <summary>Ruft die Verhaltenauflistung für den Vertrag ab.</summary>
      <returns>Die Auflistung von Verhalten für den Vertrag.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.ContractType">
      <summary>Ruft den in der Vertragsbeschreibung angegebenen Vertragstyp ab oder legt diesen fest.</summary>
      <returns>Der <see cref="T:System.Type" /> des Vertrags, der in der Vertragsbeschreibung angegeben ist.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.Name">
      <summary>Ruft den Namen des Vertrags ab oder legt ihn fest.</summary>
      <returns>Der Name der Vertragsbeschreibung.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.Namespace">
      <summary>Ruft den Namespace für den Vertrag ab oder legt ihn fest.</summary>
      <returns>Der Namespace des Vertrags.</returns>
      <exception cref="T:System.ArgumentNullException">Der festgelegte Wert ist null.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.Operations">
      <summary>Ruft die Auflistung der dem Vertrag zugeordneten Vorgangsbeschreibungen ab.</summary>
      <returns>Der <see cref="T:System.ServiceModel.Description.OperationDescriptionCollection" />, der die Vorgangsbeschreibungen enthält, die der Vertragsbeschreibung zugeordnet sind.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.DataContractSerializerOperationBehavior">
      <summary>Stellt das Laufzeitverhalten des <see cref="T:System.Runtime.Serialization.DataContractSerializer" />s dar.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerOperationBehavior.#ctor(System.ServiceModel.Description.OperationDescription)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Description.DataContractSerializerOperationBehavior" />-Klasse mit der angegebenen Vorgangsbeschreibung.</summary>
      <param name="operation">
        <see cref="T:System.ServiceModel.Description.OperationDescription" />, die den Vorgang darstellt.</param>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerOperationBehavior.#ctor(System.ServiceModel.Description.OperationDescription,System.ServiceModel.DataContractFormatAttribute)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Description.DataContractSerializerOperationBehavior" />-Klasse mit der angegebenen Vorgangsbeschreibung und dem angegebenen Datenvertragsformat.</summary>
      <param name="operation">
        <see cref="T:System.ServiceModel.Description.OperationDescription" />, die den Vorgang darstellt.</param>
      <param name="dataContractFormatAttribute">Ein <see cref="T:System.ServiceModel.DataContractFormatAttribute" />, das zum Steuern des Serialisierungsprozesses verwendet wird.</param>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerOperationBehavior.CreateSerializer(System.Type,System.String,System.String,System.Collections.Generic.IList{System.Type})">
      <summary>Erstellt eine Instanz einer Klasse, die vom <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> für Serialisierungs- und Deserialisierungsprozesse erbt.</summary>
      <returns>Eine Instanz einer Klasse, die von der <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />-Klasse erbt. </returns>
      <param name="type">
        <see cref="T:System.Type" />, für den das Serialisierungsprogramm erstellt werden soll.</param>
      <param name="name">Der Name des generierten Typs.</param>
      <param name="ns">Der Namespace des generierten Typs.</param>
      <param name="knownTypes">
        <see cref="T:System.Collections.Generic.IList`1" /> des Typs <see cref="T:System.Type" /> mit bekannten Typen.</param>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerOperationBehavior.CreateSerializer(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IList{System.Type})">
      <summary>Erstellt eine Instanz einer Klasse, die vom <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> für Serialisierungs- und Deserialisierungsprozesse erbt und die den Namespace in einer <see cref="T:System.Xml.XmlDictionaryString" /> enthält.</summary>
      <returns>Eine Instanz einer Klasse, die von der <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />-Klasse erbt. </returns>
      <param name="type">Der zu serialisierende oder zu deserialisierende Typ.</param>
      <param name="name">Der Name des serialisierten Typs.</param>
      <param name="ns">
        <see cref="T:System.Xml.XmlDictionaryString" />, die den Namespace des serialisierten Typs enthält.</param>
      <param name="knownTypes">
        <see cref="T:System.Collections.Generic.IList`1" /> des Typs <see cref="T:System.Type" /> mit bekannten Typen.</param>
    </member>
    <member name="P:System.ServiceModel.Description.DataContractSerializerOperationBehavior.DataContractFormatAttribute">
      <summary>Ruft das <see cref="T:System.ServiceModel.DataContractFormatAttribute" /> ab, das diesem Vorgang zugeordnet ist.</summary>
      <returns>
        <see cref="T:System.ServiceModel.DataContractFormatAttribute" />, das dem Vorgang zugeordnet ist.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.DataContractSerializerOperationBehavior.DataContractResolver">
      <summary>Ruft eine Implementierung vom <see cref="T:System.Runtime.Serialization.DataContractResolver" /> ab oder legt sie fest, die verwendet wird, um während Serialisierungs- und Deserialisierungsprozessen Typen dynamisch zuzuordnen. </summary>
      <returns>Geben Sie den <see cref="T:System.Runtime.Serialization.DataContractResolver" /> ein.Eine Klasse, die einem bekannten Datenvertragstyp einen xsi:type zuordnet.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.DataContractSerializerOperationBehavior.MaxItemsInObjectGraph">
      <summary>Ruft die maximale Anzahl von Elementen im Objektdiagramm ab oder legt sie fest, die serialisiert oder deserialisiert werden.</summary>
      <returns>Die maximale Anzahl von Elementen im Objektdiagramm, die serialisiert oder deserialisiert werden soll.Die Standardeinstellung ist <see cref="F:System.Int32.MaxValue" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerOperationBehavior.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Fügt eine Auflistung von Parametern zu dem Verhalten hinzu. </summary>
      <param name="description">
        <see cref="T:System.ServiceModel.Description.OperationDescription" />, zu der die Parameter hinzugefügt werden sollen.</param>
      <param name="parameters">
        <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> mit den hinzuzufügenden Parametern.</param>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerOperationBehavior.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)">
      <summary>Ordnet dem Vorgang ein Clientverhalten zu.</summary>
      <param name="description">
        <see cref="T:System.ServiceModel.Description.OperationDescription" />, die den Vorgang darstellt.</param>
      <param name="proxy">
        <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" />, der einen Client darstellt.</param>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerOperationBehavior.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)">
      <summary>Wendet das Verhalten auf den Vorgang an.</summary>
      <param name="description">
        <see cref="T:System.ServiceModel.Description.OperationDescription" />, die den Vorgang darstellt.</param>
      <param name="dispatch">
        <see cref="T:System.ServiceModel.Dispatcher.DispatchOperation" />, dem das Verhalten zugeordnet werden soll.</param>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerOperationBehavior.System#ServiceModel#Description#IOperationBehavior#Validate(System.ServiceModel.Description.OperationDescription)">
      <summary>Überprüft den Vorgang.</summary>
      <param name="description">
        <see cref="T:System.ServiceModel.Description.OperationDescription" />, die den zu überprüfenden Vorgang darstellt.</param>
    </member>
    <member name="T:System.ServiceModel.Description.FaultDescription">
      <summary>Stellt einen SOAP-Fehler dar.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.FaultDescription.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Description.FaultDescription" />-Klasse unter Verwendung des angegebenen Aktionswerts.</summary>
      <param name="action">Die Aktion der SOAP-Fehlermeldung.</param>
    </member>
    <member name="P:System.ServiceModel.Description.FaultDescription.Action">
      <summary>Der Wert der Aktion in der SOAP-Fehlermeldung.</summary>
      <returns>Die Aktion des SOAP-Fehlers.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.FaultDescription.DetailType">
      <summary>Der Typ des SOAP-Fehlerdetails.</summary>
      <returns>Der Typ des serialisierbaren Detailobjekts.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.FaultDescription.Name">
      <summary>Ruft den Namen des SOAP-Fehlers ab oder legt ihn fest.</summary>
      <returns>Der Name des SOAP-Fehlers.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.FaultDescription.Namespace">
      <summary>Ruft den Namespace des SOAP-Fehlers ab oder legt diesen fest.</summary>
      <returns>Der Namespace des SOAP-Fehlers.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.FaultDescriptionCollection">
      <summary>Stellt ein Auflistung von <see cref="T:System.ServiceModel.Description.FaultDescription" />-Objekten dar, die Sie zum Abrufen von Informationen zu SOAP-Fehlern in einem Vertrag verwenden können.</summary>
    </member>
    <member name="T:System.ServiceModel.Description.IContractBehavior">
      <summary>Implementiert Methoden, die verwendet werden können, um das Laufzeitverhalten eines Vertrags in einem Dienst oder einer Clientanwendung zu erweitern.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.IContractBehavior.AddBindingParameters(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Konfiguriert alle Bindungselemente zur Unterstützung des Vertragsverhaltens.</summary>
      <param name="contractDescription">Die zu ändernde Vertragsbeschreibung.</param>
      <param name="endpoint">Der zu verändernde Endpunkt.</param>
      <param name="bindingParameters">Die Objekte, die von Bindungselementen zur Unterstützung des Verhaltens benötigt werden.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <summary>Implementiert eine Änderung oder eine Erweiterung des Clients in einem gesamten Vertrag.</summary>
      <param name="contractDescription">Die Vertragsbeschreibung, für die die Erweiterung vorgesehen ist.</param>
      <param name="endpoint">Der Endpunkt.</param>
      <param name="clientRuntime">Die Clientlaufzeit.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)">
      <summary>Implementiert eine Änderung oder eine Erweiterung des Clients in einem gesamten Vertrag.</summary>
      <param name="contractDescription">Die zu ändernde Vertragsbeschreibung.</param>
      <param name="endpoint">Der Endpunkt, der den Vertrag verfügbar macht.</param>
      <param name="dispatchRuntime">Die Dispatchlaufzeit, die die Dienstausführung steuert.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IContractBehavior.Validate(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Implementieren Sie, um zu bestätigen, dass der Vertrag und der Endpunkt das Vertragsverhalten unterstützen können.</summary>
      <param name="contractDescription">Der zu überprüfende Vertrag.</param>
      <param name="endpoint">Der zu überprüfende Endpunkt.</param>
    </member>
    <member name="T:System.ServiceModel.Description.IEndpointBehavior">
      <summary>Implementiert Methoden, die verwendet werden können, um das Laufzeitverhalten eines Endpunkts in einer Dienst- oder Clientanwendung zu erweitern.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Wird implementiert, um Daten zur Laufzeit an Bindungen zu übergeben und damit benutzerdefiniertes Verhalten zu unterstützen.</summary>
      <param name="endpoint">Der zu verändernde Endpunkt.</param>
      <param name="bindingParameters">Die Objekte, die von Bindungselementen zur Unterstützung des Verhaltens benötigt werden.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <summary>Implementiert eine Änderung oder Erweiterung des Clients in einem Endpunkt.</summary>
      <param name="endpoint">Der Endpunkt, der angepasst werden soll.</param>
      <param name="clientRuntime">Die Clientlaufzeit, die angepasst werden soll.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
      <summary>Implementiert eine Änderung oder eine Erweiterung des Diensts in einem Endpunkt.</summary>
      <param name="endpoint">Der Endpunkt, der den Vertrag verfügbar macht.</param>
      <param name="endpointDispatcher">Der Endpunktverteiler, der geändert oder erweitert werden soll.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IEndpointBehavior.Validate(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Implementieren Sie dies, um zu prüfen, ob der Endpunkt bestimmte Kriterien erfüllt.</summary>
      <param name="endpoint">Der zu überprüfende Endpunkt.</param>
    </member>
    <member name="T:System.ServiceModel.Description.IOperationBehavior">
      <summary>Implementiert Methoden, die verwendet werden können, um das Laufzeitverhalten eines Vorgangs in einer Dienst- oder Clientanwendung zu erweitern.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Wird implementiert, um Daten zur Laufzeit an Bindungen zu übergeben und damit benutzerdefiniertes Verhalten zu unterstützen.</summary>
      <param name="operationDescription">Der Vorgang, der überprüft wird.Nur zu Prüfungszwecken zu verwenden.Wenn die Vorgangsbeschreibung geändert wird, sind die Ergebnisse nicht definiert.</param>
      <param name="bindingParameters">Die Auflistung von Objekten, die von Bindungselementen angefordert werden, um das Verhalten zu unterstützen.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)">
      <summary>Implementiert eine Änderung oder Erweiterung des Clients für einen Vorgang.</summary>
      <param name="operationDescription">Der Vorgang, der überprüft wird.Nur zu Prüfungszwecken zu verwenden.Wenn die Vorgangsbeschreibung geändert wird, sind die Ergebnisse nicht definiert.</param>
      <param name="clientOperation">Das Laufzeitobjekt, das Anpassungseigenschaften für den von <paramref name="operationDescription" /> beschriebenen Vorgang verfügbar macht.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)">
      <summary>Implementiert eine Änderung oder Erweiterung des Diensts für einen Vorgang.</summary>
      <param name="operationDescription">Der Vorgang, der überprüft wird.Nur zu Prüfungszwecken zu verwenden.Wenn die Vorgangsbeschreibung geändert wird, sind die Ergebnisse nicht definiert.</param>
      <param name="dispatchOperation">Das Laufzeitobjekt, das Anpassungseigenschaften für den von <paramref name="operationDescription" /> beschriebenen Vorgang verfügbar macht.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IOperationBehavior.Validate(System.ServiceModel.Description.OperationDescription)">
      <summary>Implementieren Sie dies, um zu prüfen, ob der Vorgang bestimmte Kriterien erfüllt.</summary>
      <param name="operationDescription">Der Vorgang, der überprüft wird.Nur zu Prüfungszwecken zu verwenden.Wenn die Vorgangsbeschreibung geändert wird, sind die Ergebnisse nicht definiert.</param>
    </member>
    <member name="T:System.ServiceModel.Description.MessageBodyDescription">
      <summary>Stellt den Textkörper einer SOAP-Nachricht dar.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessageBodyDescription.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Description.MessageBodyDescription" />-Klasse. </summary>
    </member>
    <member name="P:System.ServiceModel.Description.MessageBodyDescription.Parts">
      <summary>Ruft die Teile für den Textkörper der SOAP-Nachricht ab.</summary>
      <returns>Die Textkörperteile, die Sie überprüfen oder ändern können.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageBodyDescription.ReturnValue">
      <summary>Ruft den Teil der SOAP-Nachricht ab, der den Rückgabewert enthält, oder legt diesen fest.</summary>
      <returns>Der Rückgabewert, falls vorhanden.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageBodyDescription.WrapperName">
      <summary>Ruft den Namen des Wrapperelements im SOAP-Textkörperelement ab, sofern vorhanden, oder legt diesen fest.</summary>
      <returns>Das Wrapperelement, sofern vorhanden.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageBodyDescription.WrapperNamespace">
      <summary>Ruft den Namen des Namespaces des Wrapperelements im SOAP-Textkörper ab, sofern vorhanden, oder legt diesen fest.</summary>
      <returns>Der Namespace des Wrapperelements, sofern vorhanden.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.MessageDescription">
      <summary>Stellt die Beschreibung einer Nachricht dar.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessageDescription.#ctor(System.String,System.ServiceModel.Description.MessageDirection)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Description.MessageDescription" />-Klasse mit einer angegebenen Aktion und Richtung.</summary>
      <param name="action">Der Aktionsparameter der SOAP-Nachricht, der die Absicht der Nachricht identifiziert.</param>
      <param name="direction">
        <see cref="F:System.ServiceModel.Description.MessageDirection.Input" />, wenn die Nachricht eingehend oder <see cref="F:System.ServiceModel.Description.MessageDirection.Output" />, wenn die Nachricht ausgehend ist.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="direction" /> ist weder <see cref="F:System.ServiceModel.Description.MessageDirection.Input" /> noch <see cref="F:System.ServiceModel.Description.MessageDirection.Output" />.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.Action">
      <summary>Ruft den Aktionsparameter der SOAP-Nachricht ab, der die Absicht der Nachricht identifiziert, oder legt diesen fest.</summary>
      <returns>Ein <see cref="T:System.String" />, der die Aktions-URI enthält.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.Body">
      <summary>Ruft den Textkörper der SOAP-Nachricht ab.</summary>
      <returns>Eine <see cref="T:System.ServiceModel.Description.MessagePartDescriptionCollection" />, die den Textkörper der Nachricht enthält.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.Direction">
      <summary>Ruft die Richtung ab, die angibt, ob die Nachricht eingehend oder ausgehend ist.</summary>
      <returns>Die <see cref="T:System.ServiceModel.Description.MessageDirection" />, die angibt, ob die Nachricht in den Dienst eingeht oder von ihm ausgeht.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.Headers">
      <summary>Ruft die Beschreibung der Header der SOAP-Nachricht ab.</summary>
      <returns>Die <see cref="T:System.ServiceModel.Description.MessageHeaderDescriptionCollection" />, die Beschreibungen der Header der SOAP-Nachricht enthält.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.MessageType">
      <summary>Ruft einen Typ ab, der den Typ des Nachrichtenvertrags identifiziert, oder legt diesen fest.</summary>
      <returns>Ein <see cref="T:System.Type" />, der den Typ des Nachrichtenvertrags identifiziert.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.Properties">
      <summary>Ruft eine Beschreibung der Eigenschaften der SOAP-Nachricht ab.</summary>
      <returns>Die <see cref="T:System.ServiceModel.Description.MessagePropertyDescriptionCollection" />, die Beschreibungen der Eigenschaften der SOAP-Nachricht enthält.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.MessageDescriptionCollection">
      <summary>Stellt eine Auflistung bereit, die zum Speichern von Beschreibungen der Meldungen verwendet wird, aus denen ein zu einem Vertrag gehörender Vorgang besteht. </summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessageDescriptionCollection.Find(System.String)">
      <summary>Sucht die erste Meldungsbeschreibung in einer Auflistung für eine Meldung mit einer angegebenen Aktion und gibt sie zurück.</summary>
      <returns>Der erste <see cref="T:System.ServiceModel.Description.MessageDescription" /> einer Auflistung, dessen Meldung den angegebenen <paramref name="action" /> enthält, und null, wenn kein entsprechender <paramref name="action" /> gefunden wurde.</returns>
      <param name="action">Die Aktion der gesuchten Meldung.</param>
    </member>
    <member name="M:System.ServiceModel.Description.MessageDescriptionCollection.FindAll(System.String)">
      <summary>Sucht alle Meldungsbeschreibungen in einer Auflistung, deren Meldungen eine angegebene Aktion enthalten, und gibt sie zurück.</summary>
      <returns>Ein <see cref="T:System.ServiceModel.Description.MessageDescriptionCollection" />, der die Auflistungsmeldungsbeschreibungen der aktuellen Auflistung enthält, deren Meldungen über den angegebenen <paramref name="action" /> verfügen.Wenn keine entsprechenden <see cref="T:System.ServiceModel.Description.MessageDescription" />-Objekte gefunden werden, wird eine leere Auflistung zurückgegeben.</returns>
      <param name="action">Die Aktion der gesuchten Meldungen.</param>
    </member>
    <member name="T:System.ServiceModel.Description.MessageDirection">
      <summary>Gibt die Richtung der Nachricht an.</summary>
    </member>
    <member name="F:System.ServiceModel.Description.MessageDirection.Input">
      <summary>Die Nachricht geht ein.</summary>
    </member>
    <member name="F:System.ServiceModel.Description.MessageDirection.Output">
      <summary>Die Nachricht wird ausgegeben.</summary>
    </member>
    <member name="T:System.ServiceModel.Description.MessageHeaderDescription">
      <summary>Stellt einen SOAP-Nachrichtenheader dar.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessageHeaderDescription.#ctor(System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Description.MessageHeaderDescription" />-Klasse mit einem angegebenen qualifizierten Namen.</summary>
      <param name="name">Der Name des Nachrichtenheaders.</param>
      <param name="ns">Der Namespace des Nachrichtenheaders.</param>
    </member>
    <member name="P:System.ServiceModel.Description.MessageHeaderDescription.Actor">
      <summary>Ruft den gewünschten Empfänger des Nachrichtenheaders ab oder legt diesen fest.</summary>
      <returns>Eine URI, die den gewünschten Empfänger des Nachrichtenheaders angibt.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageHeaderDescription.MustUnderstand">
      <summary>Ruft einen Wert ab, der angibt, ob der Header der SOAP-1.1/1.2-Spezifikation entsprechen muss, oder legt diesen fest.</summary>
      <returns>true, wenn die Verarbeitung des Nachrichtenheaders obligatorisch ist, andernfalls false.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageHeaderDescription.Relay">
      <summary>Ruft einen Wert ab, der angibt, ob der Header weitergeleitet werden soll.</summary>
      <returns>true, wenn der Nachrichtenheader weitergeleitet werden kann, andernfalls false.Der Standard ist laut SOAP 1.1-Spezifikation falsch.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageHeaderDescription.TypedHeader">
      <summary>Ruft einen Wert ab, der angibt, ob der Nachrichtenheader ein Nachrichtenvertragsheader ist, oder legt diesen fest.</summary>
      <returns>true, wenn der Nachrichtenheader ein Nachrichtenvertragsheader ist, andernfalls false.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.MessageHeaderDescriptionCollection">
      <summary>Stellt eine Auflistung von <see cref="T:System.ServiceModel.Description.MessageHeaderDescription" />-Objekten dar.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessageHeaderDescriptionCollection.GetKeyForItem(System.ServiceModel.Description.MessageHeaderDescription)">
      <summary>Gibt bei Aufruf durch eine abgeleitete Klasse den <see cref="T:System.Xml.XmlQualifiedName" /> des Nachrichtenheaders zurück.</summary>
      <returns>Der <see cref="T:System.Xml.XmlQualifiedName" /> des Nachrichtenheaders.</returns>
      <param name="item">Die zu suchende <see cref="T:System.ServiceModel.Description.MessageHeaderDescription" />-Klasse.</param>
    </member>
    <member name="T:System.ServiceModel.Description.MessagePartDescription">
      <summary>Stellt eine Beschreibung eines SOAP-Nachrichtenteils dar.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessagePartDescription.#ctor(System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Description.MessagePartDescription" />-Klasse.  </summary>
      <param name="name">Der XML-Name des Nachrichtenteils.</param>
      <param name="ns">Der XML-Namespace des Nachrichtenteils.</param>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.Index">
      <summary>Ruft den Index des Nachrichtenteils ab oder legt ihn fest.</summary>
      <returns>Der Index des Nachrichtenteils.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.MemberInfo">
      <summary>Ruft die Memberinformationen für den Nachrichtenteil ab oder legt sie fest.</summary>
      <returns>Die Memberinformationen für diesen Nachrichtenteil.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.Multiple">
      <summary>Ruft einen Wert ab, der steuert, welcher Nachrichtenteil mehr als einmal in der Nachricht auftreten darf, oder legt ihn fest.</summary>
      <returns>true, wenn er mehr als einmal auftreten darf, andernfalls false.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.Name">
      <summary>Ruft den Namen des Nachrichtenteils ab oder legt diesen fest.</summary>
      <returns>Der Name des Nachrichtenteils.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.Namespace">
      <summary>Ruft den Namespace des Nachrichtenteils ab oder legt ihn fest.</summary>
      <returns>Der Namespace des Nachrichtenteils.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.Type">
      <summary>Ruft den Typ des Nachrichtenteils ab oder legt diesen fest.</summary>
      <returns>Der Typ des Nachrichtenteils.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.MessagePartDescriptionCollection">
      <summary>Stellt eine Auflistung von <see cref="T:System.ServiceModel.Description.MessagePartDescription" />-Objekten dar.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessagePartDescriptionCollection.GetKeyForItem(System.ServiceModel.Description.MessagePartDescription)">
      <summary>Gibt bei Aufruf durch eine abgeleitete Klasse den <see cref="T:System.Xml.XmlQualifiedName" /> der <see cref="T:System.ServiceModel.Description.MessagePartDescription" /> zurück.</summary>
      <returns>Das <see cref="T:System.Xml.XmlQualifiedName" /> des <see cref="T:System.ServiceModel.Description.MessagePartDescription" />.</returns>
      <param name="item">Die zu suchende <see cref="T:System.ServiceModel.Description.MessagePartDescription" />-Klasse.</param>
    </member>
    <member name="T:System.ServiceModel.Description.MessagePropertyDescription">
      <summary>Stellt eine vom <see cref="T:System.ServiceModel.MessagePropertyAttribute" /> angegebene Nachrichteneigenschaft dar. </summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessagePropertyDescription.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Description.MessagePropertyDescription" />-Klasse.  </summary>
      <param name="name">Der Name der Eigenschaft.</param>
    </member>
    <member name="T:System.ServiceModel.Description.MessagePropertyDescriptionCollection">
      <summary>Stellt eine Auflistung von <see cref="T:System.ServiceModel.Description.MessagePropertyDescription" />-Objekten dar.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessagePropertyDescriptionCollection.GetKeyForItem(System.ServiceModel.Description.MessagePropertyDescription)">
      <summary>Gibt einen <see cref="T:System.Xml.XmlQualifiedName" /> für eine <see cref="T:System.ServiceModel.Description.MessagePropertyDescription" /> zurück.</summary>
      <returns>Das <see cref="T:System.Xml.XmlQualifiedName" /> des <see cref="T:System.ServiceModel.Description.MessagePropertyDescription" />.</returns>
      <param name="item">Die zu suchende <see cref="T:System.ServiceModel.Description.MessagePropertyDescription" />-Klasse.</param>
    </member>
    <member name="T:System.ServiceModel.Description.OperationDescription">
      <summary>Stellt die Beschreibung eines Vertragsvorgangs dar, in der Nachrichten beschrieben werden, die den Vorgang ausmachen.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescription.#ctor(System.String,System.ServiceModel.Description.ContractDescription)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Description.OperationDescription" />-Klasse mit einem angegebenen Namen und einer angegebenen Vertragsbeschreibung.</summary>
      <param name="name">Der Name der Vorgangsbeschreibung.</param>
      <param name="declaringContract">Die <see cref="T:System.ServiceModel.Description.ContractDescription" />, die verwendet wird, um die Vorgangsbeschreibung zu initialisieren.</param>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.DeclaringContract">
      <summary>Ruft den Vertrag ab, dem der Vorgang zugeordnet ist, oder legt diesen fest.</summary>
      <returns>Die <see cref="T:System.ServiceModel.Description.ContractDescription" /> für den Vorgang.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.Faults">
      <summary>Ruft die Beschreibungen der Fehler ab, die der Vorgangsbeschreibung zugeordnet sind.</summary>
      <returns>Die <see cref="T:System.ServiceModel.Description.FaultDescriptionCollection" />, die Einzelheiten zu den Fehlern enthält, die der Vorgangsbeschreibung zugeordnet sind.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.IsOneWay">
      <summary>Ruft einen Wert ab, der angibt, ob ein Vorgang eine Antwortnachricht zurückgibt, oder legt diesen fest.</summary>
      <returns>true, wenn diese Methode eine Anforderungsnachricht empfängt und keine Antwortnachricht zurückgibt, andernfalls false.Die Standardeinstellung ist false.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.KnownTypes">
      <summary>Ruft die bekannten Typen ab, die der Vorgangsbeschreibung zugeordnet sind.</summary>
      <returns>Die Auflistung von bekannten Typen, die der Vorgangsbeschreibung zugeordnet sind.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.Messages">
      <summary>Ruft Beschreibungen der Nachrichten ab, die den Vorgang ausmachen, oder legt sie fest.</summary>
      <returns>Eine <see cref="T:System.ServiceModel.Description.MessageDescriptionCollection" />, die Beschreibungen der Nachrichten enthält, die den Vorgang ausmachen.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.Name">
      <summary>Ruft den Namen der Vorgangsbeschreibung ab oder legt ihn fest.</summary>
      <returns>Der Name der Vorgangsbeschreibung.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.OperationBehaviors">
      <summary>Ruft den Satz des Verhaltens für den Vorgang ab.</summary>
      <returns>Die Gruppe der Verhaltensweisen für den Vorgang.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.TaskMethod">
      <summary>Ruft die für den Aufgabenvorgang verwendete Methode ab oder legt diese fest.</summary>
      <returns>Die für die Taskoperation verwendete Methode.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.OperationDescriptionCollection">
      <summary>Stellt eine Auflistung dar, die Vorgangsbeschreibungen enthält.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescriptionCollection.Find(System.String)">
      <summary>Gibt eine Vorgangsbeschreibung mit einem angegebenen Namen von der Auflistung der Vorgangsbeschreibungen zurück.</summary>
      <returns>Die <see cref="T:System.ServiceModel.Description.OperationDescription" /> mit dem angegebenen Namen.</returns>
      <param name="name">Der Name des Vorgangs.</param>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescriptionCollection.FindAll(System.String)">
      <summary>Gibt eine Auflistung aller Vorgangsbeschreibungen von der Auflistung zurück, die über den angegebenen Namen verfügen.</summary>
      <returns>Die <see cref="T:System.Collections.ObjectModel.Collection`1" /> vom Typ <see cref="T:System.ServiceModel.Description.OperationDescription" />, die die Vorgangsbeschreibungen mit dem angegebenen Namen enthält.</returns>
      <param name="name">Der Name des Vorgangs.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> ist null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescriptionCollection.InsertItem(System.Int32,System.ServiceModel.Description.OperationDescription)">
      <summary>Fügt ein Element am angegebenen Index in die Vorgangsbeschreibungsauflistung ein.</summary>
      <param name="index">Der nullbasierte Index, an dem <paramref name="item" /> eingefügt werden soll.</param>
      <param name="item">Die einzufügende <see cref="T:System.ServiceModel.Description.OperationDescription" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> ist null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescriptionCollection.SetItem(System.Int32,System.ServiceModel.Description.OperationDescription)">
      <summary>Ersetzt das Vorgangsbeschreibungselement in der Auflistung am angegebenen Index.</summary>
      <param name="index">Der nullbasierte Index, an dem <paramref name="item" /> eingefügt werden soll.</param>
      <param name="item">Die festzulegende <see cref="T:System.ServiceModel.Description.OperationDescription" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> ist null.</exception>
    </member>
    <member name="T:System.ServiceModel.Description.ServiceEndpoint">
      <summary>Gibt den Endpunkt für einen Dienst wieder, der Clients dieses Diensts ermöglicht, ihn zu finden und mit ihm zu kommunizieren.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceEndpoint.#ctor(System.ServiceModel.Description.ContractDescription)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />-Klasse für einen bestimmten Vertrag.</summary>
      <param name="contract">Die <see cref="T:System.ServiceModel.Description.ContractDescription" /> für den Dienstendpunkt.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceEndpoint.#ctor(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />-Klasse mit einem angegebenen Vertrag und einer angegebenen Bindung und Adresse.</summary>
      <param name="contract">Die <see cref="T:System.ServiceModel.Description.ContractDescription" /> für den Dienstendpunkt.</param>
      <param name="binding">Die <see cref="T:System.ServiceModel.Channels.Binding" />, der angibt, wie der Dienstendpunkt mit der Außenwelt kommuniziert.</param>
      <param name="address">Die <see cref="T:System.ServiceModel.EndpointAddress" /> für den Dienstendpunkt.</param>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceEndpoint.Address">
      <summary>Ruft die Endpunktadresse für den Dienstendpunkt ab oder legt sie fest.</summary>
      <returns>Die <see cref="T:System.ServiceModel.EndpointAddress" />, die die Position des Dienstendpunkts angibt.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceEndpoint.Binding">
      <summary>Ruft die Bindung für den Dienstendpunkt ab oder legt sie fest.</summary>
      <returns>Die <see cref="T:System.ServiceModel.Channels.Binding" /> für den Dienstendpunkt.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceEndpoint.Contract">
      <summary>Ruft den Vertrag für den Dienstendpunkt ab.</summary>
      <returns>Die <see cref="T:System.ServiceModel.Description.ContractDescription" />, die den Vertrag für den Dienstendpunkt angibt.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceEndpoint.EndpointBehaviors">
      <summary>Ruft die Endpunktverhalten für den Dienst ab.</summary>
      <returns>Das Endpunktverhalten für den Dienstendpunkt ab.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceEndpoint.Name">
      <summary>Ruft den Namen des Dienstendpunkts ab oder legt ihn fest.</summary>
      <returns>Der Name des Dienstendpunkts.Der Standardwert ist die Verkettung des Bindungsnamen und des Vertragsbeschreibungsnamens.Beispiel: <see cref="P:System.ServiceModel.Channels.Binding.Name" /> +'_' + <see cref="P:System.ServiceModel.Description.ContractDescription.Name" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.ClientOperation">
      <summary>Wird verwendet, um das Ausführungsverhalten eines bestimmten Vertragsvorgangs in einem Clientobjekt oder Clientkanalobjekt zu ändern oder zu erweitern.Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ClientOperation.#ctor(System.ServiceModel.Dispatcher.ClientRuntime,System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" />-Klasse unter Verwendung der angegebenen <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" />, des angegebenen Namens und der Aktionswerte. </summary>
      <param name="parent">Das <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" />-Objekt, das dies enthält.</param>
      <param name="name">Der Name des Vorgangs.</param>
      <param name="action">Die Aktion des Vorgangs.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ClientOperation.#ctor(System.ServiceModel.Dispatcher.ClientRuntime,System.String,System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" />-Klasse unter Verwendung der angegebenen <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" />, des Namens, der Aktion und der Antwortaktionswerte. </summary>
      <param name="parent">Das <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" />-Objekt, das dies enthält.</param>
      <param name="name">Der Name des Vorgangs.</param>
      <param name="action">Die Aktion des Vorgangs.</param>
      <param name="replyAction">Die Aktion der Antwortnachricht.</param>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.Action">
      <summary>Ruft die Aktion des Vorgangs ab.</summary>
      <returns>Die Aktion des Vorgangs.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.ClientParameterInspectors">
      <summary>Ruft eine Sammlung von Parameterinspektorobjekten ab, die verwendet werden, um Parameter vor oder im Anschluss an einen Clientaufruf anzuzeigen oder zu ändern.</summary>
      <returns>Eine Sammlung von Parameterinspektor-Objekten die verwendet werden, um Parameter vor oder im Anschluss an einen Clientaufruf anzuzeigen oder zu ändern.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.DeserializeReply">
      <summary>Ruft einen Wert ab, der angibt, ob der Wert der <see cref="P:System.ServiceModel.Dispatcher.ClientOperation.Formatter" />-Eigenschaft verwendet wird, um die Antwortnachricht zu deserialisieren, bzw. legt diesen fest.</summary>
      <returns>true , wenn der Rückgabetyp keine <see cref="T:System.ServiceModel.Channels.Message" /> ist, andernfalls false.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.Formatter">
      <summary>Ruft den Formatierer ab, der Objekte in Nachrichten serialisiert und Nachrichten in Objekte deserialisiert, bzw. legt ihn fest.</summary>
      <returns>Eine <see cref="T:System.ServiceModel.Dispatcher.IClientMessageFormatter" />-Implementierung.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.IsOneWay">
      <summary>Ruft einen Wert ab, der angibt, wenn der Vorgang kein unidirektionaler Vorgang ist, bzw. legt diesen fest.</summary>
      <returns>true, wenn der indigo2-Client keine Antwort erwarten soll, andernfalls false.Der Standardwert ist false.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.Name">
      <summary>Ruft den Namen des Vorgangs ab.</summary>
      <returns>Der Name des Vorgangs.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.Parent">
      <summary>Ruft das <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" />-Objekt auf, das dies enthält.</summary>
      <returns>Das <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" />-Objekt, das dies enthält.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.ReplyAction">
      <summary>Ruft die Aktion der Antwortnachricht für diesen Vorgang ab.</summary>
      <returns>Die Aktion der Antwort.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.SerializeRequest">
      <summary>Ruft einen Wert ab oder legt diesen fest, der angibt, ob das <see cref="P:System.ServiceModel.Dispatcher.ClientOperation.Formatter" />-Objekt eine ausgehende Nachricht serialisiert.</summary>
      <returns>true, wenn die <see cref="P:System.ServiceModel.Dispatcher.ClientOperation.Formatter" />-Eigenschaft die Rückgabewerte in eine Antwortnachricht serialisiert, andernfalls false.Die Standardeinstellung ist true.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.TaskMethod">
      <summary>Ruft die einer Aufgabe zugeordnete Methode ab oder legt diese fest.</summary>
      <returns>Ein <see cref="T:System.Reflection.MethodInfo" />-Objekt, das die Methode darstellt, die einer Aufgabe zugeordnet ist.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.TaskTResult">
      <summary>Ruft den Typ des Ergebnisses der Methode ab, die einer Aufgabe zugeordnet ist, oder legt diesen fest.</summary>
      <returns>Der <see cref="T:System.Type" /> des Ergebnisses der Methode, die einer Aufgabe zugeordnet ist.</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.ClientRuntime">
      <summary>Stellt die Einfügemarke für Klassen, die den Funktionsumfang von Windows Communication Foundation (WCF)-Clientobjekten für alle durch die Clientanwendung verarbeiteten Nachrichten erweitert.</summary>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ClientMessageInspectors">
      <summary>Ruft eine Sammlung von Nachrichteninspektorobjekten ab, die verwendet werden, um Nachrichten eines bestimmten Dienstvorgangs anzuzeigen oder zu ändern.</summary>
      <returns>Eine Sammlung von Nachrichteninspektor-Objekten die verwendet werden, um Nachrichten eines bestimmten Dienstvorgangs anzuzeigen oder zu ändern.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ClientOperations">
      <summary>Ruft eine Sammlung von Clientvorgangsobjekten zum Anfügen von Erweiterungsobjekten ab, die Nachrichten und das Verhalten eines bestimmten Dienstvorgangs überprüfen oder ändern.</summary>
      <returns>Eine Sammlung von Clientvorgangsobjekten zum Anfügen von Erweiterungsobjekten, die Nachrichten und das Verhalten eines bestimmten Dienstvorgangs überprüfen oder ändern.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ContractClientType">
      <summary>Übernimmt oder bestimmt den Typ des Vertrags, der einem Client zugeordnet wird.</summary>
      <returns>Das <see cref="T:System.Type" />-Objekt, das den diesem Client zugeordneten Vertrag darstellt.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ContractName">
      <summary>Ruft den Namen des Vertrags ab, der einem Client zugeordnet ist.</summary>
      <returns>Der Vertragsname für einen Client.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ContractNamespace">
      <summary>Ruft den Namespace des Vertrags ab, der einem Client zugeordnet ist.</summary>
      <returns>Der Namespace des Vertrags, der einem Client zugeordnet ist.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ManualAddressing">
      <summary>Ruft einen Wert ab oder legt ihn fest, der angibt, ob der Client Adressierungsheader zu Anforderung-Antwort-Nachrichten hinzufügt.</summary>
      <returns>true, wenn der Client keine Adressierungsheader hinzufügt, andernfalls false.Die Standardeinstellung ist false.Siehe Hinweise.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.MaxFaultSize">
      <summary>Ruft die maximale Fehlergröße ab oder legt diese fest.</summary>
      <returns>Eine ganze Zahl, die die maximale Fehlergröße darstellt.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.OperationSelector">
      <summary>Ruft eine <see cref="T:System.ServiceModel.Dispatcher.IClientOperationSelector" />-Implementierung ab, die verwendet werden kann, um eine <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /> auszuwählen, oder legt diese fest.</summary>
      <returns>Ein <see cref="T:System.ServiceModel.Dispatcher.IClientOperationSelector" />-Objekt, das einen <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /> auswählt.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.UnhandledClientOperation">
      <summary>Ruft den Clientvorgang für Methoden ab, die nicht über eine entsprechende <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /> in der <see cref="P:System.ServiceModel.Dispatcher.ClientRuntime.Operations" />-Auflistung verfügen.</summary>
      <returns>Eine <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" />, die die Methode darstellt, an die der aktuelle Nachrichteninhalt weitergeleitet wird, wenn die Vorgangsauswahl keinen zu der Nachricht passenden Vorgang finden kann.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.Via">
      <summary>Ruft die Transportadresse ab, die verwendet wird, um Nachrichten durch den Client zu senden, oder legt diese Transportadresse fest.</summary>
      <returns>Eine <see cref="T:System.Uri" />, der die Zieladresse für den Transport ist.Der Standardwert ist der <see cref="P:System.ServiceModel.EndpointAddress.Uri" />-Wert des Clients.</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.DispatchOperation">
      <summary>Wird verwendet, um das Ausführungsverhalten eines bestimmten Dienstvorgangs in einem Dienstendpunkt zu ändern oder zu erweitern.Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.DispatchOperation.#ctor(System.ServiceModel.Dispatcher.DispatchRuntime,System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Dispatcher.DispatchOperation" />-Klasse unter Verwendung der angegebenen DispatchRuntime, des angegebenen Namens und der Aktionswerte.</summary>
      <param name="parent">Das zugeordnete <see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" />-Objekt.</param>
      <param name="name">Der Name des Verteilvorgangs. Dieser wird als Schlüssel für die <see cref="P:System.ServiceModel.Dispatcher.DispatchRuntime.Operations" />-Auflistung verwendet.</param>
      <param name="action">Die Nachrichtenaktion, für die dieser Verteilvorgang erstellt wird.</param>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.Action">
      <summary>Ruft den Wert der Aktion für diesen Vorgang ab.</summary>
      <returns>Der Wert der Aktion für diesen Vorgang.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.AutoDisposeParameters">
      <summary>Ruft ab oder legt fest, ob Parameter automatisch verworfen werden sollen.</summary>
      <returns>true, wenn die Parameter automatisch verworfen werden sollen, andernfalls false.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.DeserializeRequest">
      <summary>Ruft einen Wert ab bzw. legt diesen fest, der angibt, ob der Wert der <see cref="P:System.ServiceModel.Dispatcher.DispatchOperation.Formatter" />-Eigenschaft verwendet wird, um die Anforderungsnachricht zu deserialisieren.</summary>
      <returns>false, wenn der Rückgabetyp vom Typ <see cref="T:System.ServiceModel.Channels.Message" /> ist und keine out-Parameter vorhanden sind, andernfalls true.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.IsOneWay">
      <summary>Ruft einen Wert ab, der angibt, ob der Vorgang ein unidirektionaler Vorgang ist.</summary>
      <returns>true, wenn der Vorgang nur eine Eingabe hat, andernfalls false.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.Name">
      <summary>Ruft den Namen des Vorgangs ab.</summary>
      <returns>Der Name des Vorgangs.Dieser wird als Schlüssel für die <see cref="P:System.ServiceModel.Dispatcher.DispatchRuntime.Operations" />-Auflistung verwendet.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.Parent">
      <summary>Ruft das zugeordnete <see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" />-Objekt ab.</summary>
      <returns>Das zugeordnete <see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" />-Objekt.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.SerializeReply">
      <summary>Ruft einen Wert ab, der angibt, ob das <see cref="P:System.ServiceModel.Dispatcher.DispatchOperation.Formatter" />-Objekt Antwortnachrichten serialisiert, bzw. legt diesen fest.</summary>
      <returns>true, wenn die <see cref="P:System.ServiceModel.Dispatcher.DispatchOperation.Formatter" />-Eigenschaft die Rückgabewerte in eine Antwortnachricht serialisiert, andernfalls false. </returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.DispatchRuntime">
      <summary>Macht Eigenschaften verfügbar, die verwendet werden können, um das Standardverhalten von Diensten zu ändern und um benutzerdefinierte Objekte anzuhängen, mit denen festgelegt werden kann, wie eingehende Nachrichten in Objekte umgewandelt und an Dienstvorgänge verteilt werden.Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.EndpointDispatcher">
      <summary>Stellt das Laufzeitobjekt dar, das Eigenschaften verfügbar macht, durch die das Einfügen von Laufzeiterweiterungen oder Änderungen für Nachrichten in Dienstanwendungen ermöglicht wird.</summary>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IClientMessageFormatter">
      <summary>Definiert Methoden, die zur Steuerung der Umwandlung von Nachrichten in Objekte und bei Clientanwendungen von Objekten in Nachrichten verwendet werden.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IClientMessageFormatter.DeserializeReply(System.ServiceModel.Channels.Message,System.Object[])">
      <summary>Wandelt Nachrichten in einen Rückgabewert und in out-Parameter um, die zurück an den Aufrufvorgang gegeben werden.</summary>
      <returns>Der Rückgabewert des Vorgangs.</returns>
      <param name="message">Die eingehende Nachricht.</param>
      <param name="parameters">Beliebige out-Werte.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IClientMessageFormatter.SerializeRequest(System.ServiceModel.Channels.MessageVersion,System.Object[])">
      <summary>Wandelt ein <see cref="T:System.Object" />-Array in eine ausgehende <see cref="T:System.ServiceModel.Channels.Message" /> um. </summary>
      <returns>Die SOAP-Nachricht, die an den Dienstvorgang gesendet wurde.</returns>
      <param name="messageVersion">Die Version der SOAP-Nachricht, die verwendet werden soll.</param>
      <param name="parameters">Die Parameter, die dem WCF-Clientvorgang übergeben wurden.</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IClientMessageInspector">
      <summary>Definiert ein Nachrichteninspektorobjekt, das der <see cref="P:System.ServiceModel.Dispatcher.ClientRuntime.MessageInspectors" />-Auflistung hinzugefügt werden kann, um Nachrichten anzuzeigen oder zu ändern.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IClientMessageInspector.AfterReceiveReply(System.ServiceModel.Channels.Message@,System.Object)">
      <summary>Aktiviert die Überprüfung oder Änderung einer Nachricht, nachdem eine Antwortnachricht eingegangen ist, aber bevor diese an die Clientanwendung zurückgegeben wird.</summary>
      <param name="reply">Die Nachricht, die in Typen umgewandelt werden und an die Clientanwendung zurückgegeben werden soll.</param>
      <param name="correlationState">Korrelationszustandsdaten.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IClientMessageInspector.BeforeSendRequest(System.ServiceModel.Channels.Message@,System.ServiceModel.IClientChannel)">
      <summary>Aktiviert die Überprüfung oder Änderung einer Nachricht, bevor eine Anforderungsnachricht an einen Dienst gesendet wird.</summary>
      <returns>Das Objekt, das als <paramref name="correlationState " />-Argument der <see cref="M:System.ServiceModel.Dispatcher.IClientMessageInspector.AfterReceiveReply(System.ServiceModel.Channels.Message@,System.Object)" />-Methode zurückgegeben wird.Dies ist null, wenn kein Korrelationszustand verwendet wird.Es wird empfohlen, dies in eine <see cref="T:System.Guid" /> umzuwandeln, um sicherzustellen, dass es nicht zwei gleiche <paramref name="correlationState" />-Objekte gibt.</returns>
      <param name="request">Die an den Dienst zu sendende Nachricht.</param>
      <param name="channel">Der WCF-Clientobjektkanal.</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IClientOperationSelector">
      <summary>Definiert den Vertrag für eine Vorgangsauswahl.</summary>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.IClientOperationSelector.AreParametersRequiredForSelection">
      <summary>Ruft einen Wert ab, der angibt, ob Parameter zur Bestimmung der Auswahl erforderlich sind.</summary>
      <returns>true, wenn Parameter erforderlich sind, andernfalls false.</returns>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IClientOperationSelector.SelectOperation(System.Reflection.MethodBase,System.Object[])">
      <summary>Gibt den ausgewählten Vorgang zurück.</summary>
      <returns>Der von der benutzerdefinierten Vorgangsauswahl ausgewählte Vorgang.</returns>
      <param name="method">Die aufgerufene Methode.</param>
      <param name="parameters">Die an die Methode übergebenen Parameter.</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IParameterInspector">
      <summary>Definiert den von benutzerdefinierten Parameterinspektoren implementierten Vertrag, der die Prüfung oder Änderung von Informationen vor und nach Aufrufen am Client oder Dienst ermöglicht.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IParameterInspector.AfterCall(System.String,System.Object[],System.Object,System.Object)">
      <summary>Wird aufgerufen, nachdem Clientaufrufe zurückgegeben wurden und bevor Dienstantworten gesendet werden.</summary>
      <param name="operationName">Der Name des aufgerufenen Vorgangs.</param>
      <param name="outputs">Ausgabeobjekte.</param>
      <param name="returnValue">Der Rückgabewert des Vorgangs.</param>
      <param name="correlationState">Ein Korrelationsstatus, der von der <see cref="M:System.ServiceModel.Dispatcher.IParameterInspector.BeforeCall(System.String,System.Object[])" />-Methode zurückgegeben wurde, oder null. </param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IParameterInspector.BeforeCall(System.String,System.Object[])">
      <summary>Wird aufgerufen, bevor Clientaufrufe gesendet und nachdem Dienstantworten zurückgegeben wurden.</summary>
      <returns>Der Korrelationsstatus, der als <paramref name="correlationState" />-Parameter in <see cref="M:System.ServiceModel.Dispatcher.IParameterInspector.AfterCall(System.String,System.Object[],System.Object,System.Object)" /> zurückgegeben wird.Geben Sie null zurück, wenn Sie nicht beabsichtigen, den Korrelationsstatus zu verwenden.</returns>
      <param name="operationName">Der Name des Vorgangs.</param>
      <param name="inputs">Die vom Client an die Methode übergebenen Objekte.</param>
    </member>
    <member name="T:System.ServiceModel.Security.HttpDigestClientCredential">
      <summary>Wird für die Digestauthentifizierung von HTTP-Clients verwendet.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.HttpDigestClientCredential.ClientCredential">
      <summary>Ruft die Netzwerkanmeldeinformationen ab, die zur Digest-basierten Authentifizierung verwendet werden, oder legt diese fest.</summary>
      <returns>Die <see cref="T:System.Net.NetworkCredential" />, die für die Digest-basierte Authentifizierung verwendet werden sollen.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.MessageSecurityException">
      <summary>Stellt eine Ausnahme dar, die auftritt, wenn Probleme mit den auf eine Nachricht angewendeten Sicherheitsfunktionen bestehen. </summary>
    </member>
    <member name="M:System.ServiceModel.Security.MessageSecurityException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Security.MessageSecurityException" />-Klasse mit einer Fehlerzeichenfolge.</summary>
      <param name="message">Die Fehlermeldung.</param>
    </member>
    <member name="M:System.ServiceModel.Security.MessageSecurityException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Security.MessageSecurityException" />-Klasse mit einer Fehlerzeichenfolge und einem Verweis auf die interne Ausnahme, die diese Ausnahme verursacht hat.</summary>
      <param name="message">Die Fehlermeldung.</param>
      <param name="innerException">Der Verweis auf die innere Ausnahme.</param>
    </member>
    <member name="T:System.ServiceModel.Security.SecurityAccessDeniedException">
      <summary>Stellt die Sicherheitsausnahme dar, die ausgelöst wird, wenn eine Sicherheitsautorisierungsanforderung fehlschlägt.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityAccessDeniedException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Security.SecurityAccessDeniedException" />-Klasse unter Verwendung der angegebenen Meldung. </summary>
      <param name="message">Die Beschreibung des Fehlerzustands.</param>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityAccessDeniedException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Security.SecurityAccessDeniedException" />-Klasse unter Verwendung der angegebenen Meldung und der internen Ausnahme. </summary>
      <param name="message">Die Beschreibung des Fehlerzustands.</param>
      <param name="innerException">Die zu verwendende interne Ausnahme.</param>
    </member>
    <member name="T:System.ServiceModel.Security.UserNamePasswordClientCredential">
      <summary>Gibt Clientanmeldeinformationen auf Grundlage von Benutzername und Kennwort wieder.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.UserNamePasswordClientCredential.Password">
      <summary>Ruft das Kennwort ab oder legt es fest.</summary>
      <returns>Das Kennwort.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.UserNamePasswordClientCredential.UserName">
      <summary>Ruft den Benutzernamen ab oder legt diesen fest.</summary>
      <returns>Der Benutzername.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.WindowsClientCredential">
      <summary>Ermöglicht Ihnen die Angabe von Eigenschaften für Windows-Anmeldeinformationen, die zum Darstellen des Clients verwendet werden sollen.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.WindowsClientCredential.AllowedImpersonationLevel">
      <summary>Ruft die zulässige Identitätswechselebene ab oder legt sie fest. </summary>
      <returns>Einer der <see cref="T:System.Security.Principal.TokenImpersonationLevel" />-Werte.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.WindowsClientCredential.ClientCredential">
      <summary>Ruft die Windows-Clientanmeldeinformationen ab oder legt diese fest.</summary>
      <returns>Die <see cref="T:System.Net.NetworkCredential" /> für den Client.</returns>
    </member>
  </members>
</doc>
<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.ServiceModel.Primitives</name>
  </assembly>
  <members>
    <member name="T:System.ServiceModel.ActionNotSupportedException">
      <summary>Cette exception est généralement levée sur le client lorsque l'action relative à l'opération appelée ne correspond à aucune action d'opérations sur le serveur.</summary>
    </member>
    <member name="M:System.ServiceModel.ActionNotSupportedException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.ActionNotSupportedException" />. </summary>
    </member>
    <member name="M:System.ServiceModel.ActionNotSupportedException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.ActionNotSupportedException" /> avec un message d'erreur spécifié.</summary>
      <param name="message">Message d'erreur indiquant la raison de l'exception.</param>
    </member>
    <member name="M:System.ServiceModel.ActionNotSupportedException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.ActionNotSupportedException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué l'exception.</summary>
      <param name="message">Message d'erreur indiquant la raison de l'exception.</param>
      <param name="innerException">L'<see cref="T:System.Exception" /> à l'origine de la levée de l'exception actuelle. </param>
    </member>
    <member name="T:System.ServiceModel.ChannelFactory">
      <summary>Crée et gère les canaux utilisés par les clients pour envoyer des messages aux points de terminaison de service.</summary>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.ChannelFactory" />.  </summary>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)">
      <summary>Initialise la fabrique de canal avec les comportements fournis par un fichier de configuration spécifié et avec ceux définis dans le point de terminaison du service de la fabrique de canal.</summary>
      <param name="configurationName">Nom du fichier de configuration.</param>
      <exception cref="T:System.InvalidOperationException">Le point de terminaison du service de la fabrication de canal a la valeur null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.CreateDescription">
      <summary>En cas d'implémentation dans une classe dérivée, crée une description du point de terminaison du service associée à la fabrique de canal.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> associé à la fabrique de canal.</returns>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.CreateFactory">
      <summary>Génère la fabrique de canal pour le point de terminaison actif de la fabrique.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.IChannelFactory" /> pour le point de terminaison de la fabrique active.</returns>
      <exception cref="T:System.InvalidOperationException">Le point de terminaison du service auquel se connectent les canaux de la fabrique a la valeur null, la liaison du point de terminaison a la valeur null ou l'élément portant le nom de configuration spécifié est manquant.</exception>
    </member>
    <member name="P:System.ServiceModel.ChannelFactory.Credentials">
      <summary>Obtient les informations d'identification utilisées par les clients pour communiquer un point de terminaison de service sur les canaux générés par la fabrique.</summary>
      <returns>Les <see cref="T:System.ServiceModel.Description.ClientCredentials" /> utilisées par les clients si elles sont configurées pour la fabrique ou si le point de terminaison n'a pas la valeur null et se trouve à l'état "communication établie" ou "communication en cours d'ouverture" ; sinon null.</returns>
    </member>
    <member name="P:System.ServiceModel.ChannelFactory.DefaultCloseTimeout">
      <summary>Obtient l'intervalle de temps par défaut fourni pour terminer une opération de fermeture.</summary>
      <returns>
        <see cref="T:System.Timespan" /> par défaut qui spécifie le délai d'exécution de l'opération de fermeture avant dépassement du délai d'attente.</returns>
    </member>
    <member name="P:System.ServiceModel.ChannelFactory.DefaultOpenTimeout">
      <summary>Obtient l'intervalle de temps par défaut fourni pour terminer une opération d'ouverture.</summary>
      <returns>
        <see cref="T:System.Timespan" /> par défaut qui spécifie le délai d'exécution de l'opération d'ouverture avant dépassement du délai d'attente.</returns>
    </member>
    <member name="P:System.ServiceModel.ChannelFactory.Endpoint">
      <summary>Obtient le point de terminaison du service auquel se connectent les canaux générés par la fabrique.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> auquel les canaux générés par la fabrique se connectent.</returns>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.EnsureOpened">
      <summary>Ouvre la fabrique de canal active si elle n'est pas encore ouverte.</summary>
      <exception cref="T:System.ObjectDisposedException">La fabrique active se ferme ou est fermée et ne peut donc pas être ouverte.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.GetProperty``1">
      <summary>Retourne l'objet typé demandé (s'il existe) depuis la couche appropriée de la pile des canaux, ou la valeur null si l'objet est absent.</summary>
      <returns>L'objet typé <paramref name="T" /> demandé s'il existe ; null sinon.</returns>
      <typeparam name="T">L'objet typé pour lequel la méthode effectue une requête.</typeparam>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Initialise le point de terminaison du service de la fabrique de canal avec une liaison et une adresse spécifiées.</summary>
      <param name="binding">
        <see cref="T:System.ServiceModel.Channels.Binding" /> avec laquelle initialiser la fabrique de canal.</param>
      <param name="address">
        <see cref="T:System.ServiceModel.EndpointAddress" /> avec laquelle initialiser la fabrique de canal.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Initialise le point de terminaison du service de la fabrique de canal avec un point de terminaison spécifié.</summary>
      <param name="endpoint">
        <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> avec lequel initialiser la fabrique de canal.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="endpoint" /> a la valeur null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.String,System.ServiceModel.EndpointAddress)">
      <summary>Initialise le point de terminaison du service de la fabrique de canal avec une adresse et une configuration spécifiées.</summary>
      <param name="configurationName">Nom du fichier de configuration utilisé pour initialiser la fabrique de canal.</param>
      <param name="address">
        <see cref="T:System.ServiceModel.EndpointAddress" /> avec laquelle initialiser la fabrique de canal.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnAbort">
      <summary>Ferme la fabrique de canal interne de la fabrique de canal active.</summary>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Amorce une opération de fermeture asynchrone sur la fabrique de canal interne de la fabrique active à laquelle est associé un objet d'état. </summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui référence l'opération asynchrone.</returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> qui spécifie le délai d'exécution de l'opération avant le dépassement du délai d'attente.</param>
      <param name="callback">Le délégué <see cref="T:System.AsyncCallback" /> qui reçoit la notification de la fin de l'opération asynchrone.</param>
      <param name="state">Objet, spécifié par l'application, qui contient des informations d'état associées à l'opération asynchrone.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Amorce une opération d'ouverture asynchrone sur la fabrique de canal interne de la fabrique active à laquelle est associé un objet d'état. </summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui référence l'opération asynchrone.</returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> qui spécifie le délai d'exécution de l'opération avant le dépassement du délai d'attente.</param>
      <param name="callback">Le délégué <see cref="T:System.AsyncCallback" /> qui reçoit la notification de la fin de l'opération asynchrone.</param>
      <param name="state">Objet, spécifié par l'application, qui contient des informations d'état associées à l'opération asynchrone.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnClose(System.TimeSpan)">
      <summary>Appelle la fermeture sur la fabrique de canal interne avec un délai d'attente spécifié pour l'achèvement de l'opération.</summary>
      <param name="timeout">
        <see cref="T:System.Timespan" /> qui spécifie le délai d'exécution de l'opération avant le dépassement du délai d'attente.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnEndClose(System.IAsyncResult)">
      <summary>Clôture une opération de fermeture asynchrone sur la fabrique de canal interne de la fabrique de canal actuelle. </summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> retourné par un appel à la méthode <see cref="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnEndOpen(System.IAsyncResult)">
      <summary>Clôture une opération d'ouverture asynchrone sur la fabrique de canal interne de la fabrique de canal actuelle. </summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> retourné par un appel à la méthode <see cref="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnOpen(System.TimeSpan)">
      <summary>Appelle l'ouverture sur la fabrique de canal interne de la fabrique active avec un délai d'attente spécifié pour l'achèvement de l'opération.</summary>
      <param name="timeout">
        <see cref="T:System.Timespan" /> qui spécifie le délai d'exécution de l'opération d'ouverture avant le dépassement du délai d'attente.</param>
      <exception cref="T:System.InvalidOperationException">Le canal interne du canal actif a la valeur null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnOpened">
      <summary>Initialise une copie en lecture seule de l'objet <see cref="T:System.ServiceModel.Description.ClientCredentials" /> pour la fabrique de canal.</summary>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnOpening">
      <summary>Génère la fabrique de canal interne pour le canal actif.</summary>
      <exception cref="T:System.InvalidOperationException">La fabrication de canal interne de la fabrication de canal a la valeur null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.System#IDisposable#Dispose">
      <summary>Ferme la fabrique de canal active.</summary>
    </member>
    <member name="T:System.ServiceModel.ChannelFactory`1">
      <summary>Une fabrique qui crée des canaux de types différents utilisés par les clients pour envoyer des messages à des points de terminaison de service configurés différemment.</summary>
      <typeparam name="TChannel">Type de canal produit par la fabrique de canal.Ce type doit être <see cref="T:System.ServiceModel.Channels.IOutputChannel" /> ou <see cref="T:System.ServiceModel.Channels.IRequestChannel" />.</typeparam>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.ChannelFactory`1" /> avec une liaison et une adresse de point de terminaison spécifiés.</summary>
      <param name="binding">
        <see cref="T:System.ServiceModel.Channels.Binding" /> utilisé pour configurer le point de terminaison.</param>
      <param name="remoteAddress">
        <see cref="T:System.ServiceModel.EndpointAddress" /> qui fournit l'emplacement du service.</param>
      <exception cref="T:System.ArgumentNullException">Le <paramref name="binding" /> est null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.ChannelFactory`1" /> avec un nom de configuration de point de terminaison spécifié.</summary>
      <param name="endpointConfigurationName">Nom de configuration utilisé pour le point de terminaison.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="endpointConfigurationName" /> a la valeur null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.#ctor(System.String,System.ServiceModel.EndpointAddress)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.ChannelFactory`1" /> associée à un nom spécifié pour la configuration de point de terminaison et l'adresse distante.</summary>
      <param name="endpointConfigurationName">Nom de configuration utilisé pour le point de terminaison.</param>
      <param name="remoteAddress">
        <see cref="T:System.ServiceModel.EndpointAddress" /> qui fournit l'emplacement du service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="endpointConfigurationName" /> ou <paramref name="remoteAddress" /> est null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.#ctor(System.Type)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.ChannelFactory`1" />.  </summary>
      <param name="channelType">
        <see cref="T:System.Type" /> pour le canal produit par la fabrique.</param>
      <exception cref="T:System.ArgumentNullException">Le <paramref name="channelType" /> est null.</exception>
      <exception cref="T:System.InvalidOperationException">Le <paramref name="channelType" /> est une classe ou un type valeur et n'est pas une interface.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.CreateChannel">
      <summary>Crée un canal d'un type spécifié à une adresse de point de terminaison spécifiée.</summary>
      <returns>
        <paramref name="TChannel" /> de type <see cref="T:System.ServiceModel.Channels.IChannel" /> créé par la fabrique.</returns>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)">
      <summary>Crée un canal utilisé pour envoyer des messages à un service à une adresse de point de terminaison spécifique.</summary>
      <returns>
        <paramref name="TChannel" /> de type <see cref="T:System.ServiceModel.Channels.IChannel" /> créé par la fabrique.</returns>
      <param name="address">
        <see cref="T:System.ServiceModel.EndpointAddress" /> qui fournit l'emplacement du service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> a la valeur null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>Crée un canal utilisé pour envoyer des messages à un service à une adresse de point de terminaison spécifique via une adresse de transport spécifiée.</summary>
      <returns>
        <paramref name="TChannel" /> de type <see cref="T:System.ServiceModel.Channels.IChannel" /> créé par la fabrique.</returns>
      <param name="address">
        <see cref="T:System.ServiceModel.EndpointAddress" /> qui fournit l'emplacement du service.</param>
      <param name="via">
        <see cref="T:System.Uri" /> qui contient l'adresse de transport à laquelle le canal envoie les messages.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> a la valeur null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.ServiceModel.ChannelFactory" /> a des opérations duplex qu'elle ne prend pas en charge.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.CreateDescription">
      <summary>Crée une description du point de terminaison de service.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> du service.</returns>
      <exception cref="T:System.InvalidOperationException">Le contrat de rappel a la valeur null mais le point de terminaison de service requiert un contrat de rappel qui n'a pas la valeur null.</exception>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1">
      <summary>Fournit l'implémentation de base utilisée pour créer des objets clients Windows Communication Foundation (WCF) capables d'appeler des services.</summary>
      <typeparam name="TChannel">Canal à utiliser pour se connecter au service.</typeparam>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.ClientBase`1" /> à l'aide du point de terminaison cible par défaut du fichier de configuration de l'application. </summary>
      <exception cref="T:System.InvalidOperationException">Trois cas sont possibles : le fichier de configuration ne contient pas d'informations sur le point de terminaison par défaut, le fichier contient plusieurs points de terminaison ou il n'existe pas de fichier de configuration.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.ClientBase`1" /> à l'aide de la liaison et de l'adresse cible spécifiées. </summary>
      <param name="binding">Liaison avec laquelle lancer des appels au service.</param>
      <param name="remoteAddress">Adresse du point de terminaison du service.</param>
      <exception cref="T:System.ArgumentNullException">La liaison a la valeur null.</exception>
      <exception cref="T:System.ArgumentNullException">L'adresse distante a la valeur null.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.ClientBase`1" /> à l'aide des informations de configuration spécifiées dans le fichier de configuration de l'application par <paramref name="endpointConfigurationName" />. </summary>
      <param name="endpointConfigurationName">Nom du point de terminaison dans le fichier de configuration de l'application.</param>
      <exception cref="T:System.ArgumentNullException">Les informations du point de terminaison spécifié ont la valeur null.</exception>
      <exception cref="T:System.InvalidOperationException">Le point de terminaison est introuvable ou le contrat de point de terminaison n'est pas valide.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.String,System.ServiceModel.EndpointAddress)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.ClientBase`1" /> à l'aide des informations d'adresse cible et de point de terminaison spécifiées. </summary>
      <param name="endpointConfigurationName">Nom du point de terminaison dans le fichier de configuration de l'application.</param>
      <param name="remoteAddress">Adresse du service.</param>
      <exception cref="T:System.ArgumentNullException">Le point de terminaison a la valeur null.</exception>
      <exception cref="T:System.ArgumentNullException">L'adresse distante a la valeur null.</exception>
      <exception cref="T:System.InvalidOperationException">Le point de terminaison est introuvable ou le contrat de point de terminaison n'est pas valide.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.ClientBase`1" />.</summary>
      <param name="endpointConfigurationName">Nom du point de terminaison dans le fichier de configuration de l'application.</param>
      <param name="remoteAddress">Adresse du service.</param>
      <exception cref="T:System.ArgumentNullException">Le point de terminaison a la valeur null.</exception>
      <exception cref="T:System.ArgumentNullException">L'adresse distante a la valeur null.</exception>
      <exception cref="T:System.InvalidOperationException">Le point de terminaison est introuvable ou le contrat de point de terminaison n'est pas valide.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.Abort">
      <summary>Provoque la transition immédiate d'un objet <see cref="T:System.ServiceModel.ClientBase`1" /> de son état actuel à l'état fermé.</summary>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.Channel">
      <summary>Obtient le canal interne utilisé pour envoyer des messages à divers points de terminaison de service configurés.</summary>
      <returns>Canal d'un type spécifié.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelFactory">
      <summary>Obtient l'objet <see cref="T:System.ServiceModel.ChannelFactory`1" /> sous-jacent.</summary>
      <returns>Objet <see cref="T:System.ServiceModel.ChannelFactory`1" />.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ClientCredentials">
      <summary>Obtient les informations d'identification du client utilisées pour appeler une opération.</summary>
      <returns>Retourne des <see cref="T:System.ServiceModel.Description.ClientCredentials" /> qui représentent la preuve d'identité présentée par le client.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.CreateChannel">
      <summary>Retourne un nouveau canal conduisant au service.</summary>
      <returns>Type de canal accepté par le contrat de service.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.Endpoint">
      <summary>Obtient le point de terminaison cible pour le service auquel le client WCF peut se connecter.</summary>
      <returns>Point de terminaison cible.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.GetDefaultValueForInitialization``1">
      <summary>Réplique le comportement du mot clé par défaut en C#.</summary>
      <returns>Retourne null si T est un type de référence et zéro si T est un type de valeur numérique.</returns>
      <typeparam name="T">Type identifié comme valeur de référence ou numérique par le mot clé.</typeparam>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.InnerChannel">
      <summary>Obtient l'implémentation <see cref="T:System.ServiceModel.IClientChannel" /> sous-jacente.</summary>
      <returns>Canal client pour l'objet client WCF.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase{`0}.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase{`0}.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)">
      <summary>Prend en charge l'implémentation du modèle asynchrone basé sur des événements.Pour plus d'informations sur ce modèle, consultez Vue d'ensemble du modèle asynchrone basé sur des événements.</summary>
      <param name="beginOperationDelegate">Délégué utilisé pour appeler l'opération asynchrone.</param>
      <param name="inValues">Valeurs d'entrée de l'appel asynchrone.</param>
      <param name="endOperationDelegate">Délégué utilisé pour terminer l'appel asynchrone au terme de son exécution.</param>
      <param name="operationCompletedCallback">Rappel fourni par le client appelé à la fin de la méthode asynchrone.Ce rappel est passé au <see cref="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate" />.</param>
      <param name="userState">Objet <paramref name="userState" /> à associer à l'appel asynchrone.</param>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.State">
      <summary>Obtient l'état actuel de l'objet <see cref="T:System.ServiceModel.ClientBase`1" />.</summary>
      <returns>Valeur du <see cref="T:System.ServiceModel.CommunicationState" /> de l'objet.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)">
      <summary>Commence une opération asynchrone pour fermer l'objet <see cref="T:System.ServiceModel.ClientBase`1" />.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui fait référence à l'opération de fermeture asynchrone.</returns>
      <param name="callback">Méthode qui reçoit le rappel au terme de l'opération.</param>
      <param name="state">Données d'état.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Commence une opération asynchrone pour fermer l'objet <see cref="T:System.ServiceModel.ClientBase`1" /> dans un délai d'attente spécifié.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui fait référence à l'opération asynchrone de début de la fermeture.</returns>
      <param name="timeout">Période au cours de laquelle l'appel doit être exécuté.</param>
      <param name="callback">Objet de rappel appelé au terme de l'opération.</param>
      <param name="state">Données d'état.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)">
      <summary>Commence une opération asynchrone pour ouvrir l'objet <see cref="T:System.ServiceModel.ClientBase`1" />.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui fait référence à l'opération d'ouverture asynchrone. </returns>
      <param name="callback">Méthode qui reçoit le rappel au terme de l'opération.</param>
      <param name="state">Données d'état.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Commence une opération asynchrone pour ouvrir l'objet <see cref="T:System.ServiceModel.ClientBase`1" /> dans un intervalle de temps spécifié.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui fait référence à l'opération d'ouverture asynchrone.</returns>
      <param name="timeout">Période au cours de laquelle l'appel doit être exécuté.</param>
      <param name="callback">Méthode qui reçoit le rappel au terme de l'opération.</param>
      <param name="state">Données d'état.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Close"></member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)">
      <summary>Provoque la transition d'un objet <see cref="T:System.ServiceModel.ClientBase`1" /> de son état actuel à l'état fermé.</summary>
      <param name="timeout">Période au cours de laquelle l'appel doit être exécuté.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Closed">
      <summary>Gestionnaire d'événements appelé lorsque l'objet <see cref="T:System.ServiceModel.ClientBase`1" /> est passé de son état actuel à l'état fermé.</summary>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Closing">
      <summary>Gestionnaire d'événements appelé lorsque l'objet <see cref="T:System.ServiceModel.ClientBase`1" /> passe de son état actuel à l'état fermé.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)">
      <summary>Clôture une opération asynchrone pour fermer l'objet <see cref="T:System.ServiceModel.ClientBase`1" />.</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> utilisé pour clôturer l'opération de fermeture asynchrone.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)">
      <summary>Clôture une opération asynchrone pour ouvrir l'objet <see cref="T:System.ServiceModel.ClientBase`1" />.</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> utilisé pour clôturer l'opération asynchrone d'ouverture.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Faulted">
      <summary>Gestionnaire d'événements appelé lorsqu'une erreur se produit lors de l'exécution d'une opération sur l'objet <see cref="T:System.ServiceModel.ClientBase`1" />.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Open"></member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)">
      <summary>Provoque la transition d'un objet <see cref="T:System.ServiceModel.ClientBase`1" /> de l'état créé à l'état ouvert dans un intervalle de temps spécifié.</summary>
      <param name="timeout">Période au cours de laquelle l'appel doit être exécuté.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Opened">
      <summary>Gestionnaire d'événements appelé lors de la transition de l'objet <see cref="T:System.ServiceModel.ClientBase`1" /> de l'état créé à l'état ouvert.</summary>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Opening">
      <summary>Gestionnaire d'événements appelé lors de la transition de l'objet <see cref="T:System.ServiceModel.ClientBase`1" /> de l'état créé à l'état ouvert.</summary>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate">
      <summary>Délégué utilisé par <see cref="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" /> pour appeler des opérations asynchrones sur le client. </summary>
      <param name="inValues">Valeurs d'entrée de l'appel asynchrone.</param>
      <param name="asyncCallback">Référence à la méthode à appeler au terme de l'opération asynchrone correspondante.</param>
      <param name="state">
        <see cref="T:System.Object" /> permettant au client de distinguer les différents appels asynchrones.Cet objet est mis à la disposition du client dans le paramètre d'arguments du rappel d'exécution de l'événement.</param>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1.ChannelBase`1">
      <summary>Représente la classe générique de ChannelBase.</summary>
      <typeparam name="T">Classe générique.</typeparam>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.#ctor(System.ServiceModel.ClientBase{`1})">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.ClientBase`1.ChannelBase`1" /> à partir d'une instance existante de la classe.</summary>
      <param name="client">Objet utilisé pour initialiser la nouvelle instance de la classe.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
      <summary>Démarre un appel asynchrone d'une méthode spécifiée par nom.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui référence la méthode asynchrone appelée.</returns>
      <param name="methodName">Nom de la méthode à appeler de façon asynchrone.</param>
      <param name="args">Tableau d'arguments de la méthode appelée.</param>
      <param name="callback">Délégué <see cref="T:System.AsyncCallback" />.</param>
      <param name="state">Objet d'état.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.EndInvoke(System.String,System.Object[],System.IAsyncResult)">
      <summary>Termine un appel asynchrone par le nom d'une méthode spécifiée.</summary>
      <returns>Sortie <see cref="T:System.Object" /> par la méthode appelée.</returns>
      <param name="methodName">Nom de la méthode appelée de façon asynchrone.</param>
      <param name="args">Tableau d'arguments de la méthode appelée.</param>
      <param name="result">Résultat retourné par un appel.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#IDisposable#Dispose">
      <summary>Exécute les tâches définies par l'application relatives à la libération ou à la redéfinition des ressources non managées associées au canal.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IChannel#GetProperty``1">
      <summary>Retourne un objet typé demandé (s'il existe) à partir de la couche appropriée dans la pile de canaux.</summary>
      <returns>Objet typé T demandé, s'il existe ; dans le cas contraire, null.</returns>
      <typeparam name="TProperty">L'objet type pour lequel la méthode effectue une requête.</typeparam>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>Commence une opération asynchrone pour transmettre un message à la destination du canal de sortie.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui fait référence à la transmission asynchrone du message.</returns>
      <param name="message">Message qui est envoyé sur le canal de sortie.</param>
      <param name="callback">Délégué <see cref="T:System.AsyncCallback" />.</param>
      <param name="state">Objet, spécifié par l'application, qui contient des informations d'état associées à l'opération asynchrone d'envoi.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Commence une opération asynchrone pour transmettre un message à la destination du canal de sortie dans un intervalle de temps spécifié.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui fait référence à l'opération asynchrone d'envoi.</returns>
      <param name="message">Message qui est envoyé sur le canal de sortie.</param>
      <param name="timeout">Timespan spécifiant le délai d'exécution de l'opération d'envoi avant dépassement du délai d'attente.</param>
      <param name="callback">Le délégué <see cref="T:System.AsyncCallback" /> qui reçoit la notification de la fin de l'envoi de l'opération asynchrone.</param>
      <param name="state">Objet, spécifié par l'application, qui contient des informations d'état associées à l'opération asynchrone d'envoi.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#EndSend(System.IAsyncResult)">
      <summary>Termine une opération asynchrone pour transmettre un message à la destination du canal de sortie.</summary>
      <param name="result">Résultat retourné par un appel.</param>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#RemoteAddress">
      <summary>Obtient la destination du service auquel les messages sont envoyés sur le canal de sortie.</summary>
      <returns>
        <see cref="T:System.ServiceModel.EndpointAddress" /> du service auquel le canal de sortie envoie des messages.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send(System.ServiceModel.Channels.Message)">
      <summary>Transmet un message à la destination du canal de sortie.</summary>
      <param name="message">Message qui est envoyé sur le canal de sortie.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <summary>Envoie un message sur le canal de sortie actuel dans un intervalle de temps spécifié.</summary>
      <param name="message">Message qui est envoyé sur le canal de sortie.</param>
      <param name="timeout">Timespan spécifiant le délai d'exécution de l'opération d'envoi avant dépassement du délai d'attente.</param>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Via">
      <summary>Obtient l'URI qui contient l'adresse de transport à laquelle les messages sont envoyés sur le canal de sortie.</summary>
      <returns>La <see cref="T:System.Uri" /> qui contient l'adresse de transport à laquelle les messages sont envoyés sur le canal de sortie.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>Lance une opération asynchrone pour transmettre un message de demande du point de vue de la réponse d'un échange de messages de demande-réponse.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui fait référence à la transmission asynchrone du message.</returns>
      <param name="message">Message de requête à transmettre.</param>
      <param name="callback">Le délégué <see cref="T:System.AsyncCallback" /> qui reçoit la notification de la fin de l'opération asynchrone transmettant un message de demande.</param>
      <param name="state">Objet, spécifié par l'application, qui contient les informations d'état associées à l'opération asynchrone transmettant un message de demande.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Lance une opération asynchrone pour transmettre un message de demande du point de vue réponse d'un échange de messages de demande-réponse, dans un intervalle de temps spécifié.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui fait référence à la transmission asynchrone du message.</returns>
      <param name="message">Message de requête à transmettre.</param>
      <param name="timeout">Timespan qui spécifie l'intervalle de temps au cours duquel une réponse doit être reçue.</param>
      <param name="callback">Le délégué <see cref="T:System.AsyncCallback" /> qui reçoit la notification de la fin de l'opération asynchrone transmettant un message de demande.</param>
      <param name="state">Objet, spécifié par l'application, qui contient les informations d'état associées à l'opération asynchrone transmettant un message de demande.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#EndRequest(System.IAsyncResult)">
      <summary>Complète une opération asynchrone pour retourner une réponse basée sur un message à une demande transmise.</summary>
      <returns>Message reçu en réponse à la demande.</returns>
      <param name="result">Résultat de l'opération.</param>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#RemoteAddress">
      <summary>Obtient l'adresse distante à laquelle le canal de demande envoie des messages.</summary>
      <returns>
        <see cref="T:System.ServiceModel.EndpointAddress" /> à laquelle le canal de demande envoie des messages.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request(System.ServiceModel.Channels.Message)">
      <summary>Envoie une demande basée sur un message et retourne la réponse basée sur un message corrélé.</summary>
      <returns>Message reçu en réponse à la demande.</returns>
      <param name="message">Message de requête à transmettre.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <summary>Envoie une demande basée sur un message et retourne la réponse basée sur un message corrélé dans un intervalle de temps spécifié.</summary>
      <returns>Message reçu en réponse à la demande.</returns>
      <param name="message">Message de requête à transmettre.</param>
      <param name="timeout">Timespan qui spécifie l'intervalle de temps au cours duquel une réponse doit être reçue.</param>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Via">
      <summary>Obtient l'adresse de transport à laquelle la demande est envoyée.</summary>
      <returns>
        <see cref="T:System.Uri" /> qui contient l'adresse de transport à laquelle le message est envoyé.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#AllowInitializationUI">
      <summary>Obtient ou définit une valeur qui indique si le canal client permet une initialisation d'interface utilisateur.</summary>
      <returns>True si le canal client permet une interface utilisateur d'initialisation ; sinon, false.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#BeginDisplayInitializationUI(System.AsyncCallback,System.Object)">
      <summary>Appel asynchrone pour commencer l'utilisation d'une interface utilisateur pour obtenir les informations d'identification.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> à utiliser pour rappeler lorsque le traitement est terminé.</returns>
      <param name="callback">Méthode appelée lorsque cette méthode est terminée.</param>
      <param name="state">Informations sur l'état du canal.</param>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#DidInteractiveInitialization">
      <summary>Obtient une valeur indiquant si un appel a été effectué à une interface utilisateur pour obtenir les informations d'identification.</summary>
      <returns>True si un appel à une interface utilisateur a été effectué pour obtenir les informations d'identification ; sinon, false.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#DisplayInitializationUI">
      <summary>Spécifie un appel à une interface utilisateur pour obtenir les informations d'identification.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#EndDisplayInitializationUI(System.IAsyncResult)">
      <summary>Appelée lorsque l'appel à BeginDisplayInitializationUI est terminé.</summary>
      <param name="result">Résultat de l'opération.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#UnknownMessageReceived">
      <summary>Gestionnaire d'événements appelé lorsque l'objet ClientBase reçoit un message inconnu.</summary>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#Via">
      <summary>Obtient l'URI qui contient l'adresse de transport à laquelle les messages sont envoyés sur le canal client.</summary>
      <returns>URI contenant l'adresse de transport à laquelle les messages sont envoyés sur le canal.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Abort">
      <summary>Provoque la transition immédiate d'un objet de communication de son état actuel à l'état fermé.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)">
      <summary>Commence une opération asynchrone pour fermer un objet de communication.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui fait référence à l'opération de fermeture asynchrone.</returns>
      <param name="callback">Le délégué <see cref="T:System.AsyncCallback" /> qui reçoit la notification de la fin de l'opération asynchrone de fermeture.</param>
      <param name="state">Objet spécifié par l'application, qui contient les informations d'état associées à l'opération asynchrone de fermeture.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Commence une opération asynchrone pour fermer un objet de communication avec un délai d'attente spécifié.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui fait référence à l'opération de fermeture asynchrone.</returns>
      <param name="timeout">Timespan spécifiant le délai d'exécution de l'opération d'envoi avant dépassement du délai d'attente.</param>
      <param name="callback">Le délégué <see cref="T:System.AsyncCallback" /> qui reçoit la notification de la fin de l'opération asynchrone de fermeture.</param>
      <param name="state">Objet, spécifié par l'application, qui contient les informations d'état associées à l'opération asynchrone de fermeture.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)">
      <summary>Commence une opération asynchrone pour ouvrir un objet de communication.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui fait référence à l'opération d'ouverture asynchrone.</returns>
      <param name="callback">Le délégué <see cref="T:System.AsyncCallback" /> qui reçoit la notification de la fin de l'opération d'ouverture asynchrone.</param>
      <param name="state">Objet, spécifié par l'application, qui contient des informations d'état associées à l'opération asynchrone d'ouverture.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Commence une opération asynchrone pour ouvrir un objet de communication dans un intervalle de temps spécifié.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui fait référence à l'opération d'ouverture asynchrone.</returns>
      <param name="timeout">Timespan spécifiant le délai d'exécution de l'opération d'envoi avant dépassement du délai d'attente.</param>
      <param name="callback">Le délégué <see cref="T:System.AsyncCallback" /> qui reçoit la notification de la fin de l'opération d'ouverture asynchrone.</param>
      <param name="state">Objet, spécifié par l'application, qui contient des informations d'état associées à l'opération asynchrone d'ouverture.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close">
      <summary>Provoque la transition d'un objet de communication de son état actuel à l'état fermé.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)">
      <summary>Provoque la transition d'un objet de communication de son état actuel à l'état fermé.</summary>
      <param name="timeout">Timespan spécifiant le délai d'exécution de l'opération d'envoi avant dépassement du délai d'attente.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Closed">
      <summary>Gestionnaire d'événements appelé lorsque l'objet ClientBase est passé de son état actuel à l'état fermé.</summary>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Closing">
      <summary>Gestionnaire d'événements appelé lorsque l'objet ClientBase passe de son état actuel à l'état fermé.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)">
      <summary>Termine une opération asynchrone pour fermer un objet de communication.</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> qui est retourné par un appel à la méthode BeginClose().</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)">
      <summary>Termine une opération asynchrone pour ouvrir un objet de communication.</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> qui est retourné par un appel à la méthode BeginOpen().</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Faulted">
      <summary>Gestionnaire d'événements appelé lorsqu'une erreur se produit lors de l'exécution d'une opération sur l'objet ClientBase.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open">
      <summary>Provoque la transition d'un objet de communication de l'état créé à l'état ouvert.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)">
      <summary>Provoque la transition d'un objet de communication de l'état créé à l'état ouvert dans un intervalle de temps spécifié.</summary>
      <param name="timeout">Timespan spécifiant le délai d'exécution de l'opération d'envoi avant dépassement du délai d'attente.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Opened">
      <summary>Gestionnaire d'événements appelé lorsque l'objet ClientBase est passé de l'état créé à l'état ouvert.</summary>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Opening">
      <summary>Gestionnaire d'événements appelé lors de la transition de l'objet ClientBase de l'état créé à l'état ouvert.</summary>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#State">
      <summary>Obtient l'état actuel de l'objet orienté communication.</summary>
      <returns>Valeur du <see cref="T:System.ServiceModel.CommunicationState" /> de l'objet.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#AllowOutputBatching">
      <summary>Obtient ou définit une valeur qui indique si le traitement par lots des messages sortants est autorisé ; sinon, false.</summary>
      <returns>True si le traitement par lots des messages sortants est autorisé ; sinon, false.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#InputSession">
      <summary>Obtient la session d'entrée pour le canal.</summary>
      <returns>Session d'entrée pour le canal.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#LocalAddress">
      <summary>Obtient le point de terminaison local pour le canal.</summary>
      <returns>Point de terminaison local du canal.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#OperationTimeout">
      <summary>Obtient ou définit le délai de fin d'une opération avant qu'une exception ne soit levée.</summary>
      <returns>Timespan qui spécifie le délai de fin de l'opération.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#OutputSession">
      <summary>Obtient la session de sortie associée au canal, le cas échéant.</summary>
      <returns>Implémentation de <see cref="T:System.ServiceModel.Channels.IOutputSession" /> si une session d'entrée existe ; sinon, null.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#RemoteAddress">
      <summary>Obtient l'adresse distante associée au canal.</summary>
      <returns>L'<see cref="T:System.ServiceModel.EndpointAddress" /> distante pour le canal.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#SessionId">
      <summary>Obtient un identificateur pour la session active, le cas échéant.</summary>
      <returns>L'identificateur de session actuel, le cas échéant.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IExtensibleObject{T}#Extensions">
      <summary>Obtient une collection d'objets d'extension pour cet objet extensible.</summary>
      <returns>
        <see cref="T:System.ServiceModel.IExtensionCollection`1" /> d'objets d'extension.</returns>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1.EndOperationDelegate">
      <summary>Représente un délégué qui est appelé par <see cref="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" /> après réussite de l'appel lancé par <see cref="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" /> à <see cref="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate" />.</summary>
      <param name="result">Résultat retourné par l'appel lancé par <see cref="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" />à <see cref="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate" />.</param>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1.InvokeAsyncCompletedEventArgs">
      <summary>Enregistre les résultats d'un appel asynchrone effectué par le client.</summary>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.InvokeAsyncCompletedEventArgs.Results">
      <summary>Obtient les résultats d'un appel asynchrone effectué par le client.</summary>
      <returns>Tableau de <see cref="T:System.Object" /> qui contient les résultats d'un appel asynchrone effectué par le client.</returns>
    </member>
    <member name="T:System.ServiceModel.CommunicationException">
      <summary>Représente une erreur de communication dans le service ou l'application cliente.</summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.CommunicationException" />. </summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.CommunicationException" /> à l'aide du message spécifié.</summary>
      <param name="message">Description de la condition d'erreur.</param>
    </member>
    <member name="M:System.ServiceModel.CommunicationException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.CommunicationException" /> à l'aide du message et de l'exception interne spécifiés.</summary>
      <param name="message">Description de la condition d'erreur.</param>
      <param name="innerException">Exception interne à utiliser.</param>
    </member>
    <member name="T:System.ServiceModel.CommunicationObjectAbortedException">
      <summary>L'exception levée lors d'un appel à un objet <see cref="T:System.ServiceModel.ICommunicationObject" /> qui a été abandonné.</summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.CommunicationObjectAbortedException" />.  </summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.CommunicationObjectAbortedException" /> avec le message spécifié. </summary>
      <param name="message">Le message contenu dans l'exception.</param>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.CommunicationObjectAbortedException" /> à l'aide du message et de l'exception interne spécifiés. </summary>
      <param name="message">Message d'exception.</param>
      <param name="innerException">Exception interne.</param>
    </member>
    <member name="T:System.ServiceModel.CommunicationObjectFaultedException">
      <summary>Exception levée lorsqu'un objet de communication qui a généré une erreur est appelé. </summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" />. </summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" /> avec le message spécifié.</summary>
      <param name="message">Message qui décrit l'exception.</param>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" /> à l'aide du message et de l'exception interne spécifiés.</summary>
      <param name="message">Message d'exception.</param>
      <param name="innerException">Exception interne.</param>
    </member>
    <member name="T:System.ServiceModel.CommunicationState">
      <summary>Définit les états dans lesquels un <see cref="T:System.ServiceModel.ICommunicationObject" /> peut exister. </summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Closed">
      <summary>Indique que l'objet de communication a été fermé et n'est plus utilisable. </summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Closing">
      <summary>Indique que l'objet de communication est en train de passer à l'état <see cref="F:System.ServiceModel.CommunicationState.Closed" />. </summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Created">
      <summary>Indique que l'objet de communication a été instancié et est configurable, mais pas encore ouvert ou prêt pour utilisation.</summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Faulted">
      <summary>Indique que l'objet de communication a rencontré une erreur ou un défaut dont il ne peut pas récupérer et qu'il n'est donc plus utilisable. </summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Opened">
      <summary>Indique que l'objet de communication est maintenant ouvert et prêt à être utilisé. </summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Opening">
      <summary>Indique que l'objet de communication est en train de passer de l'état <see cref="F:System.ServiceModel.CommunicationState.Created" /> à l'état <see cref="F:System.ServiceModel.CommunicationState.Opened" />. </summary>
    </member>
    <member name="T:System.ServiceModel.DataContractFormatAttribute">
      <summary>Demande à l'infrastructure Windows Communication Foundation (WCF) d'utiliser le <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</summary>
    </member>
    <member name="M:System.ServiceModel.DataContractFormatAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.DataContractFormatAttribute" />. </summary>
    </member>
    <member name="P:System.ServiceModel.DataContractFormatAttribute.Style">
      <summary>Obtient ou définit le style SOAP des données sérialisées.</summary>
      <returns>Une des valeurs de <see cref="T:System.ServiceModel.OperationFormatStyle" />.La valeur par défaut est <see cref="F:System.ServiceModel.OperationFormatStyle.Document" />.</returns>
    </member>
    <member name="T:System.ServiceModel.EndpointAddress">
      <summary>Fournit une adresse réseau unique permettant à un client de communiquer avec un point de terminaison de service.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.EndpointAddress" /> avec une chaîne URI spécifiée.</summary>
      <param name="uri">URI identifiant le point de terminaison.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.#ctor(System.Uri,System.ServiceModel.Channels.AddressHeader[])">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.EndpointAddress" /> avec un URI et des en-têtes spécifiés.</summary>
      <param name="uri">
        <see cref="T:System.Uri" /> identifiant l'emplacement du point de terminaison.</param>
      <param name="addressHeaders">
        <see cref="T:System.Array" /> de type <see cref="T:System.ServiceModel.Channels.AddressHeader" /> contenant des informations d'adresse utilisées pour interagir avec le point de terminaison.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.#ctor(System.Uri,System.ServiceModel.EndpointIdentity,System.ServiceModel.Channels.AddressHeader[])">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.EndpointAddress" /> avec un URI, une identité et des en-têtes spécifiés.</summary>
      <param name="uri">
        <see cref="T:System.Uri" /> identifiant l'emplacement du point de terminaison.</param>
      <param name="identity">
        <see cref="T:System.ServiceModel.EndpointIdentity" /> du point de terminaison.</param>
      <param name="addressHeaders">
        <see cref="T:System.Array" /> de type <see cref="T:System.ServiceModel.Channels.AddressHeader" /> contenant des informations d'adresse utilisées pour interagir avec le point de terminaison.</param>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.AnonymousUri">
      <summary>Obtient une représentation de version indépendante de l'URI anonyme.</summary>
      <returns>
        <see cref="T:System.Uri" /> avec la valeur http://schemas.microsoft.com/2005/12/ServiceModel/Addressing/Anonymous.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.ApplyTo(System.ServiceModel.Channels.Message)">
      <summary>Assigne l'URI et les propriétés de l'adresse de point de terminaison aux valeurs des en-têtes d'un message spécifié.</summary>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> dont les valeurs d'en-tête sont assignées.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> a la valeur null.</exception>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.Equals(System.Object)">
      <summary>Retourne une valeur qui indique si un objet spécifié est équivalent à l'adresse actuelle du point de terminaison.</summary>
      <returns>true si l'objet spécifié est équivalent à l'adresse actuelle ; sinon, false.</returns>
      <param name="obj">
        <see cref="T:System.Object" /> à comparer avec l'adresse actuelle du point de terminaison.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.GetHashCode">
      <summary>Fournit un code de hachage unique pour l'adresse du point de terminaison actuel. </summary>
      <returns>Un code de hachage unique pour l'adresse du point de terminaison actuel.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.Headers">
      <summary>Obtient la collection d'en-têtes d'adresse des points de terminaison que le générateur peut créer.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.AddressHeaderCollection" /> contenant les informations d'adresse du point de terminaison.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.Identity">
      <summary>Obtient l'identité pour le point de terminaison utilisé pour l'authentifier.</summary>
      <returns>
        <see cref="T:System.ServiceModel.EndpointIdentity" /> du point de terminaison.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.IsAnonymous">
      <summary>Obtient une valeur qui indique si le point de terminaison est anonyme.</summary>
      <returns>true si le point de terminaison est <see cref="P:System.ServiceModel.EndpointAddress.AnonymousUri" /> ; sinon, false.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.IsNone">
      <summary>Obtient une valeur qui indique si l'URI pour le point de terminaison est la propriété <see cref="P:System.ServiceModel.EndpointAddress.NoneUri" />.</summary>
      <returns>true si l'URI du point de terminaison est <see cref="P:System.ServiceModel.EndpointAddress.NoneUri" /> ; sinon, false. </returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.NoneUri">
      <summary>Obtient un URI de version indépendante utilisé pour l'adresse d'un point de terminaison auquel un message ne doit pas être envoyé.</summary>
      <returns>
        <see cref="T:System.Uri" /> avec la valeur http://schemas.microsoft.com/2005/12/ServiceModel/Addressing/None.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.op_Equality(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress)">
      <summary>Retourne une valeur qui indique si des adresses de point de terminaison spécifiées ne sont pas équivalentes.</summary>
      <returns>true si les adresses de point de terminaison sont équivalentes ; sinon, false.</returns>
      <param name="address1">Un des objets <see cref="T:System.ServiceModel.EndpointAddress" /> comparés.</param>
      <param name="address2">Un des objets <see cref="T:System.ServiceModel.EndpointAddress" /> comparés.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.op_Inequality(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress)">
      <summary>Retourne une valeur qui indique si des adresses de point de terminaison spécifiées ne sont pas équivalentes.</summary>
      <returns>true si les adresses de point de terminaison ne sont pas équivalentes ; sinon, false.</returns>
      <param name="address1">Un des objets <see cref="T:System.ServiceModel.EndpointAddress" /> comparés.</param>
      <param name="address2">Un des objets <see cref="T:System.ServiceModel.EndpointAddress" /> comparés.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.ReadFrom(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryReader)">
      <summary>Lit une adresse de point de terminaison pour une version d'adresse spécifiée à partir d'un lecteur de dictionnaire XML spécifié.</summary>
      <returns>
        <see cref="T:System.ServiceModel.EndpointAddress" /> lu à partir du lecteur de dictionnaire XML.</returns>
      <param name="addressingVersion">
        <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> de l'adresse du point de terminaison actuel.</param>
      <param name="reader">
        <see cref="T:System.Xml.XmlDictionaryReader" /> à partir duquel l'adresse de point de terminaison est obtenue.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.ToString">
      <summary>Retourne une représentation sous forme de chaîne canonique de l'URI contenu dans l'adresse de point de terminaison.</summary>
      <returns>URI identifiant le point de terminaison.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.Uri">
      <summary>Obtient l'URI pour le point de terminaison.</summary>
      <returns>
        <see cref="T:System.Uri" /> du point de terminaison.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.WriteContentsTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryWriter)">
      <summary>Enregistre tous les nœuds enfants du nœud sur le writer de dictionnaire XML spécifié.</summary>
      <param name="addressingVersion">
        <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> de l'adresse du point de terminaison actuel.</param>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> dans lequel l'adresse de point de terminaison est enregistrée.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> ou <paramref name="addressingVersion" /> est null.</exception>
    </member>
    <member name="T:System.ServiceModel.EndpointAddressBuilder">
      <summary>Fabrique destinée à produire de nouvelles adresses de point de terminaison (immuables) avec des valeurs de propriété spécifiques.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressBuilder.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.EndpointAddressBuilder" />.  </summary>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressBuilder.#ctor(System.ServiceModel.EndpointAddress)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.EndpointAddressBuilder" /> à partir d'une adresse de point de terminaison existante.</summary>
      <param name="address">L'<see cref="T:System.ServiceModel.EndpointAddress" /> dont les valeurs de propriété sont utilisées pour initialiser les valeurs de propriété de cette instance.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> a la valeur null.</exception>
    </member>
    <member name="P:System.ServiceModel.EndpointAddressBuilder.Headers">
      <summary>Obtient la liste des en-têtes d'adresse des points de terminaison que le générateur peut créer.</summary>
      <returns>La <see cref="T:System.Collections.Generic.List`1" /> de type <see cref="T:System.ServiceModel.Channels.AddressHeader" /> qui contient les en-têtes d'adresse des points de terminaison que le générateur peut créer.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddressBuilder.Identity">
      <summary>Obtient ou définit l'identité des points de terminaison que le générateur peut créer.</summary>
      <returns>
        <see cref="T:System.ServiceModel.EndpointIdentity" /> du point de terminaison.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressBuilder.ToEndpointAddress">
      <summary>Crée une adresse de point de terminaison initialisée avec les valeurs de propriété du générateur d'adresses de point de terminaison actuel.</summary>
      <returns>L'<see cref="T:System.ServiceModel.EndpointAddress" /> dont les propriétés sont initialisées avec les valeurs du générateur d'adresses de point de terminaison actuel.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddressBuilder.Uri">
      <summary>Obtient ou définit l'URI des points de terminaison que le générateur peut créer.</summary>
      <returns>L'<see cref="T:System.Uri" /> qui spécifie l'adresse de point de terminaison.</returns>
    </member>
    <member name="T:System.ServiceModel.EndpointIdentity">
      <summary>Classe abstraite qui, lorsqu'elle est implémentée, fournit une identité qui permet l'authentification d'un point de terminaison par les clients qui échangent des messages avec ce dernier.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointIdentity.#ctor">
      <summary>Crée une instance <see cref="T:System.ServiceModel.EndpointIdentity" /> vide.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointIdentity.Equals(System.Object)">
      <summary>Retourne une valeur qui détermine si l'objet spécifié est égal à l'objet d'identité actuel ou s'ils ont des propriétés de sécurité identiques.</summary>
      <returns>true si l'objet <paramref name="obj" /> spécifié équivaut à l'identité actuelle ou contient les mêmes propriétés de sécurité ; sinon, false.</returns>
      <param name="obj">
        <see cref="T:System.Object" /> comparé afin de déterminer s'il est égal à l'identité actuelle.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointIdentity.GetHashCode">
      <summary>Fournit un code de hachage pour l'instance actuelle de l'identité.</summary>
      <returns>Code de hachage de l'identité actuelle.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointIdentity.ToString">
      <summary>Retourne l'identité.</summary>
      <returns>
        <see cref="T:System.String" /> de type "identité(chaîne)" où la chaîne = <see cref="P:System.ServiceModel.EndpointIdentity.IdentityClaim" />.</returns>
    </member>
    <member name="T:System.ServiceModel.EndpointNotFoundException">
      <summary>Exception levée lorsqu'un point de terminaison distant est introuvable ou inaccessible.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointNotFoundException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.EndpointNotFoundException" /> avec un message d'erreur spécifié.</summary>
      <param name="message">Message d'erreur indiquant la raison de l'exception.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.EndpointNotFoundException" /> avec un message d'erreur et l'exception interne à l'origine de l'actuelle exception.</summary>
      <param name="message">Message d'erreur indiquant la raison de l'exception.</param>
      <param name="innerException">L'<see cref="T:System.Exception" /> à l'origine de la levée de l'exception actuelle.</param>
    </member>
    <member name="T:System.ServiceModel.EnvelopeVersion">
      <summary>Contient des informations liées à la version de SOAP associée à un message et son échange.</summary>
    </member>
    <member name="M:System.ServiceModel.EnvelopeVersion.GetUltimateDestinationActorValues">
      <summary>Obtient une chaîne qui contient le nom URI pour le rôle SOAP associé à la version de message actuelle pour la destination finale.</summary>
      <returns>Chaîne vide si SOAP 1.1 est utilisé ; chaîne qui contient  http://www.w3.org/2003/05/soap-envelope/role/ultimateReceiver si SOAP 1.2 est utilisé.</returns>
    </member>
    <member name="P:System.ServiceModel.EnvelopeVersion.NextDestinationActorValue">
      <summary>Obtient une chaîne qui contient le nom URI pour le rôle SOAP associé à la version de message actuelle pour la destination suivante.</summary>
      <returns>Chaîne qui contient http://schemas.xmlsoap.org/soap/actor/next si SOAP 1.1 est utilisé ; chaîne qui contient http://www.w3.org/2003/05/soap-envelope/role/next si SOAP 1.2 est utilisé et chaîne vide s'il n'y a pas de version de message.</returns>
    </member>
    <member name="P:System.ServiceModel.EnvelopeVersion.None">
      <summary>Obtient la version d'enveloppe sans version de SOAP.</summary>
      <returns>Version d'enveloppe sans format SOAP.</returns>
    </member>
    <member name="P:System.ServiceModel.EnvelopeVersion.Soap11">
      <summary>Obtient la version d'enveloppe SOAP 1.1.</summary>
      <returns>Objet <see cref="T:System.ServiceModel.EnvelopeVersion" /> SOAP1.1.</returns>
    </member>
    <member name="P:System.ServiceModel.EnvelopeVersion.Soap12">
      <summary>Obtient la version d'enveloppe SOAP 1.2.</summary>
      <returns>Objet <see cref="T:System.ServiceModel.EnvelopeVersion" /> SOAP1.2.</returns>
    </member>
    <member name="M:System.ServiceModel.EnvelopeVersion.ToString">
      <summary>Obtient une chaîne qui représente la version d'enveloppe actuelle.</summary>
      <returns>Représentation sous forme de chaîne de la version d'enveloppe actuelle.</returns>
    </member>
    <member name="T:System.ServiceModel.ExceptionDetail">
      <summary>Représente les informations détaillées sur l'erreur.</summary>
    </member>
    <member name="M:System.ServiceModel.ExceptionDetail.#ctor(System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.ExceptionDetail" /> à partir de l'exception. </summary>
      <param name="exception">L'exception à sérialiser comme un objet <see cref="T:System.ServiceModel.ExceptionDetail" />.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="exception" /> est null.</exception>
    </member>
    <member name="P:System.ServiceModel.ExceptionDetail.HelpLink">
      <summary>Obtient ou définit le lien d'aide de l'exception passée au constructeur.</summary>
      <returns>Informations sur le lien d'aide de l'exception.</returns>
    </member>
    <member name="P:System.ServiceModel.ExceptionDetail.InnerException">
      <summary>Obtient ou définit l'objet <see cref="T:System.ServiceModel.ExceptionDetail" /> qui représente l'exception interne.</summary>
      <returns>Informations sur l'exception interne.</returns>
    </member>
    <member name="P:System.ServiceModel.ExceptionDetail.Message">
      <summary>Obtient ou définit le message de l'exception passée au constructeur.</summary>
      <returns>Message d'exception.</returns>
    </member>
    <member name="P:System.ServiceModel.ExceptionDetail.StackTrace">
      <summary>Obtient ou définit les informations de traçage de la pile de l'exception passée au constructeur.</summary>
      <returns>Trace de la pile de l'exception.</returns>
    </member>
    <member name="M:System.ServiceModel.ExceptionDetail.ToString">
      <summary>Retourne les informations détaillées sur l'exception pour l'exception passée au constructeur.</summary>
      <returns>Message et trace de la pile de l'exception.</returns>
    </member>
    <member name="P:System.ServiceModel.ExceptionDetail.Type">
      <summary>Obtient ou définit la chaîne de type pour l'exception passée au constructeur.</summary>
      <returns>Chaîne de type pour l'exception passée au constructeur.</returns>
    </member>
    <member name="T:System.ServiceModel.FaultCode">
      <summary>Représente un code d'erreur SOAP. </summary>
    </member>
    <member name="M:System.ServiceModel.FaultCode.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.FaultCode" />.  </summary>
      <param name="name">Nom du code d'erreur.</param>
    </member>
    <member name="M:System.ServiceModel.FaultCode.#ctor(System.String,System.ServiceModel.FaultCode)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.FaultCode" />. </summary>
      <param name="name">Nom du code d'erreur.</param>
      <param name="subCode">Sous-code d'erreur.</param>
    </member>
    <member name="M:System.ServiceModel.FaultCode.#ctor(System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.FaultCode" /> avec le nom et l'espace de noms spécifiés. </summary>
      <param name="name">Nom local du code d'erreur. </param>
      <param name="ns">Nom d'espace de noms du code d'erreur. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> ou <paramref name="ns" /> est null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="name" /> est une chaîne vide. </exception>
    </member>
    <member name="M:System.ServiceModel.FaultCode.#ctor(System.String,System.String,System.ServiceModel.FaultCode)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.FaultCode" /> avec le nom, l'espace de noms et le sous-code d'erreur spécifiés. </summary>
      <param name="name">Nom local du code d'erreur. </param>
      <param name="ns">Nom d'espace de noms du code d'erreur. </param>
      <param name="subCode">Objet <see cref="T:System.ServiceModel.FaultCode" /> qui représente le sous-code d'erreur. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> ou <paramref name="ns" /> est null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="name" /> est une chaîne vide. </exception>
    </member>
    <member name="M:System.ServiceModel.FaultCode.CreateSenderFaultCode(System.ServiceModel.FaultCode)">
      <summary>Crée un code d'erreur Sender avec le sous-code spécifié. </summary>
      <returns>Objet <see cref="T:System.ServiceModel.FaultCode" /> avec le sous-code d'erreur SOAP créé dans la propriété <see cref="P:System.ServiceModel.FaultCode.SubCode" />. </returns>
      <param name="subCode">Objet <see cref="T:System.ServiceModel.FaultCode" /> qui représente le sous-code d'erreur. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="subCode" /> a la valeur null. </exception>
    </member>
    <member name="P:System.ServiceModel.FaultCode.IsPredefinedFault">
      <summary>Obtient une valeur qui indique si l'erreur est une erreur SOAP 1.1 ou SOAP 1.2.</summary>
      <returns>true si l'erreur est une erreur SOAP 1.1 ou SOAP 1.2 ; sinon, false.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.IsReceiverFault">
      <summary>Obtient une valeur qui indique si l'erreur est une erreur de serveur SOAP 1.1 ou une erreur Receiver SOAP 1.2.</summary>
      <returns>true si l'erreur est une erreur de serveur SOAP 1.1 ou une erreur Receiver SOAP 1.2 ; sinon, false.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.IsSenderFault">
      <summary>Obtient une valeur qui indique si l'erreur est une erreur de client SOAP 1.1 ou une erreur Sender SOAP 1.2.</summary>
      <returns>true si l'erreur est une erreur de client SOAP 1.1 ou une erreur Sender SOAP 1.2 ; sinon, false.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.Name">
      <summary>Obtient le nom local du code d'erreur. </summary>
      <returns>Nom local du code d'erreur. </returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.Namespace">
      <summary>Obtient l'espace de noms pour le code d'erreur. </summary>
      <returns>URI (Uniform Resource Identifier) pour le nom d'espace de noms. </returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.SubCode">
      <summary>Obtient le sous-code d'erreur. </summary>
      <returns>Objet <see cref="T:System.ServiceModel.FaultCode" /> qui représente le sous-code d'erreur. </returns>
    </member>
    <member name="T:System.ServiceModel.FaultContractAttribute">
      <summary>Spécifie une ou plusieurs fautes SOAP retournées lorsqu'une opération de service rencontre des erreurs de traitement.</summary>
    </member>
    <member name="M:System.ServiceModel.FaultContractAttribute.#ctor(System.Type)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.FaultContractAttribute" />.  </summary>
      <param name="detailType">Type sérialisable qui contient des informations sur l'erreur pour l'appelant.</param>
      <exception cref="T:System.ArgumentNullException">L'argument <paramref name="detailType" /> a la valeur null.</exception>
    </member>
    <member name="P:System.ServiceModel.FaultContractAttribute.Action">
      <summary>Obtient ou définit l'action du message d'erreur SOAP spécifié dans le cadre du contrat d'opération.</summary>
      <returns>Valeur de l'action pour le message d'erreur SOAP.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultContractAttribute.DetailType">
      <summary>Obtient le type d'un objet sérialisable qui contient des informations sur l'erreur.</summary>
      <returns>Type qui représente la classe d'erreur sérialisable. </returns>
    </member>
    <member name="P:System.ServiceModel.FaultContractAttribute.Name">
      <summary>Obtient ou définit le nom du message d'erreur dans WSDL (Web Services Description Language).</summary>
      <returns>Nom  du message d'erreur.La valeur par défaut est le nom du type utilisé comme détail d'erreur.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultContractAttribute.Namespace">
      <summary>Obtient ou définit l'espace de noms de l'erreur SOAP.</summary>
      <returns>Espace de noms de l'erreur SOAP.</returns>
    </member>
    <member name="T:System.ServiceModel.FaultException">
      <summary>Représente une erreur SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.FaultException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.FaultException" />.  </summary>
    </member>
    <member name="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.Channels.MessageFault,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.FaultException" /> à l'aide des valeurs d'erreur du message spécifiées et de la chaîne d'action fournie.</summary>
      <param name="fault">Erreur de message qui contient les valeurs d'erreur SOAP par défaut à utiliser.</param>
      <param name="action">Action de l'erreur SOAP.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.FaultReason,System.ServiceModel.FaultCode,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.FaultException" /> à l'aide de la raison, du code d'erreur et de la valeur d'action spécifiés.</summary>
      <param name="reason">Raison de l'erreur SOAP.</param>
      <param name="code">Code d'erreur pour l'erreur SOAP.</param>
      <param name="action">Valeur d'action pour l'erreur SOAP.</param>
    </member>
    <member name="P:System.ServiceModel.FaultException.Action">
      <summary>Obtient la valeur de l'action SOAP pour le message d'erreur.</summary>
      <returns>Valeur de l'action SOAP pour le message d'erreur.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultException.Code">
      <summary>Obtient le code d'erreur pour l'erreur SOAP.</summary>
      <returns>Code d'erreur pour l'erreur SOAP.</returns>
    </member>
    <member name="M:System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.String,System.Type[])">
      <summary>Retourne un objet <see cref="T:System.ServiceModel.Channels.FaultException" /> de l'erreur de message spécifiée, une action et un tableau de types de détails.</summary>
      <returns>Objet <see cref="T:System.ServiceModel.FaultException" /> que vous pouvez lever pour indiquer qu'un message d'erreur SOAP a été reçu.</returns>
      <param name="messageFault">Erreur de message qui contient les informations sur une erreur SOAP par défaut.</param>
      <param name="action">Valeur de l'action de l'erreur.</param>
      <param name="faultDetailTypes">Tableau de types qui contient les détails d'erreur.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.Type[])">
      <summary>Retourne un objet <see cref="T:System.ServiceModel.Channels.FaultException" /> de l'erreur de message spécifiée et un tableau de types de détails.</summary>
      <returns>Objet <see cref="T:System.ServiceModel.FaultException" /> que vous pouvez lever pour indiquer qu'un message d'erreur SOAP a été reçu.</returns>
      <param name="messageFault">Erreur de message qui contient les informations sur une erreur SOAP par défaut.</param>
      <param name="faultDetailTypes">Tableau de types qui contient les détails d'erreur.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException.CreateMessageFault">
      <summary>Retourne un objet <see cref="T:System.ServiceModel.Channels.MessageFault" />.</summary>
      <returns>Représentation en mémoire d'une erreur SOAP qui peut être passée à <see cref="Overload:System.ServiceModel.Channels.Message.CreateMessage" /> pour créer un message qui contient une erreur.Pour les objets <see cref="T:System.ServiceModel.FaultException" /> qui résultent de messages d'erreur, cet objet <see cref="T:System.ServiceModel.Channels.MessageFault" /> est l'erreur qui arrive.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultException.Message">
      <summary>Obtient le message pour l'exception.</summary>
      <returns>Message d'exception.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultException.Reason">
      <summary>Obtient la <see cref="T:System.ServiceModel.FaultReason" /> de l'erreur SOAP.</summary>
      <returns>Raison de l'erreur SOAP.</returns>
    </member>
    <member name="T:System.ServiceModel.FaultException`1">
      <summary>Utilisé dans une application cliente pour intercepter les erreurs SOAP spécifiées contractuellement.</summary>
      <typeparam name="TDetail">Type de détail de l'erreur sérialisable.</typeparam>
    </member>
    <member name="M:System.ServiceModel.FaultException`1.#ctor(`0,System.ServiceModel.FaultReason,System.ServiceModel.FaultCode,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.FaultException`1" /> qui utilise l'objet de détail spécifié et les valeurs de la raison de l'erreur SOAP, du code et de l'action. </summary>
      <param name="detail">Objet utilisé comme détail d'erreur SOAP.</param>
      <param name="reason">Raison de l'erreur SOAP.</param>
      <param name="code">Code d'erreur pour l'erreur SOAP.</param>
      <param name="action">Action de l'erreur SOAP.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException`1.CreateMessageFault">
      <summary>Crée un objet <see cref="T:System.ServiceModel.Channels.MessageFault" /> qui peut être utilisé pour créer un <see cref="T:System.ServiceModel.Channels.Message" /> qui représente l'erreur SOAP.</summary>
      <returns>Erreur de message créée.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultException`1.Detail">
      <summary>Obtient l'objet qui contient les informations de détail de la condition de l'erreur.</summary>
      <returns>Objet de détail qui est le paramètre de type de l'objet <see cref="T:System.ServiceModel.FaultException`1" />.</returns>
    </member>
    <member name="M:System.ServiceModel.FaultException`1.ToString">
      <summary>Retourne une chaîne pour l'objet <see cref="T:System.ServiceModel.FaultException`1" />.</summary>
      <returns>Chaîne pour l'erreur SOAP.</returns>
    </member>
    <member name="T:System.ServiceModel.FaultReason">
      <summary>Fournit une description de l'erreur SOAP. </summary>
    </member>
    <member name="M:System.ServiceModel.FaultReason.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.FaultReasonText})">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.FaultReason" /> à l'aide de la liste de traductions d'erreur spécifiée. </summary>
      <param name="translations">Liste d'objets <see cref="T:System.ServiceModel.FaultReasonText" /> ; chaque objet décrit l'erreur dans un langage spécifique. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="translations" /> a la valeur null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="translations" /> est vide ou un ou plusieurs éléments ont la valeur null. </exception>
    </member>
    <member name="M:System.ServiceModel.FaultReason.#ctor(System.ServiceModel.FaultReasonText)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.FaultReason" /> à l'aide de l'élément de texte spécifié qui décrit l'erreur dans un langage spécifique. </summary>
      <param name="translation">Tableau d'objets <see cref="T:System.ServiceModel.FaultReasonText" /> qui correspondent aux descriptions d'erreur dans des langages différents. </param>
    </member>
    <member name="M:System.ServiceModel.FaultReason.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.FaultReason" /> à l'aide de la description d'erreur spécifiée. </summary>
      <param name="text">Description de la cause de l'erreur. </param>
    </member>
    <member name="M:System.ServiceModel.FaultReason.GetMatchingTranslation">
      <summary>Obtient la description d'erreur dans le langage utilisé par le thread actuel. </summary>
      <returns>Objet <see cref="T:System.ServiceModel.FaultReasonText" /> qui contient la description d'erreur de la surface. </returns>
    </member>
    <member name="M:System.ServiceModel.FaultReason.GetMatchingTranslation(System.Globalization.CultureInfo)">
      <summary>Obtient la description d'erreur dans le langage spécifié. </summary>
      <returns>Texte d'erreur dans le langage spécifié.</returns>
      <param name="cultureInfo">Objet <see cref="T:System.Globalization.CultureInfo" /> qui spécifie le langage de la description d'erreur. </param>
      <exception cref="T:System.ArgumentNullException">Le <see cref="T:System.Globalization.CultureInfo" /> est null.</exception>
    </member>
    <member name="M:System.ServiceModel.FaultReason.ToString">
      <summary>Retourne la cause de l'erreur en tant que chaîne.</summary>
      <returns>Chaîne qui contient la cause de l'erreur.</returns>
    </member>
    <member name="T:System.ServiceModel.FaultReasonText">
      <summary>Représente le texte de la raison d'une erreur SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.FaultReasonText.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.FaultReasonText" /> qui utilise le texte d'erreur spécifié.</summary>
      <param name="text">Le texte qui constitue la raison de l'erreur SOAP.</param>
    </member>
    <member name="M:System.ServiceModel.FaultReasonText.#ctor(System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.FaultReasonText" />. </summary>
      <param name="text">Le texte de la raison de l'erreur.</param>
      <param name="xmlLang">Le langage de l'erreur.</param>
    </member>
    <member name="M:System.ServiceModel.FaultReasonText.Matches(System.Globalization.CultureInfo)">
      <summary>Retourne une valeur qui indique si le langage de la description correspond à l'objet <see cref="T:System.Globalization.CultureInfo" /> fourni.</summary>
      <returns>true si les <see cref="T:System.Globalization.CultureInfo" /> spécifiées correspondent ; sinon, false.</returns>
      <param name="cultureInfo">L'objet <see cref="T:System.Globalization.CultureInfo" /> à comparer au langage de la description.</param>
    </member>
    <member name="P:System.ServiceModel.FaultReasonText.Text">
      <summary>Obtient le texte de la raison de l'erreur SOAP.</summary>
      <returns>Le texte de la raison de l'erreur SOAP.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultReasonText.XmlLang">
      <summary>Obtient le langage de la raison de l'erreur SOAP.</summary>
      <returns>Le langage de la raison de l'erreur SOAP.</returns>
    </member>
    <member name="T:System.ServiceModel.IClientChannel">
      <summary>Définit le comportement des canaux de demande sortante et de demande/réponse utilisé par les applications clientes.</summary>
    </member>
    <member name="P:System.ServiceModel.IClientChannel.AllowInitializationUI">
      <summary>Obtient ou définit une valeur indiquant si <see cref="M:System.ServiceModel.IClientChannel.DisplayInitializationUI" /> tente d'appeler les objets <see cref="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer" /> dans la propriété <see cref="P:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers" /> ou lève une exception si cette collection n'est pas vide. </summary>
      <returns>true si Windows Communication Foundation (WCF) est autorisé à appeler des initialiseurs de canal interactifs ; sinon, false. </returns>
    </member>
    <member name="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)">
      <summary>Appel asynchrone pour commencer l'utilisation d'une interface utilisateur pour obtenir les informations d'identification.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> à utiliser pour rappeler lorsque le traitement est terminé.</returns>
      <param name="callback">Méthode appelée lorsque cette méthode est terminée.</param>
      <param name="state">Informations sur l'état du canal.</param>
    </member>
    <member name="P:System.ServiceModel.IClientChannel.DidInteractiveInitialization">
      <summary>Obtient une valeur indiquant si un appel a été effectué à une interface utilisateur pour obtenir les informations d'identification. </summary>
      <returns>true si la méthode <see cref="M:System.ServiceModel.IClientChannel.DisplayInitializationUI" /> a été appelée (ou les méthodes <see cref="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" /> et <see cref="M:System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)" /> ; sinon, false.</returns>
    </member>
    <member name="M:System.ServiceModel.IClientChannel.DisplayInitializationUI">
      <summary>Appel à une interface utilisateur pour obtenir les informations d'identification.</summary>
    </member>
    <member name="M:System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)">
      <summary>Appelé lorsque l'appel à <see cref="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" /> est terminé.</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" />.</param>
    </member>
    <member name="E:System.ServiceModel.IClientChannel.UnknownMessageReceived">
      <summary>C'est un événement réservé. </summary>
    </member>
    <member name="P:System.ServiceModel.IClientChannel.Via">
      <summary>Obtient l'URI qui contient l'adresse de transport à laquelle les messages sont envoyés sur le canal client.</summary>
      <returns>
        <see cref="T:System.Uri" /> qui contient l'adresse de transport à laquelle les messages sont envoyés sur le canal.</returns>
    </member>
    <member name="T:System.ServiceModel.ICommunicationObject">
      <summary>Définit le contrat pour l'ordinateur d'état de base pour tous les objets orientés communication dans le système, y compris les canaux, les gestionnaires de canaux, les fabriques, les écouteurs, les répartiteurs et les hôtes de service.</summary>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Abort">
      <summary>Provoque la transition immédiate d'un objet de communication de son état actuel à l'état fermé.  </summary>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
      <summary>Commence une opération asynchrone pour fermer un objet de communication.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui fait référence à l'opération de fermeture asynchrone. </returns>
      <param name="callback">Le délégué <see cref="T:System.AsyncCallback" /> qui reçoit la notification de la fin de l'opération asynchrone de fermeture.</param>
      <param name="state">Objet, spécifié par l'application, qui contient les informations d'état associées à l'opération asynchrone de fermeture.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" /> a été appelé sur un objet dans l'état <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">Le délai d'attente par défaut s'est écoulé avant que l'<see cref="T:System.ServiceModel.ICommunicationObject" /> ait pu se fermer normalement.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Commence une opération asynchrone pour fermer un objet de communication avec un délai d'attente spécifié.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui fait référence à l'opération de fermeture asynchrone.</returns>
      <param name="timeout">Le <see cref="T:System.Timespan" /> qui spécifie le délai d'exécution de l'opération d'envoi avant dépassement du délai d'attente.</param>
      <param name="callback">Le délégué <see cref="T:System.AsyncCallback" /> qui reçoit la notification de la fin de l'opération asynchrone de fermeture.</param>
      <param name="state">Objet, spécifié par l'application, qui contient les informations d'état associées à l'opération asynchrone de fermeture.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" /> a été appelé sur un objet dans l'état <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">Le délai d'attente spécifié s'est écoulé avant que l'<see cref="T:System.ServiceModel.ICommunicationObject" /> ait pu se fermer normalement.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
      <summary>Commence une opération asynchrone pour ouvrir un objet de communication.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui fait référence à l'opération d'ouverture asynchrone. </returns>
      <param name="callback">Le délégué <see cref="T:System.AsyncCallback" /> qui reçoit la notification de la fin de l'opération d'ouverture asynchrone.</param>
      <param name="state">Objet, spécifié par l'application, qui contient des informations d'état associées à l'opération asynchrone d'ouverture.</param>
      <exception cref="T:System.ServiceModel.CommunicationException">L'<see cref="T:System.ServiceModel.ICommunicationObject" /> n'a pas pu être ouvert et est entré dans l'état <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">Le délai d'attente d'ouverture par défaut s'est écoulé avant que le <see cref="T:System.ServiceModel.ICommunicationObject" /> ait pu entrer dans l'état <see cref="F:System.ServiceModel.CommunicationState.Opened" /> et est entré l'état <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Commence une opération asynchrone pour ouvrir un objet de communication dans un intervalle de temps spécifié.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui fait référence à l'opération d'ouverture asynchrone. </returns>
      <param name="timeout">Le <see cref="T:System.Timespan" /> qui spécifie le délai d'exécution de l'opération d'envoi avant dépassement du délai d'attente.</param>
      <param name="callback">Le délégué <see cref="T:System.AsyncCallback" /> qui reçoit la notification de la fin de l'opération d'ouverture asynchrone.</param>
      <param name="state">Objet, spécifié par l'application, qui contient des informations d'état associées à l'opération asynchrone d'ouverture.</param>
      <exception cref="T:System.ServiceModel.CommunicationException">L'<see cref="T:System.ServiceModel.ICommunicationObject" /> n'a pas pu être ouvert et est entré dans l'état <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">Le délai d'attente spécifié s'est écoulé avant que le <see cref="T:System.ServiceModel.ICommunicationObject" /> ait pu entrer dans l'état <see cref="F:System.ServiceModel.CommunicationState.Opened" /> et est entré l'état <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Close">
      <summary>Provoque la transition d'un objet de communication de son état actuel à l'état fermé.  </summary>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> a été appelé sur un objet dans l'état <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">Le délai d'attente de fermeture par défaut s'est écoulé avant que l'<see cref="T:System.ServiceModel.ICommunicationObject" /> ait pu se fermer normalement.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)">
      <summary>Provoque la transition d'un objet de communication de son état actuel à l'état fermé.  </summary>
      <param name="timeout">Le <see cref="T:System.Timespan" /> qui spécifie le délai d'exécution de l'opération d'envoi avant dépassement du délai d'attente.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> a été appelé sur un objet dans l'état <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">Le délai d'attente s'est écoulé avant que l'<see cref="T:System.ServiceModel.ICommunicationObject" /> ait pu se fermer normalement.</exception>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Closed">
      <summary>Se produit lorsque l'objet de communication termine sa transition de l'état de fermeture à l'état fermé.</summary>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Closing">
      <summary>Se produit lorsque l'objet de communication entre d'abord dans l'état fermeture.</summary>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)">
      <summary>Termine une opération asynchrone pour fermer un objet de communication.</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> retourné par un appel à la méthode <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" />.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" /> a été appelé sur un objet dans l'état <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">Le délai d'attente s'est écoulé avant que l'<see cref="T:System.ServiceModel.ICommunicationObject" /> ait pu se fermer normalement.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)">
      <summary>Termine une opération asynchrone pour ouvrir un objet de communication.</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> retourné par un appel à la méthode <see cref="M:System.ServiceModel.ICommunicationObject.BeginOpen" />.</param>
      <exception cref="T:System.ServiceModel.CommunicationException">L'<see cref="T:System.ServiceModel.ICommunicationObject" /> n'a pas pu être ouvert et est entré dans l'état <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">Le délai d'attente s'est écoulé avant que le <see cref="T:System.ServiceModel.ICommunicationObject" /> ait pu entrer dans l'état <see cref="F:System.ServiceModel.CommunicationState.Opened" /> et est entré l'état <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Faulted">
      <summary>Se produit lorsque l'objet de communication entre d'abord dans l'état de faute.</summary>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Open">
      <summary>Provoque la transition d'un objet de communication de l'état créé à l'état ouvert.  </summary>
      <exception cref="T:System.ServiceModel.CommunicationException">L'<see cref="T:System.ServiceModel.ICommunicationObject" /> n'a pas pu être ouvert et est entré dans l'état <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">Le délai d'attente d'ouverture par défaut s'est écoulé avant que le <see cref="T:System.ServiceModel.ICommunicationObject" /> ait pu entrer dans l'état <see cref="F:System.ServiceModel.CommunicationState.Opened" /> et est entré l'état <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)">
      <summary>Provoque la transition d'un objet de communication de l'état créé à l'état ouvert dans un intervalle de temps spécifié.</summary>
      <param name="timeout">Le <see cref="T:System.Timespan" /> qui spécifie le délai d'exécution de l'opération d'envoi avant dépassement du délai d'attente.</param>
      <exception cref="T:System.ServiceModel.CommunicationException">L'<see cref="T:System.ServiceModel.ICommunicationObject" /> n'a pas pu être ouvert et est entré dans l'état <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">Le délai d'attente spécifié s'est écoulé avant que le <see cref="T:System.ServiceModel.ICommunicationObject" /> ait pu entrer dans l'état <see cref="F:System.ServiceModel.CommunicationState.Opened" /> et est entré l'état <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Opened">
      <summary>Se produit lorsque l'objet de communication termine sa transition de l'état d'ouverture à l'état ouvert.</summary>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Opening">
      <summary>Se produit lorsque l'objet de communication entre d'abord dans l'état d'ouverture.</summary>
    </member>
    <member name="P:System.ServiceModel.ICommunicationObject.State">
      <summary>Obtient l'état actuel de l'objet orienté communication.</summary>
      <returns>Valeur du <see cref="T:System.ServiceModel.CommunicationState" /> de l'objet.</returns>
    </member>
    <member name="T:System.ServiceModel.IContextChannel">
      <summary>Définit l'interface pour la vérification du contexte d'un canal.</summary>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.AllowOutputBatching">
      <summary>Obtient ou définit une valeur qui ordonne à Windows Communication Foundation (WCF) de stocker un jeu de messages avant de donner les messages au transport.</summary>
      <returns>true si le traitement par lots des messages sortants est autorisé ; sinon, false.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.InputSession">
      <summary>Obtient la session d'entrée pour le canal.</summary>
      <returns>La <see cref="T:System.ServiceModel.Channels.IInputSession" /> pour le canal.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.LocalAddress">
      <summary>Obtient le point de terminaison local pour le canal.</summary>
      <returns>L'<see cref="T:System.ServiceModel.EndpointAddress" /> locale pour le canal.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.OperationTimeout">
      <summary>Obtient ou définit le délai de fin d'une opération avant qu'une exception ne soit levée.</summary>
      <returns>Le <see cref="T:System.TimeSpan" /> qui spécifie le délai de fin de l'opération.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.OutputSession">
      <summary>Obtient la session de sortie associée au canal, le cas échéant.</summary>
      <returns>Implémentation de <see cref="T:System.ServiceModel.Channels.IOutputSession" /> si une session d'entrée existe ; sinon, null.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.RemoteAddress">
      <summary>Obtient l'adresse distante associée au canal.</summary>
      <returns>L'<see cref="T:System.ServiceModel.EndpointAddress" /> distante pour le canal.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.SessionId">
      <summary>Retourne un identificateur pour la session actuelle, le cas échéant.</summary>
      <returns>L'identificateur de session actuel, le cas échéant.</returns>
    </member>
    <member name="T:System.ServiceModel.IDefaultCommunicationTimeouts">
      <summary>Définit l'interface servant à spécifier les délais d'attente de communication utilisés par les canaux, les gestionnaires de canaux tels que les écouteurs et fabriques de canaux, et les hôtes de service.</summary>
    </member>
    <member name="P:System.ServiceModel.IDefaultCommunicationTimeouts.CloseTimeout">
      <summary>Obtient l'intervalle de temps au terme duquel la méthode de fermeture, appelée par un objet de communication, expire.</summary>
      <returns>
        <see cref="T:System.Timespan" /> qui spécifie l'intervalle de temps à attendre avant l'expiration de la méthode de fermeture.</returns>
    </member>
    <member name="P:System.ServiceModel.IDefaultCommunicationTimeouts.OpenTimeout">
      <summary>Obtient l'intervalle de temps au terme duquel la méthode d'ouverture, appelée par un objet de communication, expire.</summary>
      <returns>
        <see cref="T:System.Timespan" /> qui spécifie l'intervalle de temps à attendre avant l'expiration de la méthode d'ouverture.</returns>
    </member>
    <member name="P:System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout">
      <summary>Obtient l'intervalle de temps au terme duquel la méthode de réception, appelée par un objet de communication, expire.</summary>
      <returns>
        <see cref="T:System.Timespan" /> qui spécifie l'intervalle de temps à attendre avant l'expiration de la méthode de réception.</returns>
    </member>
    <member name="P:System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout">
      <summary>Obtient l'intervalle de temps au terme duquel la méthode d'envoi, appelée par un objet de communication, expire.</summary>
      <returns>
        <see cref="T:System.Timespan" /> qui spécifie l'intervalle de temps à attendre avant l'expiration de la méthode d'envoi.</returns>
    </member>
    <member name="T:System.ServiceModel.IExtensibleObject`1">
      <summary>Permet à un objet de participer à un comportement personnalisé, comme l'inscription aux événements ou l'observation des transitions d'état.</summary>
      <typeparam name="T">Type de la classe d'extensions. </typeparam>
    </member>
    <member name="P:System.ServiceModel.IExtensibleObject`1.Extensions">
      <summary>Obtient une collection d'objets d'extension pour cet objet extensible.</summary>
      <returns>
        <see cref="T:System.ServiceModel.IExtensionCollection`1" /> d'objets d'extension.</returns>
    </member>
    <member name="T:System.ServiceModel.IExtension`1">
      <summary>Permet à un objet d'étendre un autre objet par le biais de l'agrégation.</summary>
      <typeparam name="T">Objet qui participe au comportement personnalisé.</typeparam>
    </member>
    <member name="M:System.ServiceModel.IExtension`1.Attach(`0)">
      <summary>Active un objet d'extension pour recherche où il a été regroupé en aggrégats.Appelée lorsque l'extension est ajoutée à la propriété <see cref="P:System.ServiceModel.IExtensibleObject`1.Extensions" />.</summary>
      <param name="owner">Objet extensible qui regroupe cette extension en aggrégats.</param>
    </member>
    <member name="M:System.ServiceModel.IExtension`1.Detach(`0)">
      <summary>Active un objet pour savoir quand il n'est plus regroupé en agrégat.Appelée lorsqu'une extension est supprimée de la propriété <see cref="P:System.ServiceModel.IExtensibleObject`1.Extensions" />.</summary>
      <param name="owner">Objet extensible qui regroupe cette extension en aggrégats.</param>
    </member>
    <member name="T:System.ServiceModel.IExtensionCollection`1">
      <summary>Collection d'objets <see cref="T:System.ServiceModel.IExtension`1" /> qui permet la récupération de <see cref="T:System.ServiceModel.IExtension`1" /> par son type.</summary>
      <typeparam name="T">Type des objets d'extensions.</typeparam>
    </member>
    <member name="M:System.ServiceModel.IExtensionCollection`1.Find``1">
      <summary>Recherche l'objet d'extension spécifié dans la collection.</summary>
      <returns>L'objet d'extension été trouvé.</returns>
      <typeparam name="E">Type de l'objet d'extension.</typeparam>
    </member>
    <member name="M:System.ServiceModel.IExtensionCollection`1.FindAll``1">
      <summary>Recherche tous les objets d'extension dans la collection spécifiée par <paramref name="E" />.</summary>
      <returns>Collection de tous les objets d'extension dans la collection qui implémentent le type spécifié.</returns>
      <typeparam name="E">Type de l'objet d'extension.</typeparam>
    </member>
    <member name="T:System.ServiceModel.InvalidMessageContractException">
      <summary>Représente un contrat de message qui n'est pas valide.</summary>
    </member>
    <member name="M:System.ServiceModel.InvalidMessageContractException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.InvalidMessageContractException" />. </summary>
    </member>
    <member name="M:System.ServiceModel.InvalidMessageContractException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.InvalidMessageContractException" /> avec le message spécifié.</summary>
      <param name="message">Message pour l'exception.</param>
    </member>
    <member name="M:System.ServiceModel.InvalidMessageContractException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.InvalidMessageContractException" /> qui utilise le message et l'exception interne spécifiés.</summary>
      <param name="message">Message d'exception.</param>
      <param name="innerException">Exception interne.</param>
    </member>
    <member name="T:System.ServiceModel.MessageBodyMemberAttribute">
      <summary>Spécifie qu'un membre est sérialisé comme élément à l'intérieur du corps SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageBodyMemberAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.MessageBodyMemberAttribute" />. </summary>
    </member>
    <member name="P:System.ServiceModel.MessageBodyMemberAttribute.Order">
      <summary>Obtient ou définit une valeur qui indique la position à laquelle le membre est sérialisé dans le corps SOAP.</summary>
      <returns>Emplacement de l'élément dans le corps SOAP.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur transmise à l'accesseur Set de propriété est un entier négatif.</exception>
    </member>
    <member name="T:System.ServiceModel.MessageContractAttribute">
      <summary>Définit une classe fortement typée correspondant à un message SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageContractAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.MessageContractAttribute" />. </summary>
    </member>
    <member name="P:System.ServiceModel.MessageContractAttribute.IsWrapped">
      <summary>Obtient ou définit une valeur qui spécifie si le corps du message contient un élément wrapper.</summary>
      <returns>true si le corps du message contient un élément wrapper ; sinon, false.La valeur par défaut est true.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageContractAttribute.WrapperName">
      <summary>Obtient ou définit le nom de l'élément wrapper du corps du message.</summary>
      <returns>Nom de l'élément wrapper dans le corps du message.</returns>
      <exception cref="T:System.ArgumentNullException">La valeur est null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur est une chaîne vide.</exception>
    </member>
    <member name="P:System.ServiceModel.MessageContractAttribute.WrapperNamespace">
      <summary>Obtient ou définit l'espace de noms de l'élément wrapper du corps du message.</summary>
      <returns>Espace de noms de l'élément wrapper.</returns>
    </member>
    <member name="T:System.ServiceModel.MessageContractMemberAttribute">
      <summary>Déclare les membres de base pour <see cref="T:System.ServiceModel.MessageBodyMemberAttribute" /> et <see cref="T:System.ServiceModel.MessageHeaderAttribute" />.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageContractMemberAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.MessageContractMemberAttribute" />.</summary>
    </member>
    <member name="P:System.ServiceModel.MessageContractMemberAttribute.Name">
      <summary>Spécifie le nom de l'élément qui correspond à ce membre. </summary>
      <returns>Nom de l'élément qui correspond à ce membre.Cette chaîne doit être un nom d'élément XML valide.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageContractMemberAttribute.Namespace">
      <summary>Spécifie l'espace de noms de l'élément qui correspond à ce membre. </summary>
      <returns>URI d'espace de noms de l'élément qui correspond à ce membre. </returns>
    </member>
    <member name="T:System.ServiceModel.MessageCredentialType">
      <summary>Énumère les types d'informations d'identification de message valides.</summary>
    </member>
    <member name="F:System.ServiceModel.MessageCredentialType.Certificate">
      <summary>Spécifie l'authentification du client à l'aide d'un certificat.</summary>
    </member>
    <member name="F:System.ServiceModel.MessageCredentialType.IssuedToken">
      <summary>Spécifie l'authentification du client à l'aide d'un jeton émis.</summary>
    </member>
    <member name="F:System.ServiceModel.MessageCredentialType.None">
      <summary>Spécifie l'authentification anonyme.</summary>
    </member>
    <member name="F:System.ServiceModel.MessageCredentialType.UserName">
      <summary>Spécifie l'authentification du client à l'aide du nom d'utilisateur.</summary>
    </member>
    <member name="F:System.ServiceModel.MessageCredentialType.Windows">
      <summary>Spécifie l'authentification du client à l'aide de Windows.</summary>
    </member>
    <member name="T:System.ServiceModel.MessageHeader`1">
      <summary>Représente le contenu d'un en-tête SOAP.</summary>
      <typeparam name="T">Type d'en-tête de message.</typeparam>
    </member>
    <member name="M:System.ServiceModel.MessageHeader`1.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.MessageHeader`1" />.  </summary>
    </member>
    <member name="M:System.ServiceModel.MessageHeader`1.#ctor(`0)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.MessageHeader`1" /> avec le contenu de l'en-tête spécifié.</summary>
      <param name="content">Contenu du nouvel en-tête.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeader`1.#ctor(`0,System.Boolean,System.String,System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.MessageHeader`1" /> avec le contenu et les métadonnées de l'en-tête spécifié. </summary>
      <param name="content">Contenu du nouvel en-tête.</param>
      <param name="mustUnderstand">Valeur qui indique si l'en-tête doit être compris.</param>
      <param name="actor">Destinataire ciblé de l'en-tête de message.</param>
      <param name="relay">Valeur qui indique si l'en-tête doit être relayé.</param>
    </member>
    <member name="P:System.ServiceModel.MessageHeader`1.Actor">
      <summary>Obtient ou définit le destinataire ciblé de l'en-tête de message.</summary>
      <returns>Destinataire ciblé de l'en-tête de message.La valeur par défaut est une chaîne vide ("").</returns>
    </member>
    <member name="P:System.ServiceModel.MessageHeader`1.Content">
      <summary>Obtient ou définit le contenu de l'en-tête.</summary>
      <returns>Contenu de l'en-tête.</returns>
    </member>
    <member name="M:System.ServiceModel.MessageHeader`1.GetUntypedHeader(System.String,System.String)">
      <summary>Obtient l'en-tête de message avec l'espace de noms et le nom local spécifiés.</summary>
      <returns>En-tête de message avec l'espace de noms et le nom local spécifiés.</returns>
      <param name="name">Nom local de l'élément XML d'en-tête</param>
      <param name="ns">URI d'espace de noms de l'élément XML d'en-tête.</param>
    </member>
    <member name="P:System.ServiceModel.MessageHeader`1.MustUnderstand">
      <summary>Obtient ou définit une valeur qui indique si l'en-tête doit être compris, comme indiqué dans la spécification SOAP 1.1/1.2. </summary>
      <returns>true si l'en-tête doit être compris ; sinon, false.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageHeader`1.Relay">
      <summary>Obtient une valeur qui indique si l'en-tête doit être relayé.</summary>
      <returns>true si l'en-tête doit être relayé ; sinon, false.</returns>
    </member>
    <member name="T:System.ServiceModel.MessageHeaderException">
      <summary>Exception levée lorsque les attentes concernant les en-têtes d'un message SOAP ne sont pas satisfaites lorsque le message est traité.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.MessageHeaderException" /> avec le message spécifié.</summary>
      <param name="message">Le message contenu dans l'exception.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.MessageHeaderException" /> à l'aide du message spécifié et une valeur qui indique si l'en-tête de message est un doublon ou est manquant.</summary>
      <param name="message">Message d'exception.</param>
      <param name="isDuplicate">true si l'en-tête de message multiple est un doublon ; false s'il n'y a pas d'en-tête de message.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.MessageHeaderException" /> à l'aide du message d'erreur spécifié et de l'exception interne qui a provoqué l'exception.</summary>
      <param name="message">Message d'exception.</param>
      <param name="innerException">L'<see cref="T:System.Exception" /> qui contient l'exception interne qui a provoqué l'exception.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.MessageHeaderException" /> avec le message, le nom d'en-tête et l'espace de noms spécifiés.</summary>
      <param name="message">Message d'exception.</param>
      <param name="headerName">Nom de l'en-tête de message.</param>
      <param name="ns">Espace de noms de l'en-tête de message.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.MessageHeaderException" /> à l'aide du message, du nom d'en-tête et de l'espace de noms spécifiés, et d'une valeur qui indique si l'en-tête de message est un doublon ou est manquant.</summary>
      <param name="message">Message d'exception.</param>
      <param name="headerName">Nom de l'en-tête de message.</param>
      <param name="ns">Espace de noms de l'en-tête de message.</param>
      <param name="isDuplicate">true si l'en-tête de message multiple est un doublon ; false s'il n'y a pas d'en-tête de message.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.MessageHeaderException" /> à l'aide du message, du nom d'en-tête et de l'espace de noms spécifiés, une valeur qui indique si l'en-tête de message est un doublon ou est manquant, et de l'exception interne qui a provoqué l'exception.</summary>
      <param name="message">Message d'exception.</param>
      <param name="headerName">Nom de l'en-tête de message.</param>
      <param name="ns">Espace de noms de l'en-tête de message.</param>
      <param name="isDuplicate">true si l'en-tête de message multiple est un doublon ; false s'il n'y a pas d'en-tête de message.</param>
      <param name="innerException">L'<see cref="T:System.Exception" /> qui contient l'exception interne qui a provoqué l'exception.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.MessageHeaderException" /> à l'aide du message, du nom d'en-tête et de l'espace de noms spécifiés, et de l'exception interne qui a provoqué l'exception.</summary>
      <param name="message">Message d'exception.</param>
      <param name="headerName">Nom de l'en-tête de message.</param>
      <param name="ns">Espace de noms de l'en-tête de message.</param>
      <param name="innerException">L'<see cref="T:System.Exception" /> qui contient l'exception interne qui a provoqué l'exception.</param>
    </member>
    <member name="P:System.ServiceModel.MessageHeaderException.HeaderName">
      <summary>Obtient le nom de l'en-tête SOAP qui a provoqué l'exception.</summary>
      <returns>Nom de l'en-tête SOAP.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageHeaderException.HeaderNamespace">
      <summary>Obtient l'espace de noms de l'en-tête SOAP qui a provoqué l'exception.</summary>
      <returns>Espace de noms de l'en-tête SOAP.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageHeaderException.IsDuplicate">
      <summary>Obtient une valeur qui indique s'il y a plusieurs en-têtes de message ou aucun en-tête de message.</summary>
      <returns>true si l'en-tête de message multiple est un doublon ; false s'il n'y a pas d'en-tête de message.</returns>
    </member>
    <member name="T:System.ServiceModel.MessageParameterAttribute">
      <summary>Contrôle le nom de la demande et les noms des paramètres de réponse.Ne peut pas être utilisé avec <see cref="T:System.ServiceModel.Channels.Message" /> ni avec les contrats de message.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageParameterAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.MessageParameterAttribute" />. </summary>
    </member>
    <member name="P:System.ServiceModel.MessageParameterAttribute.Name">
      <summary>Obtient ou définit l'attribut de nom du paramètre dans le schéma XML (XSD).</summary>
      <returns>L'attribut de nom du paramètre dans le XSD.</returns>
    </member>
    <member name="T:System.ServiceModel.OperationContext">
      <summary>Fournit l'accès au contexte d'exécution d'une méthode de service.</summary>
    </member>
    <member name="M:System.ServiceModel.OperationContext.#ctor(System.ServiceModel.IContextChannel)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.OperationContext" /> qui utilise le <see cref="T:System.ServiceModel.IContextChannel" /> spécifié dans une application cliente. </summary>
      <param name="channel">
        <see cref="T:System.ServiceModel.IContextChannel" /> utilisé pour créer un client <see cref="T:System.ServiceModel.OperationContext" />.</param>
      <exception cref="T:System.ArgumentNullException">Le canal a la valeur Null.</exception>
    </member>
    <member name="P:System.ServiceModel.OperationContext.Current">
      <summary>Obtient ou définit le contexte d'exécution du thread actuel.</summary>
      <returns>
        <see cref="T:System.ServiceModel.OperationContext" /> qui représente la messagerie et le contexte d'exécution de la méthode en cours.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.Extensions">
      <summary>Obtient la collection d'extensions de service du contexte de message actuel.</summary>
      <returns>Collection d'extensions de <see cref="T:System.ServiceModel.OperationContext" />.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.IncomingMessageHeaders">
      <summary>Obtient les en-têtes de message entrant pour le <see cref="T:System.ServiceModel.OperationContext" />.</summary>
      <returns>Objet <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> qui contient les en-têtes de message entrant.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.IncomingMessageProperties">
      <summary>Obtient les propriétés de message pour le message entrant dans le <see cref="T:System.ServiceModel.OperationContext" />.</summary>
      <returns>Objet <see cref="T:System.ServiceModel.Channels.MessageProperties" /> qui contient les propriétés de message sur le message entrant.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.IncomingMessageVersion">
      <summary>Obtient la version du message SOAP entrant pour le <see cref="T:System.ServiceModel.OperationContext" />.</summary>
      <returns>Version SOAP du message entrant.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.IsUserContext">
      <summary>Cette propriété est réservée au système et ne doit pas être appelée par les utilisateurs.</summary>
      <returns>true.</returns>
    </member>
    <member name="E:System.ServiceModel.OperationContext.OperationCompleted">
      <summary>Se produit lorsque l'opération est terminée. </summary>
    </member>
    <member name="P:System.ServiceModel.OperationContext.OutgoingMessageHeaders">
      <summary>Obtient les en-têtes de message sortant pour le <see cref="T:System.ServiceModel.OperationContext" /> actif.</summary>
      <returns>Objet <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> qui contient les en-têtes de message sortants pour le <see cref="T:System.ServiceModel.OperationContext" /> actif.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.OutgoingMessageProperties">
      <summary>Obtient les propriétés de message pour le message sortant dans le <see cref="T:System.ServiceModel.OperationContext" /> actif.</summary>
      <returns>Objet <see cref="T:System.ServiceModel.Channels.MessageProperties" /> qui contient les propriétés de message sur le message sortant.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.RequestContext">
      <summary>Obtient ou définit l'implémentation <see cref="T:System.ServiceModel.Channels.RequestContext" /> pour cette méthode.</summary>
      <returns>Implémentation <see cref="T:System.ServiceModel.Channels.RequestContext" /> ou valeur Null s'il n'y a aucun contexte de demande.</returns>
    </member>
    <member name="T:System.ServiceModel.OperationContextScope">
      <summary>Crée un bloc à l'intérieur duquel un objet <see cref="T:System.ServiceModel.OperationContext" /> est dans la portée.</summary>
    </member>
    <member name="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.IContextChannel)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.OperationContextScope" /> qui utilise le <see cref="T:System.ServiceModel.IContextChannel" /> spécifié pour créer un <see cref="T:System.ServiceModel.OperationContext" /> pour la portée.</summary>
      <param name="channel">Le canal à utiliser lors de la création de la portée pour un nouveau <see cref="T:System.ServiceModel.OperationContext" />.</param>
    </member>
    <member name="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.OperationContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.OperationContextScope" /> pour créer une portée pour l'objet <see cref="T:System.ServiceModel.OperationContext" /> spécifié.</summary>
      <param name="context">Le <see cref="T:System.ServiceModel.OperationContext" /> actif dans la portée créée.</param>
    </member>
    <member name="M:System.ServiceModel.OperationContextScope.Dispose">
      <summary>Rétablit le <see cref="T:System.ServiceModel.OperationContext" /> d'origine comme contexte actif et recycle l'objet <see cref="T:System.ServiceModel.OperationContextScope" />.</summary>
    </member>
    <member name="T:System.ServiceModel.OperationContractAttribute">
      <summary>Indique qu'une méthode définit une opération qui fait partie d'un contrat de service dans une application Windows Communication Foundation (WCF). </summary>
    </member>
    <member name="M:System.ServiceModel.OperationContractAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.OperationContractAttribute" />. </summary>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.Action">
      <summary>Obtient ou définit l'action WS-Addressing du message de demande. </summary>
      <returns>Action à utiliser pour générer l'en-tête de l'action WS-Addressing.</returns>
      <exception cref="T:System.ArgumentNullException">La valeur est null.</exception>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.AsyncPattern">
      <summary>Indique qu'une opération est implémentée de façon asynchrone à l'aide d'une paire de méthodes Begin&lt;methodName&gt; et End&lt;methodName&gt; dans un contrat de service. </summary>
      <returns>true si la méthode Begin&lt;methodName&gt; correspond à une méthode End&lt;methodName&gt; et peut être traitée par l'infrastructure comme une opération implémentée en tant que paire de méthodes asynchrones sur l'interface de service ; sinon false.La valeur par défaut est false.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
      <summary>Obtient ou définit une valeur qui indique si une opération retourne un message de réponse.</summary>
      <returns>true si cette méthode reçoit un message de demande et ne retourne aucun message de réponse ; sinon, false.La valeur par défaut est false.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.Name">
      <summary>Obtient ou définit le nom de l'opération.</summary>
      <returns>Nom de l'opération.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.ServiceModel.OperationContractAttribute.Name" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur est une chaîne vide.</exception>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.ReplyAction">
      <summary>Obtient ou définit la valeur de l'action SOAP pour le message de réponse de l'opération.</summary>
      <returns>Valeur de l'action SOAP pour le message de réponse.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.ServiceModel.OperationContractAttribute.ReplyAction" /> a la valeur null.</exception>
    </member>
    <member name="T:System.ServiceModel.OperationFormatStyle">
      <summary>Représente le style SOAP qui détermine la mise en forme des métadonnées WSDL pour le service.</summary>
    </member>
    <member name="F:System.ServiceModel.OperationFormatStyle.Document">
      <summary>La représentation WSDL contient un élément unique qui représente le document échangé pour l'opération.</summary>
    </member>
    <member name="F:System.ServiceModel.OperationFormatStyle.Rpc">
      <summary>La représentation WSDL des messages échangés pour une opération contient des paramètres propres à un appel de procédure distante.</summary>
    </member>
    <member name="T:System.ServiceModel.ProtocolException">
      <summary>L'exception vue sur le client qui est levée lors de la communication avec le tiers distant est impossible en raison de protocoles de transfert de données incompatibles.</summary>
    </member>
    <member name="M:System.ServiceModel.ProtocolException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.ProtocolException" /> avec un message d'erreur spécifié.</summary>
      <param name="message">Message d'erreur indiquant la raison de l'exception.</param>
    </member>
    <member name="M:System.ServiceModel.ProtocolException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.ProtocolException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué l'exception.</summary>
      <param name="message">Message d'erreur indiquant la raison de l'exception.</param>
      <param name="innerException">L'<see cref="T:System.Exception" /> à l'origine de la levée de l'exception actuelle. </param>
    </member>
    <member name="T:System.ServiceModel.QuotaExceededException">
      <summary>Exception levée lorsqu'un quota de message est dépassé.</summary>
    </member>
    <member name="M:System.ServiceModel.QuotaExceededException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.QuotaExceededException" /> avec un message d'erreur spécifié.</summary>
      <param name="message">Message d'erreur indiquant la raison de l'exception.</param>
    </member>
    <member name="M:System.ServiceModel.QuotaExceededException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.QuotaExceededException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué l'exception.</summary>
      <param name="message">Message d'erreur indiquant la raison de l'exception.</param>
      <param name="innerException">L'<see cref="T:System.Exception" /> à l'origine de la levée de l'exception actuelle.</param>
    </member>
    <member name="T:System.ServiceModel.SecurityMode">
      <summary>Détermine les paramètres de sécurité pour une liaison.</summary>
    </member>
    <member name="F:System.ServiceModel.SecurityMode.Message">
      <summary>La sécurité est fournie à l'aide de la sécurité des messages SOAP.</summary>
    </member>
    <member name="F:System.ServiceModel.SecurityMode.None">
      <summary>La sécurité est désactivée.</summary>
    </member>
    <member name="F:System.ServiceModel.SecurityMode.Transport">
      <summary>La sécurité est assurée via un transport sécurisé (par exemple, HTTPS).</summary>
    </member>
    <member name="F:System.ServiceModel.SecurityMode.TransportWithMessageCredential">
      <summary>Un transport sécurisé (par exemple, HTTPS) garantit l'intégrité, la confidentialité et l'authentification, alors que la sécurité des messages SOAP garantit l'authentification du client.</summary>
    </member>
    <member name="T:System.ServiceModel.ServerTooBusyException">
      <summary>L'exception levée lorsqu'un serveur est trop occupé pour accepter un message.</summary>
    </member>
    <member name="M:System.ServiceModel.ServerTooBusyException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.ServerTooBusyException" /> avec un message d'erreur spécifié.</summary>
      <param name="message">Message d'erreur indiquant la raison de l'exception.</param>
    </member>
    <member name="M:System.ServiceModel.ServerTooBusyException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.ServerTooBusyException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué l'exception.</summary>
      <param name="message">Message d'erreur indiquant la raison de l'exception.</param>
      <param name="innerException">L'<see cref="T:System.Exception" /> à l'origine de la levée de l'exception actuelle.</param>
    </member>
    <member name="T:System.ServiceModel.ServiceActivationException">
      <summary>Exception levée lorsque l'activation d'un service échoue.</summary>
    </member>
    <member name="M:System.ServiceModel.ServiceActivationException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.ServiceActivationException" /> avec un message d'erreur spécifié.</summary>
      <param name="message">Message d'erreur indiquant la raison de l'exception.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceActivationException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.ServiceActivationException" /> avec un message d'erreur et l'exception interne fournis.  </summary>
      <param name="message">Message d'erreur indiquant la raison de l'exception.</param>
      <param name="innerException">L'<see cref="T:System.Exception" /> à l'origine de la levée de l'exception actuelle. </param>
    </member>
    <member name="T:System.ServiceModel.ServiceContractAttribute">
      <summary>Indique qu'une interface ou une classe définit un contrat de service dans une application Windows Communication Foundation (WCF). </summary>
    </member>
    <member name="M:System.ServiceModel.ServiceContractAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.ServiceContractAttribute" />. </summary>
    </member>
    <member name="P:System.ServiceModel.ServiceContractAttribute.CallbackContract">
      <summary>Obtient ou définit le type de contrat de rappel lorsque le contrat est un contrat duplex.</summary>
      <returns>
        <see cref="T:System.Type" /> qui indique le contrat de rappel.La valeur par défaut est null.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceContractAttribute.ConfigurationName">
      <summary>Obtient ou définit le nom utilisé pour localiser le service dans un fichier de configuration de l'application.</summary>
      <returns>Nom utilisé pour localiser l'élément de service dans un fichier de configuration de l'application.Par défaut, il s'agit du nom de la classe d'implémentation du service.</returns>
      <exception cref="T:System.ArgumentNullException">La valeur est Null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur est une chaîne vide.</exception>
    </member>
    <member name="P:System.ServiceModel.ServiceContractAttribute.Name">
      <summary>Obtient ou définit le nom pour l'élément &lt;portType&gt; dans WSDL (Web Services Description Language). </summary>
      <returns>La valeur par défaut est le nom de la classe ou de l'interface à laquelle la <see cref="T:System.ServiceModel.ServiceContractAttribute" /> est appliquée. </returns>
      <exception cref="T:System.ArgumentNullException">La valeur est Null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur est une chaîne vide.</exception>
    </member>
    <member name="P:System.ServiceModel.ServiceContractAttribute.Namespace">
      <summary>Obtient ou définit l'espace de noms de l'élément &lt;portType&gt; dans WSDL (Web Services Description Language).</summary>
      <returns>L'espace de noms WSDL de l'élément &lt;portType&gt;.La valeur par défaut est "http://tempuri.org/".</returns>
    </member>
    <member name="T:System.ServiceModel.ServiceKnownTypeAttribute">
      <summary>Spécifie les types connus utilisés par un service lors de la sérialisation ou de la désérialisation.</summary>
    </member>
    <member name="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.ServiceKnownTypeAttribute" /> et spécifie le nom d'une méthode qui retourne les types connus.</summary>
      <param name="methodName">Nom d'une méthode qui retourne les types connus.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.String,System.Type)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.ServiceKnownTypeAttribute" /> avec le nom d'une méthode qui retourne les types connus et le type qui contient la méthode (ou les méthodes) qui retourne les types connus.</summary>
      <param name="methodName">Nom d'une méthode qui retourne les types connus.</param>
      <param name="declaringType">Type qui peut utiliser les types connus dans son graphique d'objets.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.Type)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.ServiceKnownTypeAttribute" /> à l'aide du type connu spécifié.</summary>
      <param name="type">Spécifie un type connu qui peut être utilisé dans un paramètre ou une valeur de retour définis par le service.</param>
    </member>
    <member name="P:System.ServiceModel.ServiceKnownTypeAttribute.DeclaringType">
      <summary>Obtient le type qui contient les méthodes qui retournent les types connus.</summary>
      <returns>
        <see cref="T:System.Type" /> qui contient les méthodes qui retournent les types connus.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceKnownTypeAttribute.MethodName">
      <summary>Obtient le nom d'une méthode qui retourne la collection de types connus.</summary>
      <returns>Nom de la méthode qui retourne les types connus.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceKnownTypeAttribute.Type">
      <summary>Type connu qui peut être inclus dans un graphique d'objets.</summary>
      <returns>
        <see cref="T:System.Type" /> du type connu.</returns>
    </member>
    <member name="T:System.ServiceModel.TransferMode">
      <summary>Indique si un canal utilise des modes de transmission en continu ou par mise en mémoire tampon pour les messages de demande et de réponse.</summary>
    </member>
    <member name="F:System.ServiceModel.TransferMode.Buffered">
      <summary>Les messages de demande et de réponse sont mis en mémoire tampon.</summary>
    </member>
    <member name="F:System.ServiceModel.TransferMode.Streamed">
      <summary>Les messages de demande et de réponse sont transmis en continu.</summary>
    </member>
    <member name="F:System.ServiceModel.TransferMode.StreamedRequest">
      <summary>Le message de demande est transmis en continu et le message de réponse est mis en mémoire tampon.</summary>
    </member>
    <member name="F:System.ServiceModel.TransferMode.StreamedResponse">
      <summary>Le message de demande est mis en mémoire tampon et le message de réponse est transmis en continu.</summary>
    </member>
    <member name="T:System.ServiceModel.UnknownMessageReceivedEventArgs">
      <summary>Contient le message reçu par un canal et ne peut être associé à aucune opération de rappel ni à aucune demande en attente.</summary>
    </member>
    <member name="P:System.ServiceModel.UnknownMessageReceivedEventArgs.Message">
      <summary>Obtient le message inconnu qui a causé l'événement.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Message" /> qui a causé l'événement.</returns>
    </member>
    <member name="T:System.ServiceModel.XmlSerializerFormatAttribute">
      <summary>Indique à l'infrastructure Windows Communication Foundation (WCF) d'utiliser le <see cref="T:System.Xml.Serialization.XmlSerializer" /> plutôt que le <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</summary>
    </member>
    <member name="M:System.ServiceModel.XmlSerializerFormatAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.XmlSerializerFormatAttribute" />. </summary>
    </member>
    <member name="P:System.ServiceModel.XmlSerializerFormatAttribute.Style">
      <summary>Obtient ou définit le style SOAP du <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <returns>Une des valeurs de <see cref="T:System.ServiceModel.OperationFormatStyle" />.La valeur par défaut est <see cref="F:System.ServiceModel.OperationFormatStyle.Document" />.</returns>
    </member>
    <member name="P:System.ServiceModel.XmlSerializerFormatAttribute.SupportFaults">
      <summary>Obtient ou définit une valeur qui indique que le <see cref="T:System.Xml.Serialization.XmlSerializer" /> doit être utilisé pour lire et écrire des erreurs. </summary>
      <returns>true si le <see cref="T:System.Xml.Serialization.XmlSerializer" /> doit être utilisé pour lire et écrire des erreurs ; false si le <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> doit être utilisé.La valeur par défaut est false.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.AddressHeader">
      <summary>Représente un en-tête qui encapsule un élément d'informations d'adresse utilisé pour identifier ou interagir avec un point de terminaison.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.AddressHeader" />.  </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.CreateAddressHeader(System.String,System.String,System.Object)">
      <summary>Crée une instance de la classe <see cref="T:System.ServiceModel.Channels.AddressHeader" /> avec une valeur, un nom et un espace de noms spécifiés.</summary>
      <returns>Objet <see cref="T:System.ServiceModel.Channels.AddressHeader" /> avec des paramètres <paramref name="name" /> et  <paramref name="ns" /> spécifiés qui contient l'élément d'information spécifié par le paramètre <paramref name="value" />.</returns>
      <param name="name">Nom de l'en-tête d'adresse.</param>
      <param name="ns">Espace de noms de l'en-tête d'adresse.</param>
      <param name="value">Élément d'information relatif à l'en-tête d'adresse.</param>
      <exception cref="T:System.ArgumentNullException">Le <paramref name="name" /> a la valeur null ou <paramref name="name" />.Length == 0.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.CreateAddressHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Crée une instance de la classe <see cref="T:System.ServiceModel.Channels.AddressHeader" /> avec un nom et un espace de noms spécifiés qui utilise un formateur spécifié pour sérialiser l'élément d'informations à partir d'un objet spécifié.</summary>
      <returns>Objet <see cref="T:System.ServiceModel.Channels.AddressHeader" /> avec des paramètres <paramref name="name" /> et  <paramref name="ns" /> spécifiés qui contient l'élément d'information spécifié par le paramètre <paramref name="value" />.</returns>
      <param name="name">Nom de l'en-tête d'adresse.</param>
      <param name="ns">Espace de noms de l'en-tête d'adresse.</param>
      <param name="value">Élément d'information relatif à l'en-tête d'adresse.</param>
      <param name="serializer">
        <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> utilisé pour sérialiser l'objet spécifié dans le paramètre <paramref name="value" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> ou <paramref name="serializer" /> a la valeur null ou <paramref name="name" />.Length == 0.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.Equals(System.Object)">
      <summary>Détermine si l'élément d'informations d'un objet spécifié est identique à l'objet contenu dans l'en-tête d'adresse actuel.</summary>
      <returns>true si l'élément d'informations d'un objet <paramref name="obj" /> spécifié équivaut à celui contenu dans l'en-tête d'adresse actif ; false dans le cas contraire.En particulier, retourne false si <paramref name="obj" /> a la valeur null.</returns>
      <param name="obj">Objet <see cref="T:System.Object" /> à comparer avec l'objet contenu dans l'en-tête d'adresse actuel.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.GetAddressHeaderReader">
      <summary>Retourne un lecteur XML qui peut sérialiser l'objet d'en-tête d'adresse actuel.</summary>
      <returns>Instance de <see cref="T:System.Xml.XmlDictionaryReader" /> qui peut sérialiser l'objet d'en-tête d'adresse actuel.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.GetHashCode">
      <summary>Fournit un code de hachage unique pour un en-tête d'adresse. </summary>
      <returns>Code de hachage unique pour l'en-tête d'adresse actuel.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.GetValue``1">
      <summary>Désérialise l'élément d'informations de l'en-tête d'adresse actuel en un objet d'un type spécifié.</summary>
      <returns>Instance d'une classe de type <paramref name="T" /> dont les champs et les propriétés reçoivent leurs valeurs de l'objet d'en-tête d'adresse actif.</returns>
      <typeparam name="T">Classe de type <paramref name="T" /> dont les champs et les propriétés reçoivent leurs valeurs de l'objet d'en-tête d'adresse actif.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.GetValue``1(System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Désérialise l'élément d'informations de l'en-tête d'adresse actuel en un objet d'un type spécifié qui utilise un formateur spécifié pour sérialiser ces informations.</summary>
      <returns>Instance d'une classe de type <paramref name="T" /> dont les champs et les propriétés reçoivent leurs valeurs de l'objet d'en-tête d'adresse actif.</returns>
      <param name="serializer">
        <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> utilisé pour désérialiser l'élément d'informations à partir de l'objet d'en-tête d'adresse actuel.</param>
      <typeparam name="T">Classe de type <paramref name="T" /> dont les champs et les propriétés reçoivent leurs valeurs de l'objet d'en-tête d'adresse actif.</typeparam>
      <exception cref="T:System.ArgumentNullException">Le <paramref name="serializer" /> est null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.AddressHeader.Name">
      <summary>En cas d'implémentation, obtient le nom de l'en-tête d'adresse.</summary>
      <returns>Nom de l'en-tête d'adresse.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.AddressHeader.Namespace">
      <summary>En cas d'implémentation, obtient l'espace de noms de l'en-tête d'adresse.</summary>
      <returns>Espace de noms de l'en-tête d'adresse.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.OnWriteAddressHeaderContents(System.Xml.XmlDictionaryWriter)">
      <summary>En cas de substitution dans une classe dérivée, est appelée lorsque le contenu d'en-tête d'adresse est écrit dans un flux de données ou un fichier.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> utilisé pour écrire le contenu d'en-tête d'adresse dans un flux de données ou un fichier.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.OnWriteStartAddressHeader(System.Xml.XmlDictionaryWriter)">
      <summary>En cas de substitution dans une classe dérivée, est appelée lorsque le contenu d'en-tête d'adresse commence à être écrit dans un flux de données ou un fichier.</summary>
      <param name="writer">Objet <see cref="T:System.Xml.XmlDictionaryWriter" /> utilisé pour écrire l'en-tête d'adresse dans un flux de données ou un fichier.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.ToMessageHeader">
      <summary>Encapsule l'en-tête d'adresse en tant qu'en-tête de message.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageHeader" /> qui encapsule l'en-tête d'adresse actuel.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.WriteAddressHeader(System.Xml.XmlDictionaryWriter)">
      <summary>Écrit l'en-tête d'adresse dans un flux de données ou un fichier à l'aide d'un <see cref="T:System.Xml.XmlDictionaryWriter" /> spécifié.</summary>
      <param name="writer">Objet <see cref="T:System.Xml.XmlDictionaryWriter" /> utilisé pour écrire l'en-tête d'adresse dans un flux de données ou un fichier.</param>
      <exception cref="T:System.ArgumentNullException">Le <paramref name="writer" /> est null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.WriteAddressHeader(System.Xml.XmlWriter)">
      <summary>Écrit l'en-tête d'adresse dans un flux de données ou un fichier à l'aide d'un <see cref="T:System.Xml.XmlWriter" /> spécifié.</summary>
      <param name="writer">Objet <see cref="T:System.Xml.XmlWriter" /> utilisé pour écrire l'en-tête d'adresse dans un flux de données ou un fichier.</param>
      <exception cref="T:System.ArgumentNullException">Le <paramref name="writer" /> est null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.WriteAddressHeaderContents(System.Xml.XmlDictionaryWriter)">
      <summary>Écrit le contenu d'en-tête d'adresse dans un flux de données ou un fichier.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> utilisé pour écrire le contenu d'en-tête d'adresse dans un flux de données ou un fichier.</param>
      <exception cref="T:System.ArgumentNullException">Le <paramref name="writer" /> est null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.WriteStartAddressHeader(System.Xml.XmlDictionaryWriter)">
      <summary>Commence à écrire le contenu d'en-tête d'adresse dans un flux de données ou un fichier.</summary>
      <param name="writer">Objet <see cref="T:System.Xml.XmlDictionaryWriter" /> utilisé pour écrire l'en-tête d'adresse dans un flux de données ou un fichier.</param>
      <exception cref="T:System.ArgumentNullException">Le <paramref name="writer" /> est null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.AddressHeaderCollection">
      <summary>Représente une collection thread-safe en lecture seule d'en-têtes d'adresse.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.AddressHeaderCollection" />.  </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.Channels.AddressHeader})">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.AddressHeaderCollection" /> à partir d'un ensemble dénombrable d'en-têtes d'adresse.</summary>
      <param name="addressHeaders">Ensemble <see cref="T:System.Collections.Generic.IEnumerable`1" /> d'objets <see cref="T:System.ServiceModel.Channels.AddressHeader" /> utilisé pour initialiser la collection.</param>
      <exception cref="T:System.ArgumentException">L'un des en-têtes d'adresse du paramètre <paramref name="addressHeaders" /> a la valeur null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.AddHeadersTo(System.ServiceModel.Channels.Message)">
      <summary>Ajoute les en-têtes de la collection aux en-têtes du message spécifié.</summary>
      <param name="message">Objet <see cref="T:System.ServiceModel.Channels.Message" /> auquel les en-têtes sont ajoutés.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> a la valeur null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.FindAll(System.String,System.String)">
      <summary>Recherche tous les en-têtes d'adresse de la collection avec le nom et l'espace de noms spécifiés.</summary>
      <returns>Objet <see cref="T:System.Array" /> de type <see cref="T:System.ServiceModel.Channels.AddressHeader" /> qui contient tous les en-têtes de la collection qui correspondent au nom et à l'espace de noms spécifiés.</returns>
      <param name="name">Nom de l'en-tête d'adresse à rechercher.</param>
      <param name="ns">Espace de noms de l'en-tête d'adresse à rechercher.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> ou <paramref name="ns" /> est null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.FindHeader(System.String,System.String)">
      <summary>Recherche le premier en-tête d'adresse de la collection avec le nom et l'espace de noms spécifiés.</summary>
      <returns>Objet <see cref="T:System.ServiceModel.Channels.AddressHeader" /> dans la collection avec le nom et l'espace de noms spécifiés.</returns>
      <param name="name">Nom de l'en-tête d'adresse à rechercher.</param>
      <param name="ns">Espace de noms de l'en-tête d'adresse à rechercher.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> ou <paramref name="ns" /> est null.</exception>
      <exception cref="T:System.ArgumentException">Il existe plusieurs en-têtes qui correspondent aux paramètres <paramref name="name" /> et <paramref name="ns" /> spécifiés.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.AddressingVersion">
      <summary>La version de WS-Addressing associée à un message SOAP ou comprise par un point de terminaison.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.AddressingVersion.None">
      <summary>Obtient la version d'adressage qui n'est associée à la version de WS-Addressing.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> qui n'est pas une version associée de WS-Addressing.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressingVersion.ToString">
      <summary>Retourne une chaîne représentant la version d'adressage actuelle.</summary>
      <returns>Chaîne qui représente la version d'adressage actuelle.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.AddressingVersion.WSAddressing10">
      <summary>Obtient un identificateur pour la version d'adresse associée à WS-Addressing 1.0.</summary>
      <returns>Instance de singleton qui identifie la <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> associée à WS-Addressing 1.0.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement">
      <summary>Élément de liaison qui spécifie le format binaire .NET pour XML utilisé pour encoder des messages.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Génère la pile de fabriques de canal sur le client qui crée un type de canal spécifié pour un contexte spécifié.</summary>
      <returns>Objet <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> de type <paramref name="TChannel" /> pour le contexte spécifié.</returns>
      <param name="context">Objet <see cref="T:System.ServiceModel.Channels.BindingContext" /> pour le canal.</param>
      <typeparam name="TChannel">Le type de canal généré par la fabrique de canal.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.Clone">
      <summary>Crée un objet <see cref="T:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement" /> initialisé à partir de l'objet actuel.</summary>
      <returns>Objet <see cref="T:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement" /> dont les valeurs de propriété sont égales à celles de l'élément actuel.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.CompressionFormat">
      <summary>Obtient ou définit le format de compression pour l'élément de liaison.</summary>
      <returns>Format de compression de l'élément de liaison.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.CreateMessageEncoderFactory">
      <summary>Crée une fabrique d'encodeurs de messages binaires qui emploient les versions SOAP et WS-Addressing et l'encodage de caractères spécifiés par l'élément de liaison d'encodage actuel.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" /> créé par cet élément de liaison.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Retourne un objet typé demandé (s'il existe) à partir de la couche appropriée de la pile des éléments de liaison.</summary>
      <returns>L'objet typé <paramref name="T" /> demandé s'il existe ; null sinon.</returns>
      <param name="context">Objet <see cref="T:System.ServiceModel.Channels.BindingContext" /> pour l'élément de liaison.</param>
      <typeparam name="T">L'objet typé pour lequel la méthode effectue une requête.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.MaxSessionSize">
      <summary>Obtient ou définit la quantité de mémoire maximale disponible dans une session pour optimiser des procédures de transmission.</summary>
      <returns>Taille maximale d'une session, en octets.La valeur par défaut est de 2 048 octets.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur est inférieure ou égale à zéro.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.MessageVersion">
      <summary>Obtient ou définit le message SOAP et les versions WS-Addressing qui sont utilisées ou attendues.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageVersion" /> qui est utilisée ou attendue.</returns>
      <exception cref="T:System.ArgumentNullException">La valeur définie est null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur définie est une version d'enveloppe non prise en charge.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.ReaderQuotas">
      <summary>Obtient les contraintes sur la complexité des messages XML qui peuvent être traités par les points de terminaison configurés avec cet élément de liaison.</summary>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> qui spécifie les contraintes de complexité des messages SOAP échangés.Les valeurs par défaut de ces contraintes sont fournies dans la section Remarques suivante.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.Binding">
      <summary>Contient les éléments de liaison spécifiant les protocoles, les transports et les encodeurs de message utilisés pour la communication entre les clients et les services.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.Binding" /> avec un nom et un espace de noms par défaut. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.#ctor(System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.Binding" /> à partir d'une liaison spécifiée du service.</summary>
      <param name="name">Propriété <see cref="P:System.ServiceModel.Channels.Binding.Name" /> de la liaison.</param>
      <param name="ns">Propriété <see cref="P:System.ServiceModel.Channels.Binding.Namespace" /> de la liaison.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> est null ou est une chaîne vide.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ns" /> a la valeur null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])">
      <summary>Génère la pile de fabriques de canaux sur le client qui crée un type de canal donné et est conforme aux fonctionnalités spécifiées par un tableau d'objets.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> de type <paramref name="TChannel" /> étant conforme aux fonctionnalités spécifiées par la collection.</returns>
      <param name="parameters">Le tableau d'objets qui définit les spécifications de la fabrique de canal générée.</param>
      <typeparam name="TChannel">Le type de canal généré par la fabrique de canal.</typeparam>
      <exception cref="T:System.InvalidOperationException">Soit l'élément de transport est manquant ou désordonné, soit le modèle est non valide, soit la version de message n'est pas spécifiée.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Génère la pile de fabriques de canaux sur le client qui crée un type de canal donné et est conforme aux fonctionnalités spécifiées par une collection de paramètres de liaison.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> de type <paramref name="TChannel" /> étant conforme aux fonctionnalités spécifiées par la collection.</returns>
      <param name="parameters">Le <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> définissant les spécifications de la fabrique de canal générée.</param>
      <typeparam name="TChannel">Le type de canal généré par la fabrique de canal.</typeparam>
      <exception cref="T:System.InvalidOperationException">Soit l'élément de transport est manquant ou désordonné, soit le modèle est non valide, soit la version de message n'est pas spécifiée.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])">
      <summary>Retourne une valeur qui indique si la liaison actuelle peut générer sur le client une pile de fabriques de canaux conforme aux spécifications définies par un tableau d'objets.</summary>
      <returns>true si la pile de fabrications de canaux spécifiée peut être générée sur le client ; false sinon.</returns>
      <param name="parameters">Le tableau d'objets qui définit les spécifications de la fabrique de canal générée.</param>
      <typeparam name="TChannel">Le type de canal pour lequel la fabrique est actuellement testée.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Retourne une valeur qui indique si la liaison actuelle peut générer sur le client une pile de fabriques de canaux conforme à la collection de paramètres de liaison spécifiée.</summary>
      <returns>true si la pile de fabrications de canaux spécifiée peut être générée sur le client ; false sinon.</returns>
      <param name="parameters">Objet <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> qui définit les spécifications de la fabrique de canaux générée.</param>
      <typeparam name="TChannel">Le type de canal pour lequel la fabrique est actuellement testée.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.CloseTimeout">
      <summary>Obtient ou définit l'intervalle de temps attribué à une connexion pour qu'elle se ferme avant que le transport lève une exception.</summary>
      <returns>
        <see cref="T:System.Timespan" /> qui spécifie le délai d'exécution de l'opération de fermeture avant le dépassement du délai d'attente.La valeur par défaut est de 1 minute.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur est soit inférieure à zéro soit trop élevée.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.CreateBindingElements">
      <summary>Dans le cas d'un remplacement au sein d'une classe dérivée, crée une collection qui contient les éléments de liaison qui font partie de la liaison actuelle. </summary>
      <returns>Objet <see cref="T:System.Collections.Generic.ICollection`1" /> de type <see cref="T:System.ServiceModel.Channels.BindingElement" /> contenant les éléments de liaison de l'objet de liaison actuel dans le bon ordre.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Retourne un objet typé demandé (s'il existe) à partir de la couche appropriée dans la pile de liaison.</summary>
      <returns>L'objet typé <paramref name="T" /> demandé s'il existe ; null sinon.</returns>
      <param name="parameters">Objet <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> qui définit les spécifications de l'écouteur de canal généré.</param>
      <typeparam name="T">L'objet typé pour lequel la méthode effectue une requête.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.MessageVersion">
      <summary>Obtient la version de message utilisée par les clients et les services configurés avec la liaison.</summary>
      <returns>Objet <see cref="T:System.ServiceModel.Channels.MessageVersion" /> utilisé par les clients et les services configurés avec la liaison.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.Name">
      <summary>Obtient ou définit le nom de la liaison.</summary>
      <returns>Nom de la liaison.Le nom par défaut est null.</returns>
      <exception cref="T:System.ArgumentException">La valeur définie ne peut être ni null ni une chaîne vide.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.Namespace">
      <summary>Obtient ou définit l'espace de noms XML de la liaison.</summary>
      <returns>Espace de noms XML de la liaison.La valeur par défaut est « http://tempuri.org/ ».</returns>
      <exception cref="T:System.ArgumentNullException">La valeur définie ne peut pas être null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.OpenTimeout">
      <summary>Obtient ou définit l'intervalle de temps attribué à une connexion pour qu'elle s'ouvre avant que le transport lève une exception.</summary>
      <returns>
        <see cref="T:System.Timespan" /> qui spécifie le délai d'exécution de l'opération d'ouverture avant le dépassement du délai d'attente.La valeur par défaut est de 1 minute.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur est soit inférieure à zéro soit trop élevée.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.ReceiveTimeout">
      <summary>Obtient ou définit la durée d'inactivité d'une connexion. Si aucun message d'application n'est reçu pendant ce laps de temps, la connexion est abandonnée.</summary>
      <returns>
        <see cref="T:System.Timespan" /> qui indique le délai d'attente de réception d'un message par l'application.La valeur par défaut est de 10 minute.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur est soit inférieure à zéro soit trop élevée.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.Scheme">
      <summary>En cas d'implémentation dans une classe dérivée, définit le modèle URI qui spécifie le transport utilisé par les fabriques de canaux et d'écouteurs générées par les liaisons.</summary>
      <returns>Le modèle URI utilisé par les canaux ou les écouteurs créés par les fabriques générées par la liaison actuelle.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.SendTimeout">
      <summary>Obtient ou définit l'intervalle de temps attribué à une opération d'écriture pour qu'elle se termine avant que le transport lève une exception.</summary>
      <returns>Le <see cref="T:System.Timespan" /> qui spécifie le délai d'exécution de l'opération d'écriture avant dépassement du délai d'attente.La valeur par défaut est de 1 minute.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur est soit inférieure à zéro soit trop élevée.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.BindingContext">
      <summary>Fournit des informations sur des adresses, liaisons, éléments de liaison et paramètres de liaison requis pour générer les écouteurs et les fabriques de canaux.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.#ctor(System.ServiceModel.Channels.CustomBinding,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.BindingContext" /> pour une liaison et une collection de paramètres de liaison spécifiées.</summary>
      <param name="binding">Objet <see cref="T:System.ServiceModel.Channels.CustomBinding" /> pour le canal.</param>
      <param name="parameters">Objet <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> pour le canal.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binding" /> a la valeur null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.BindingContext.Binding">
      <summary>Obtient la liaison pour le canal construit dans le contexte actuel.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.CustomBinding" /> pour le canal construit dans le contexte actuel.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.BindingContext.BindingParameters">
      <summary>Obtient la collection de paramètres de liaison pour le canal construit dans le contexte actuel.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> pour le canal construit dans le contexte actuel.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.BuildInnerChannelFactory``1">
      <summary>Génère la fabrique de canal interne pour les canaux d'un type spécifié sous la fabrique de canal actuelle.</summary>
      <returns>La <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> de type <see cref="T:System.ServiceModel.Channels.IChannel" /> qui représente la fabrique de canal interne de la fabrique de canal actuelle.</returns>
      <typeparam name="TChannel">Le type d'objets <see cref="T:System.ServiceModel.Channels.IChannel" /> que la fabrique de canal interne génère.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.CanBuildInnerChannelFactory``1">
      <summary>Retourne une valeur qui indique si la fabrique de canaux interne peut générer un type spécifié de canal.</summary>
      <returns>true si la fabrication de canal interne peut produire le <paramref name="TChannel" /> spécifié ; sinon, false.</returns>
      <typeparam name="TChannel">Le type d'objets <see cref="T:System.ServiceModel.Channels.IChannel" /> que la fabrique de canal interne génère.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.Clone">
      <summary>Retourne une copie du contexte actuel de génération de canaux.</summary>
      <returns>Objet <see cref="T:System.ServiceModel.Channels.BindingContext" /> qui est une copie du contexte actuel de génération de canaux.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.GetInnerProperty``1">
      <summary>Retourne un objet typé demandé (s'il existe) à partir de la couche appropriée dans la pile de liaison.</summary>
      <returns>L'objet typé <paramref name="T" /> demandé s'il existe ; null sinon.</returns>
      <typeparam name="T">L'objet typé pour lequel la méthode effectue une requête.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.BindingContext.RemainingBindingElements">
      <summary>Obtient les éléments de liaison utilisés par d'autres éléments de liaison pour construire la pile de canaux.</summary>
      <returns>La <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> qui contient les éléments de liaison utilisés par d'autres éléments de liaison pour construire la pile de canaux.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.BindingElement">
      <summary>Éléments des liaisons qui génèrent les fabriques et les écouteurs de canal pour différents types de canaux utilisés pour traiter des messages sortants et entrants.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.BindingElement" />.  </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.#ctor(System.ServiceModel.Channels.BindingElement)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.BindingElement" /> à partir d'un élément de liaison spécifié.</summary>
      <param name="elementToBeCloned">
        <see cref="T:System.ServiceModel.Channels.BindingElement" /> à cloner.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Initialise une fabrique de canal pour générer des canaux d'un type spécifié à partir du contexte de liaison.</summary>
      <returns>Objet <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> de type <paramref name="TChannel" /> initialisé à partir de <paramref name="context" />.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" /> qui fournit le contexte pour l'élément de liaison. </param>
      <typeparam name="TChannel">Type de canal construit par la fabrique.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> a la valeur null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Retourne une valeur qui indique si l'élément de liaison peut générer une fabrique de canaux pour un type de canal spécifique.</summary>
      <returns>true si l'objet <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> de type <paramref name="TChannel" /> peut être généré par l'élément de liaison ; sinon, false.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" /> qui fournit le contexte pour l'élément de liaison. </param>
      <typeparam name="TChannel">Le type de canal généré par la fabrique de canal.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> a la valeur null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.Clone">
      <summary>En cas de substitution dans une classe dérivée, retourne une copie de l'objet d'élément de liaison.</summary>
      <returns>Objet <see cref="T:System.ServiceModel.Channels.BindingElement" /> qui est un clone complet de l'original.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>En cas de substitution dans une classe dérivée, retourne un objet typé demandé, s'il existe, à partir de la couche appropriée de la pile des éléments de liaison.</summary>
      <returns>Objet typé <paramref name="T" /> demandé, s'il existe ; null dans le cas contraire.</returns>
      <param name="context">Objet <see cref="T:System.ServiceModel.Channels.BindingContext" /> pour l'élément de liaison.</param>
      <typeparam name="T">L'objet typé pour lequel la méthode effectue une requête.</typeparam>
    </member>
    <member name="T:System.ServiceModel.Channels.BindingElementCollection">
      <summary>Représente la collection d'éléments de liaison utilisés dans une liaison.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.BindingElementCollection" />.  </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.Channels.BindingElement})">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> à partir d'un ensemble dénombrable d'éléments de liaison.</summary>
      <param name="elements">Objet <see cref="T:System.Collections.Generic.IEnumerable`1" /> de type générique <see cref="T:System.ServiceModel.Channels.BindingElement" /> utilisé pour initialiser la collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elements" /> a la valeur null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.#ctor(System.ServiceModel.Channels.BindingElement[])">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> à partir d'un tableau d'éléments de liaison.</summary>
      <param name="elements">Objet <see cref="T:System.Array" /> de type <see cref="T:System.ServiceModel.Channels.BindingElement" /> utilisé pour initialiser la collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elements" /> a la valeur null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.AddRange(System.ServiceModel.Channels.BindingElement[])">
      <summary>Ajoute des éléments de liaison d'un tableau dans la collection d'éléments de liaison.</summary>
      <param name="elements">Objet <see cref="T:System.Array" /> de type <see cref="T:System.ServiceModel.Channels.BindingElement" /> à ajouter à la collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elements" /> a la valeur null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.Clone">
      <summary>Crée une copie de la collection d'élément de liaison.</summary>
      <returns>Copie de <see cref="T:System.ServiceModel.Channels.BindingElementCollection" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.Contains(System.Type)">
      <summary>Retourne une valeur qui indique si un type spécifié d'élément de liaison appartient à la collection d'éléments de liaison.</summary>
      <returns>true si le type d'élément de liaison spécifié est contenu dans la collection ; sinon, false.</returns>
      <param name="bindingElementType">Type d'élément de liaison qui est testé pour être inclus dans la collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bindingElementType" /> a la valeur null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.Find``1">
      <summary>Retourne le premier élément d'un type spécifié de la collection d'éléments de liaison.</summary>
      <returns>Élément de type <see cref="T:System.Type" /> s'il est trouvé ; dans le cas contraire, 0 si <paramref name="T" /> est une valeur ou null si <paramref name="T" /> est une référence.</returns>
      <typeparam name="T">
        <see cref="T:System.Type" /> d'élément à rechercher.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.FindAll``1">
      <summary>Retourne tous les éléments d'un type spécifié de la collection d'éléments de liaison.</summary>
      <returns>
        <see cref="T:System.Collections.ObjectModel.Collection`1" /> si tous les éléments de type <see cref="T:System.Type" /> sont trouvés ; si aucun élément n'est trouvé, 0 si <paramref name="T" /> est une valeur ou null si <paramref name="T" /> est une référence.</returns>
      <typeparam name="T">
        <see cref="T:System.Type" /> d'élément à rechercher.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.InsertItem(System.Int32,System.ServiceModel.Channels.BindingElement)">
      <summary>Insère un élément de liaison à un emplacement spécifié dans une collection d'éléments de liaison.</summary>
      <param name="index">Emplacement d'insertion de l'élément de liaison dans la collection.</param>
      <param name="item">
        <see cref="T:System.ServiceModel.Channels.BindingElement" /> à insérer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> a la valeur null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.Remove``1">
      <summary>Supprime un élément de liaison d'un type spécifié de la collection d'éléments de liaison.</summary>
      <returns>Élément de type <see cref="T:System.Type" /> supprimé.</returns>
      <typeparam name="T">
        <see cref="T:System.Type" /> d'élément à rechercher.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.RemoveAll``1">
      <summary>Supprime tous les éléments de liaison d'un type spécifié de la collection d'éléments de liaison.</summary>
      <returns>
        <see cref="T:System.Collections.ObjectModel.Collection`1" /> de tous les éléments de type <see cref="T:System.Type" /> trouvés.</returns>
      <typeparam name="T">
        <see cref="T:System.Type" /> d'élément à rechercher.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.SetItem(System.Int32,System.ServiceModel.Channels.BindingElement)">
      <summary>Remplace un élément de liaison à l'index spécifié dans la collection d'éléments de liaison.</summary>
      <param name="index">Index de base zéro de l'élément à remplacer.</param>
      <param name="item">Nouvelle valeur pour l'élément <see cref="T:System.ServiceModel.Channels.BindingElement" /> au niveau de l'<paramref name="index" /> spécifié.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> a la valeur null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.BindingParameterCollection">
      <summary>Représente une collection de paramètres de liaison qui stockent des informations utilisées par des éléments de liaison pour construire des fabriques.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingParameterCollection.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingParameterCollection.GetKeyForItem(System.Object)">
      <summary>Obtient la clé d'un élément contenu dans la collection. </summary>
      <returns>Objet <see cref="T:System.Type" /> qui représente la clé de l'objet <paramref name="item" /> spécifié dans la collection.</returns>
      <param name="item">Élément dans la collection dont la clé doit être récupérée.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingParameterCollection.InsertItem(System.Int32,System.Object)">
      <summary>Insère un élément à l'index spécifié de cette collection.</summary>
      <param name="index">Index de base zéro dans la collection dans laquelle l'<paramref name="item" /> devrait être inséré.</param>
      <param name="item">Objet à insérer dans la collection.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingParameterCollection.SetItem(System.Int32,System.Object)">
      <summary>Remplace l'élément à l'index spécifié par un nouvel objet.</summary>
      <param name="index">Index de base zéro auquel définir le nouvel <paramref name="item" />.</param>
      <param name="item">Objet à définir dans la collection.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.BodyWriter">
      <summary>Représente l'enregistreur du corps du message.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BodyWriter.#ctor(System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.BodyWriter" /> qui indique de façon explicite s'il faut effectuer une mise en mémoire tampon.</summary>
      <param name="isBuffered">true si l'enregistreur de corps peut être appelé plusieurs fois ; sinon false.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.BodyWriter.CreateBufferedCopy(System.Int32)">
      <summary>Crée une copie mise en mémoire tampon du corps.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.BodyWriter" /> qui contient une copie de cet objet.</returns>
      <param name="maxBufferSize">Taille maximale de la mémoire tampon pour le corps.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="maxBufferSize" /> est inférieur à zéro.</exception>
      <exception cref="T:System.InvalidOperationException">Le corps a déjà été écrit et ne peut plus être écrit ou l'enregistreur de corps n'est pas mis en mémoire tampon.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.BodyWriter.IsBuffered">
      <summary>Obtient une valeur qui indique si la méthode en écriture peut être appelée plusieurs fois.</summary>
      <returns>true si l'enregistreur de corps peut être appelé plusieurs fois ; sinon false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BodyWriter.OnCreateBufferedCopy(System.Int32)">
      <summary>Fournit un point d'extensibilité lorsque le contenu du corps est écrit.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.BodyWriter" /> avec la taille de mémoire tampon maximale spécifiée.</returns>
      <param name="maxBufferSize">Taille maximale de la mémoire tampon pour le corps.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.BodyWriter.OnWriteBodyContents(System.Xml.XmlDictionaryWriter)">
      <summary>Une fois implémenté, fournit un point d'extensibilité lorsque le contenu du corps est écrit.</summary>
      <param name="writer">La <see cref="T:System.Xml.XmlDictionaryWriter" /> utilisée pour écrire le corps du message.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.BodyWriter.WriteBodyContents(System.Xml.XmlDictionaryWriter)">
      <summary>Écrit le contenu du corps du message.</summary>
      <param name="writer">La <see cref="T:System.Xml.XmlDictionaryWriter" /> utilisée pour écrire le corps du message.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> a la valeur null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.BufferManager">
      <summary>De nombreuses fonctionnalités Windows Communication Foundation (WCF) requièrent l'utilisation de mémoires tampons, dont la création et la destruction coûtent cher.Vous pouvez utiliser la classe <see cref="T:System.ServiceModel.Channels.BufferManager" /> pour gérer un pool de mémoires tampons.Le pool et ses mémoires tampons sont créés lorsque vous instanciez cette classe et avez détruit la réclamation du pool de mémoires tampons par le garbage collection.Chaque fois que vous devez utiliser une mémoire tampon, vous la prenez du pool, vous l'utilisez, puis vous la retournez dans le pool lorsque vous avez terminé.Ce processus est beaucoup plus rapide que la création et la destruction d'une mémoire tampon chaque fois que vous devez en utiliser une.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.BufferManager" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.Clear">
      <summary>Libère les mémoires tampons mises en cache qui se trouvent actuellement dans le gestionnaire.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.CreateBufferManager(System.Int64,System.Int32)">
      <summary>Crée un BufferManager avec une taille de pool de mémoires tampons maximale spécifiée et une taille maximale pour chaque mémoire tampon contenue dans le pool.</summary>
      <returns>Retourne un objet <see cref="T:System.ServiceModel.Channels.BufferManager" /> avec les paramètres spécifiés.</returns>
      <param name="maxBufferPoolSize">Taille maximale du pool.</param>
      <param name="maxBufferSize">Taille maximale d'une mémoire tampon individuelle.</param>
      <exception cref="T:System.InsufficientMemoryException">Dans les .NET pour applications Windows Store  ou la Bibliothèque de classes portable, intercepte l'exception de classe de base, <see cref="T:System.OutOfMemoryException" />, sinon.La mémoire était insuffisante pour créer le pool de mémoires tampons demandé.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="maxBufferPoolSize" /> ou <paramref name="maxBufferSize" /> était inférieur à zéro.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.ReturnBuffer(System.Byte[])">
      <summary>Retourne une mémoire tampon au pool.</summary>
      <param name="buffer">Référence à la mémoire tampon retournée.</param>
      <exception cref="T:System.ArgumentNullException">La référence <paramref name="buffer" /> ne peut pas être null.</exception>
      <exception cref="T:System.ArgumentException">La longueur de <paramref name="buffer" /> ne correspond pas à la propriété de longueur de mémoire tampon du pool.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.TakeBuffer(System.Int32)">
      <summary>Obtient une mémoire tampon dont la taille est au moins égale à la taille spécifiée dans le pool. </summary>
      <returns>Tableau d'octets correspondant à la taille de mémoire tampon demandée.</returns>
      <param name="bufferSize">Taille, en octets, de la mémoire tampon demandée.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="bufferSize" /> ne peut pas être inférieur à zéro.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelBase">
      <summary>Fournit l'implémentation de base des canaux personnalisés.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelBase.#ctor(System.ServiceModel.Channels.ChannelManagerBase)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.ChannelBase" />.  </summary>
      <param name="channelManager">Objet <see cref="T:System.ServiceModel.Channels.ChannelManagerBase" /> qui spécifie les délais d'attente par défaut des opérations de canal (envoi, réception, ouverture et fermeture).</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="channelManager" /> a la valeur null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.DefaultCloseTimeout">
      <summary>Obtient l'intervalle de temps par défaut fourni pour terminer une opération de fermeture.</summary>
      <returns>
        <see cref="T:System.Timespan" /> par défaut qui spécifie le délai d'exécution de l'opération de fermeture avant dépassement du délai d'attente.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.DefaultOpenTimeout">
      <summary>Obtient l'intervalle de temps par défaut fourni pour terminer une opération d'ouverture.</summary>
      <returns>
        <see cref="T:System.Timespan" /> par défaut qui spécifie le délai d'exécution de l'opération d'ouverture avant dépassement du délai d'attente.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.DefaultReceiveTimeout">
      <summary>Obtient l'intervalle de temps par défaut fourni pour terminer une opération de réception.</summary>
      <returns>
        <see cref="T:System.Timespan" /> par défaut qui spécifie le délai d'exécution de l'opération de réception avant dépassement du délai d'attente.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.DefaultSendTimeout">
      <summary>Obtient l'intervalle de temps par défaut fourni pour terminer une opération d'envoi.</summary>
      <returns>
        <see cref="T:System.Timespan" /> par défaut qui spécifie le délai d'exécution de l'opération d'envoi avant dépassement du délai d'attente.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelBase.GetProperty``1">
      <summary>Retourne l'objet typé demandé, s'il existe, à partir de la couche appropriée de la pile de canaux.</summary>
      <returns>Objet typé <paramref name="T" /> demandé, s'il existe ; null dans le cas contraire.</returns>
      <typeparam name="T">L'objet typé pour lequel la méthode effectue une requête.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.Manager">
      <summary>Obtient le gestionnaire de canal associé au canal actuel.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.ChannelManagerBase" /> associé au canal actuel.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelBase.OnClosed">
      <summary>Utilise le suivi diagnostique pendant la transition à l'état de fermeture.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#CloseTimeout">
      <summary>Obtient l'intervalle de temps au terme duquel la méthode de fermeture, appelée par un objet de communication, expire.</summary>
      <returns>
        <see cref="T:System.Timespan" /> qui spécifie l'intervalle de temps à attendre avant l'expiration de la méthode de fermeture.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#OpenTimeout">
      <summary>Obtient l'intervalle de temps au terme duquel la méthode d'ouverture, appelée par un objet de communication, expire.</summary>
      <returns>
        <see cref="T:System.Timespan" /> qui spécifie l'intervalle de temps à attendre avant l'expiration de la méthode d'ouverture.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#ReceiveTimeout">
      <summary>Obtient l'intervalle de temps au terme duquel la méthode de réception, appelée par un objet de communication, expire.</summary>
      <returns>
        <see cref="T:System.Timespan" /> qui spécifie l'intervalle de temps à attendre avant l'expiration de la méthode de réception.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#SendTimeout">
      <summary>Obtient l'intervalle de temps au terme duquel la méthode d'envoi, appelée par un objet de communication, expire.</summary>
      <returns>
        <see cref="T:System.Timespan" /> qui spécifie l'intervalle de temps à attendre avant l'expiration de la méthode d'envoi.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelFactoryBase">
      <summary>Fournit une implémentation commune de base pour toutes les fabriques de canaux personnalisées.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.ChannelFactoryBase" />.  </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.ChannelFactoryBase" /> avec des délais d'attente de communication par défaut spécifiés.</summary>
      <param name="timeouts">
        <see cref="T:System.ServiceModel.IDefaultCommunicationTimeouts" /> spécifiant les délais d'attente par défaut pour les opérations d'ouverture, d'envoi, de réception et de fermeture lors de l'échange de messages. </param>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelFactoryBase.DefaultCloseTimeout">
      <summary>Obtient l'intervalle de temps par défaut fourni pour terminer une opération de fermeture.</summary>
      <returns>
        <see cref="T:System.Timespan" /> par défaut qui spécifie le délai d'exécution de l'opération de fermeture avant dépassement du délai d'attente.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelFactoryBase.DefaultOpenTimeout">
      <summary>Obtient l'intervalle de temps par défaut fourni pour terminer une opération d'ouverture.</summary>
      <returns>
        <see cref="T:System.Timespan" /> par défaut qui spécifie le délai d'exécution de l'opération d'ouverture avant dépassement du délai d'attente.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelFactoryBase.DefaultReceiveTimeout">
      <summary>Obtient l'intervalle de temps par défaut fourni pour terminer une opération de réception.</summary>
      <returns>
        <see cref="T:System.Timespan" /> par défaut qui spécifie le délai d'exécution de l'opération de réception avant dépassement du délai d'attente.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelFactoryBase.DefaultSendTimeout">
      <summary>Obtient l'intervalle de temps par défaut fourni pour terminer une opération d'envoi.</summary>
      <returns>
        <see cref="T:System.Timespan" /> par défaut qui spécifie le délai d'exécution de l'opération d'envoi avant dépassement du délai d'attente.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.GetProperty``1">
      <summary>Retourne un objet typé demandé (s'il existe) à partir de la couche appropriée dans la pile de canaux.</summary>
      <returns>Objet T typé demandé, s'il existe ; sinon null.</returns>
      <typeparam name="T">L'objet typé pour lequel la méthode effectue une requête.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.OnAbort">
      <summary>Insère le traitement sur un objet de communication après sa transition vers l'état de fermeture en raison de l'appel d'une opération d'abandon synchrone.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Commence une opération asynchrone pour fermer chacun des canaux créés par la fabrique.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui référence l'opération asynchrone de fermeture. </returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> qui spécifie le délai d'exécution de l'opération de fermeture avant dépassement du délai d'attente.</param>
      <param name="callback">Délégué <see cref="T:System.AsyncCallback" /> qui reçoit la notification de la fin de l'opération asynchrone de fermeture.</param>
      <param name="state">Objet, spécifié par l'application, qui contient les informations d'état associées à l'opération asynchrone de fermeture.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.OnClose(System.TimeSpan)">
      <summary>Insère le traitement sur un objet de communication après la transition vers l'état d'ouverture qui doit se terminer dans un intervalle de temps spécifié.</summary>
      <param name="timeout">
        <see cref="T:System.Timespan" /> qui spécifie le délai d'exécution de l'opération de fermeture avant dépassement du délai d'attente.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.OnEndClose(System.IAsyncResult)">
      <summary>Termine une opération asynchrone pour fermer les canaux ouverts par la fabrique.</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> retournée par un appel à la méthode <see cref="M:System.ServiceModel.Channels.ChannelFactoryBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelFactoryBase`1">
      <summary>Fournit une implémentation de base commune pour les fabriques de canaux sur le client afin de créer des canaux d'un type spécifié connectés à une adresse spécifiée.</summary>
      <typeparam name="TChannel">Type de canal que la fabrique génère.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.ChannelFactoryBase`1" />.  </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.ChannelFactoryBase`1" /> avec des délais d'attente de communication par défaut spécifiés.</summary>
      <param name="timeouts">La <see cref="T:System.ServiceModel.IDefaultCommunicationTimeouts" /> qui spécifie les délais d'attente par défaut pour les opérations d'ouverture, d'envoi, de réception et de fermeture lors de l'échange de messages.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.CreateChannel(System.ServiceModel.EndpointAddress)">
      <summary>Crée un type particulier de canal avec une adresse de point de terminaison spécifiée.</summary>
      <returns>Canal de type <paramref name="TChannel" /> avec le paramètre <paramref name="address" /> spécifié.</returns>
      <param name="address">Objet <see cref="T:System.ServiceModel.EndpointAddress" /> du point de terminaison distant auquel le canal envoie des messages.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> a la valeur null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>Crée un type particulier de canal avec les adresses de transport et de point de terminaison spécifiées.</summary>
      <returns>Canal de type <paramref name="TChannel" /> avec les adresses distantes et de transport spécifiées.</returns>
      <param name="address">Objet <see cref="T:System.ServiceModel.EndpointAddress" /> du point de terminaison distant auquel le canal envoie des messages.</param>
      <param name="via">La <see cref="T:System.Uri" /> qui contient l'adresse de transport à laquelle les messages sont envoyés sur le canal de sortie.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnAbort">
      <summary>Abandonne chaque canal géré par la fabrique de canaux.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Commence une opération asynchrone pour fermer tous les canaux associés à la fabrique de canaux dans un intervalle de temps spécifié.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui référence l'opération asynchrone de fermeture. </returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> qui spécifie le délai d'exécution de l'opération de fermeture avant dépassement du délai d'attente.</param>
      <param name="callback">Le délégué <see cref="T:System.AsyncCallback" /> qui reçoit la notification de la fin de l'opération asynchrone de fermeture.</param>
      <param name="state">Objet, spécifié par l'application, qui contient les informations d'état associées à l'opération asynchrone de fermeture.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnClose(System.TimeSpan)">
      <summary>Ferme tous les canaux associés à la fabrique de canaux dans un intervalle de temps spécifié.</summary>
      <param name="timeout">
        <see cref="T:System.Timespan" /> qui spécifie le délai d'exécution de l'opération de fermeture avant dépassement du délai d'attente.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnCreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>En cas d'implémentation dans une classe dérivée, fournit un point d'extensibilité lors de la création de canaux.</summary>
      <returns>Canal de type <paramref name="TChannel" /> avec les adresses spécifiées.</returns>
      <param name="address">Objet <see cref="T:System.ServiceModel.EndpointAddress" /> du point de terminaison distant auquel le canal envoie des messages.</param>
      <param name="via">La <see cref="T:System.Uri" /> qui contient l'adresse de transport à laquelle les messages sont envoyés sur le canal de sortie.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnEndClose(System.IAsyncResult)">
      <summary>Termine une opération asynchrone pour fermer tous les canaux associés à la fabrique de canaux dans un intervalle de temps spécifié.</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> retourné par un appel à la méthode <see cref="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.ValidateCreateChannel">
      <summary>Confirme que la fabrique de canaux est ouverte et prête à créer des canaux.</summary>
      <exception cref="T:System.ObjectDisposedException">L'objet de communication est dans un état <see cref="F:System.ServiceModel.CommunicationState.Closing" /> ou <see cref="F:System.ServiceModel.CommunicationState.Closed" />.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">L'objet de communication est dans un état <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.InvalidOperationException">La fabrique de canaux actuelle n'est pas dans l'état <see cref="F:System.ServiceModel.CommunicationState.Opened" />.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelManagerBase">
      <summary>Fournit une implémentation de base pour gérer les délais par défaut associés aux fabriques d'écouteurs et aux fabriques de canaux.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelManagerBase.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.ChannelManagerBase" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.DefaultReceiveTimeout">
      <summary>En cas de substitution dans une classe dérivée, obtient l'intervalle de temps par défaut dont dispose un canal pour achever la réception d'un message.</summary>
      <returns>
        <see cref="T:System.Timespan" /> par défaut qui spécifie le délai dont dispose un canal pour terminer la réception avant son expiration, une fois la méthode de réception appelée.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.DefaultSendTimeout">
      <summary>En cas de substitution dans une classe dérivée, obtient l'intervalle de temps par défaut dont dispose un canal pour achever l'envoi d'un message.</summary>
      <returns>
        <see cref="T:System.Timespan" /> par défaut qui spécifie le délai dont dispose un canal pour terminer l'envoi avant son expiration, une fois la méthode d'envoi appelée.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#CloseTimeout">
      <summary>Obtient l'intervalle de temps au terme duquel la méthode de fermeture, appelée par un objet de communication, expire.</summary>
      <returns>
        <see cref="T:System.Timespan" /> qui spécifie l'intervalle de temps à attendre avant l'expiration de la méthode de fermeture.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#OpenTimeout">
      <summary>Obtient l'intervalle de temps au terme duquel la méthode d'ouverture, appelée par un objet de communication, expire.</summary>
      <returns>
        <see cref="T:System.Timespan" /> qui spécifie l'intervalle de temps à attendre avant l'expiration de la méthode d'ouverture.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#ReceiveTimeout">
      <summary>Obtient l'intervalle de temps au terme duquel la méthode de réception, appelée par un objet de communication, expire.</summary>
      <returns>
        <see cref="T:System.Timespan" /> qui spécifie l'intervalle de temps à attendre avant l'expiration de la méthode de réception.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#SendTimeout">
      <summary>Obtient l'intervalle de temps au terme duquel la méthode d'envoi, appelée par un objet de communication, expire.</summary>
      <returns>
        <see cref="T:System.Timespan" /> qui spécifie l'intervalle de temps à attendre avant l'expiration de la méthode d'envoi.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelParameterCollection">
      <summary>Représente une collection de paramètres de canal.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.ChannelParameterCollection" />.  </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.#ctor(System.ServiceModel.Channels.IChannel)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.ChannelParameterCollection" />.  </summary>
      <param name="channel">Le canal dont les paramètres sont dans cette collection.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelParameterCollection.Channel">
      <summary>Obtient le canal dont les paramètres sont dans cette collection. </summary>
      <returns>La <see cref="T:System.ServiceModel.Channels.IChannel" /> dont les paramètres sont dans cette collection.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.ClearItems">
      <summary>Efface la collection de paramètres.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.InsertItem(System.Int32,System.Object)">
      <summary>Insère l'élément spécifié dans la collection à l'aide de l'index spécifié.</summary>
      <param name="index">Index de l'élément dans la collection.</param>
      <param name="item">Élément à ajouter à la collection.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.PropagateChannelParameters(System.ServiceModel.Channels.IChannel)">
      <summary>Ajoute les paramètres dans la collection active au <see cref="T:System.ServiceModel.Channels.ChannelParameterCollection" /> spécifié d'un canal.</summary>
      <param name="innerChannel">Canal qui reçoit les paramètres de la collection active.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.RemoveItem(System.Int32)">
      <summary>Supprime un paramètre de la collection.</summary>
      <param name="index">Index du paramètre à supprimer.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.SetItem(System.Int32,System.Object)">
      <summary>Remplace un élément dans la collection au niveau de l'index spécifié.</summary>
      <param name="index">Index de l'élément à remplacer.</param>
      <param name="item">Valeur de l'élément de remplacement.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.CommunicationObject">
      <summary>Fournit une implémentation de base courante pour l'ordinateur d'état de base commun à tous les objets orientés communication du système, notamment les canaux, les écouteurs ainsi que les fabriques de canaux et d'écouteurs.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.CommunicationObject" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.#ctor(System.Object)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.CommunicationObject" /> avec le verrou mutuellement exclusif afin de protéger les transitions d'état spécifiées.</summary>
      <param name="mutex">Verrou mutuellement exclusif qui protège l'instance de classe pendant une transition d'état.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Abort">
      <summary>Provoque la transition immédiate d'un objet de communication de son état actuel à l'état de fermeture.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
      <summary>Commence une opération asynchrone pour fermer un objet de communication.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui fait référence à l'opération de fermeture asynchrone. </returns>
      <param name="callback">Le délégué <see cref="T:System.AsyncCallback" /> qui reçoit la notification de la fin de l'opération asynchrone de fermeture.</param>
      <param name="state">Objet, spécifié par l'application, qui contient les informations d'état associées à l'opération asynchrone de fermeture.</param>
      <exception cref="T:System.InvalidOperationException">L'objet de communication n'est pas dans l'état <see cref="F:System.ServiceModel.CommunicationState.Opened" /> ou <see cref="F:System.ServiceModel.CommunicationState.Opening" /> et ne peut pas être modifié.</exception>
      <exception cref="T:System.ObjectDisposedException">L'objet de communication est dans l'état <see cref="F:System.ServiceModel.CommunicationState.Closing" /> ou <see cref="F:System.ServiceModel.CommunicationState.Closed" /> et ne peut pas être modifié.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">L'objet de communication est dans l'état <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> et ne peut pas être modifié.</exception>
      <exception cref="T:System.TimeoutException">L'intervalle de temps par défaut qui a été alloué à l'opération était dépassé avant la fin de l'opération.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Commence une opération asynchrone pour fermer un objet de communication avec un délai d'attente spécifié.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui fait référence à l'opération de fermeture asynchrone.</returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> qui spécifie le délai d'exécution de l'opération de fermeture avant le dépassement du délai d'attente.</param>
      <param name="callback">Le délégué <see cref="T:System.AsyncCallback" /> qui reçoit la notification de la fin de l'opération asynchrone de fermeture.</param>
      <param name="state">Objet, spécifié par l'application, qui contient les informations d'état associées à l'opération asynchrone de fermeture.</param>
      <exception cref="T:System.InvalidOperationException">L'objet de communication n'est pas dans l'état <see cref="F:System.ServiceModel.CommunicationState.Opened" /> ou <see cref="F:System.ServiceModel.CommunicationState.Opening" /> et ne peut pas être modifié.</exception>
      <exception cref="T:System.ObjectDisposedException">L'objet de communication est dans l'état <see cref="F:System.ServiceModel.CommunicationState.Closing" /> ou <see cref="F:System.ServiceModel.CommunicationState.Closed" /> et ne peut pas être modifié.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">L'objet de communication est dans l'état <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> et ne peut pas être modifié.</exception>
      <exception cref="T:System.TimeoutException">L'intervalle de temps par défaut qui a été alloué à l'opération était dépassé avant la fin de l'opération.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
      <summary>Commence une opération asynchrone pour ouvrir un objet de communication.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui fait référence à l'opération d'ouverture asynchrone. </returns>
      <param name="callback">Le délégué <see cref="T:System.AsyncCallback" /> qui reçoit la notification de la fin de l'opération d'ouverture asynchrone.</param>
      <param name="state">Objet, spécifié par l'application, qui contient des informations d'état associées à l'opération asynchrone d'ouverture.</param>
      <exception cref="T:System.InvalidOperationException">L'objet de communication n'est pas dans l'état <see cref="F:System.ServiceModel.CommunicationState.Opened" /> ou <see cref="F:System.ServiceModel.CommunicationState.Opening" /> et ne peut pas être modifié.</exception>
      <exception cref="T:System.ObjectDisposedException">L'objet de communication est dans l'état <see cref="F:System.ServiceModel.CommunicationState.Closing" /> ou <see cref="F:System.ServiceModel.CommunicationState.Closed" /> et ne peut pas être modifié.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">L'objet de communication est dans l'état <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> et ne peut pas être modifié.</exception>
      <exception cref="T:System.TimeoutException">L'intervalle de temps par défaut qui a été alloué à l'opération était dépassé avant la fin de l'opération.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Commence une opération asynchrone pour ouvrir un objet de communication dans un intervalle de temps spécifié.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui fait référence à l'opération d'ouverture asynchrone. </returns>
      <param name="timeout">Le <see cref="T:System.Timespan" /> qui spécifie le délai d'exécution de l'opération d'envoi avant dépassement du délai d'attente.</param>
      <param name="callback">Le délégué <see cref="T:System.AsyncCallback" /> qui reçoit la notification de la fin de l'opération d'ouverture asynchrone.</param>
      <param name="state">Objet, spécifié par l'application, qui contient des informations d'état associées à l'opération asynchrone d'ouverture.</param>
      <exception cref="T:System.InvalidOperationException">L'objet de communication n'est pas dans l'état <see cref="F:System.ServiceModel.CommunicationState.Opened" /> ou <see cref="F:System.ServiceModel.CommunicationState.Opening" /> et ne peut pas être modifié.</exception>
      <exception cref="T:System.ObjectDisposedException">L'objet de communication est dans l'état <see cref="F:System.ServiceModel.CommunicationState.Closing" /> ou <see cref="F:System.ServiceModel.CommunicationState.Closed" /> et ne peut pas être modifié.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">L'objet de communication est dans l'état <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> et ne peut pas être modifié.</exception>
      <exception cref="T:System.TimeoutException">L'intervalle de temps par défaut qui a été alloué à l'opération était dépassé avant la fin de l'opération.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Close">
      <summary>Provoque la transition d'un objet de communication de son état actuel à l'état fermé.</summary>
      <exception cref="T:System.InvalidOperationException">L'objet de communication n'est pas dans l'état <see cref="F:System.ServiceModel.CommunicationState.Opened" /> ou <see cref="F:System.ServiceModel.CommunicationState.Opening" /> et ne peut pas être modifié.</exception>
      <exception cref="T:System.ObjectDisposedException">L'objet de communication est dans l'état <see cref="F:System.ServiceModel.CommunicationState.Closing" /> ou <see cref="F:System.ServiceModel.CommunicationState.Closed" /> et ne peut pas être modifié.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">L'objet de communication est dans l'état <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> et ne peut pas être modifié.</exception>
      <exception cref="T:System.TimeoutException">L'intervalle de temps par défaut qui a été alloué à l'opération était dépassé avant la fin de l'opération.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)">
      <summary>Provoque la transition d'un objet de communication de son état actuel à l'état fermé dans un intervalle de temps spécifié.</summary>
      <param name="timeout">
        <see cref="T:System.Timespan" /> qui spécifie le délai d'exécution de l'opération de fermeture avant le dépassement du délai d'attente.</param>
      <exception cref="T:System.InvalidOperationException">L'objet de communication n'est pas dans l'état <see cref="F:System.ServiceModel.CommunicationState.Opened" /> ou <see cref="F:System.ServiceModel.CommunicationState.Opening" /> et ne peut pas être modifié.</exception>
      <exception cref="T:System.ObjectDisposedException">L'objet de communication est dans l'état <see cref="F:System.ServiceModel.CommunicationState.Closing" /> ou <see cref="F:System.ServiceModel.CommunicationState.Closed" /> et ne peut pas être modifié.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">L'objet de communication est dans l'état <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> et ne peut pas être modifié.</exception>
      <exception cref="T:System.TimeoutException">L'intervalle de temps par défaut qui a été alloué à l'opération était dépassé avant la fin de l'opération.</exception>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Closed">
      <summary>Se produit lorsqu'un objet de communication passe à l'état fermé.</summary>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Closing">
      <summary>Se produit lorsqu'un objet de communication passe à l'état de fermeture.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.DefaultCloseTimeout">
      <summary>En cas de substitution dans une classe dérivée, obtient l'intervalle de temps par défaut prévu pour l'exécution d'une opération de fermeture.</summary>
      <returns>
        <see cref="T:System.Timespan" /> par défaut qui spécifie le délai d'exécution de l'opération de fermeture avant dépassement du délai d'attente.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.DefaultOpenTimeout">
      <summary>En cas de substitution dans une classe dérivée, obtient l'intervalle de temps par défaut prévu pour l'exécution d'une opération d'ouverture.</summary>
      <returns>
        <see cref="T:System.Timespan" /> par défaut qui spécifie le délai d'exécution de l'opération d'ouverture avant dépassement du délai d'attente.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)">
      <summary>Termine une opération asynchrone pour fermer un objet de communication.</summary>
      <param name="result">Objet <see cref="T:System.IAsyncResult" /> qui est retourné par un appel à la méthode <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.BeginClose" />.</param>
      <exception cref="T:System.InvalidOperationException">L'objet de communication n'est pas dans l'état <see cref="F:System.ServiceModel.CommunicationState.Opened" /> ou <see cref="F:System.ServiceModel.CommunicationState.Opening" /> et ne peut pas être modifié.</exception>
      <exception cref="T:System.ObjectDisposedException">L'objet de communication est dans l'état <see cref="F:System.ServiceModel.CommunicationState.Closing" /> ou <see cref="F:System.ServiceModel.CommunicationState.Closed" /> et ne peut pas être modifié.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">L'objet de communication est dans l'état <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> et ne peut pas être modifié.</exception>
      <exception cref="T:System.TimeoutException">L'intervalle de temps par défaut qui a été alloué à l'opération était dépassé avant la fin de l'opération.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)">
      <summary>Termine une opération asynchrone pour ouvrir un objet de communication.</summary>
      <param name="result">Objet <see cref="T:System.IAsyncResult" /> qui est retourné par un appel à la méthode <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.BeginClose" />.</param>
      <exception cref="T:System.InvalidOperationException">L'objet de communication n'est pas dans l'état <see cref="F:System.ServiceModel.CommunicationState.Opened" /> ou <see cref="F:System.ServiceModel.CommunicationState.Opening" /> et ne peut pas être modifié.</exception>
      <exception cref="T:System.ObjectDisposedException">L'objet de communication est dans l'état <see cref="F:System.ServiceModel.CommunicationState.Closing" /> ou <see cref="F:System.ServiceModel.CommunicationState.Closed" /> et ne peut pas être modifié.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">L'objet de communication est dans l'état <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> et ne peut pas être modifié.</exception>
      <exception cref="T:System.TimeoutException">L'intervalle de temps par défaut qui a été alloué à l'opération était dépassé avant la fin de l'opération.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Fault">
      <summary>Provoque la transition d'un objet de communication de son état actuel à l'état d'erreur.</summary>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Faulted">
      <summary>Se produit lorsqu'un objet de communication passe à l'état d'erreur.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType">
      <summary>Obtient le type d'objet de communication.</summary>
      <returns>Type d'objet de communication.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.IsDisposed">
      <summary>Obtient une valeur qui indique si l'objet de communication a été supprimé.</summary>
      <returns>true si l'état de l'objet de communication est fermé ; sinon, false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnAbort">
      <summary>Insère le traitement sur un objet de communication après sa transition vers l'état de fermeture en raison de l'appel d'une opération d'abandon synchrone.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Insère le traitement après qu'un objet de communication est passé à l'état de fermeture en raison de l'appel d'une opération de fermeture asynchrone.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui référence l'opération asynchrone de fermeture. </returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> qui spécifie le délai d'exécution de l'opération de fermeture avant dépassement du délai d'attente.</param>
      <param name="callback">Délégué <see cref="T:System.AsyncCallback" /> qui reçoit la notification de la fin de l'opération de fermeture asynchrone.</param>
      <param name="state">Objet, spécifié par l'application, qui contient les informations d'état associées à l'opération asynchrone de fermeture.</param>
      <exception cref="T:System.InvalidOperationException">L'objet de communication n'est pas dans l'état <see cref="F:System.ServiceModel.CommunicationState.Opened" /> ou <see cref="F:System.ServiceModel.CommunicationState.Opening" /> et ne peut pas être modifié.</exception>
      <exception cref="T:System.ObjectDisposedException">L'objet de communication est dans l'état <see cref="F:System.ServiceModel.CommunicationState.Closing" /> ou <see cref="F:System.ServiceModel.CommunicationState.Closed" /> et ne peut pas être modifié.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">L'objet de communication est dans l'état <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> et ne peut pas être modifié.</exception>
      <exception cref="T:System.TimeoutException">L'intervalle de temps par défaut qui a été alloué à l'opération était dépassé avant la fin de l'opération.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Insère le traitement sur un objet de communication après sa transition vers l'état d'ouverture en raison de l'appel d'une opération d'ouverture asynchrone.</summary>
      <returns>Objet <see cref="T:System.IAsyncResult" /> qui fait référence à l'opération d'ouverture asynchrone. </returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> qui spécifie le délai d'exécution de l'opération d'ouverture avant le dépassement du délai d'attente.</param>
      <param name="callback">Délégué <see cref="T:System.AsyncCallback" /> qui reçoit la notification de la fin de l'opération d'ouverture asynchrone.</param>
      <param name="state">Objet, spécifié par l'application, qui contient les informations d'état associées à l'opération d'ouverture asynchrone.</param>
      <exception cref="T:System.InvalidOperationException">L'objet de communication n'est pas dans l'état <see cref="F:System.ServiceModel.CommunicationState.Opened" /> ou <see cref="F:System.ServiceModel.CommunicationState.Opening" /> et ne peut pas être modifié.</exception>
      <exception cref="T:System.ObjectDisposedException">L'objet de communication est dans l'état <see cref="F:System.ServiceModel.CommunicationState.Closing" /> ou <see cref="F:System.ServiceModel.CommunicationState.Closed" /> et ne peut pas être modifié.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">L'objet de communication est dans l'état <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> et ne peut pas être modifié.</exception>
      <exception cref="T:System.TimeoutException">L'intervalle de temps par défaut qui a été alloué à l'opération était dépassé avant la fin de l'opération.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)">
      <summary>Insère le traitement sur un objet de communication après sa transition vers l'état de fermeture en raison de l'appel d'une opération de fermeture synchrone.</summary>
      <param name="timeout">
        <see cref="T:System.Timespan" /> qui spécifie le délai d'exécution de l'opération de fermeture avant dépassement du délai d'attente.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.Close" /> a été appelé sur un objet dans l'état <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">L'intervalle de temps par défaut qui a été alloué à l'opération était dépassé avant la fin de l'opération.</exception>
      <exception cref="T:System.ServiceModel.CommunicationException">Une erreur de communication s'est produite lors de la fermeture de l'objet.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnClosed">
      <summary>Appelé pendant la transition d'un objet de communication à l'état de fermeture.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnClosing">
      <summary>Appelé pendant la transition d'un objet de communication à l'état de fermeture.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)">
      <summary>Termine une opération asynchrone à la fermeture d'un objet de communication.</summary>
      <param name="result">Objet <see cref="T:System.IAsyncResult" /> qui est retourné par un appel à la méthode <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)" />.</param>
      <exception cref="T:System.InvalidOperationException">L'objet de communication n'est pas dans l'état <see cref="F:System.ServiceModel.CommunicationState.Opened" /> ou <see cref="F:System.ServiceModel.CommunicationState.Opening" /> et ne peut pas être modifié.</exception>
      <exception cref="T:System.ObjectDisposedException">L'objet de communication est dans l'état <see cref="F:System.ServiceModel.CommunicationState.Closing" /> ou <see cref="F:System.ServiceModel.CommunicationState.Closed" /> et ne peut pas être modifié.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">L'objet de communication est dans l'état <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> et ne peut pas être modifié.</exception>
      <exception cref="T:System.TimeoutException">L'intervalle de temps par défaut qui a été alloué à l'opération était dépassé avant la fin de l'opération.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)">
      <summary>Termine une opération asynchrone à l'ouverture d'un objet de communication.</summary>
      <param name="result">Objet <see cref="T:System.IAsyncResult" /> qui est retourné par un appel à la méthode <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)" />.</param>
      <exception cref="T:System.InvalidOperationException">L'objet de communication n'est pas dans l'état <see cref="F:System.ServiceModel.CommunicationState.Opened" /> ou <see cref="F:System.ServiceModel.CommunicationState.Opening" /> et ne peut pas être modifié.</exception>
      <exception cref="T:System.ObjectDisposedException">L'objet de communication est dans l'état <see cref="F:System.ServiceModel.CommunicationState.Closing" /> ou <see cref="F:System.ServiceModel.CommunicationState.Closed" /> et ne peut pas être modifié.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">L'objet de communication est dans l'état <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> et ne peut pas être modifié.</exception>
      <exception cref="T:System.TimeoutException">L'intervalle de temps par défaut qui a été alloué à l'opération était dépassé avant la fin de l'opération.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnFaulted">
      <summary>Insère le traitement sur un objet de communication après sa transition vers l'état d'erreur en raison de l'appel d'une opération d'erreur synchrone.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)">
      <summary>Insère le traitement sur un objet de communication après la transition vers l'état d'ouverture qui doit se terminer dans un intervalle de temps spécifié.</summary>
      <param name="timeout">
        <see cref="T:System.Timespan" /> qui spécifie le délai d'exécution de l'opération d'ouverture avant le dépassement du délai d'attente.</param>
      <exception cref="T:System.InvalidOperationException">L'objet de communication n'est pas dans l'état <see cref="F:System.ServiceModel.CommunicationState.Opened" /> ou <see cref="F:System.ServiceModel.CommunicationState.Opening" /> et ne peut pas être modifié.</exception>
      <exception cref="T:System.ObjectDisposedException">L'objet de communication est dans l'état <see cref="F:System.ServiceModel.CommunicationState.Closing" /> ou <see cref="F:System.ServiceModel.CommunicationState.Closed" /> et ne peut pas être modifié.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">L'objet de communication est dans l'état <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> et ne peut pas être modifié.</exception>
      <exception cref="T:System.TimeoutException">L'intervalle de temps par défaut qui a été alloué à l'opération était dépassé avant la fin de l'opération.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnOpened">
      <summary>Appelé pendant la transition d'un objet de communication à l'état ouvert.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnOpening">
      <summary>Appelé pendant la transition d'un objet de communication à l'état d'ouverture.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Open">
      <summary>Provoque la transition d'un objet de communication de l'état créé à l'état ouvert.</summary>
      <exception cref="T:System.InvalidOperationException">L'objet de communication n'est pas dans l'état <see cref="F:System.ServiceModel.CommunicationState.Opened" /> ou <see cref="F:System.ServiceModel.CommunicationState.Opening" /> et ne peut pas être modifié.</exception>
      <exception cref="T:System.ObjectDisposedException">L'objet de communication est dans l'état <see cref="F:System.ServiceModel.CommunicationState.Closing" /> ou <see cref="F:System.ServiceModel.CommunicationState.Closed" /> et ne peut pas être modifié.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">L'objet de communication est dans l'état <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> et ne peut pas être modifié.</exception>
      <exception cref="T:System.TimeoutException">L'intervalle de temps par défaut qui a été alloué à l'opération était dépassé avant la fin de l'opération.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)">
      <summary>Provoque la transition d'un objet de communication de l'état créé à l'état ouvert dans un intervalle de temps spécifié.</summary>
      <param name="timeout">
        <see cref="T:System.Timespan" /> qui spécifie le délai d'exécution de l'opération d'ouverture avant le dépassement du délai d'attente.</param>
      <exception cref="T:System.InvalidOperationException">L'objet de communication n'est pas dans l'état <see cref="F:System.ServiceModel.CommunicationState.Opened" /> ou <see cref="F:System.ServiceModel.CommunicationState.Opening" /> et ne peut pas être modifié.</exception>
      <exception cref="T:System.ObjectDisposedException">L'objet de communication est dans l'état <see cref="F:System.ServiceModel.CommunicationState.Closing" /> ou <see cref="F:System.ServiceModel.CommunicationState.Closed" /> et ne peut pas être modifié.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">L'objet de communication est dans l'état <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> et ne peut pas être modifié.</exception>
      <exception cref="T:System.TimeoutException">L'intervalle de temps par défaut qui a été alloué à l'opération était dépassé avant la fin de l'opération.</exception>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Opened">
      <summary>Se produit lorsqu'un objet de communication passe à l'état ouvert.</summary>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Opening">
      <summary>Se produit lorsqu'un objet de communication passe à l'état d'ouverture.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.State">
      <summary>Obtient une valeur qui indique l'état actuel de l'objet de communication.</summary>
      <returns>Valeur de l'énumération <see cref="T:System.ServiceModel.CommunicationState" /> qui indique l'état actuel de l'objet.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.ThisLock">
      <summary>Obtient le verrou mutuellement exclusif qui protège l'instance de classe pendant une transition d'état.</summary>
      <returns>Verrou mutuellement exclusif qui protège l'instance de classe pendant une transition d'état.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.CompressionFormat">
      <summary>Spécifie le format de compression de canaux.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.CompressionFormat.Deflate">
      <summary>Format de compression Deflate.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.CompressionFormat.GZip">
      <summary>Format de compression GZIP.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.CompressionFormat.None">
      <summary>Format sans compression.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.CustomBinding">
      <summary>Définit une liaison dans une liste d'éléments de liaison. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.CustomBinding" />.  </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.Channels.BindingElement})">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.CustomBinding" /> avec les éléments de liaison d'une pile de canaux complète.</summary>
      <param name="bindingElementsInTopDownChannelStackOrder">Objet <see cref="T:System.Collections.Generic.IEnumerable`1" /> de type <see cref="T:System.ServiceModel.Channels.BindingElement" /> qui contient les éléments de liaison de la pile de canaux dans un ordre décroissant.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bindingElementsInTopDownChannelStackOrder" /> a la valeur null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor(System.ServiceModel.Channels.Binding)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.CustomBinding" /> à partir des valeurs d'une liaison spécifiée.</summary>
      <param name="binding">Objet <see cref="T:System.ServiceModel.Channels.Binding" /> utilisé pour initialiser la liaison personnalisée.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binding" /> a la valeur null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor(System.ServiceModel.Channels.BindingElement[])">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.CustomBinding" /> à partir d'un tableau d'éléments de liaison.</summary>
      <param name="bindingElementsInTopDownChannelStackOrder">Objet <see cref="T:System.Array" /> de type <see cref="T:System.ServiceModel.Channels.BindingElement" /> utilisé pour initialiser la liaison personnalisée.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bindingElementsInTopDownChannelStackOrder" /> a la valeur null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor(System.String,System.String,System.ServiceModel.Channels.BindingElement[])">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.CustomBinding" /> à partir d'un tableau d'éléments de liaison avec un nom et un espace de noms spécifiés.</summary>
      <param name="name">Nom de la liaison.</param>
      <param name="ns">Espace de noms de la liaison.</param>
      <param name="bindingElementsInTopDownChannelStackOrder">Objet <see cref="T:System.Array" /> de type <see cref="T:System.ServiceModel.Channels.BindingElement" /> utilisé pour initialiser la liaison personnalisée.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bindingElementsInTopDownChannelStackOrder" /> a la valeur null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.CreateBindingElements">
      <summary>Retourne une collection générique des éléments de liaison de la liaison personnalisée.</summary>
      <returns>Objet <see cref="T:System.Collections.Generic.ICollection`1" /> de type <see cref="T:System.ServiceModel.Channels.BindingElement" /> qui contient les éléments de liaison de la liaison personnalisée.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CustomBinding.Elements">
      <summary>Obtient les éléments de liaison de la liaison personnalisée.</summary>
      <returns>Objet <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> qui contient les éléments de liaison de la liaison personnalisée.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CustomBinding.Scheme">
      <summary>Reçoit le schéma d'URI pour le transport utilisé par la liaison personnalisée.</summary>
      <returns>Schéma d'URI pour le transport utilisé par la liaison personnalisée ; ou une chaîne vide s'il n'y a aucun transport (<see cref="T:System.ServiceModel.Channels.TransportBindingElement" /> a la valeur null).</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.FaultConverter">
      <summary>Convertit les exceptions levées par un canal en messages d'erreur SOAP conformes au protocole du canal.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.FaultConverter" />.  </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.GetDefaultFaultConverter(System.ServiceModel.Channels.MessageVersion)">
      <summary>Obtient le convertisseur d'erreur par défaut.</summary>
      <returns>Instance de <see cref="T:System.ServiceModel.Channels.FaultConverter" />.</returns>
      <param name="version">Version du message.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)">
      <summary>Tente de créer l'exception.</summary>
      <returns>true si la conversion de l'erreur a réussi ; sinon, false.La valeur par défaut est false.</returns>
      <param name="message">Message d'erreur.</param>
      <param name="fault">Erreur.</param>
      <param name="exception">Si la conversion est réussie, exception SOAP retournée en tant que paramètre out.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)">
      <summary>Essaie de créer le message d'erreur une fois l'erreur convertie en exception SOAP.</summary>
      <returns>true si la création du message d'erreur a réussi ; sinon, false.La valeur par défaut est false.</returns>
      <param name="exception">Exception SOAP.</param>
      <param name="message">Message d'erreur retourné en tant que paramètre out.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.TryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)">
      <summary>Encapsule <see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" /> avec la vérification des erreurs.</summary>
      <returns>true si la conversion de l'erreur a réussi ; sinon, false.La valeur par défaut est false.</returns>
      <param name="message">Message d'erreur.</param>
      <param name="fault">Erreur.</param>
      <param name="exception">Si la conversion est réussie, exception SOAP retournée en tant que paramètre out.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> ou <paramref name="fault" /> est null.</exception>
      <exception cref="T:System.ArgumentNullException">
        <see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" /> a retourné true alors que <paramref name="exception" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentNullException">
        <see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" /> a retourné false alors que <paramref name="exception" /> n'a pas la valeur null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.IChannel">
      <summary>Définit l'interface de base que tous les objets de canal doivent implémenter.Cela requiert l'implémentation de l'interface d'ordinateur d'état partagée par tous les objets de communication et l'implémentation d'une méthode pour récupérer des objets de la pile de canaux.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannel.GetProperty``1">
      <summary>Retourne un objet typé demandé (s'il existe) à partir de la couche appropriée dans la pile de canaux.</summary>
      <returns>L'objet typé <paramref name="T" /> demandé s'il existe ; null sinon.</returns>
      <typeparam name="T">L'objet typé pour lequel la méthode effectue une requête.</typeparam>
    </member>
    <member name="T:System.ServiceModel.Channels.IChannelFactory">
      <summary>Définit l'interface qui doit être implémentée par une fabrique de canaux pour générer des canaux.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannelFactory.GetProperty``1">
      <summary>Retourne un objet typé demandé (s'il existe) à partir de la couche appropriée dans la pile de canaux.</summary>
      <returns>Objet typé <paramref name="T" /> demandé, s'il existe ; sinon null.</returns>
      <typeparam name="T">L'objet typé pour lequel la méthode effectue une requête.</typeparam>
    </member>
    <member name="T:System.ServiceModel.Channels.IChannelFactory`1">
      <summary>Définit l'interface qui doit être implémentée par les fabriques de canaux qui créent des canaux spécifiques au type.</summary>
      <typeparam name="TChannel">Le type de canal que la fabrique de canal crée.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)">
      <summary>Crée un canal d'un type spécifié à une adresse de point de terminaison spécifiée.</summary>
      <returns>Canal de type <paramref name="TChannel" /> à une adresse de point de terminaison spécifiée.</returns>
      <param name="to">
        <see cref="T:System.ServiceModel.EndpointAddress" /> qui fournit l'emplacement du service.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>Crée un canal d'un type spécifié à une adresse de point de terminaison et à une adresse de transport auxquelles les messages sont envoyés.</summary>
      <returns>Canal de type <paramref name="TChannel" /> à l'adresse de point de terminaison et à l'adresse de transport spécifiées.</returns>
      <param name="to">
        <see cref="T:System.ServiceModel.EndpointAddress" /> qui fournit l'emplacement du service.</param>
      <param name="via">
        <see cref="T:System.Uri" /> qui contient l'adresse de transport à laquelle le message est envoyé.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.IDuplexChannel">
      <summary>Définit l'interface qu'un canal doit implémenter pour envoyer et recevoir des messages. </summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IDuplexSession">
      <summary>Définit l'interface pour la session implémentée sur chaque côté d'une communication bidirectionnelle entre des points de terminaison de messagerie. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession(System.AsyncCallback,System.Object)">
      <summary>Commence une opération asynchrone pour terminer la session sortante.</summary>
      <returns>Objet <see cref="T:System.IAsyncResult" /> qui fait référence à l'arrêt de session sortante asynchrone. </returns>
      <param name="callback">Délégué <see cref="T:System.AsyncCallback" />. </param>
      <param name="state">object qui contient les informations d'état pour cette demande. </param>
    </member>
    <member name="M:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Commence une opération asynchrone pour terminer la session sortante avec un délai d'attente spécifié au cours duquel l'opération doit se terminer.</summary>
      <returns>Objet <see cref="T:System.IAsyncResult" /> qui fait référence à l'arrêt de session sortante asynchrone. </returns>
      <param name="timeout">Objet <see cref="T:System.TimeSpan" /> qui spécifie l'intervalle de temps au cours duquel l'opération doit se terminer.</param>
      <param name="callback">Délégué <see cref="T:System.AsyncCallback" />. </param>
      <param name="state">object qui contient les informations d'état pour cette demande. </param>
    </member>
    <member name="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession">
      <summary>Termine la session sortante qui indique qu'aucun message supplémentaire ne sera envoyé à partir de ce point de terminaison sur le canal associé à la session. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession(System.TimeSpan)">
      <summary>Termine la session sortante qui indique qu'aucun message supplémentaire ne sera envoyé de ce point de terminaison sur le canal associé à la session dans un intervalle de temps spécifié.</summary>
      <param name="timeout">Objet <see cref="T:System.TimeSpan" /> qui spécifie l'intervalle de temps au cours duquel l'opération doit se terminer.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IDuplexSession.EndCloseOutputSession(System.IAsyncResult)">
      <summary>Termine une opération asynchrone pour terminer la session sortante qui indique qu'aucun message supplémentaire ne sera envoyé de ce point de terminaison sur le canal associé à la session. </summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> retourné par un appel à l'une des méthodes <see cref="Overload:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession" />.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.IDuplexSessionChannel">
      <summary>Définit l'interface qui associe un canal duplex à une session.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IInputChannel">
      <summary>Définit l'interface qu'un canal doit implémenter pour recevoir un message. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.BeginReceive(System.AsyncCallback,System.Object)">
      <summary>Commence une opération asynchrone pour recevoir un message auquel est associé un objet d'état. </summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui fait référence à la réception asynchrone du message. </returns>
      <param name="callback">Le délégué <see cref="T:System.AsyncCallback" /> qui reçoit la notification de la fin de l'opération asynchrone.</param>
      <param name="state">Objet, spécifié par l'application, qui contient des informations d'état associées à l'opération asynchrone.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.BeginReceive(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Commence une opération asynchrone pour recevoir un message auquel sont associés un délai d'attente spécifié et un objet d'état. </summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui fait référence à l'opération asynchrone de réception.</returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> qui spécifie la durée d'attente pour qu'un message soit disponible.</param>
      <param name="callback">Le délégué <see cref="T:System.AsyncCallback" /> qui reçoit la notification de la fin de l'opération asynchrone.</param>
      <param name="state">Objet, spécifié par l'application, qui contient des informations d'état associées à l'opération asynchrone.</param>
      <exception cref="T:System.TimeoutException">
        <paramref name="timeout" /> spécifié dépassé avant la fin de l'opération.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Le délai d'attente spécifié est inférieur à zéro.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.BeginTryReceive(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Commence une opération asynchrone pour recevoir un message auquel sont associés un délai d'attente spécifié et un objet d'état. </summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui fait référence à l'opération asynchrone de réception.</returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> qui spécifie la durée d'attente pour qu'un message soit disponible.</param>
      <param name="callback">Le délégué <see cref="T:System.AsyncCallback" /> qui reçoit la notification de la fin de l'opération asynchrone.</param>
      <param name="state">Objet, spécifié par l'application, qui contient des informations d'état associées à l'opération asynchrone.</param>
      <exception cref="T:System.TimeoutException">
        <paramref name="timeout" /> spécifié dépassé avant la fin de l'opération.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Le délai d'attente spécifié est inférieur à zéro.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Commence une opération asynchrone d'attente de message à laquelle sont associés un délai d'attente spécifié et un objet d'état. </summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui fait référence à l'opération asynchrone pour attendre l'arrivée d'un message.</returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> qui spécifie la durée d'attente pour qu'un message soit disponible.</param>
      <param name="callback">Le délégué <see cref="T:System.AsyncCallback" /> qui reçoit la notification de la fin de l'opération asynchrone.</param>
      <param name="state">Objet, spécifié par l'application, qui contient des informations d'état associées à l'opération asynchrone.</param>
      <exception cref="T:System.TimeoutException">
        <paramref name="timeout" /> spécifié dépassé avant la fin de l'opération.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Le délai d'attente spécifié est inférieur à zéro.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.EndReceive(System.IAsyncResult)">
      <summary>Termine une opération asynchrone pour recevoir un message. </summary>
      <returns>Objet <see cref="T:System.ServiceModel.Channels.Message" /> reçu. </returns>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> retourné par un appel à l'une des méthodes <see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.EndTryReceive(System.IAsyncResult,System.ServiceModel.Channels.Message@)">
      <summary>Termine l'opération asynchrone spécifiée pour recevoir un message.</summary>
      <returns>true si un message est reçu avant expiration de l'intervalle de temps spécifié ; sinon false.</returns>
      <param name="result">Objet <see cref="T:System.IAsyncResult" /> retourné par un appel à la méthode <see cref="M:System.ServiceModel.Channels.IInputChannel.BeginTryReceive(System.TimeSpan,System.AsyncCallback,System.Object)" />.</param>
      <param name="message">Objet <see cref="T:System.ServiceModel.Channels.Message" /> reçu. </param>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.EndWaitForMessage(System.IAsyncResult)">
      <summary>Termine l'opération asynchrone spécifiée d'attente d'un message.</summary>
      <returns>true si un message est arrivé avant que le <paramref name="timeout" /> soit dépassé ; sinon false.</returns>
      <param name="result">Objet <see cref="T:System.IAsyncResult" /> qui identifie l'opération <see cref="M:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage(System.TimeSpan,System.AsyncCallback,System.Object)" /> à terminer et à partir de laquelle il est possible de récupérer un résultat final.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.IInputChannel.LocalAddress">
      <summary>Obtient l'adresse sur laquelle ce canal d'entrée reçoit des messages. </summary>
      <returns>
        <see cref="T:System.ServiceModel.EndpointAddress" /> sur laquelle le canal d'entrée reçoit des messages. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.Receive">
      <summary>Retourne le message reçu, le cas échéant.Si aucun message n'est disponible, elle reste bloquée pendant un intervalle de temps par défaut.</summary>
      <returns>Objet <see cref="T:System.ServiceModel.Channels.Message" /> reçu. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.Receive(System.TimeSpan)">
      <summary>Retourne le message reçu, le cas échéant.Si aucun message n'est disponible, elle reste bloquée pendant un intervalle de temps spécifié.</summary>
      <returns>Objet <see cref="T:System.ServiceModel.Channels.Message" /> reçu. </returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> qui spécifie le délai d'exécution de l'opération de réception avant dépassement du délai d’attente et levée d'une <see cref="T:System.TimeoutException" />.</param>
      <exception cref="T:System.TimeoutException">
        <paramref name="timeout" /> spécifié dépassé avant la fin de l'opération.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Le délai d'attente spécifié est inférieur à zéro.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.TryReceive(System.TimeSpan,System.ServiceModel.Channels.Message@)">
      <summary>Tente de recevoir un message dans un intervalle de temps spécifié. </summary>
      <returns>true si un message est reçu avant que le <paramref name="timeout" /> soit dépassé ; sinon false.</returns>
      <param name="timeout">
        <see cref="T:System.IAsyncResult" /> retourné par un appel à l'une des méthodes <see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" />.</param>
      <param name="message">Objet <see cref="T:System.ServiceModel.Channels.Message" /> reçu. </param>
      <exception cref="T:System.TimeoutException">
        <paramref name="timeout" /> spécifié dépassé avant la fin de l'opération.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Le délai d'attente spécifié est inférieur à zéro.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.WaitForMessage(System.TimeSpan)">
      <summary>Retourne une valeur qui indique si un message est arrivé dans un intervalle de temps spécifié.</summary>
      <returns>true si un message est arrivé avant que le <paramref name="timeout" /> soit dépassé ; sinon false.</returns>
      <param name="timeout">L'objet <see cref="T:System.Timespan" /> spécifie l'intervalle de temps maximal pour attendre l'arrivée d'un message avant dépassement du délai d'attente.</param>
      <exception cref="T:System.TimeoutException">
        <paramref name="timeout" /> spécifié dépassé avant la fin de l'opération.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Le délai d'attente spécifié est inférieur à zéro.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.IInputSession">
      <summary>Définit l'interface pour la session implémentée sur le côté de réception d'une communication unilatérale entre des points de terminaison de messagerie. </summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IInputSessionChannel">
      <summary>Définit l'interface qui associe un canal d'entrée à une session.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IMessageProperty">
      <summary>Définit une interface que vous pouvez implémenter pour décrire un ensemble de propriétés pour un message.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IMessageProperty.CreateCopy">
      <summary>Crée une copie de l'instance en cours.</summary>
      <returns>Objet <see cref="T:System.ServiceModel.Channels.IMessageProperty" /> représentant une copie de l'instance actuelle.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.IOutputChannel">
      <summary>Définit l'interface qu'un canal doit implémenter pour envoyer un message. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>Commence une opération asynchrone pour transmettre un message à la destination du canal de sortie. </summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui fait référence à la transmission asynchrone du message. </returns>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> qui est envoyé sur le canal de sortie. </param>
      <param name="callback">Délégué <see cref="T:System.AsyncCallback" />. </param>
      <param name="state">Objet, spécifié par l'application, qui contient des informations d'état associées à l'opération asynchrone d'envoi.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Commence une opération asynchrone pour transmettre un message à la destination du canal de sortie dans un intervalle de temps spécifié.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui fait référence à l'opération asynchrone d'envoi.</returns>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> qui est envoyé sur le canal de sortie.</param>
      <param name="timeout">Le <see cref="T:System.Timespan" /> qui spécifie le délai d'exécution de l'opération d'envoi avant dépassement du délai d'attente.</param>
      <param name="callback">Le délégué <see cref="T:System.AsyncCallback" /> qui reçoit la notification de la fin de l'envoi de l'opération asynchrone.</param>
      <param name="state">Objet, spécifié par l'application, qui contient des informations d'état associées à l'opération asynchrone d'envoi.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IOutputChannel.EndSend(System.IAsyncResult)">
      <summary>Termine une opération asynchrone pour transmettre un message à la destination du canal de sortie. </summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> retourné par un appel à la méthode <see cref="Overload:System.ServiceModel.Channels.IOutputChannel.BeginSend" />. </param>
    </member>
    <member name="P:System.ServiceModel.Channels.IOutputChannel.RemoteAddress">
      <summary>Obtient la destination du service auquel les messages sont envoyés sur le canal de sortie. </summary>
      <returns>
        <see cref="T:System.ServiceModel.EndpointAddress" /> du service auquel le canal de sortie envoie des messages. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message)">
      <summary>Transmet un message à la destination du canal de sortie. </summary>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> qui est envoyé sur le canal de sortie.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <summary>Envoie un message sur le canal de sortie actuel dans un intervalle de temps spécifié.</summary>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> qui est envoyé sur le canal de sortie.</param>
      <param name="timeout">Le <see cref="T:System.Timespan" /> qui spécifie le délai d'exécution de l'opération d'envoi avant dépassement du délai d'attente.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.IOutputChannel.Via">
      <summary>Obtient l'URI qui contient l'adresse de transport à laquelle les messages sont envoyés sur le canal de sortie.</summary>
      <returns>La <see cref="T:System.Uri" /> qui contient l'adresse de transport à laquelle les messages sont envoyés sur le canal de sortie.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.IOutputSession">
      <summary>Définit l'interface pour la session implémentée sur le côté émission d'une communication unidirectionnelle entre des points de terminaison de messagerie. </summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IOutputSessionChannel">
      <summary>Définit l'interface qui associe un canal de sortie à une session. </summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IRequestChannel">
      <summary>Définit le contrat qu'un canal doit implémenter pour se trouver du côté de la demande d'une communication demande-réponse entre des points de terminaison de messagerie. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>Lance une opération asynchrone pour transmettre un message de demande du point de vue de la réponse d'un échange de messages de demande-réponse. </summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui fait référence à la transmission asynchrone du message. </returns>
      <param name="message">Demande <see cref="T:System.ServiceModel.Channels.Message" /> à transmettre.</param>
      <param name="callback">Le délégué <see cref="T:System.AsyncCallback" /> qui reçoit la notification de la fin de l'opération asynchrone transmettant un message de demande.</param>
      <param name="state">Objet, spécifié par l'application, qui contient les informations d'état associées à l'opération asynchrone transmettant un message de demande.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Lance une opération asynchrone pour transmettre un message de demande du point de vue réponse d'un échange de messages de demande-réponse, dans un intervalle de temps spécifié.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui fait référence à la transmission asynchrone du message. </returns>
      <param name="message">Demande <see cref="T:System.ServiceModel.Channels.Message" /> à transmettre.</param>
      <param name="timeout">
        <see cref="T:System.TimeSpan" /> qui spécifie l'intervalle de temps au cours duquel une réponse doit être reçue. Pour connaître les valeurs par défaut, consultez la section Notes.</param>
      <param name="callback">Le délégué <see cref="T:System.AsyncCallback" /> qui reçoit la notification de la fin de l'opération asynchrone transmettant un message de demande.</param>
      <param name="state">Objet, spécifié par l'application, qui contient les informations d'état associées à l'opération asynchrone transmettant un message de demande.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IRequestChannel.EndRequest(System.IAsyncResult)">
      <summary>Complète une opération asynchrone pour retourner une réponse basée sur un message à une demande transmise. </summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Message" /> reçu en réponse à la demande. </returns>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> retourné par un appel à la méthode <see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" />. </param>
    </member>
    <member name="P:System.ServiceModel.Channels.IRequestChannel.RemoteAddress">
      <summary>Obtient l'adresse distante à laquelle le canal de demande envoie des messages. </summary>
      <returns>
        <see cref="T:System.ServiceModel.EndpointAddress" /> à laquelle le canal de demande envoie des messages. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message)">
      <summary>Envoie une demande basée sur un message et retourne la réponse basée sur un message corrélé. </summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Message" /> reçu en réponse à la demande. </returns>
      <param name="message">Demande <see cref="T:System.ServiceModel.Channels.Message" /> à transmettre.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <summary>Envoie une demande basée sur un message et retourne la réponse basée sur un message corrélé dans un intervalle de temps spécifié.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Message" /> reçu en réponse à la demande. </returns>
      <param name="message">Demande <see cref="T:System.ServiceModel.Channels.Message" /> à transmettre.</param>
      <param name="timeout">
        <see cref="T:System.TimeSpan" /> qui spécifie l'intervalle de temps au cours duquel une réponse doit être reçue.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.IRequestChannel.Via">
      <summary>Obtient l'adresse de transport à laquelle la demande est envoyée.</summary>
      <returns>
        <see cref="T:System.Uri" /> qui contient l'adresse de transport à laquelle le message est envoyé.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.IRequestSessionChannel">
      <summary>Définit l'interface pour associer un canal de demande à une session.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.ISession">
      <summary>Définit l'interface pour établir un contexte partagé parmi les correspondants qui échangent des messages en fournissant un ID pour la session de communication. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.ISession.Id">
      <summary>Obtient l'ID qui identifie de façon unique la session. </summary>
      <returns>ID qui identifie de façon unique la session. </returns>
    </member>
    <member name="T:System.ServiceModel.Channels.ISessionChannel`1">
      <summary>Définit l'interface qui associe un canal à un type spécifique de session.</summary>
      <typeparam name="TSession">Type de <see cref="T:System.ServiceModel.Channels.ISession" /> associé au canal.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.ISessionChannel`1.Session">
      <summary>Obtient le type de session associé à ce canal. </summary>
      <returns>Type de <see cref="T:System.ServiceModel.Channels.ISession" /> associé à ce canal. </returns>
    </member>
    <member name="T:System.ServiceModel.Channels.Message">
      <summary>Représente l'unité de communication entre des points de terminaison dans un environnement distribué. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.Message" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.Close">
      <summary>Ferme <see cref="T:System.ServiceModel.Channels.Message" /> et libère toutes les ressources. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateBufferedCopy(System.Int32)">
      <summary>Stocke un objet <see cref="T:System.ServiceModel.Channels.Message" /> entier dans la mémoire tampon en vue de son accès ultérieurement.</summary>
      <returns>Objet <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> nouvellement créé.</returns>
      <param name="maxBufferSize">Taille maximale de la mémoire tampon à créer.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="maxBufferSize " /> est inférieur à zéro.</exception>
      <exception cref="T:System.ObjectDisposedException">Le message est fermé.</exception>
      <exception cref="T:System.InvalidOperationException">Le message a été copié, lu ou écrit.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String)">
      <summary>Crée un message qui contient une version et une action.</summary>
      <returns>Objet <see cref="T:System.ServiceModel.Channels.Message" /> pour le message créé. </returns>
      <param name="version">Objet <see cref="T:System.ServiceModel.Channels.MessageVersion" /> qui spécifie la version SOAP à utiliser pour le message.</param>
      <param name="action">Décrit la manière dont le message doit être traité.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" /> ou <paramref name="action" /> est null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.Object)">
      <summary>Crée un message avec la version, l'action et le corps spécifiés. </summary>
      <returns>Objet <see cref="T:System.ServiceModel.Channels.Message" /> pour le message créé. </returns>
      <param name="version">Objet <see cref="T:System.ServiceModel.Channels.MessageVersion" /> qui spécifie la version SOAP à utiliser pour le message. </param>
      <param name="action">Décrit la manière dont le message doit être traité. </param>
      <param name="body">Corps du message.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" />, <paramref name="action" /> ou <paramref name="body" /> est null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Crée un message à l'aide de la version, l'action, le corps du message et le sérialiseur spécifiés.</summary>
      <returns>Objet <see cref="T:System.ServiceModel.Channels.Message" /> pour le message créé. </returns>
      <param name="version">Objet <see cref="T:System.ServiceModel.Channels.MessageVersion" /> qui spécifie la version SOAP à utiliser pour le message. </param>
      <param name="action">Décrit la manière dont le message doit être traité. </param>
      <param name="body">Corps du message. </param>
      <param name="serializer">Objet de <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> utilisé pour sérialiser le message.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" />, <paramref name="fault" /> ou <paramref name="action" /> est null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.ServiceModel.Channels.BodyWriter)">
      <summary>Crée un message avec un corps consistant en un tableau d'octets.</summary>
      <returns>Objet <see cref="T:System.ServiceModel.Channels.Message" /> pour le message créé. </returns>
      <param name="version">Objet <see cref="T:System.ServiceModel.Channels.MessageVersion" /> qui spécifie la version SOAP à utiliser pour le message. </param>
      <param name="action">Décrit la manière dont le message doit être traité. </param>
      <param name="body">Objet <see cref="T:System.ServiceModel.Channels.BodyWriter" /> de type Byte. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Version" />, <paramref name="action" /> ou <paramref name="body" /> est null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.Xml.XmlDictionaryReader)">
      <summary>Crée un message avec la version, l'action et le corps spécifiés.</summary>
      <returns>Objet <see cref="T:System.ServiceModel.Channels.Message" /> pour le message créé. </returns>
      <param name="version">Objet <see cref="T:System.ServiceModel.Channels.MessageVersion" /> qui spécifie la version SOAP à utiliser pour le message. </param>
      <param name="action">Décrit la manière dont le message doit être traité. </param>
      <param name="body">Corps du message.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" />, <paramref name="action" /> ou <paramref name="body" /> est null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.Xml.XmlReader)">
      <summary>Crée un message à l'aide du lecteur, de l'action et de la version spécifiés.</summary>
      <returns>Objet <see cref="T:System.ServiceModel.Channels.Message" /> pour le message créé. </returns>
      <param name="version">Objet <see cref="T:System.ServiceModel.Channels.MessageVersion" /> qui spécifie la version SOAP à utiliser pour le message. </param>
      <param name="action">Décrit la manière dont le message doit être traité. </param>
      <param name="body">Objet <see cref="T:System.Xml.XmlReader" /> à utiliser pour lire le message SOAP.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" />, <paramref name="action" /> ou <paramref name="body" /> est null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.Xml.XmlDictionaryReader,System.Int32,System.ServiceModel.Channels.MessageVersion)">
      <summary>Crée un message à l'aide du lecteur, de l'action et de la version spécifiés.</summary>
      <returns>Objet <see cref="T:System.ServiceModel.Channels.Message" /> pour le message créé. </returns>
      <param name="envelopeReader">Objet <see cref="T:System.Xml.XmlDictionaryReader" /> à utiliser pour lire le message SOAP.</param>
      <param name="maxSizeOfHeaders">Taille maximale de l'en-tête en octets. </param>
      <param name="version">Valeur <see cref="T:System.ServiceModel.Channels.MessageVersion" /> correcte qui indique la version SOAP à utiliser pour le message. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="envelopeReader" /> ou <paramref name="version" /> est null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.Xml.XmlReader,System.Int32,System.ServiceModel.Channels.MessageVersion)">
      <summary>Crée un message à l'aide du lecteur, de l'action et de la version spécifiés.</summary>
      <returns>Objet <see cref="T:System.ServiceModel.Channels.Message" /> pour le message créé. </returns>
      <param name="envelopeReader">Objet <see cref="T:System.Xml.XmlReader" /> à utiliser pour lire le message SOAP.</param>
      <param name="maxSizeOfHeaders">Taille maximale de l'en-tête en octets. </param>
      <param name="version">Objet <see cref="T:System.ServiceModel.Channels.MessageVersion" /> qui spécifie la version SOAP à utiliser pour le message. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="envelopeReader" /> ou <paramref name="version" /> est null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.GetBody``1">
      <summary>Récupère le corps de cette instance <see cref="T:System.ServiceModel.Channels.Message" />.</summary>
      <returns>Objet de type <paramref name="T" /> qui contient le corps du message.</returns>
      <typeparam name="T">Corps du message.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.GetBody``1(System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Récupère le corps de ce <see cref="T:System.ServiceModel.Channels.Message" /> à l'aide du sérialiseur spécifié.</summary>
      <returns>Objet de type <paramref name="T" /> qui contient le corps du message.</returns>
      <param name="serializer">Objet <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> utilisé pour lire le corps du message.</param>
      <typeparam name="T">Corps du message.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serializer" /> a la valeur null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.GetBodyAttribute(System.String,System.String)">
      <summary>Récupère les attributs du corps du message.</summary>
      <returns>Attributs du corps du message.</returns>
      <param name="localName">Nom local du nœud XML.Nom de l'élément qui correspond à ce membre.Cette chaîne doit être un nom d'élément XML valide.</param>
      <param name="ns">Espace de noms auquel appartient l'élément XML.URI d'espace de noms de l'élément qui correspond à ce membre.Le système ne valide aucun URI autre que les adresses de transport.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localName" /> ou <paramref name="ns" /> est null. </exception>
      <exception cref="T:System.ObjectDisposedException">Le message est fermé.</exception>
      <exception cref="T:System.InvalidOperationException">Le message a été copié, lu ou écrit.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.GetReaderAtBodyContents">
      <summary>Obtient le lecteur de dictionnaire XML qui accède au contenu du corps du message.</summary>
      <returns>Objet de <see cref="T:System.Xml.XmlDictionaryReader" /> qui accède au contenu du corps de ce message.</returns>
      <exception cref="T:System.ObjectDisposedException">Le message est fermé.</exception>
      <exception cref="T:System.InvalidOperationException">Le message est vide ou a été copié, lu ou écrit.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.Headers">
      <summary>En cas de remplacement dans une classe dérivée, obtient les en-têtes du message. </summary>
      <returns>Objet <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> qui représente les en-têtes du message. </returns>
      <exception cref="T:System.ObjectDisposedException">Le message a été supprimé.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.IsDisposed">
      <summary>Retourne une valeur qui indique si l'objet <see cref="T:System.ServiceModel.Channels.Message" /> est supprimé. </summary>
      <returns>true si le message est supprimé ; sinon, false. </returns>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.IsEmpty">
      <summary>Retourne une valeur qui indique si l'objet <see cref="T:System.ServiceModel.Channels.Message" /> est vide. </summary>
      <returns>true si le message est vide ; sinon, false. </returns>
      <exception cref="T:System.ObjectDisposedException">Le message a été supprimé.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.IsFault">
      <summary>Obtient une valeur qui indique si ce message génère des erreurs SOAP.</summary>
      <returns>true si ce message génère des erreurs SOAP ; sinon, false.</returns>
      <exception cref="T:System.ObjectDisposedException">Le message a été supprimé.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnBodyToString(System.Xml.XmlDictionaryWriter)">
      <summary>Appelé lorsque le corps du message est converti en chaîne.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> utilisé pour convertir le corps du message en chaîne. </param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnClose">
      <summary>Appelé lorsque le message est fermé.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnCreateBufferedCopy(System.Int32)">
      <summary>Appelé lorsqu'un tampon de messages est créé pour stocker ce message.</summary>
      <returns>Objet <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> de la nouvelle copie de message.</returns>
      <param name="maxBufferSize">Taille maximale de la mémoire tampon à créer.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnGetBody``1(System.Xml.XmlDictionaryReader)">
      <summary>Appelée lorsque le corps du message est récupéré.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> qui représente le corps du message.</returns>
      <param name="reader">Objet <see cref="T:System.Xml.XmlDictionaryReader)" /> utilisé pour lire le corps du message.</param>
      <typeparam name="T">Type de corps du message.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnGetBodyAttribute(System.String,System.String)">
      <summary>Appelé lorsque les attributs du corps du message sont récupérés.</summary>
      <returns>Attributs du corps du message.</returns>
      <param name="localName">Nom local du nœud XML.Nom de l'élément qui correspond à ce membre.Cette chaîne doit être un nom d'élément XML valide.</param>
      <param name="ns">Espace de noms auquel appartient l'élément XML.URI d'espace de noms de l'élément qui correspond à ce membre.Le système ne valide aucun URI autre que les adresses de transport.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnGetReaderAtBodyContents">
      <summary>Appelée lorsqu'un lecteur de dictionnaire XML qui accède au contenu du corps du message est récupéré.</summary>
      <returns>Objet de <see cref="T:System.Xml.XmlDictionaryReader" /> qui accède au contenu du corps de ce message.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnWriteBodyContents(System.Xml.XmlDictionaryWriter)">
      <summary>Appelé lorsque le corps du message est écrit dans un fichier XML.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> utilisé pour écrire le corps de ce message dans un fichier XML.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnWriteMessage(System.Xml.XmlDictionaryWriter)">
      <summary>Appelé lorsque l'intégralité du message est écrite dans un fichier XML.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> utilisé pour écrire ce message dans un fichier XML.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnWriteStartBody(System.Xml.XmlDictionaryWriter)">
      <summary>Appelé lorsque le corps de début est écrit dans un fichier XML.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> utilisé pour écrire le corps de début dans un fichier XML.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnWriteStartEnvelope(System.Xml.XmlDictionaryWriter)">
      <summary>Appelé lorsque l'enveloppe de début est écrite dans un fichier XML.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> utilisé pour écrire l'enveloppe de début dans un fichier XML.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnWriteStartHeaders(System.Xml.XmlDictionaryWriter)">
      <summary>Appelé lorsque l'en-tête de début est écrit dans un fichier XML.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> utilisé pour écrire l'en-tête de début dans un fichier XML.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.Properties">
      <summary>En cas de remplacement dans une classe dérivée, obtient un jeu d'annotations au niveau du traitement dans le message. </summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageProperties" /> contenant contient un jeu d'annotations au niveau du traitement dans le message.</returns>
      <exception cref="T:System.ObjectDisposedException">Le message a été supprimé.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.State">
      <summary>Obtient l'état actuel de ce <see cref="T:System.ServiceModel.Channels.Message" />.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageState" /> contenant l'état actuel de ce <see cref="T:System.ServiceModel.Channels.Message" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.System#IDisposable#Dispose">
      <summary>Ferme toutes les ressources utilisées par ce message.Cette méthode ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.ToString">
      <summary>Retourne une chaîne qui représente l'instance de <see cref="T:System.ServiceModel.Channels.Message" /> en cours. </summary>
      <returns>Représentation sous forme de chaîne de l'instance <see cref="T:System.ServiceModel.Channels.Message" /> actuelle. </returns>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.Version">
      <summary>En cas de remplacement dans une classe dérivée, obtient la version SOAP du message.</summary>
      <returns>Objet <see cref="T:System.ServiceModel.Channels.MessageVersion" /> représentant la version SOAP. </returns>
      <exception cref="T:System.ObjectDisposedException">Le message a été supprimé.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteBody(System.Xml.XmlDictionaryWriter)">
      <summary>Écrit l'élément body à l'aide de l'objet <see cref="T:System.Xml.XmlDictionaryWriter" /> spécifié. </summary>
      <param name="writer">Objet <see cref="T:System.Xml.XmlDictionaryWriter" /> à utiliser pour écrire l'élément body.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> a la valeur null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteBody(System.Xml.XmlWriter)">
      <summary>Sérialise le corps du message à l'aide de l'objet <see cref="T:System.Xml.XmlWriter" /> spécifié. </summary>
      <param name="writer">Objet <see cref="T:System.Xml.XmlWriter" /> à utiliser pour écrire le corps du message.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> a la valeur null. </exception>
      <exception cref="T:System.ObjectDisposedException">Le message est supprimé. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteBodyContents(System.Xml.XmlDictionaryWriter)">
      <summary>Sérialise le contenu du corps à l'aide de l'objet <see cref="T:System.Xml.XmlDictionaryWriter" /> spécifié. </summary>
      <param name="writer">Objet <see cref="T:System.Xml.XmlDictionaryWriter" /> à utiliser pour écrire l'élément body.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer " />est null.</exception>
      <exception cref="T:System.ObjectDisposedException">Le message est fermé.</exception>
      <exception cref="T:System.InvalidOperationException">Le message a été copié, lu ou écrit.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteMessage(System.Xml.XmlDictionaryWriter)">
      <summary>Sérialise l'intégralité du message à l'aide de l'objet <see cref="T:System.Xml.XmlDictionaryWriter" /> spécifié. </summary>
      <param name="writer">Objet <see cref="T:System.Xml.XmlDictionaryWriter" /> à utiliser pour écrire le message.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> a la valeur null. </exception>
      <exception cref="T:System.ObjectDisposedException">Le message est fermé.</exception>
      <exception cref="T:System.InvalidOperationException">Le message a été copié, lu ou écrit.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteMessage(System.Xml.XmlWriter)">
      <summary>Sérialise l'intégralité du message à l'aide de l'objet <see cref="T:System.Xml.XmlWriter" /> spécifié. </summary>
      <param name="writer">Objet <see cref="T:System.Xml.XmlWriter" /> à utiliser pour écrire le message entier.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> a la valeur null. </exception>
      <exception cref="T:System.ObjectDisposedException">Le message est fermé.</exception>
      <exception cref="T:System.InvalidOperationException">Le message a été copié, lu ou écrit.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteStartBody(System.Xml.XmlDictionaryWriter)">
      <summary>Sérialise le corps de début du message à l'aide de l'objet <see cref="T:System.Xml.XmlDictionaryWriter" /> spécifié. </summary>
      <param name="writer">Objet <see cref="T:System.Xml.XmlDictionaryWriter" /> à utiliser pour écrire le corps de début.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> a la valeur null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteStartBody(System.Xml.XmlWriter)">
      <summary>Sérialise le corps de début du message à l'aide de l'objet <see cref="T:System.Xml.XmlDictionaryWriter" /> spécifié. </summary>
      <param name="writer">Objet <see cref="T:System.Xml.XmlDictionaryWriter" /> à utiliser pour écrire le corps de début du message.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> a la valeur null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteStartEnvelope(System.Xml.XmlDictionaryWriter)">
      <summary>Sérialise l'enveloppe de début à l'aide de l'objet <see cref="T:System.Xml.XmlDictionaryWriter" /> spécifié. </summary>
      <param name="writer">Objet <see cref="T:System.Xml.XmlDictionaryWriter" /> à utiliser pour écrire l'enveloppe de début.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer " />est null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageBuffer">
      <summary>Représente une mémoire tampon qui stocke l'intégralité d'un message en vue de sa consommation ultérieure.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.MessageBuffer" />.  </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageBuffer.BufferSize">
      <summary>Obtient le nombre d'octets approximatif consommés par ce <see cref="T:System.ServiceModel.Channels.MessageBuffer" />. </summary>
      <returns>Nombre d'octets approximatif consommés par ce <see cref="T:System.ServiceModel.Channels.MessageBuffer" />. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.Close">
      <summary>Finit d'utiliser la mémoire tampon.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.CreateMessage">
      <summary>Retourne une copie du message d'origine.</summary>
      <returns>Copie identique de l'instance <see cref="T:System.ServiceModel.Channels.Message" /> d'origine que vous avez fournie précédemment à la méthode <see cref="M:System.ServiceModel.Channels.Message.CreateBufferedCopy(System.Int32)" /> d'une instance <see cref="T:System.ServiceModel.Channels.Message" />. </returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageBuffer.MessageContentType">
      <summary>Obtient le type de contenu de message stocké dans cette mémoire tampon.</summary>
      <returns>Type de contenu de message stocké dans cette mémoire tampon.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.System#IDisposable#Dispose">
      <summary>Libère les ressources non managées utilisées par <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> et libère éventuellement les ressources managées.Cette méthode ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.WriteMessage(System.IO.Stream)">
      <summary>Écrit le contenu entier de cette mémoire tampon dans le flux de données d'E/S spécifié.</summary>
      <param name="stream">Flux de données d'E/S dans lequel est écrit le contenu entier de cette mémoire tampon.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageEncoder">
      <summary>L'encodeur est le composant utilisé pour écrire des messages dans un flux de données et lire des messages à partir d'un flux de données.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.MessageEncoder" />.  </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncoder.ContentType">
      <summary>En cas de substitution dans une classe dérivée, obtient le type de contenu MIME utilisé par l'encodeur.</summary>
      <returns>Type de contenu pris en charge par l'encodeur de message.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.GetProperty``1">
      <summary>Retourne un objet typé demandé (s'il existe) à partir de la couche appropriée dans la pile de canaux.</summary>
      <returns>Objet typé <paramref name="T " /> demandé s'il existe ; sinon null.</returns>
      <typeparam name="T">L'objet typé pour lequel la méthode effectue une requête.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.IsContentTypeSupported(System.String)">
      <summary>Retourne une valeur qui indique si une valeur content-type au niveau du message spécifiée est prise en charge par l'encodeur de message.</summary>
      <returns>true si la valeur content-type au niveau du message spécifiée est prise en charge ; sinon, false.</returns>
      <param name="contentType">Valeur content-type au niveau du message qui est testée.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncoder.MediaType">
      <summary>En cas de substitution dans une classe dérivée, obtient la valeur du type de média utilisé par l'encodeur.</summary>
      <returns>Type de média pris en charge par l'encodeur de message.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncoder.MessageVersion">
      <summary>En cas de substitution dans une classe dérivée, obtient la valeur de la version du message utilisée par l'encodeur.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageVersion" /> utilisé par l'encodeur.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.ArraySegment{System.Byte},System.ServiceModel.Channels.BufferManager)">
      <summary>En cas de substitution dans une classe dérivée, lit un message dans une mémoire tampon spécifiée.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Message" /> lu dans la mémoire tampon spécifiée.</returns>
      <param name="buffer">
        <see cref="T:System.ArraySegment`1" /> de type <see cref="T:System.Byte" /> qui fournit la mémoire tampon à partir de laquelle le message est désérialisé.</param>
      <param name="bufferManager">
        <see cref="T:System.ServiceModel.Channels.BufferManager" /> qui gère la mémoire tampon à partir de laquelle le message est désérialisé.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.ArraySegment{System.Byte},System.ServiceModel.Channels.BufferManager,System.String)">
      <summary>En cas de substitution dans une classe dérivée, lit un message dans un flux de données spécifié.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Message" /> lu dans le flux de données spécifié.</returns>
      <param name="buffer">
        <see cref="T:System.ArraySegment`1" /> de type <see cref="T:System.Byte" /> qui fournit la mémoire tampon à partir de laquelle le message est désérialisé.</param>
      <param name="bufferManager">
        <see cref="T:System.ServiceModel.Channels.BufferManager" /> qui gère la mémoire tampon à partir de laquelle le message est désérialisé.</param>
      <param name="contentType">En-tête content-type au niveau du message MIME (Multipurpose Internet Mail Extensions).</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.IO.Stream,System.Int32)">
      <summary>En cas de substitution dans une classe dérivée, lit un message dans un flux de données spécifié.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Message" /> lu dans le flux de données spécifié.</returns>
      <param name="stream">Objet <see cref="T:System.IO.Stream" /> à partir duquel le message est lu.</param>
      <param name="maxSizeOfHeaders">Taille maximale des en-têtes qui peuvent être lus à partir du message.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.IO.Stream,System.Int32,System.String)">
      <summary>En cas de substitution dans une classe dérivée, lit un message dans un flux de données spécifié.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Message" /> lu dans le flux de données spécifié.</returns>
      <param name="stream">Objet <see cref="T:System.IO.Stream" /> à partir duquel le message est lu.</param>
      <param name="maxSizeOfHeaders">Taille maximale des en-têtes qui peuvent être lus à partir du message.</param>
      <param name="contentType">En-tête content-type au niveau du message MIME (Multipurpose Internet Mail Extensions).</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ToString">
      <summary>Renvoie le type de contenu utilisé par l'encodeur de message.</summary>
      <returns>Type de contenu utilisé par l'encodeur de message.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.Int32,System.ServiceModel.Channels.BufferManager)">
      <summary>Écrit un message dont la taille est inférieure à celle spécifiée dans une mémoire tampon de tableau d'octets.</summary>
      <returns>
        <see cref="T:System.ArraySegment`1" /> de type byte qui fournit la mémoire tampon dans laquelle le message est sérialisé.</returns>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> à écrire dans la mémoire tampon des messages.</param>
      <param name="maxMessageSize">Taille de message maximale qui peut être écrite.</param>
      <param name="bufferManager">Objet <see cref="T:System.ServiceModel.Channels.BufferManager" /> qui gère la mémoire tampon dans laquelle le message est écrit.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.Int32,System.ServiceModel.Channels.BufferManager,System.Int32)">
      <summary>En cas de substitution dans une classe dérivée, écrit un message dont la taille est inférieure à celle spécifiée dans une mémoire tampon de tableau d'octets à l'offset spécifié.</summary>
      <returns>
        <see cref="T:System.ArraySegment`1" /> de type byte qui fournit la mémoire tampon dans laquelle le message est sérialisé.</returns>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> à écrire dans la mémoire tampon des messages.</param>
      <param name="maxMessageSize">Taille de message maximale qui peut être écrite.</param>
      <param name="bufferManager">Objet <see cref="T:System.ServiceModel.Channels.BufferManager" /> qui gère la mémoire tampon dans laquelle le message est écrit.</param>
      <param name="messageOffset">Offset du segment qui commence au début du tableau d'octets fournissant la mémoire tampon.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.IO.Stream)">
      <summary>En cas de substitution dans une classe dérivée, écrit un message dans un flux de données spécifié.</summary>
      <param name="message">Objet <see cref="T:System.ServiceModel.Channels.Message" /> à écrire dans <paramref name="stream" />.</param>
      <param name="stream">Objet <see cref="T:System.IO.Stream" /> dans lequel est écrit <paramref name="message" />.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageEncoderFactory">
      <summary>Une classe de base abstraite qui représente la fabrique pour générer des encodeurs de message qui peuvent lire les messages d'un flux de données et les écrire dans un flux de données pour différents types d'encodage de message.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoderFactory.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoderFactory.CreateSessionEncoder">
      <summary>Retourne un encodeur de message qui peut être utilisé pour corréler des messages dans les échanges basés sur une session.</summary>
      <returns>La <see cref="T:System.ServiceModel.Channels.MessageEncoder" /> qui est utilisée dans les échanges de messages basés sur une session.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncoderFactory.Encoder">
      <summary>En cas de substitution dans une classe dérivée, obtient l'encodeur de message produit par la fabrique.</summary>
      <returns>La <see cref="T:System.ServiceModel.Channels.MessageEncoder" /> utilisée par la fabrique.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncoderFactory.MessageVersion">
      <summary>En cas de substitution dans une classe dérivée, obtient la version du message utilisée par les encodeurs générés par la fabrique pour encoder les messages.</summary>
      <returns>La <see cref="T:System.ServiceModel.Channels.MessageVersion" /> utilisée par la fabrique.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageEncodingBindingElement">
      <summary>Élément de liaison qui spécifie la version de message utilisée pour encoder des messages.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncodingBindingElement.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.MessageEncodingBindingElement" />.  </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncodingBindingElement.#ctor(System.ServiceModel.Channels.MessageEncodingBindingElement)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.MessageEncodingBindingElement" /> initialisée à partir d'un élément existant.</summary>
      <param name="elementToBeCloned">
        <see cref="T:System.ServiceModel.Channels.MessageEncodingBindingElement" /> à cloner.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncodingBindingElement.CreateMessageEncoderFactory">
      <summary>En cas de substitution dans une classe dérivée, crée une fabrique pour produire des encodeurs de message.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" /> utilisé pour produire des encodeurs de message.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Retourne l'objet typé demandé, s'il existe, à partir de la couche appropriée de la pile de canaux.</summary>
      <returns>L'objet typé <paramref name="T" /> demandé s'il existe ; null sinon.</returns>
      <param name="context">Objet <see cref="T:System.ServiceModel.Channels.BindingContext" /> de l'élément de liaison actuel.</param>
      <typeparam name="T">L'objet typé pour lequel la méthode effectue une requête.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> a la valeur null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncodingBindingElement.MessageVersion">
      <summary>En cas de substitution dans une classe dérivée, obtient ou définit la version du message qui peut être gérée par les encodeurs de message générés par la fabrique d'encodeur de message.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageVersion" /> utilisé par les encodeurs produits par la fabrique d'encodeur de message.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageFault">
      <summary>Représente une représentation en mémoire d'une erreur SOAP qui peut être passée à <see cref="Overload:System.ServiceModel.Channels.Message.CreateMessage" /> pour créer un message qui contient une erreur. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.#ctor">
      <summary>En cas d'appel dans une classe dérivée, initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.MessageFault" />.  </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.Actor">
      <summary>Obtient ou définit la valeur de l'acteur.</summary>
      <returns>Valeur de l'acteur.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.Code">
      <summary>Obtient le code d'erreur SOAP. </summary>
      <returns>
        <see cref="T:System.ServiceModel.FaultCode" /> qui contient le code d'erreur SOAP.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.CreateFault(System.ServiceModel.Channels.Message,System.Int32)">
      <summary>Retourne un nouvel objet <see cref="T:System.ServiceModel.Channels.MessageFault" /> qui utilise le <see cref="T:System.ServiceModel.Channels.Message" /> spécifié et la taille de mémoire tampon maximale spécifiée pour la mémoire tampon de message.</summary>
      <returns>Objet <see cref="T:System.ServiceModel.Channels.MessageFault" /> avec des valeurs initiales passées dans les paramètres.</returns>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> spécifié à utiliser pour créer l'objet <see cref="T:System.ServiceModel.Channels.MessageFault" />.</param>
      <param name="maxBufferSize">Taille de mémoire tampon maximale spécifiée pour la mémoire tampon de message</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.GetDetail``1">
      <summary>Retourne l'objet de détail de l'erreur du message.</summary>
      <returns>Objet de détail de l'erreur du message.</returns>
      <typeparam name="T">Type de l'objet de détail.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.GetDetail``1(System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Retourne l'objet de détail qui utilise le <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> spécifié.</summary>
      <returns>Objet de détail contenu dans l'<see cref="T:System.ServiceModel.Channels.MessageFault" />.</returns>
      <param name="serializer">
        <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> à utiliser lors de la désérialisation de l'objet de détail. </param>
      <typeparam name="T">Type de l'objet de détail.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.GetReaderAtDetailContents">
      <summary>Retourne un objet <see cref="T:System.Xml.XmlDictionaryReader" /> positionné sur l'objet de détail de l'<see cref="T:System.ServiceModel.Channels.MessageFault" />.</summary>
      <returns>Objet <see cref="T:System.Xml.XmlDictionaryReader" /> positionné sur l'objet de détail de l'<see cref="T:System.ServiceModel.Channels.MessageFault" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.HasDetail">
      <summary>Obtient une valeur qui indique si l'objet <see cref="T:System.ServiceModel.Channels.MessageFault" /> possède un objet de détail.</summary>
      <returns>true si l'<see cref="T:System.ServiceModel.Channels.MessageFault" /> possède un objet de détail ; sinon, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.Node">
      <summary>Obtient le nœud SOAP contenant des informations qui déterminent quel nœud SOAP d'un chemin d'accès de message entraîne l'erreur.</summary>
      <returns>Nœud SOAP contenant des informations qui déterminent quel nœud SOAP d'un chemin d'accès de message entraîne l'erreur.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.OnGetReaderAtDetailContents">
      <summary>En cas d'appel dans une classe dérivée, retourne un objet <see cref="T:System.Xml.XmlDictionaryReader" /> positionné sur l'objet de détail de l'<see cref="T:System.ServiceModel.Channels.MessageFault" />.</summary>
      <returns>Objet <see cref="T:System.Xml.XmlDictionaryReader" /> positionné sur l'objet de détail de l'<see cref="T:System.ServiceModel.Channels.MessageFault" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.OnWriteDetail(System.Xml.XmlDictionaryWriter,System.ServiceModel.EnvelopeVersion)">
      <summary>Appelée avant d'écrire le contenu de détail.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> utilisé pour écrire l'élément de détail.</param>
      <param name="version">Version de l'enveloppe SOAP utilisée pour écrire.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.OnWriteDetailContents(System.Xml.XmlDictionaryWriter)">
      <summary>En cas de substitution dans une classe dérivée non abstraite, écrit le contenu de l'élément de détail. </summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> utilisé pour écrire l'élément de détail.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.OnWriteStartDetail(System.Xml.XmlDictionaryWriter,System.ServiceModel.EnvelopeVersion)">
      <summary>Écrit l'élément de début à l'aide du <see cref="T:System.Xml.XmlDictionaryWriter" /> et de la version d'enveloppe SOAP spécifiés.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> utilisé pour écrire l'élément de détail.</param>
      <param name="version">Version de l'enveloppe SOAP utilisée pour écrire.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.Reason">
      <summary>Obtient une description textuelle d'une erreur SOAP. </summary>
      <returns>
        <see cref="T:System.ServiceModel.FaultReason" /> qui contient une description textuelle d'une erreur SOAP.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageHeader">
      <summary>Représente le contenu d'un en-tête SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.MessageHeader" />.  </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeader.Actor">
      <summary>Obtient ou définit le destinataire ciblé de l'en-tête de message.</summary>
      <returns>Destinataire ciblé de l'en-tête de message.La valeur par défaut est une chaîne vide ("").</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object)">
      <summary>Crée un en-tête de message avec les données spécifiées.</summary>
      <returns>Nouvel objet <see cref="T:System.ServiceModel.Channels.MessageHeader" /> avec les données spécifiées.</returns>
      <param name="name">Nom local de l'élément XML d'en-tête.</param>
      <param name="ns">URI d'espace de noms de l'élément XML d'en-tête.</param>
      <param name="value">Contenu de l'en-tête à créer.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Boolean)">
      <summary>Crée un en-tête de message avec les données spécifiées.</summary>
      <returns>Nouvel objet <see cref="T:System.ServiceModel.Channels.MessageHeader" /> avec les données spécifiées.</returns>
      <param name="name">Nom local de l'élément XML d'en-tête.</param>
      <param name="ns">URI d'espace de noms de l'élément XML d'en-tête.</param>
      <param name="value">Contenu de l'en-tête à créer.</param>
      <param name="mustUnderstand">Valeur qui indique si l'en-tête doit être compris.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Boolean,System.String)">
      <summary>Crée un en-tête de message avec les données spécifiées.</summary>
      <returns>Nouvel objet <see cref="T:System.ServiceModel.Channels.MessageHeader" /> avec les données spécifiées.</returns>
      <param name="name">Nom local de l'élément XML d'en-tête.</param>
      <param name="ns">URI d'espace de noms de l'élément XML d'en-tête.</param>
      <param name="value">Contenu de l'en-tête à créer.</param>
      <param name="mustUnderstand">Valeur qui indique si l'en-tête doit être compris.</param>
      <param name="actor">Destinataire ciblé de l'en-tête de message.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Boolean,System.String,System.Boolean)">
      <summary>Crée un en-tête de message avec les données spécifiées.</summary>
      <returns>Nouvel objet <see cref="T:System.ServiceModel.Channels.MessageHeader" /> avec les données spécifiées.</returns>
      <param name="name">Nom local de l'élément XML d'en-tête.</param>
      <param name="ns">URI d'espace de noms de l'élément XML d'en-tête.</param>
      <param name="value">Contenu de l'en-tête à créer.</param>
      <param name="mustUnderstand">Valeur qui indique si l'en-tête doit être compris.</param>
      <param name="actor">Destinataire ciblé de l'en-tête de message.</param>
      <param name="relay">Valeur qui indique si l'en-tête doit être relayé.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Crée un en-tête à partir d'un objet à sérialiser à l'aide du XmlFormatter. </summary>
      <returns>Nouvel objet <see cref="T:System.ServiceModel.Channels.MessageHeader" /> avec les données spécifiées.</returns>
      <param name="name">Nom local de l'élément XML d'en-tête.</param>
      <param name="ns">URI d'espace de noms de l'élément XML d'en-tête.</param>
      <param name="value">Contenu de l'en-tête à créer.</param>
      <param name="serializer">
        <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> qui est utilisé pour sérialiser l'en-tête.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer,System.Boolean)">
      <summary>Crée un en-tête de message avec les données spécifiées.</summary>
      <returns>Nouvel objet <see cref="T:System.ServiceModel.Channels.MessageHeader" /> avec les données spécifiées.</returns>
      <param name="name">Nom local de l'élément XML d'en-tête.</param>
      <param name="ns">URI d'espace de noms de l'élément XML d'en-tête.</param>
      <param name="value">Contenu de l'en-tête à créer.</param>
      <param name="serializer">
        <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> qui est utilisé pour sérialiser l'en-tête.</param>
      <param name="mustUnderstand">Valeur qui indique si l'en-tête doit être compris.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer,System.Boolean,System.String)">
      <summary>Crée un en-tête de message avec les données spécifiées.</summary>
      <returns>Nouvel objet <see cref="T:System.ServiceModel.Channels.MessageHeader" /> avec les données spécifiées.</returns>
      <param name="name">Nom local de l'élément XML d'en-tête.</param>
      <param name="ns">URI d'espace de noms de l'élément XML d'en-tête.</param>
      <param name="value">Contenu de l'en-tête à créer.</param>
      <param name="serializer">
        <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> qui est utilisé pour sérialiser l'en-tête.</param>
      <param name="mustUnderstand">Valeur qui indique si l'en-tête doit être compris.</param>
      <param name="actor">Destinataire ciblé de l'en-tête de message.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer,System.Boolean,System.String,System.Boolean)">
      <summary>Crée un en-tête de message avec les données spécifiées.</summary>
      <returns>Nouvel objet <see cref="T:System.ServiceModel.Channels.MessageHeader" /> avec les données spécifiées.</returns>
      <param name="name">Nom local de l'élément XML d'en-tête.</param>
      <param name="ns">URI d'espace de noms de l'élément XML d'en-tête.</param>
      <param name="value">Contenu de l'en-tête à créer.</param>
      <param name="serializer">
        <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> qui est utilisé pour sérialiser l'en-tête.</param>
      <param name="mustUnderstand">Valeur qui indique si l'en-tête doit être compris.</param>
      <param name="actor">Destinataire ciblé de l'en-tête de message.</param>
      <param name="relay">Valeur qui indique si l'en-tête doit être relayé.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.IsMessageVersionSupported(System.ServiceModel.Channels.MessageVersion)">
      <summary>Vérifie si la version de message spécifiée est prise en charge.</summary>
      <returns>true si la version de message spécifiée est prise en charge ; sinon, false.</returns>
      <param name="messageVersion">Objet qui contient des informations liées à la version de SOAP associée à un message et son échange.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeader.IsReferenceParameter">
      <summary>Obtient une valeur qui spécifie si cet en-tête de message contient les paramètres de référence d'une référence de point de terminaison.</summary>
      <returns>true si cet en-tête de message contient des paramètres de référence d'une référence de point de terminaison ; sinon, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeader.MustUnderstand">
      <summary>Obtient ou définit une valeur qui indique si l'en-tête doit être compris en fonction des spécifications SOAP 1.1 et 1.2. </summary>
      <returns>true si l'en-tête doit être compris ; sinon, false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.OnWriteHeaderContents(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Appelée lorsque le contenu d'en-tête est sérialisé à l'aide du writer XML spécifié. </summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> qui est utilisé pour sérialiser le contenu d'en-tête.</param>
      <param name="messageVersion">Objet qui contient des informations liées à la version de SOAP associée à un message et son échange.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.OnWriteStartHeader(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Appelée lorsque l'en-tête de début est sérialisé à l'aide du writer XML spécifié. </summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> qui est utilisé pour sérialiser l'en-tête de début.</param>
      <param name="messageVersion">Objet qui contient des informations liées à la version de SOAP associée à un message et son échange.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeader.Relay">
      <summary>Obtient une valeur qui indique si l'en-tête doit être relayé.</summary>
      <returns>true si l'en-tête doit être relayé ; sinon, false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.ToString">
      <summary>Retourne la représentation de type chaîne de cet en-tête de message.</summary>
      <returns>Représentation sous forme de chaîne de cet en-tête de message.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.WriteHeader(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Sérialise l'en-tête à l'aide du writer XML spécifié. </summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> qui est utilisé pour sérialiser l'en-tête.</param>
      <param name="messageVersion">Objet qui contient des informations liées à la version de SOAP associée à un message et son échange.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.WriteHeader(System.Xml.XmlWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Sérialise l'en-tête à l'aide du writer XML spécifié. </summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" /> qui est utilisé pour sérialiser l'en-tête.</param>
      <param name="messageVersion">Objet qui contient des informations liées à la version de SOAP associée à un message et son échange.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.WriteHeaderAttributes(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Sérialise les attributs d'en-tête à l'aide du writer XML spécifié. </summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> qui est utilisé pour sérialiser les attributs d'en-tête.</param>
      <param name="messageVersion">Objet qui contient des informations liées à la version de SOAP associée à un message et son échange.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.WriteHeaderContents(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Sérialise le contenu de l'en-tête à l'aide du writer XML spécifié. </summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" /> qui est utilisé pour sérialiser le contenu d'en-tête.</param>
      <param name="messageVersion">Objet qui contient des informations liées à la version de SOAP associée à un message et son échange.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.WriteStartHeader(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Sérialise l'en-tête de début à l'aide du writer XML spécifié. </summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> qui est utilisé pour sérialiser l'en-tête de début.</param>
      <param name="messageVersion">Objet qui contient des informations liées à la version de SOAP associée à un message et son échange.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageHeaderInfo">
      <summary>Représente des informations système concernant un en-tête de message SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaderInfo.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.MessageHeaderInfo" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.Actor">
      <summary>Obtient ou définit le destinataire de l'en-tête de message.</summary>
      <returns>URI qui indique le destinataire de l'en-tête de message.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.IsReferenceParameter">
      <summary>Obtient une valeur qui spécifie si l'en-tête de message représente les paramètres de référence d'une référence de point de terminaison.</summary>
      <returns>true si l'en-tête de message représente les paramètres de référence d'une référence de point de terminaison ; sinon, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.MustUnderstand">
      <summary>Obtient ou définit une valeur qui indique si le traitement de l'en-tête de message est obligatoire ou facultatif.</summary>
      <returns>true si le traitement de l'en-tête de message est obligatoire ; sinon, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.Name">
      <summary>Obtient le nom de l'en-tête de message.</summary>
      <returns>Nom de l'en-tête de message.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.Namespace">
      <summary>Obtient l'espace de noms de l'en-tête de message.</summary>
      <returns>Espace de noms de l'en-tête de message.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.Relay">
      <summary>Obtient ou définit une valeur qui indique si l'en-tête de message peut être relayé.</summary>
      <returns>true si l'en-tête de message peut être relayé ; sinon, false.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageHeaders">
      <summary>Représente une collection d'en-têtes d'un message.Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.#ctor(System.ServiceModel.Channels.MessageHeaders)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> avec la collection d'en-têtes de message spécifiée.</summary>
      <param name="collection">Collection d'en-têtes de message.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.#ctor(System.ServiceModel.Channels.MessageVersion)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> avec la version du message spécifiée.</summary>
      <param name="version">Version SOAP du message.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.#ctor(System.ServiceModel.Channels.MessageVersion,System.Int32)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> avec la version et la taille de message spécifiées.</summary>
      <param name="version">Version SOAP du message.</param>
      <param name="initialSize">Taille de l'en-tête.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.Action">
      <summary>Obtient ou définit la description de la manière dont le message doit être traité.</summary>
      <returns>Décrit la manière dont le message doit être traité.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.Add(System.ServiceModel.Channels.MessageHeader)">
      <summary>Ajoute l'en-tête de message spécifié à la collection.</summary>
      <param name="header">En-tête de message à ajouter à la collection.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.Clear">
      <summary>Supprime tous les en-têtes de la collection.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.CopyHeaderFrom(System.ServiceModel.Channels.Message,System.Int32)">
      <summary>Copie dans cette instance le contenu d'en-tête qui se trouve à l'index spécifié du message spécifié.</summary>
      <param name="message">Message à partir duquel l'en-tête est copié.</param>
      <param name="headerIndex">Emplacement de l'en-tête de message d'origine, à partir duquel le contenu est copié.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.CopyHeaderFrom(System.ServiceModel.Channels.MessageHeaders,System.Int32)">
      <summary>Copie dans cette instance le contenu d'en-tête qui se trouve à l'index spécifié à partir de la collection d'en-têtes de message spécifiée.</summary>
      <param name="collection">Objet de collection <see cref="T:System.ServiceModel.Channels.MessageHeaders" />.</param>
      <param name="headerIndex">Emplacement de l'en-tête de message d'origine, à partir duquel le contenu est copié.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.CopyHeadersFrom(System.ServiceModel.Channels.Message)">
      <summary>Copie le contenu de tous les en-têtes du message spécifié dans cette instance.</summary>
      <param name="message">Message à partir à partir duquel les en-têtes sont copiés.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.CopyHeadersFrom(System.ServiceModel.Channels.MessageHeaders)">
      <summary>Copie le contenu de la collection d'en-têtes spécifiée dans cette instance.</summary>
      <param name="collection">Objet de collection de <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> d'après lesquels les en-têtes sont copiés dans cette instance.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.CopyTo(System.ServiceModel.Channels.MessageHeaderInfo[],System.Int32)">
      <summary>Copie les en-têtes de cette collection dans un tableau, en commençant à un index particulier du tableau. </summary>
      <param name="array">Tableau unidimensionnel qui représente la destination des objets d'en-tête de message copiés à partir de cette instance.Le tableau doit avoir une indexation de base zéro.</param>
      <param name="index">Index de base zéro dans le tableau au niveau duquel commencer la copie. </param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.Count">
      <summary>Obtient le nombre d'en-têtes de message dans cette collection.</summary>
      <returns>Nombre d'en-têtes de message dans cette collection.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.FaultTo">
      <summary>Obtient ou définit l'adresse du nœud auquel les erreurs doivent être envoyées.</summary>
      <returns>Objet <see cref="T:System.ServiceModel.EndpointAddress" /> du nœud auquel les erreurs doivent être envoyées.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.FindHeader(System.String,System.String)">
      <summary>Recherche un en-tête de message dans cette collection en fonction du LocalName et l'URI d'espace de noms de l'élément d'en-tête spécifiés.</summary>
      <returns>Index de l'en-tête de message dans cette collection s'il est trouvé, ou -1 si l'en-tête spécifié n'existe pas.</returns>
      <param name="name">LocalName de l'élément XML d'en-tête.</param>
      <param name="ns">URI d'espace de noms de l'élément XML d'en-tête.</param>
      <exception cref="T:System.ArgumentNullException">Les arguments sont null.</exception>
      <exception cref="T:System.ServiceModel.MessageHeaderException">L'en-tête spécifié par les arguments existe plusieurs fois.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.FindHeader(System.String,System.String,System.String[])">
      <summary>Recherche un en-tête de message dans cette collection en fonction du LocalName, de l'URI d'espace de noms et des acteurs de l'élément d'en-tête spécifiés.</summary>
      <returns>Index de l'en-tête de message dans cette collection s'il est trouvé, ou -1 si l'en-tête spécifié n'existe pas.</returns>
      <param name="name">LocalName de l'élément XML d'en-tête.</param>
      <param name="ns">URI d'espace de noms de l'élément XML d'en-tête.</param>
      <param name="actors">Destinataire ciblé de l'en-tête de message.</param>
      <exception cref="T:System.ArgumentNullException">Les arguments sont null.</exception>
      <exception cref="T:System.ServiceModel.MessageHeaderException">L'en-tête spécifié par les arguments existe plusieurs fois.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.From">
      <summary>Obtient ou définit l'adresse du nœud qui a envoyé le message.</summary>
      <returns>Objet <see cref="T:System.ServiceModel.EndpointAddress" /> du nœud qui a envoyé le message.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetEnumerator">
      <summary>Renvoie un énumérateur pour itérer au sein de la collection.Cette méthode ne peut pas être héritée.</summary>
      <returns>Objet <see cref="T:System.Collections.IEnumerator" /> qui peut être utilisé pour itérer au sein de la collection.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetHeader``1(System.Int32)">
      <summary>Récupère un en-tête de message à une position spécifique dans cette collection.</summary>
      <returns>En-tête de message au niveau de l'index spécifié.</returns>
      <param name="index">Index de base zéro de l'en-tête à obtenir.</param>
      <typeparam name="T">Type de l'en-tête de message.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetHeader``1(System.Int32,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Récupère un en-tête de message à une position spécifique dans cette collection.</summary>
      <returns>En-tête de message au niveau de l'index spécifié.</returns>
      <param name="index">Index de base zéro de l'en-tête à obtenir.</param>
      <param name="serializer">
        <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> qui est utilisé pour sérialiser l'en-tête.</param>
      <typeparam name="T">Type de l'en-tête de message.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetHeader``1(System.String,System.String)">
      <summary>Recherche un en-tête de message dans cette collection en fonction du LocalName et l'URI d'espace de noms de l'élément d'en-tête spécifiés.</summary>
      <returns>En-tête de message avec le nom spécifié.</returns>
      <param name="name">LocalName de l'élément XML d'en-tête.</param>
      <param name="ns">URI d'espace de noms de l'élément XML d'en-tête.</param>
      <typeparam name="T">Type de l'en-tête de message.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetHeader``1(System.String,System.String,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Récupère un en-tête de message dans cette collection en fonction du LocalName, de l'URI d'espace de noms et du sérialiseur spécifiés.</summary>
      <returns>En-tête de message avec le nom spécifié.</returns>
      <param name="name">LocalName de l'élément XML d'en-tête.</param>
      <param name="ns">URI d'espace de noms de l'élément XML d'en-tête.</param>
      <param name="serializer">
        <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> qui est utilisé pour sérialiser l'en-tête.</param>
      <typeparam name="T">Type de l'en-tête de message.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetHeader``1(System.String,System.String,System.String[])">
      <summary>Récupère un en-tête de message dans cette collection en fonction du LocalName, de l'URI d'espace de noms et des acteurs de l'élément d'en-tête spécifiés.</summary>
      <returns>En-tête de message avec le nom spécifié.</returns>
      <param name="name">LocalName de l'élément XML d'en-tête.</param>
      <param name="ns">URI d'espace de noms de l'élément XML d'en-tête.</param>
      <param name="actors">Destinataire ciblé de l'en-tête de message.</param>
      <typeparam name="T">Type de l'en-tête de message.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetReaderAtHeader(System.Int32)">
      <summary>Obtient un lecteur de dictionnaire XML qui consomme l'en-tête de message à l'emplacement spécifié de la collection.</summary>
      <returns>Objet <see cref="T:System.Xml.XmlDictionaryReader" /> qui consomme l'en-tête de message à l'emplacement spécifié de la collection.</returns>
      <param name="headerIndex">Index de base zéro de l'en-tête à obtenir.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.HaveMandatoryHeadersBeenUnderstood">
      <summary>Vérifie si tous les en-têtes de message marqués avec MustUnderstand ont été correctement interprétés et traités. </summary>
      <returns>true si les destinataires spécifiés par <paramref name="actors" /> ont correctement interprété et traité tous les en-têtes de message marqués avec MustUnderstand ; sinon, false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.HaveMandatoryHeadersBeenUnderstood(System.String[])">
      <summary>Vérifie si les destinataires spécifiés ont correctement interprété et traité tous les en-têtes de message marqués avec MustUnderstand. </summary>
      <returns>true si les destinataires spécifiés par <paramref name="actors" /> ont correctement interprété et traité tous les en-têtes de message marqués avec MustUnderstand ; sinon, false.</returns>
      <param name="actors">Destinataire ciblé de l'en-tête de message.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.Insert(System.Int32,System.ServiceModel.Channels.MessageHeader)">
      <summary>Insère un en-tête de message dans la collection à la position d'index spécifiée.</summary>
      <param name="headerIndex">Index de base zéro auquel <paramref name="header" /> doit être inséré.</param>
      <param name="header">En-tête de message à insérer.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.Item(System.Int32)">
      <summary>Récupère un en-tête à l'index indiqué.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageHeaderInfo" /> de la collection.Si <paramref name="index" /> est supérieur ou égal au nombre d'en-têtes dans la liste, ce paramètre retourne null.</returns>
      <param name="index">Index de base zéro de l'en-tête dans la liste.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.MessageId">
      <summary>Obtient ou définit l'ID unique du message.</summary>
      <returns>ID unique du message.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.MessageVersion">
      <summary>Obtient la version SOAP du message.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageVersion" /> qui est version SOAP du message.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.RelatesTo">
      <summary>Obtient les ID des messages liés à ce message.</summary>
      <returns>ID des messages liés à ce message.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.RemoveAll(System.String,System.String)">
      <summary>Supprime de la collection tous les en-têtes avec le nom et l'espace de noms spécifiés.</summary>
      <param name="name">LocalName de l'élément XML d'en-tête.</param>
      <param name="ns">URI d'espace de noms de l'élément XML d'en-tête.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.RemoveAt(System.Int32)">
      <summary>Supprime de la collection l'en-tête de message à l'index spécifié.</summary>
      <param name="headerIndex">Index de base zéro de l'en-tête à supprimer.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.ReplyTo">
      <summary>Obtient ou définit l'adresse du nœud auquel une réponse doit être envoyée pour une demande.</summary>
      <returns>Objet <see cref="T:System.ServiceModel.EndpointAddress" /> du nœud auquel une réponse doit être envoyée pour une demande.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.SetAction(System.Xml.XmlDictionaryString)">
      <summary>Définit l'élément d'action de l'en-tête.</summary>
      <param name="action">Décrit la manière dont le message doit être traité.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.System#Collections#IEnumerable#GetEnumerator">
      <summary>Renvoie un énumérateur pour itérer au sein de la collection.Cette méthode ne peut pas être héritée.</summary>
      <returns>Objet <see cref="T:System.Collections.IEnumerator" /> qui peut être utilisé pour itérer au sein de la collection.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.To">
      <summary>Obtient ou définit le point de terminaison de destination d'un message.</summary>
      <returns>URI qui contient le point de terminaison de destination d'un message.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteHeader(System.Int32,System.Xml.XmlDictionaryWriter)">
      <summary>Sérialise l'en-tête à partir de l'emplacement spécifié à l'aide de l'enregistreur XML spécifié. </summary>
      <param name="headerIndex">Index de base zéro de l'en-tête à sérialiser.</param>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> qui est utilisé pour sérialiser l'en-tête.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteHeader(System.Int32,System.Xml.XmlWriter)">
      <summary>Sérialise l'en-tête à partir de l'emplacement spécifié à l'aide de l'enregistreur XML spécifié. </summary>
      <param name="headerIndex">Index de base zéro de l'en-tête à sérialiser.</param>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" /> qui est utilisé pour sérialiser l'en-tête.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteHeaderContents(System.Int32,System.Xml.XmlDictionaryWriter)">
      <summary>Sérialise le contenu de l'en-tête spécifié à l'aide de l'enregistreur XML spécifié. </summary>
      <param name="headerIndex">Index de base zéro de l'en-tête à sérialiser.</param>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> qui est utilisé pour sérialiser le contenu d'en-tête.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteHeaderContents(System.Int32,System.Xml.XmlWriter)">
      <summary>Sérialise le contenu de l'en-tête spécifié à l'aide de l'enregistreur XML spécifié. </summary>
      <param name="headerIndex">Index de base zéro de l'en-tête à sérialiser.</param>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" /> qui est utilisé pour sérialiser le contenu d'en-tête.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteStartHeader(System.Int32,System.Xml.XmlDictionaryWriter)">
      <summary>Sérialise l'en-tête de début à l'aide du writer XML spécifié. </summary>
      <param name="headerIndex">Index de base zéro de l'en-tête à sérialiser.</param>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> qui est utilisé pour sérialiser l'en-tête de début.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteStartHeader(System.Int32,System.Xml.XmlWriter)">
      <summary>Sérialise l'en-tête de début à l'aide du writer XML spécifié. </summary>
      <param name="headerIndex">Index de base zéro de l'en-tête à sérialiser.</param>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" /> qui est utilisé pour sérialiser l'en-tête de début.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageProperties">
      <summary>Représente l'ensemble de propriétés d'un message.Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.MessageProperties" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.#ctor(System.ServiceModel.Channels.MessageProperties)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.MessageProperties" /> avec des propriétés prédéfinies.</summary>
      <param name="properties">
        <see cref="T:System.ServiceModel.Channels.MessageProperties" />
      </param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.Add(System.String,System.Object)">
      <summary>Ajoute un élément avec le nom et la propriété spécifiés dans la collection <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</summary>
      <param name="name">Nom de l'élément à ajouter.</param>
      <param name="property">Valeur de l'élément à ajouter. </param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.AllowOutputBatching">
      <summary>Obtient ou définit une valeur qui indique s'il faut stocker ce message avant de le transmettre au transport. </summary>
      <returns>true si le traitement par lots des messages sortants est autorisé ; sinon, false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.Clear">
      <summary>Supprime tous les éléments de la collection <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.ContainsKey(System.String)">
      <summary>Détermine si <see cref="T:System.ServiceModel.Channels.MessageProperties" /> contient un nom, une clé ou un identificateur spécifique.</summary>
      <returns>true si <see cref="T:System.ServiceModel.Channels.MessageProperties" /> contient un élément avec le <paramref name="name" /> spécifié ; sinon, false.</returns>
      <param name="name">Nom, clé ou identificateur à localiser dans <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.CopyProperties(System.ServiceModel.Channels.MessageProperties)">
      <summary>Copie le contenu de l'objet <see cref="T:System.ServiceModel.Channels.MessageProperties" /> spécifié dans cette instance.</summary>
      <param name="properties">Objet de <see cref="T:System.ServiceModel.Channels.MessageProperties" /> selon lequel effectuer la copie.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Count">
      <summary>Obtient le nombre total de propriétés dans la collection <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</summary>
      <returns>Nombre total de propriétés dans la collection <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.Dispose">
      <summary>Libère toutes les ressources utilisées par la classe <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Encoder">
      <summary>Obtient l'encodeur utilisé pour écrire des messages dans un flux de données et lire des messages à partir d'un flux de données.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageEncoder" /> utilisé pour écrire des messages dans un flux de données et lire des messages à partir d'un flux de données.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.IsFixedSize">
      <summary>Obtient une valeur qui indique si <see cref="T:System.ServiceModel.Channels.MessageProperties" /> est de taille fixe.</summary>
      <returns>true si <see cref="T:System.ServiceModel.Channels.MessageProperties" /> est de taille fixe ; sinon, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Item(System.String)">
      <summary>Extrait une propriété avec le nom, l'identificateur ou la valeur de clé spécifié.</summary>
      <returns>Propriété portant le <paramref name="name" /> spécifié ou null si la propriété n'existe pas.</returns>
      <param name="name">Nom de la propriété à obtenir de la collection.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Keys">
      <summary>Obtient un <see cref="T:System.Collections.ICollection" /> contenant les clés de <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" /> contenant les clés de <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.Remove(System.String)">
      <summary>Supprime l'élément portant le nom spécifié de l'objet <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</summary>
      <returns>true si <see cref="T:System.ServiceModel.Channels.MessageProperties" /> contient un élément portant le <paramref name="name" /> spécifié et peut être supprimé ; sinon, false.</returns>
      <param name="name">Nom de l'élément à supprimer.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#ICollection{T}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Ajoute un élément avec le nom et la propriété spécifiés dans <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</summary>
      <param name="pair">Paire clé/valeur contenant le nom et la valeur de l'élément à ajouter.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#ICollection{T}#Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Détermine si l'objet <see cref="T:System.ServiceModel.Channels.MessageProperties" /> contient un nom spécifique.</summary>
      <returns>true si <see cref="T:System.ServiceModel.Channels.MessageProperties" /> contient un élément avec le nom et la valeur dans la <paramref name="pair" /> spécifiée ; sinon, false.</returns>
      <param name="pair">Paire clé/valeur contenant le nom et la valeur de l'élément à localiser dans <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#ICollection{T}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary>Copie le contenu des <see cref="T:System.ServiceModel.Channels.MessageProperties" /> spécifiés dans un tableau, en commençant à l'index spécifié.</summary>
      <param name="array">
        <see cref="T:System.Array" /> dans lequel copier la collection.</param>
      <param name="index">Index à partir duquel commencer la copie.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>Obtient une valeur qui indique si ce jeu de propriétés est en lecture seule.</summary>
      <returns>true si ce jeu de propriétés est en lecture seule ; sinon, false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#ICollection{T}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Supprime l'élément portant le nom spécifié de l'objet <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</summary>
      <returns>true si le <see cref="T:System.ServiceModel.Channels.MessageProperties" /> contient un élément avec le nom et la valeur spécifiés dans le paramètre <paramref name="pair" /> et peut être supprimé ; sinon, false.</returns>
      <param name="pair">Paire clé/valeur contenant le nom et la valeur de l'élément à supprimer.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>Retourne un énumérateur qui peut itérer au sein d'une collection.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> qui peut être utilisé pour itérer la collection.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#IEnumerable#GetEnumerator">
      <summary>Retourne un énumérateur qui peut itérer au sein d'une collection.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> qui peut être utilisé pour itérer la collection.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.TryGetValue(System.String,System.Object@)">
      <summary>Détermine si l'objet <see cref="T:System.ServiceModel.Channels.MessageProperties" /> contient un nom spécifique, puis récupère sa valeur. </summary>
      <returns>true si <see cref="T:System.ServiceModel.Channels.MessageProperties" /> contient un élément avec le <paramref name="name" /> spécifié ; sinon, false.</returns>
      <param name="name">Nom de l'élément à localiser.</param>
      <param name="value">Valeur de l'élément trouvé. </param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Values">
      <summary>Obtient un <see cref="T:System.Collections.ICollection" /> qui contient les valeurs de <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" /> contenant les valeurs de <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Via">
      <summary>Obtient ou définit l'adresse de transport utilisée pour envoyer des messages.</summary>
      <returns>URI contenant l'adresse de transport utilisée pour envoyer des messages.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageState">
      <summary>Spécifie l'état d'un message. </summary>
    </member>
    <member name="F:System.ServiceModel.Channels.MessageState.Closed">
      <summary>Le message a été fermé et n'est plus accessible.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.MessageState.Copied">
      <summary>Le message a été copié.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.MessageState.Created">
      <summary>Le message a été créé. </summary>
    </member>
    <member name="F:System.ServiceModel.Channels.MessageState.Read">
      <summary>Le message est en cours de lecture.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.MessageState.Written">
      <summary>Le message a été écrit.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageVersion">
      <summary>Spécifie les versions de SOAP et WS-Addressing associées à un message et son échange.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Addressing">
      <summary>Obtient ou définit la version de WS-Addressing qui est associée à la version actuelle du message.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> qui est associée à la version actuelle du message.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion)">
      <summary>Crée un objet de la version du message en utilisant WS-Addressing 1.0 et une version SOAP spécifiée.</summary>
      <returns>Objet <see cref="T:System.ServiceModel.Channels.MessageVersion" /> utilisant la version spécifiée de SOAP et WS-Addressing 1.0.</returns>
      <param name="envelopeVersion">
        <see cref="T:System.ServiceModel.EnvelopeVersion" /> qui indique la version SOAP à utiliser.</param>
      <exception cref="T:System.ArgumentNullException">Le <paramref name="envelopeVersion" /> est null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion,System.ServiceModel.Channels.AddressingVersion)">
      <summary>Crée un objet de la version du message avec les versions SOAP et WS-Addressing spécifiées.</summary>
      <returns>Objet <see cref="T:System.ServiceModel.Channels.MessageVersion" /> utilisant les versions spécifiées de WS-Addressing et SOAP.</returns>
      <param name="envelopeVersion">
        <see cref="T:System.ServiceModel.EnvelopeVersion" /> qui indique la version SOAP.</param>
      <param name="addressingVersion">
        <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> qui indique la version WS-Addressing.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="envelopeVersion" /> ou <paramref name="addressingVersion" /> est null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Default">
      <summary>Obtient la version du message par défaut utilisée par Windows Communication Foundation (WCF).</summary>
      <returns>Objet <see cref="T:System.ServiceModel.Channels.MessageVersion" /> qui utilise WS-Addressing 1.0 et SOAP 1.2.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Envelope">
      <summary>Obtient la version SOAP associée à la version actuelle du message.</summary>
      <returns>
        <see cref="T:System.ServiceModel.EnvelopeVersion" /> qui est associée à la version actuelle du message.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageVersion.Equals(System.Object)">
      <summary>Retourne une valeur qui indique si la version actuelle du message équivaut à un objet spécifié.</summary>
      <returns>true si l'objet spécifié est égal à l'objet <see cref="T:System.ServiceModel.Channels.MessageVersion" /> en cours ; sinon, false.</returns>
      <param name="obj">Objet <see cref="T:System.Object" /> à comparer avec la version actuelle du message.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageVersion.GetHashCode">
      <summary>Obtient un code de hachage pour la version actuelle du message.</summary>
      <returns>Code de hachage unique pour la <see cref="T:System.ServiceModel.Channels.MessageVersion" /> actuelle.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.None">
      <summary>Obtient la version du message qui n'utilise pas SOAP ni WS-Addressing.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageVersion" /> qui n'utilise pas SOAP ou WS-Addressing.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Soap11">
      <summary>Obtient la version du message utilisant SOAP 1.1.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageVersion" /> utilisant SOAP 1.1 mais aucune version de WS-Addressing.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Soap12WSAddressing10">
      <summary>Obtient la version du message utilisant WS-Addressing 1.0 et SOAP 1.2.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageVersion" /> utilisant la version de WS-Addressing 1.0 et SOAP 1.2.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageVersion.ToString">
      <summary>Retourne la représentation sous forme de chaîne de la version de message actuelle.</summary>
      <returns>Représentation sous forme de chaîne de la version actuelle du message.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.RequestContext">
      <summary>Fournit une réponse mise en correspondance avec une demande entrante.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.RequestContext" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Abort">
      <summary>En cas de substitution dans une classe dérivée, abandonne le traitement de la demande associée au contexte. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>En cas de substitution dans une classe dérivée, démarre une opération asynchrone pour répondre à la demande associée au contexte actuel.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui référence l'opération de réponse asynchrone.</returns>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> entrant qui contient la demande.</param>
      <param name="callback">Délégué <see cref="T:System.AsyncCallback" /> qui reçoit la notification de la fin de l'opération de réponse asynchrone.</param>
      <param name="state">Objet, spécifié par l'application, qui contient les informations d'état associées à l'opération de réponse asynchrone.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>En cas de substitution dans une classe dérivée, démarre une opération asynchrone pour répondre à la demande associée au contexte actuel dans un intervalle donné.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui référence l'opération de réponse asynchrone.</returns>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> entrant qui contient la demande.</param>
      <param name="timeout">
        <see cref="T:System.Timespan" /> qui spécifie la durée d'attente de la réponse à une demande disponible.</param>
      <param name="callback">Délégué <see cref="T:System.AsyncCallback" /> qui reçoit la notification de la fin de l'opération de réponse asynchrone.</param>
      <param name="state">Objet, spécifié par l'application, qui contient les informations d'état associées à l'opération de réponse asynchrone.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Close">
      <summary>En cas de substitution dans une classe dérivée, ferme l'opération qui répond au contexte de demande associé au contexte actuel.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Close(System.TimeSpan)">
      <summary>En cas de substitution dans une classe dérivée, ferme l'opération qui répond au contexte de demande associé au contexte actuel dans un intervalle donné.</summary>
      <param name="timeout">
        <see cref="T:System.Timespan" /> qui spécifie l'intervalle au cours duquel l'opération de réponse associée au contexte actuel doit se fermer.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Dispose(System.Boolean)">
      <summary>Libère les ressources associées au contexte.</summary>
      <param name="disposing">true pour libérer les ressources managées et non managées ; false pour libérer uniquement les ressources non managées. </param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.EndReply(System.IAsyncResult)">
      <summary>Lors d'une substitution dans une classe dérivée, termine une opération asynchrone pour répondre à un message de demande.</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> retourné par un appel de l'une des méthodes <see cref="Overload:System.ServiceModel.Channels.RequestContext.BeginReply" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message)">
      <summary>En cas de substitution dans une classe dérivée, répond à un message de demande.</summary>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> entrant qui contient la demande.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <summary>En cas de substitution dans une classe dérivée, répond à un message de demande dans un intervalle spécifié.</summary>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> entrant qui contient la demande.</param>
      <param name="timeout">
        <see cref="T:System.Timespan" /> qui spécifie la durée d'attente de la réponse à une demande.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.RequestContext.RequestMessage">
      <summary>En cas de substitution dans une classe dérivée, obtient le message qui contient la demande.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Message" /> qui contient la demande.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.System#IDisposable#Dispose">
      <summary>Libère les ressources managées et non managées associées au contexte.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement">
      <summary>Élément de liaison qui spécifie l'encodage de caractères et la version des messages texte SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.#ctor(System.ServiceModel.Channels.MessageVersion,System.Text.Encoding)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement" /> avec l'encodage et la version de message spécifiés.</summary>
      <param name="messageVersion">Objet <see cref="T:System.ServiceModel.Channels.MessageVersion" /> utilisé pour la version du message.</param>
      <param name="writeEncoding">Objet <see cref="T:System.Text.Encoding" /> utilisé pour mettre en forme les caractères de message.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="messageVersion" /> ou <paramref name="writeEncoding" /> est null.</exception>
      <exception cref="T:System.ArgumentException">La valeur <paramref name="writeEncoding" /> n'est pas valide.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Génère la pile de fabriques de canal sur le client qui crée un type de canal spécifié pour un contexte spécifié.</summary>
      <returns>Objet <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> de type <paramref name="TChannel" /> pour le contexte spécifié.</returns>
      <param name="context">Objet <see cref="T:System.ServiceModel.Channels.BindingContext" /> pour le canal.</param>
      <typeparam name="TChannel">Le type de canal généré par la fabrique de canal.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.Clone">
      <summary>Crée un objet <see cref="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement" /> initialisé à partir de l'objet actuel.</summary>
      <returns>Objet <see cref="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement" /> dont les valeurs de propriété sont égales à celles de l'élément actuel.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.CreateMessageEncoderFactory">
      <summary>Crée une fabrique pour les encodeurs de messages texte, qui s'appuie sur la version de message et l'encodage de caractères spécifiés par l'élément de liaison d'encodage actif.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" /> que cette fabrique crée.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Retourne un objet typé demandé (s'il existe) à partir de la couche appropriée de la pile des éléments de liaison.</summary>
      <returns>L'objet typé <paramref name="T" /> demandé s'il existe ; null sinon.</returns>
      <param name="context">Objet <see cref="T:System.ServiceModel.Channels.BindingContext" /> pour l'élément de liaison.</param>
      <typeparam name="T">L'objet typé pour lequel la méthode effectue une requête.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.TextMessageEncodingBindingElement.MessageVersion">
      <summary>Obtient ou définit le message SOAP et les versions WS-Addressing qui sont utilisés pour mettre en forme le message texte.</summary>
      <returns>Objet <see cref="T:System.ServiceModel.Channels.MessageVersion" /> utilisé pour mettre en forme des messages.La valeur par défaut est <see cref="P:System.ServiceModel.Channels.MessageVersion.Soap12WSAddressing10" />.</returns>
      <exception cref="T:System.ArgumentNullException">La valeur est null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.TextMessageEncodingBindingElement.ReaderQuotas">
      <summary>Obtient ou définit des contraintes sur la complexité des messages SOAP qui peuvent être traités par les points de terminaison configurés avec cette liaison.</summary>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> qui spécifie les contraintes de complexité des messages SOAP échangés.Les valeurs par défaut de ces contraintes sont fournies dans la section Notes suivante.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.TextMessageEncodingBindingElement.WriteEncoding">
      <summary>Obtient ou définit l'encodage utilisé pour mettre en forme les caractères contenus dans le message texte.</summary>
      <returns>Objet <see cref="T:System.Text.Encoding" /> utilisé pour mettre en forme les caractères du message texte.L'encodage texte par défaut est l'encodage UTF-8.</returns>
      <exception cref="T:System.ArgumentNullException">La valeur est null.</exception>
      <exception cref="T:System.ArgumentException">La valeur <paramref name="writeEncoding" /> n'est pas valide.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.TransportBindingElement">
      <summary>Classe de base abstract qui représente un élément de liaison de transport.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportBindingElement.#ctor">
      <summary>Crée une instance de cette classe.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportBindingElement.#ctor(System.ServiceModel.Channels.TransportBindingElement)">
      <summary>Crée une instance de cette classe à partir d'une instance existante.</summary>
      <param name="elementToBeCloned">
        <see cref="T:System.ServiceModel.Channels.TransportBindingElement" /> à cloner. </param>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Obtient une propriété à partir de la <see cref="T:System.ServiceModel.Channels.BindingContext" /> spécifiée.</summary>
      <returns>Propriété de la <see cref="T:System.ServiceModel.Channels.BindingContext" /> spécifiée.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" />
      </param>
      <typeparam name="T">Propriété à obtenir.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.TransportBindingElement.ManualAddressing">
      <summary>Obtient ou définit une valeur qui indique si l'adressage manuel du message est requis.</summary>
      <returns>true si l'adressage manuel du message est requis ; sinon false.La valeur par défaut est false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize">
      <summary>Obtient et définit la taille maximale du message autorisée, en octets, qui peut être reçue.</summary>
      <returns>La taille de message autorisée maximale qui peut être reçue.La valeur par défaut est 65,536 octets.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.TransportBindingElement.Scheme">
      <summary>Obtient le schéma d'URI pour le transport.</summary>
      <returns>Retourne le schéma d'URI pour le transport, qui varie selon la classe dérivée qui implémente cette méthode.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.ClientCredentials">
      <summary>Permet à l'utilisateur de configurer les informations d'identification du client et du service, ainsi que les paramètres d'authentification des informations d'identification du service à utiliser du côté client de la communication.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Description.ClientCredentials" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.#ctor(System.ServiceModel.Description.ClientCredentials)">
      <summary>Constructeur de copie. </summary>
      <param name="other">
        <see cref="T:System.ServiceModel.Description.ClientCredentials" />Toutes les propriétés de la nouvelle instance construite reflètent les valeurs de ce paramètre.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <summary>Applique le comportement client spécifié au point de terminaison.</summary>
      <param name="serviceEndpoint">Point de terminaison auquel le comportement client spécifié doit être appliqué.</param>
      <param name="behavior">Comportement client à appliquer au point de terminaison spécifié.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceEndpoint" /> ou <paramref name=" behavior" /> est null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.Clone">
      <summary>Crée une copie de cette instance <see cref="T:System.ServiceModel.Description.ClientCredentials" />.</summary>
      <returns>Instance de <see cref="T:System.ServiceModel.Description.ClientCredentials" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.CloneCore">
      <summary>Crée une copie de cette instance <see cref="T:System.ServiceModel.Description.ClientCredentials" />.</summary>
      <returns>Instance de <see cref="T:System.ServiceModel.Description.ClientCredentials" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ClientCredentials.HttpDigest">
      <summary>Obtient les informations d'identification HTTP Digest actuelles.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Security.HttpDigestClientCredential" /> qui représente les informations d'identification que le client utilise pour s'authentifier auprès du service lorsque la méthode d'authentification HTTP Digest est choisie. </returns>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.System#ServiceModel#Description#IEndpointBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Ajoute cette instance de cette classe à une collection de paramètres de liaison.</summary>
      <param name="serviceEndpoint">
        <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> à ajouter.</param>
      <param name="bindingParameters">Collection de paramètres de liaison.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.System#ServiceModel#Description#IEndpointBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
      <summary>Implémente une modification ou une extension du service sur l'intégralité du point de terminaison.</summary>
      <param name="serviceEndpoint">Point de terminaison qui expose le contrat.</param>
      <param name="endpointDispatcher">Répartiteur de points de terminaison à modifier ou étendre.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.System#ServiceModel#Description#IEndpointBehavior#Validate(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Réservé à une utilisation future.</summary>
      <param name="serviceEndpoint">
        <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> à valider.</param>
    </member>
    <member name="P:System.ServiceModel.Description.ClientCredentials.UserName">
      <summary>Obtient un objet d'informations d'identification que vous pouvez utiliser pour définir le nom d'utilisateur et le mot de passe dont le client se sert pour s'authentifier auprès du service. </summary>
      <returns>
        <see cref="T:System.ServiceModel.Security.UserNamePasswordClientCredential" /> qui représente les informations d'identification de nom d'utilisateur actuelles.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ClientCredentials.Windows">
      <summary>Obtient un objet utilisé pour déterminer les informations d'identification Windows dont le client se sert pour s'authentifier auprès du service. </summary>
      <returns>
        <see cref="T:System.ServiceModel.Security.WindowsClientCredential" /> qui représente les informations d'identification Windows actuelles.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.ContractDescription">
      <summary>Décrit un contrat Windows Communication Foundation (WCF) qui spécifie ce qu'un point de terminaison communique au monde extérieur.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ContractDescription.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Description.ContractDescription" /> avec un nom spécifié.</summary>
      <param name="name">Nom du contrat.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="name" /> est vide.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.ContractDescription.#ctor(System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Description.ContractDescription" /> avec un nom qualifié par un espace de noms spécifié.</summary>
      <param name="name">Nom du contrat.</param>
      <param name="ns">Espace de noms qui contient le nom du contrat.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="name" /> est vide.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.CallbackContractType">
      <summary>Obtient ou définit le type de contrat de rappel que spécifie la description du contrat.</summary>
      <returns>
        <see cref="T:System.Type" /> de contrat de rappel que spécifie la description du contrat.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.ConfigurationName">
      <summary>Obtient ou définit le nom de configuration pour la description du contrat.</summary>
      <returns>Nom de configuration pour le contrat.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.ContractBehaviors">
      <summary>Obtient la collection de comportements pour le contrat.</summary>
      <returns>Collection de comportements pour le contrat.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.ContractType">
      <summary>Obtient ou définit le type du contrat que spécifie la description du contrat.</summary>
      <returns>
        <see cref="T:System.Type" /> de contrat que spécifie la description du contrat.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.Name">
      <summary>Obtient ou définit le nom du contrat.</summary>
      <returns>Nom de la description du contrat.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.Namespace">
      <summary>Obtient ou définit l'espace de noms pour le contrat.</summary>
      <returns>Espace de noms du contrat.</returns>
      <exception cref="T:System.ArgumentNullException">La valeur définie est null.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.Operations">
      <summary>Obtient la collection de descriptions d'opérations associées au contrat.</summary>
      <returns>La <see cref="T:System.ServiceModel.Description.OperationDescriptionCollection" /> qui contient les descriptions d'opérations associées à la description du contrat.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.DataContractSerializerOperationBehavior">
      <summary>Représente le comportement à l'exécution de <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerOperationBehavior.#ctor(System.ServiceModel.Description.OperationDescription)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Description.DataContractSerializerOperationBehavior" /> avec la description de l'opération spécifiée.</summary>
      <param name="operation">
        <see cref="T:System.ServiceModel.Description.OperationDescription" /> qui représente l'opération.</param>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerOperationBehavior.#ctor(System.ServiceModel.Description.OperationDescription,System.ServiceModel.DataContractFormatAttribute)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Description.DataContractSerializerOperationBehavior" /> avec la description de l'opération spécifiée et le format de contrat des données.</summary>
      <param name="operation">
        <see cref="T:System.ServiceModel.Description.OperationDescription" /> qui représente l'opération.</param>
      <param name="dataContractFormatAttribute">
        <see cref="T:System.ServiceModel.DataContractFormatAttribute" /> utilisé pour contrôler le processus de sérialisation.</param>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerOperationBehavior.CreateSerializer(System.Type,System.String,System.String,System.Collections.Generic.IList{System.Type})">
      <summary>Crée une instance d'une classe qui hérite de <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> pour les processus de sérialisation et de désérialisation.</summary>
      <returns>Instance d'une classe qui hérite de la classe <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />. </returns>
      <param name="type">
        <see cref="T:System.Type" /> pour lequel le sérialiseur doit être créé.</param>
      <param name="name">Nom du type généré.</param>
      <param name="ns">Espace de noms du type généré.</param>
      <param name="knownTypes">
        <see cref="T:System.Collections.Generic.IList`1" /> de <see cref="T:System.Type" /> qui contient les types connus.</param>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerOperationBehavior.CreateSerializer(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IList{System.Type})">
      <summary>Crée une instance d'une classe qui hérite de <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> pour les processus de sérialisation et de désérialisation avec un <see cref="T:System.Xml.XmlDictionaryString" /> qui contient l'espace de noms.</summary>
      <returns>Instance d'une classe qui hérite de la classe <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />. </returns>
      <param name="type">Type à sérialiser ou à désérialiser.</param>
      <param name="name">Nom du type sérialisé.</param>
      <param name="ns">
        <see cref="T:System.Xml.XmlDictionaryString" /> qui contient l'espace de noms du type sérialisé.</param>
      <param name="knownTypes">
        <see cref="T:System.Collections.Generic.IList`1" /> de <see cref="T:System.Type" /> qui contient les types connus.</param>
    </member>
    <member name="P:System.ServiceModel.Description.DataContractSerializerOperationBehavior.DataContractFormatAttribute">
      <summary>Obtient la classe <see cref="T:System.ServiceModel.DataContractFormatAttribute" /> associée à l'opération.</summary>
      <returns>
        <see cref="T:System.ServiceModel.DataContractFormatAttribute" /> associé à l'opération.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.DataContractSerializerOperationBehavior.DataContractResolver">
      <summary>Obtient ou définit une implémentation du <see cref="T:System.Runtime.Serialization.DataContractResolver" /> utilisé pour mapper dynamiquement les types pendant les processus de sérialisation et de désérialisation. </summary>
      <returns>Type :  <see cref="T:System.Runtime.Serialization.DataContractResolver" />Classe qui mappe un type xsi:type à un type de contrat de données répertorié.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.DataContractSerializerOperationBehavior.MaxItemsInObjectGraph">
      <summary>Obtient ou définit le nombre maximal d'éléments à sérialiser ou désérialiser dans le graphique d'objets.</summary>
      <returns>Nombre maximal d'éléments à sérialiser ou désérialiser dans le graphique d'objets.La valeur par défaut est <see cref="F:System.Int32.MaxValue" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerOperationBehavior.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Ajoute une collection de paramètres au comportement. </summary>
      <param name="description">
        <see cref="T:System.ServiceModel.Description.OperationDescription" /> auquel les paramètres doivent être ajoutés.</param>
      <param name="parameters">
        <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> qui contient les paramètres à ajouter.</param>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerOperationBehavior.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)">
      <summary>Attache un comportement client à l'opération.</summary>
      <param name="description">
        <see cref="T:System.ServiceModel.Description.OperationDescription" /> qui représente l'opération.</param>
      <param name="proxy">
        <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /> qui représente un client.</param>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerOperationBehavior.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)">
      <summary>Applique le comportement à l'opération.</summary>
      <param name="description">
        <see cref="T:System.ServiceModel.Description.OperationDescription" /> qui représente l'opération.</param>
      <param name="dispatch">
        <see cref="T:System.ServiceModel.Dispatcher.DispatchOperation" /> auquel le comportement doit être attaché.</param>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerOperationBehavior.System#ServiceModel#Description#IOperationBehavior#Validate(System.ServiceModel.Description.OperationDescription)">
      <summary>Valide l'opération.</summary>
      <param name="description">
        <see cref="T:System.ServiceModel.Description.OperationDescription" /> qui représente l'opération à valider.</param>
    </member>
    <member name="T:System.ServiceModel.Description.FaultDescription">
      <summary>Représente une erreur SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.FaultDescription.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Description.FaultDescription" /> à l'aide de la valeur d'action spécifiée.</summary>
      <param name="action">Action du message d'erreur SOAP.</param>
    </member>
    <member name="P:System.ServiceModel.Description.FaultDescription.Action">
      <summary>Valeur de l'action du message d'erreur SOAP.</summary>
      <returns>Action de l'erreur SOAP.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.FaultDescription.DetailType">
      <summary>Type du détail de l'erreur SOAP.</summary>
      <returns>Type de l'objet de détail sérialisable.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.FaultDescription.Name">
      <summary>Obtient ou définit le nom de l'erreur SOAP.</summary>
      <returns>Nom de l'erreur SOAP.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.FaultDescription.Namespace">
      <summary>Obtient ou définit l'espace de noms de l'erreur SOAP.</summary>
      <returns>Espace de noms de l'erreur SOAP.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.FaultDescriptionCollection">
      <summary>Représente une collection d'objets <see cref="T:System.ServiceModel.Description.FaultDescription" /> que vous pouvez utiliser pour obtenir des informations sur les erreurs SOAP d'un contrat.</summary>
    </member>
    <member name="T:System.ServiceModel.Description.IContractBehavior">
      <summary>Implémente des méthodes qui permettent d'étendre un comportement d'exécution pour un contrat, que ce soit pour une application cliente ou de service.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.IContractBehavior.AddBindingParameters(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Configure tous les éléments de liaison pour prendre en charge le comportement de contrat.</summary>
      <param name="contractDescription">Description de contrat à modifier.</param>
      <param name="endpoint">Point de terminaison à modifier.</param>
      <param name="bindingParameters">Objets que requièrent les éléments de liaison pour prendre en charge le comportement.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <summary>Implémente une modification ou une extension du client sur l'intégralité d'un contrat.</summary>
      <param name="contractDescription">Description de contrat auquel l'extension est destinée.</param>
      <param name="endpoint">Point de terminaison.</param>
      <param name="clientRuntime">Exécution du client.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)">
      <summary>Implémente une modification ou une extension du client sur l'intégralité d'un contrat.</summary>
      <param name="contractDescription">Description de contrat à modifier.</param>
      <param name="endpoint">Point de terminaison qui expose le contrat.</param>
      <param name="dispatchRuntime">Exécution de répartiteur qui contrôle l'exécution de service.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IContractBehavior.Validate(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Effectuez une implémentation pour confirmer que le contrat et le point de terminaison peuvent prendre en charge le contrat ou le comportement.</summary>
      <param name="contractDescription">Contrat à valider.</param>
      <param name="endpoint">Point de terminaison à valider.</param>
    </member>
    <member name="T:System.ServiceModel.Description.IEndpointBehavior">
      <summary>Implémente des méthodes qui permettent d'étendre un comportement d'exécution pour un point de terminaison, que ce soit pour une application cliente ou de service.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Effectuez une implémentation pour passer des données au moment de l'exécution à des liaisons afin de prendre en charge un comportement personnalisé.</summary>
      <param name="endpoint">Point de terminaison à modifier.</param>
      <param name="bindingParameters">Objets que requièrent les éléments de liaison pour prendre en charge le comportement.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <summary>Implémente une modification ou une extension du client sur l'intégralité d'un point de terminaison.</summary>
      <param name="endpoint">Point de terminaison à personnaliser.</param>
      <param name="clientRuntime">Exécution du client à personnaliser.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
      <summary>Implémente une modification ou une extension du service sur l'intégralité du point de terminaison.</summary>
      <param name="endpoint">Point de terminaison qui expose le contrat.</param>
      <param name="endpointDispatcher">Répartiteur de points de terminaison à modifier ou étendre.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IEndpointBehavior.Validate(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Effectuez une implémentation pour confirmer que le point de terminaison répond à certains critères prévus.</summary>
      <param name="endpoint">Point de terminaison à valider.</param>
    </member>
    <member name="T:System.ServiceModel.Description.IOperationBehavior">
      <summary>Implémente des méthodes qui permettent d'étendre un comportement d'exécution pour une opération, que ce soit pour une application cliente ou de service.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Effectuez une implémentation pour passer des données au moment de l'exécution à des liaisons afin de prendre en charge un comportement personnalisé.</summary>
      <param name="operationDescription">Opération en cours d'examen.Utilisez-la à titre d'examen uniquement.Si la description d'opération est modifiée, les résultats ne sont pas définis.</param>
      <param name="bindingParameters">Collection d'objets que les éléments de liaison requièrent pour prendre en charge le comportement.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)">
      <summary>Implémente une modification ou une extension du client sur l'intégralité d'une opération.</summary>
      <param name="operationDescription">Opération en cours d'examen.Utilisez-la à titre d'examen uniquement.Si la description d'opération est modifiée, les résultats ne sont pas définis.</param>
      <param name="clientOperation">Objet d'exécution qui expose des propriétés de personnalisation pour l'opération décrite par <paramref name="operationDescription" />.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)">
      <summary>Implémente une modification ou une extension du client sur l'intégralité d'une opération.</summary>
      <param name="operationDescription">Opération en cours d'examen.Utilisez-la à titre d'examen uniquement.Si la description d'opération est modifiée, les résultats ne sont pas définis.</param>
      <param name="dispatchOperation">Objet d'exécution qui expose des propriétés de personnalisation pour l'opération décrite par <paramref name="operationDescription" />.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IOperationBehavior.Validate(System.ServiceModel.Description.OperationDescription)">
      <summary>Effectuez une implémentation pour confirmer que l'opération répond à certains critères prévus.</summary>
      <param name="operationDescription">Opération en cours d'examen.Utilisez-la à titre d'examen uniquement.Si la description d'opération est modifiée, les résultats ne sont pas définis.</param>
    </member>
    <member name="T:System.ServiceModel.Description.MessageBodyDescription">
      <summary>Représente le corps d'un message SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessageBodyDescription.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Description.MessageBodyDescription" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Description.MessageBodyDescription.Parts">
      <summary>Obtient les parties du corps du message SOAP.</summary>
      <returns>Parties du corps que vous pouvez inspecter ou modifier.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageBodyDescription.ReturnValue">
      <summary>Obtient ou définit la partie du message SOAP qui contient la valeur de retour.</summary>
      <returns>Valeur de retour (le cas échéant).</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageBodyDescription.WrapperName">
      <summary>Obtient ou définit le nom de l'élément wrapper à l'intérieur de l'élément de corps SOAP (le cas échéant).</summary>
      <returns>Élément wrapper (le cas échéant).</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageBodyDescription.WrapperNamespace">
      <summary>Obtient ou définit l'espace de noms de l'élément wrapper dans le corps SOAP (le cas échéant).</summary>
      <returns>Espace de noms de l'élément wrapper (le cas échéant).</returns>
    </member>
    <member name="T:System.ServiceModel.Description.MessageDescription">
      <summary>Représente la description d'un message.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessageDescription.#ctor(System.String,System.ServiceModel.Description.MessageDirection)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Description.MessageDescription" /> avec une action et une direction spécifiées.</summary>
      <param name="action">Paramètre d'action du message SOAP qui identifie l'objectif du message.</param>
      <param name="direction">
        <see cref="F:System.ServiceModel.Description.MessageDirection.Input" /> si le message est entrant ou <see cref="F:System.ServiceModel.Description.MessageDirection.Output" /> si le message est sortant.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">La <paramref name="direction" /> n'est ni <see cref="F:System.ServiceModel.Description.MessageDirection.Input" /> ni <see cref="F:System.ServiceModel.Description.MessageDirection.Output" />.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.Action">
      <summary>Obtient ou définit le paramètre d'action du message SOAP qui identifie l'objectif du message.</summary>
      <returns>
        <see cref="T:System.String" /> qui contient l'URI action.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.Body">
      <summary>Obtient le corps du message SOAP.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.MessagePartDescriptionCollection" /> qui contient le corps du message.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.Direction">
      <summary>Obtient la direction qui indique si le message est entrant ou sortant.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.MessageDirection" /> qui indique si le message entre dans le service ou s'il en sort.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.Headers">
      <summary>Obtient la description des en-têtes du message SOAP.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.MessageHeaderDescriptionCollection" /> qui contient les descriptions des en-têtes du message SOAP.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.MessageType">
      <summary>Obtient ou définit un type qui identifie le type du contrat de message.</summary>
      <returns>
        <see cref="T:System.Type" /> qui identifie le type de contrat de message.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.Properties">
      <summary>Obtient une description des propriétés du message SOAP.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.MessagePropertyDescriptionCollection" /> qui contient les descriptions des propriétés du message SOAP.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.MessageDescriptionCollection">
      <summary>Fournit une collection qui est utilisée pour stocker des descriptions des messages qui composent une opération qui appartient à un contrat.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessageDescriptionCollection.Find(System.String)">
      <summary>Recherche et retourne la première description de message dans la collection d'un message avec une action spécifiée.</summary>
      <returns>Première <see cref="T:System.ServiceModel.Description.MessageDescription" /> de la collection dont le message a les valeurs <paramref name="action" /> et null spécifiées, si aucune <paramref name="action" /> correspondante n'est trouvée.</returns>
      <param name="action">Action du message recherché.</param>
    </member>
    <member name="M:System.ServiceModel.Description.MessageDescriptionCollection.FindAll(System.String)">
      <summary>Recherche et retourne toutes les descriptions de message dans une collection dont les messages disposent d'une action spécifiée.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.MessageDescriptionCollection" /> qui contient les descriptions de message de la collection actuelle dont les messages disposent de l'<paramref name="action" /> spécifiée.Si aucun objet <see cref="T:System.ServiceModel.Description.MessageDescription" /> correspondant n'est trouvé, une collection vide est alors retournée.</returns>
      <param name="action">Action des messages recherchés.</param>
    </member>
    <member name="T:System.ServiceModel.Description.MessageDirection">
      <summary>Spécifie la direction du message.</summary>
    </member>
    <member name="F:System.ServiceModel.Description.MessageDirection.Input">
      <summary>Le message est entrant.</summary>
    </member>
    <member name="F:System.ServiceModel.Description.MessageDirection.Output">
      <summary>Le message est sortant.</summary>
    </member>
    <member name="T:System.ServiceModel.Description.MessageHeaderDescription">
      <summary>Représente un en-tête de message SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessageHeaderDescription.#ctor(System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Description.MessageHeaderDescription" /> avec un nom qualifié spécifié.</summary>
      <param name="name">Nom de l'en-tête de message.</param>
      <param name="ns">Espace de noms de l'en-tête de message.</param>
    </member>
    <member name="P:System.ServiceModel.Description.MessageHeaderDescription.Actor">
      <summary>Obtient ou définit le destinataire de l'en-tête de message.</summary>
      <returns>URI qui indique le destinataire de l'en-tête de message.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageHeaderDescription.MustUnderstand">
      <summary>Obtient ou définit une valeur indiquant si l'en-tête doit être compris en fonction des spécifications SOAP 1.1 et 1.2.</summary>
      <returns>true si le traitement de l'en-tête de message est obligatoire ; sinon, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageHeaderDescription.Relay">
      <summary>Obtient une valeur qui indique si l'en-tête doit être relayé.</summary>
      <returns>true si l'en-tête de message peut être relayé ; sinon, false.La valeur par défaut est false en fonction de la spécification SOAP 1.1.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageHeaderDescription.TypedHeader">
      <summary>Obtient ou définit une valeur qui indique si l'en-tête de message est un en-tête de contrat de message.</summary>
      <returns>true si l'en-tête de message est un en-tête de contrat de message ; sinon, false.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.MessageHeaderDescriptionCollection">
      <summary>Représente une collection d'objets <see cref="T:System.ServiceModel.Description.MessageHeaderDescription" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessageHeaderDescriptionCollection.GetKeyForItem(System.ServiceModel.Description.MessageHeaderDescription)">
      <summary>En cas d'appel par une classe dérivée, retourne le <see cref="T:System.Xml.XmlQualifiedName" /> de l'en-tête de message.</summary>
      <returns>
        <see cref="T:System.Xml.XmlQualifiedName" /> de l'en-tête de message.</returns>
      <param name="item">
        <see cref="T:System.ServiceModel.Description.MessageHeaderDescription" /> à rechercher.</param>
    </member>
    <member name="T:System.ServiceModel.Description.MessagePartDescription">
      <summary>Représente une description de partie de message SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessagePartDescription.#ctor(System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Description.MessagePartDescription" />.  </summary>
      <param name="name">Nom XML de la partie de message.</param>
      <param name="ns">Espace de noms XML de la partie de message.</param>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.Index">
      <summary>Obtient ou définit l'index de la partie de message.</summary>
      <returns>Index de la partie de message.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.MemberInfo">
      <summary>Obtient ou définit les informations de membre de la partie de message.</summary>
      <returns>Informations de membre de cette partie de message.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.Multiple">
      <summary>Obtient ou définit une valeur qui contrôle si la partie de message peut se produire plusieurs fois dans le message.</summary>
      <returns>true s'il peut y en avoir plusieurs ; sinon, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.Name">
      <summary>Obtient ou définit le nom de la partie de message.</summary>
      <returns>Nom de la partie de message.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.Namespace">
      <summary>Obtient ou définit l'espace de noms de la partie de message.</summary>
      <returns>Espace de noms de la partie de message.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.Type">
      <summary>Obtient ou définit le type de la partie de message.</summary>
      <returns>Type de la partie de message.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.MessagePartDescriptionCollection">
      <summary>Représente une collection d'objets <see cref="T:System.ServiceModel.Description.MessagePartDescription" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessagePartDescriptionCollection.GetKeyForItem(System.ServiceModel.Description.MessagePartDescription)">
      <summary>En cas d'appel par une classe dérivée, retourne le <see cref="T:System.Xml.XmlQualifiedName" /> de la <see cref="T:System.ServiceModel.Description.MessagePartDescription" />.</summary>
      <returns>
        <see cref="T:System.Xml.XmlQualifiedName" /> de <see cref="T:System.ServiceModel.Description.MessagePartDescription" />.</returns>
      <param name="item">
        <see cref="T:System.ServiceModel.Description.MessagePartDescription" /> à rechercher.</param>
    </member>
    <member name="T:System.ServiceModel.Description.MessagePropertyDescription">
      <summary>Représente une propriété de message spécifiée par l'<see cref="T:System.ServiceModel.MessagePropertyAttribute" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessagePropertyDescription.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Description.MessagePropertyDescription" />.  </summary>
      <param name="name">le nom de la propriété ;</param>
    </member>
    <member name="T:System.ServiceModel.Description.MessagePropertyDescriptionCollection">
      <summary>Représente une collection d'objets <see cref="T:System.ServiceModel.Description.MessagePropertyDescription" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessagePropertyDescriptionCollection.GetKeyForItem(System.ServiceModel.Description.MessagePropertyDescription)">
      <summary>Retourne un <see cref="T:System.Xml.XmlQualifiedName" /> pour une <see cref="T:System.ServiceModel.Description.MessagePropertyDescription" />.</summary>
      <returns>
        <see cref="T:System.Xml.XmlQualifiedName" /> de <see cref="T:System.ServiceModel.Description.MessagePropertyDescription" />.</returns>
      <param name="item">
        <see cref="T:System.ServiceModel.Description.MessagePropertyDescription" /> à rechercher.</param>
    </member>
    <member name="T:System.ServiceModel.Description.OperationDescription">
      <summary>Représente la description d'une opération de contrat qui fournit une description des messages qui composent l'opération.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescription.#ctor(System.String,System.ServiceModel.Description.ContractDescription)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Description.OperationDescription" /> avec un nom et une description de contrat spécifiés.</summary>
      <param name="name">Nom de la description de l'opération.</param>
      <param name="declaringContract">
        <see cref="T:System.ServiceModel.Description.ContractDescription" /> permettant d'initialiser la description de l'opération.</param>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.DeclaringContract">
      <summary>Obtient ou définit le contrat auquel appartient l'opération.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.ContractDescription" /> de l'opération.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.Faults">
      <summary>Obtient les descriptions des erreurs associées à la description d'opération.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.FaultDescriptionCollection" /> qui contient des informations sur les erreurs associées à la description d'opération.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.IsOneWay">
      <summary>Obtient ou définit une valeur qui indique si une opération retourne un message de réponse.</summary>
      <returns>true si cette méthode reçoit un message de demande et ne retourne aucun message de réponse ; sinon, false.La valeur par défaut est false.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.KnownTypes">
      <summary>Obtient les types connus associés à la description d'opération.</summary>
      <returns>Collection de types connus associés à la description d'opération.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.Messages">
      <summary>Obtient ou définit les descriptions des messages qui composent l'opération.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.MessageDescriptionCollection" /> qui contient des descriptions des messages qui composent l'opération.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.Name">
      <summary>Obtient ou définit le nom de la description d'opération.</summary>
      <returns>Nom de la description de l'opération.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.OperationBehaviors">
      <summary>Obtient le jeu de comportements de l'opération.</summary>
      <returns>Ensemble des comportements de l'opération.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.TaskMethod">
      <summary>Obtient ou définit la méthode utilisée pour l'opération.</summary>
      <returns>Méthode utilisée pour l'opération de tâche.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.OperationDescriptionCollection">
      <summary>Représente une collection qui contient des descriptions d'opérations.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescriptionCollection.Find(System.String)">
      <summary>Retourne une description d'opération avec un nom spécifié de la collection de descriptions d'opérations.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.OperationDescription" /> avec le nom spécifié.</returns>
      <param name="name">Nom de l'opération.</param>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescriptionCollection.FindAll(System.String)">
      <summary>Retourne une collection de toutes les descriptions d'opérations de la collection qui dispose du nom spécifié.</summary>
      <returns>
        <see cref="T:System.Collections.ObjectModel.Collection`1" /> de type <see cref="T:System.ServiceModel.Description.OperationDescription" /> qui contient les descriptions d'opérations avec le nom spécifié.</returns>
      <param name="name">Nom de l'opération.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> a la valeur null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescriptionCollection.InsertItem(System.Int32,System.ServiceModel.Description.OperationDescription)">
      <summary>Insère un élément dans la collection de descriptions d'opérations au niveau de l'index spécifié.</summary>
      <param name="index">Index de base zéro auquel <paramref name="item" /> doit être inséré.</param>
      <param name="item">
        <see cref="T:System.ServiceModel.Description.OperationDescription" /> à insérer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> a la valeur null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescriptionCollection.SetItem(System.Int32,System.ServiceModel.Description.OperationDescription)">
      <summary>Remplace l'élément de description d'opération de la collection au niveau de l'index spécifié.</summary>
      <param name="index">Index de base zéro auquel <paramref name="item" /> doit être inséré.</param>
      <param name="item">
        <see cref="T:System.ServiceModel.Description.OperationDescription" /> à définir.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> a la valeur null.</exception>
    </member>
    <member name="T:System.ServiceModel.Description.ServiceEndpoint">
      <summary>Représente le point de terminaison pour un service qui permet aux clients du service de rechercher et de communiquer avec celui-ci.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceEndpoint.#ctor(System.ServiceModel.Description.ContractDescription)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> pour un contrat spécifié.</summary>
      <param name="contract">
        <see cref="T:System.ServiceModel.Description.ContractDescription" /> pour le point de terminaison de service.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceEndpoint.#ctor(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> avec un contrat, une liaison et une adresse spécifiés.</summary>
      <param name="contract">
        <see cref="T:System.ServiceModel.Description.ContractDescription" /> pour le point de terminaison de service.</param>
      <param name="binding">
        <see cref="T:System.ServiceModel.Channels.Binding" /> qui spécifie comment le point de terminaison de service communique avec le monde.</param>
      <param name="address">
        <see cref="T:System.ServiceModel.EndpointAddress" /> pour le point de terminaison de service.</param>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceEndpoint.Address">
      <summary>Obtient ou définit l'adresse de point de terminaison pour le point de terminaison de service.</summary>
      <returns>
        <see cref="T:System.ServiceModel.EndpointAddress" /> qui spécifie l'emplacement du point de terminaison de service.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceEndpoint.Binding">
      <summary>Obtient ou définit la liaison pour le point de terminaison de service.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Binding" /> pour le point de terminaison de service.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceEndpoint.Contract">
      <summary>Obtient le contrat pour le point de terminaison de service.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.ContractDescription" /> qui spécifie le contrat pour le point de terminaison de service.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceEndpoint.EndpointBehaviors">
      <summary>Obtient le comportement des points de terminaison du service.</summary>
      <returns>Comportement des points de terminaison du service.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceEndpoint.Name">
      <summary>Obtient ou définit le nom du point de terminaison de service.</summary>
      <returns>Nom du point de terminaison de service.La valeur par défaut correspond à la concaténation du nom de la liaison et de celui de la description du contrat.Par exemple : <see cref="P:System.ServiceModel.Channels.Binding.Name" /> +'_'+ <see cref="P:System.ServiceModel.Description.ContractDescription.Name" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.ClientOperation">
      <summary>Utilisé pour modifier ou étendre le comportement d'exécution d'une opération de contrat spécifique dans un objet client ou un objet de canal client.Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ClientOperation.#ctor(System.ServiceModel.Dispatcher.ClientRuntime,System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /> à l'aide de l'<see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" />, du nom et des valeurs d'action spécifiés. </summary>
      <param name="parent">Objet <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" /> conteneur.</param>
      <param name="name">Nom de l'opération.</param>
      <param name="action">Action de l'opération.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ClientOperation.#ctor(System.ServiceModel.Dispatcher.ClientRuntime,System.String,System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /> à l'aide de l'<see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" />, du nom, de l'action et des valeurs d'action de réponse. </summary>
      <param name="parent">Objet <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" /> conteneur.</param>
      <param name="name">Nom de l'opération.</param>
      <param name="action">Action de l'opération.</param>
      <param name="replyAction">Action du message de réponse.</param>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.Action">
      <summary>Obtient l'action de l'opération.</summary>
      <returns>Action de l'opération.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.ClientParameterInspectors">
      <summary>Obtient une collection d'objets d'inspection de paramètre utilisés pour afficher ou modifier les paramètres avant ou à la suite d'un appel client.</summary>
      <returns>Collection d'objets d'inspecteur de paramètre utilisés pour afficher ou modifier les paramètres avant ou à la suite d'un appel client.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.DeserializeReply">
      <summary>Obtient ou définit une valeur qui indique si la valeur de propriété <see cref="P:System.ServiceModel.Dispatcher.ClientOperation.Formatter" /> est utilisée pour désérialiser le message de réponse.</summary>
      <returns>true si le type de retour n'est pas un <see cref="T:System.ServiceModel.Channels.Message" /> ; sinon, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.Formatter">
      <summary>Obtient ou définit le formateur qui sérialise les objets en messages et désérialise les messages en objets.</summary>
      <returns>Implémentation de <see cref="T:System.ServiceModel.Dispatcher.IClientMessageFormatter" /></returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.IsOneWay">
      <summary>Obtient ou définit une valeur qui indique si l'opération est une opération unidirectionnelle.</summary>
      <returns>true si le client indigo2 ne doit pas attendre de réponse ; false dans le cas contraire.La valeur par défaut est false.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.Name">
      <summary>Obtient le nom de l'opération.</summary>
      <returns>Nom de l'opération.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.Parent">
      <summary>Obtient l'objet <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" /> conteneur.</summary>
      <returns>Objet <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" /> conteneur.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.ReplyAction">
      <summary>Reçoit l'action du message de réponse pour cette opération.</summary>
      <returns>Action de la réponse.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.SerializeRequest">
      <summary>Obtient ou définit une valeur qui spécifie si l'objet <see cref="P:System.ServiceModel.Dispatcher.ClientOperation.Formatter" /> sérialise un message sortant.</summary>
      <returns>true si la propriété <see cref="P:System.ServiceModel.Dispatcher.ClientOperation.Formatter" /> sérialise les valeurs de retour en message de réponse ; sinon, false.La valeur par défaut est true.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.TaskMethod">
      <summary>Obtient ou définit la méthode associée à une tâche.</summary>
      <returns>Objet de <see cref="T:System.Reflection.MethodInfo" /> qui représente la méthode associée à une tâche.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.TaskTResult">
      <summary>Obtient ou définit le type du résultat de la méthode associée à une tâche.</summary>
      <returns>
        <see cref="T:System.Type" /> du résultat de la méthode qui est associée à une tâche.</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.ClientRuntime">
      <summary>Représente le point d'insertion pour les classes qui étendent les fonctionnalités des objets clients Windows Communication Foundation (WCF) pour tous les messages gérés par une application cliente.</summary>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ClientMessageInspectors">
      <summary>Obtient une collection d'objets d'inspecteur de message utilisés pour afficher ou modifier les messages d'une opération de service particulière.</summary>
      <returns>Collection d'objets d'inspecteur de message utilisés pour afficher ou modifier les messages d'une opération de service particulière.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ClientOperations">
      <summary>Obtient une collection d'objets d'opération du client utilisés pour attacher des objets extension qui inspectent ou modifient des messages et un comportement limités à une opération particulière.</summary>
      <returns>Collection d'objets d'opération du client utilisés pour attacher les objets d'extension qui inspectent ou modifient des messages et le comportement d'une opération de service particulière.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ContractClientType">
      <summary>Obtient ou définit le type de contrat associé à un client.</summary>
      <returns>L'objet <see cref="T:System.Type" /> qui représente le contrat associé à ce client.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ContractName">
      <summary>Obtient le nom du contrat associé à un client.</summary>
      <returns>Nom de contrat pour un client.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ContractNamespace">
      <summary>Obtient l'espace de noms du contrat associé à un client.</summary>
      <returns>L'espace de noms du contrat associé à un client.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ManualAddressing">
      <summary>Obtient ou définit une valeur qui indique si le client ajoute des en-têtes d'adressage aux messages de demande/réponse.</summary>
      <returns>true si le client n'ajoute pas d'en-tête d'adressage ; sinon, false.La valeur par défaut est false.Consultez la section Notes.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.MaxFaultSize">
      <summary>Obtient ou définit la taille d'erreur maximale.</summary>
      <returns>Entier représentant la taille d'erreur maximale.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.OperationSelector">
      <summary>Obtient ou définit une implémentation de <see cref="T:System.ServiceModel.Dispatcher.IClientOperationSelector" /> qui peut être utilisée pour sélectionner une <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" />.</summary>
      <returns>Objet <see cref="T:System.ServiceModel.Dispatcher.IClientOperationSelector" /> qui sélectionne une <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.UnhandledClientOperation">
      <summary>Obtient l'opération du client pour les méthodes qui n'ont pas de <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /> correspondant dans la collection <see cref="P:System.ServiceModel.Dispatcher.ClientRuntime.Operations" />.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /> qui représente la méthode à laquelle le contenu du message en cours est routé lorsque le sélecteur d'opération ne trouve pas d'opération qui corresponde au message.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.Via">
      <summary>Obtient ou définit l'adresse de transport utilisée pour envoyer des messages via le client.</summary>
      <returns>
        <see cref="T:System.Uri" /> qui est l'adresse de destination pour le transport.La valeur par défaut est la valeur <see cref="P:System.ServiceModel.EndpointAddress.Uri" /> du client.</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.DispatchOperation">
      <summary>Utilisé pour modifier ou étendre le comportement d'exécution d'une opération de service spécifique dans un point de terminaison de service.Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.DispatchOperation.#ctor(System.ServiceModel.Dispatcher.DispatchRuntime,System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Dispatcher.DispatchOperation" /> à l'aide de l'exécution de répartition, du nom et des valeurs d'action spécifiés.</summary>
      <param name="parent">Objet <see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" /> associé.</param>
      <param name="name">Nom de l'opération de répartition. Il est utilisé comme clé de la collection <see cref="P:System.ServiceModel.Dispatcher.DispatchRuntime.Operations" />.</param>
      <param name="action">Action de message pour laquelle cette opération de répartition est créée.</param>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.Action">
      <summary>Obtient la valeur de l'action pour cette opération.</summary>
      <returns>Valeur de l'action pour cette opération.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.AutoDisposeParameters">
      <summary>Obtient ou définit si les paramètres doivent être automatiquement supprimés.</summary>
      <returns>true si les paramètres doivent être automatiquement supprimés ; sinon, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.DeserializeRequest">
      <summary>Obtient ou définit une valeur qui indique si la valeur de propriété <see cref="P:System.ServiceModel.Dispatcher.DispatchOperation.Formatter" /> est utilisée pour désérialiser le message de demande.</summary>
      <returns>false si le type de retour est <see cref="T:System.ServiceModel.Channels.Message" /> et qu'il n'y a pas de paramètres de sortie ; sinon, true.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.IsOneWay">
      <summary>Obtient une valeur qui indique si l'opération est une opération unidirectionnelle.</summary>
      <returns>true si l'opération a uniquement une entrée ; sinon, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.Name">
      <summary>Obtient le nom de l'opération.</summary>
      <returns>Nom de l'opération.Il est utilisé comme clé de la collection <see cref="P:System.ServiceModel.Dispatcher.DispatchRuntime.Operations" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.Parent">
      <summary>Obtient l'objet <see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" /> associé.</summary>
      <returns>Objet <see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" /> associé.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.SerializeReply">
      <summary>Obtient ou définit une valeur qui spécifie si l'objet <see cref="P:System.ServiceModel.Dispatcher.DispatchOperation.Formatter" /> sérialise les messages de réponse.</summary>
      <returns>true si la propriété <see cref="P:System.ServiceModel.Dispatcher.DispatchOperation.Formatter" /> sérialise les valeurs de retour en message de réponse ; sinon, false. </returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.DispatchRuntime">
      <summary>Expose des propriétés qui peuvent être utilisées pour modifier le comportement de service par défaut et pour joindre des objets personnalisés qui peuvent modifier la manière dont les messages entrants sont transformés en objets et distribués aux opérations.Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.EndpointDispatcher">
      <summary>Représente l'objet d'exécution qui expose des propriétés qui activent l'insertion d'extensions ou de modifications d'exécution pour les messages dans les applications de service.</summary>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IClientMessageFormatter">
      <summary>Définit les méthodes utilisées pour contrôler la conversion de messages en objets et d'objets en messages pour les applications clientes.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IClientMessageFormatter.DeserializeReply(System.ServiceModel.Channels.Message,System.Object[])">
      <summary>Convertit un message en valeur de retour et les paramètres out retournés à l'opération appelante.</summary>
      <returns>Valeur de retour de l'opération.</returns>
      <param name="message">Message entrant.</param>
      <param name="parameters">Toute valeur out.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IClientMessageFormatter.SerializeRequest(System.ServiceModel.Channels.MessageVersion,System.Object[])">
      <summary>Convertit un tableau <see cref="T:System.Object" /> en <see cref="T:System.ServiceModel.Channels.Message" /> sortant. </summary>
      <returns>Message SOAP envoyé à l'opération de service.</returns>
      <param name="messageVersion">Version du message SOAP à utiliser.</param>
      <param name="parameters">Paramètres passés à l'opération du client WCF.</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IClientMessageInspector">
      <summary>Définit un objet d'inspecteur de message qui peut être ajouté à la collection <see cref="P:System.ServiceModel.Dispatcher.ClientRuntime.MessageInspectors" /> pour afficher ou modifier des messages.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IClientMessageInspector.AfterReceiveReply(System.ServiceModel.Channels.Message@,System.Object)">
      <summary>Active l'inspection ou la modification d'un message une fois qu'un message de réponse est reçu mais avant de le retourner à l'application cliente.</summary>
      <param name="reply">Message à transformer en types et retourné à l'application cliente.</param>
      <param name="correlationState">Données d'état de corrélation.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IClientMessageInspector.BeforeSendRequest(System.ServiceModel.Channels.Message@,System.ServiceModel.IClientChannel)">
      <summary>Active l'inspection ou la modification d'un message avant qu'un message de demande soit envoyé à un service.</summary>
      <returns>Objet retourné comme argument <paramref name="correlationState " />de la méthode <see cref="M:System.ServiceModel.Dispatcher.IClientMessageInspector.AfterReceiveReply(System.ServiceModel.Channels.Message@,System.Object)" />.A la valeur null si aucun état de corrélation n'est utilisé.Il est recommandé de créer un <see cref="T:System.Guid" /> pour garantir que deux objets <paramref name="correlationState" /> ne peuvent pas être les mêmes.</returns>
      <param name="request">Message à envoyer au service.</param>
      <param name="channel">Canal d'objet client WCF.</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IClientOperationSelector">
      <summary>Définit le contrat pour un sélecteur d'opération.</summary>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.IClientOperationSelector.AreParametersRequiredForSelection">
      <summary>Obtient une valeur qui indique si les paramètres sont requis pour déterminer la sélection.</summary>
      <returns>true si les paramètres sont requis ; sinon, false.</returns>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IClientOperationSelector.SelectOperation(System.Reflection.MethodBase,System.Object[])">
      <summary>Retourne l'opération sélectionnée.</summary>
      <returns>Opération sélectionnée par le sélecteur d'opération personnalisé.</returns>
      <param name="method">Méthode appelée.</param>
      <param name="parameters">Paramètres passés à la méthode.</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IParameterInspector">
      <summary>Définit le contrat implémenté par les inspecteurs de paramètre personnalisés qui activent inspection ou la modification d'informations avant et après les appels sur le client ou le service.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IParameterInspector.AfterCall(System.String,System.Object[],System.Object,System.Object)">
      <summary>Appelé après que les appels clients ont été retournés et avant que les réponses de service soient envoyées.</summary>
      <param name="operationName">Nom de l'opération appelée.</param>
      <param name="outputs">Tout objet de sortie.</param>
      <param name="returnValue">Valeur de retour de l'opération.</param>
      <param name="correlationState">Tout état de corrélation retourné par la méthode <see cref="M:System.ServiceModel.Dispatcher.IParameterInspector.BeforeCall(System.String,System.Object[])" />, ou valeur null. </param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IParameterInspector.BeforeCall(System.String,System.Object[])">
      <summary>Appelé avant que les appels clients soient envoyés et après que les réponses de service sont retournées.</summary>
      <returns>État de corrélation retourné comme paramètre <paramref name="correlationState" /> dans <see cref="M:System.ServiceModel.Dispatcher.IParameterInspector.AfterCall(System.String,System.Object[],System.Object,System.Object)" />.Retournez la valeur null si vous ne prévoyez pas d'utiliser l'état de corrélation.</returns>
      <param name="operationName">Nom de l'opération.</param>
      <param name="inputs">Objets passés à la méthode par le client.</param>
    </member>
    <member name="T:System.ServiceModel.Security.HttpDigestClientCredential">
      <summary>Utilisé pour l'authentification Digest des clients HTTP.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.HttpDigestClientCredential.ClientCredential">
      <summary>Obtient ou définit les informations d'identification de réseau à utiliser pour une authentification basée sur Digest.</summary>
      <returns>Les <see cref="T:System.Net.NetworkCredential" /> à utiliser pour une authentification basée sur Digest.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.MessageSecurityException">
      <summary>Représente une exception qui se produit en cas de problème avec la sécurité appliquée sur un message. </summary>
    </member>
    <member name="M:System.ServiceModel.Security.MessageSecurityException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Security.MessageSecurityException" /> avec une chaîne d'erreur.</summary>
      <param name="message">Message d'erreur.</param>
    </member>
    <member name="M:System.ServiceModel.Security.MessageSecurityException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Security.MessageSecurityException" /> avec une chaîne d'erreur et une référence à l'exception interne qui a provoqué cette exception.</summary>
      <param name="message">Message d'erreur.</param>
      <param name="innerException">Référence à l'exception interne.</param>
    </member>
    <member name="T:System.ServiceModel.Security.SecurityAccessDeniedException">
      <summary>Représente l'exception de sécurité levée en cas d'échec d'une demande d'autorisation de sécurité.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityAccessDeniedException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Security.SecurityAccessDeniedException" /> avec le message spécifié. </summary>
      <param name="message">Description de la condition d'erreur.</param>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityAccessDeniedException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Security.SecurityAccessDeniedException" /> à l'aide du message et de l'exception interne spécifiés. </summary>
      <param name="message">Description de la condition d'erreur.</param>
      <param name="innerException">Exception interne à utiliser.</param>
    </member>
    <member name="T:System.ServiceModel.Security.UserNamePasswordClientCredential">
      <summary>Représente des informations d'identification du client basées sur le nom d'utilisateur et le mot de passe.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.UserNamePasswordClientCredential.Password">
      <summary>Obtient ou définit le mot de passe.</summary>
      <returns>Mot de passe.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.UserNamePasswordClientCredential.UserName">
      <summary>Obtient ou définit le nom de l'utilisateur.</summary>
      <returns>Nom d'utilisateur.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.WindowsClientCredential">
      <summary>Permet de spécifier des propriétés en rapport avec les informations d'identification Windows à utiliser pour représenter le client.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.WindowsClientCredential.AllowedImpersonationLevel">
      <summary>Obtient ou définit le niveau d'emprunt d'identité autorisé. </summary>
      <returns>Une des valeurs de <see cref="T:System.Security.Principal.TokenImpersonationLevel" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.WindowsClientCredential.ClientCredential">
      <summary>Obtient ou définit les informations d'identification du client Windows.</summary>
      <returns>
        <see cref="T:System.Net.NetworkCredential" /> pour le client.</returns>
    </member>
  </members>
</doc>
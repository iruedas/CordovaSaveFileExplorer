<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.ServiceModel.Primitives</name>
  </assembly>
  <members>
    <member name="T:System.ServiceModel.ActionNotSupportedException">
      <summary>Esta excepción se produce normalmente en el cliente cuando la acción relacionada con la operación invocada no coincide con ninguna acción de las operaciones del servidor.</summary>
    </member>
    <member name="M:System.ServiceModel.ActionNotSupportedException.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.ActionNotSupportedException" />. </summary>
    </member>
    <member name="M:System.ServiceModel.ActionNotSupportedException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.ActionNotSupportedException" /> con el mensaje de error especificado.</summary>
      <param name="message">Mensaje de error que explica la razón de la excepción.</param>
    </member>
    <member name="M:System.ServiceModel.ActionNotSupportedException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.ActionNotSupportedException" /> con un mensaje de error especificado y una referencia a la excepción interna que es la causa de la excepción.</summary>
      <param name="message">Mensaje de error que explica la razón de la excepción.</param>
      <param name="innerException">La excepción <see cref="T:System.Exception" /> que provocó que se iniciara la excepción actual. </param>
    </member>
    <member name="T:System.ServiceModel.ChannelFactory">
      <summary>Crea y administra los canales que son utilizados por los clientes para enviar mensajes a los extremos de servicio.</summary>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.ChannelFactory" />.  </summary>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)">
      <summary>Inicializa el generador de canales con los comportamientos proporcionados por un archivo de configuración especificado y con los del extremo de servicio del generador de canales.</summary>
      <param name="configurationName">Nombre del archivo de configuración.</param>
      <exception cref="T:System.InvalidOperationException">El extremo de servicio del generador de canales es null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.CreateDescription">
      <summary>Cuando se implementa en una clase derivada, crea una descripción del extremo de servicio asociada al generador de canales.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> asociado al generador de canales.</returns>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.CreateFactory">
      <summary>Construye el generador de canales para el extremo actual del generador.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.IChannelFactory" /> para el extremo del generador actual.</returns>
      <exception cref="T:System.InvalidOperationException">El extremo del servicio al que se conectan los canales del generador es null o el enlace del extremo es null o falta el elemento con el nombre de configuración especificado.</exception>
    </member>
    <member name="P:System.ServiceModel.ChannelFactory.Credentials">
      <summary>Obtiene las credenciales utilizadas por los clientes para comunicarse con un extremo de servicio mediante los canales generados por el generador.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.ClientCredentials" /> utilizado por los clientes si se han configurado para el generador o si el extremo es no null y está en estado de comunicación creado o de apertura; de lo contrario null.</returns>
    </member>
    <member name="P:System.ServiceModel.ChannelFactory.DefaultCloseTimeout">
      <summary>Obtiene el intervalo de tiempo predeterminado proporcionado para completar una operación de cierre.</summary>
      <returns>
        <see cref="T:System.Timespan" /> predeterminado que especifica el tiempo con el que cuenta la operación de cierre para completarse antes de que se agote el tiempo de espera.</returns>
    </member>
    <member name="P:System.ServiceModel.ChannelFactory.DefaultOpenTimeout">
      <summary>Obtiene el intervalo de tiempo predeterminado proporcionado para que se complete una operación de apertura.</summary>
      <returns>
        <see cref="T:System.Timespan" /> predeterminado que especifica el tiempo con el que cuenta la operación de apertura para completarse antes de que se agote el tiempo de espera.</returns>
    </member>
    <member name="P:System.ServiceModel.ChannelFactory.Endpoint">
      <summary>Obtiene el extremo de servicio al que se conectan los canales generados por el generador.</summary>
      <returns>El <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> al que se conectan los canales producidos por el generador.</returns>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.EnsureOpened">
      <summary>Abre el generador de canales actual si todavía no está abierto.</summary>
      <exception cref="T:System.ObjectDisposedException">El generador actual se está cerrando o está cerrado, así que no se puede abrir.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.GetProperty``1">
      <summary>Devuelve el objeto con tipo solicitado desde la capa adecuada en la pila del canal, si está presente, o null si no lo está.</summary>
      <returns>El objeto escrito solicitado <paramref name="T" />, si está presente, o null si no lo está.</returns>
      <typeparam name="T">El objeto con tipo que el método está consultando.</typeparam>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Inicializa el extremo de servicio del generador de canales con un enlace especificado y dirección.</summary>
      <param name="binding">El <see cref="T:System.ServiceModel.Channels.Binding" /> con el que inicializar el generador del canal.</param>
      <param name="address">El <see cref="T:System.ServiceModel.EndpointAddress" /> con el que inicializar el generador del canal.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Inicializa el extremo de servicio del generador de canales con un extremo especificado.</summary>
      <param name="endpoint">El <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> con el que inicializar el generador del canal.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="endpoint" /> es null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.String,System.ServiceModel.EndpointAddress)">
      <summary>Inicializa el extremo de servicio del generador de canales con una dirección especificada y configuración.</summary>
      <param name="configurationName">El nombre del archivo de configuración utilizado para inicializar el generador de canales.</param>
      <param name="address">El <see cref="T:System.ServiceModel.EndpointAddress" /> con el que inicializar el generador del canal.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnAbort">
      <summary>Finaliza el generador de canales interno del generador de canales actual.</summary>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Comienza una operación de cierre asincrónica en el generador de canales interno del generador de canales actual que tiene un objeto de estados asociado a él. </summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia a la operación asincrónica.</returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> que especifica el tiempo con el que cuenta la operación para completarse antes de que se agote el tiempo de espera.</param>
      <param name="callback">El delegado <see cref="T:System.AsyncCallback" /> que recibe la notificación de la finalización de la operación asincrónica.</param>
      <param name="state">Objeto, especificado por la aplicación, que contiene información de estado asociada a la operación asincrónica.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Comienza una operación de apertura asincrónica en el generador de canales interno del generador de canales actual que tiene un objeto de estados asociado a él. </summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia a la operación asincrónica.</returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> que especifica el tiempo con el que cuenta la operación para completarse antes de que se agote el tiempo de espera.</param>
      <param name="callback">El delegado <see cref="T:System.AsyncCallback" /> que recibe la notificación de la finalización de la operación asincrónica.</param>
      <param name="state">Objeto, especificado por la aplicación, que contiene información de estado asociada a la operación asincrónica.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnClose(System.TimeSpan)">
      <summary>Llama el cierre en el generador de canales interno con un tiempo de espera especificado para la realización de la operación.</summary>
      <param name="timeout">
        <see cref="T:System.Timespan" /> que especifica el tiempo con el que cuenta la operación para completarse antes de que se agote el tiempo de espera.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnEndClose(System.IAsyncResult)">
      <summary>Completa una operación de cierre asincrónica en el generador de canales interno del generador de canales actual. </summary>
      <param name="result">La interfaz <see cref="T:System.IAsyncResult" /> devuelta por una llamada al método <see cref="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnEndOpen(System.IAsyncResult)">
      <summary>Completa una operación de apertura asincrónica en el generador de canales interno del generador de canales actual. </summary>
      <param name="result">La interfaz <see cref="T:System.IAsyncResult" /> devuelta por una llamada al método <see cref="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnOpen(System.TimeSpan)">
      <summary>Llama la apertura en el generador de canales interno del generador de canales actual con un tiempo de espera especificado para la realización de la operación.</summary>
      <param name="timeout">La estructura <see cref="T:System.Timespan" /> que especifica el tiempo con el que cuenta la operación de apertura para completarse antes de que se agote el tiempo de espera.</param>
      <exception cref="T:System.InvalidOperationException">El canal interno del canal actual es null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnOpened">
      <summary>Inicializa una copia de solo lectura del objeto <see cref="T:System.ServiceModel.Description.ClientCredentials" /> para el generador de canales.</summary>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnOpening">
      <summary>Construye el generador de canales interno para el canal actual.</summary>
      <exception cref="T:System.InvalidOperationException">El generador de canales interno del generador de canales es null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.System#IDisposable#Dispose">
      <summary>Cierra el generador de canales actual.</summary>
    </member>
    <member name="T:System.ServiceModel.ChannelFactory`1">
      <summary>Un generador que crea canales de tipos diferentes que los clientes usan para enviar mensajes a extremos de servicio configurados de distinta manera.</summary>
      <typeparam name="TChannel">El tipo de canal producido por el generador de canales.Este tipo debe ser <see cref="T:System.ServiceModel.Channels.IOutputChannel" /> o <see cref="T:System.ServiceModel.Channels.IRequestChannel" />.</typeparam>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.ChannelFactory`1" /> con una dirección de enlace y de extremo especificada.</summary>
      <param name="binding">El <see cref="T:System.ServiceModel.Channels.Binding" /> utilizado para configurar el extremo.</param>
      <param name="remoteAddress">La <see cref="T:System.ServiceModel.EndpointAddress" /> que proporciona la ubicación del servicio.</param>
      <exception cref="T:System.ArgumentNullException">La propiedad <paramref name="binding" /> es null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.ChannelFactory`1" /> con un nombre de configuración de extremo especificado.</summary>
      <param name="endpointConfigurationName">El nombre de configuración utilizado para el extremo.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="endpointConfigurationName" /> es null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.#ctor(System.String,System.ServiceModel.EndpointAddress)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.ChannelFactory`1" /> asociada a un nombre especificado para la configuración del extremo y dirección remota.</summary>
      <param name="endpointConfigurationName">El nombre de configuración utilizado para el extremo.</param>
      <param name="remoteAddress">La <see cref="T:System.ServiceModel.EndpointAddress" /> que proporciona la ubicación del servicio.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="endpointConfigurationName" /> o <paramref name="remoteAddress" /> es null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.#ctor(System.Type)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.ChannelFactory`1" />.  </summary>
      <param name="channelType">El <see cref="T:System.Type" /> de canal producido por el generador.</param>
      <exception cref="T:System.ArgumentNullException">La propiedad <paramref name="channelType" /> es null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="channelType" /> es una clase o tipo de valor pero no una interfaz.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.CreateChannel">
      <summary>Crea un canal de un tipo especificado a una dirección del extremo concreta.</summary>
      <returns>El parámetro <paramref name="TChannel" /> de tipo <see cref="T:System.ServiceModel.Channels.IChannel" /> creado por el generador.</returns>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)">
      <summary>Crea un canal que se utiliza para enviar mensajes a un servicio en una dirección de extremo concreta.</summary>
      <returns>El parámetro <paramref name="TChannel" /> de tipo <see cref="T:System.ServiceModel.Channels.IChannel" /> creado por el generador.</returns>
      <param name="address">La <see cref="T:System.ServiceModel.EndpointAddress" /> que proporciona la ubicación del servicio.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> es null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>Crea un canal que se usa para enviar los mensajes a un servicio en una dirección de extremo concreta a través de una dirección de transporte especificada.</summary>
      <returns>El parámetro <paramref name="TChannel" /> de tipo <see cref="T:System.ServiceModel.Channels.IChannel" /> creado por el generador.</returns>
      <param name="address">La <see cref="T:System.ServiceModel.EndpointAddress" /> que proporciona la ubicación del servicio.</param>
      <param name="via">El <see cref="T:System.Uri" /> que contiene la dirección de transporte a la que el canal envía los mensajes.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> es null.</exception>
      <exception cref="T:System.InvalidOperationException">El <see cref="T:System.ServiceModel.ChannelFactory" /> cuenta con operaciones dúplex que no son compatibles.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.CreateDescription">
      <summary>Crea una descripción del extremo de servicio.</summary>
      <returns>Objeto <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> del servicio.</returns>
      <exception cref="T:System.InvalidOperationException">El contrato de devolución de llamada es null pero el extremo de servicio requiere uno que no sea null.</exception>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1">
      <summary>Proporciona la implementación base utilizada para crear objetos de cliente Windows Communication Foundation (WCF) que pueden llamar a los servicios.</summary>
      <typeparam name="TChannel">El canal que se va a utilizar para conectarse al servicio.</typeparam>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.ClientBase`1" /> utilizando el extremo de destino predeterminado del archivo de configuración de aplicación. </summary>
      <exception cref="T:System.InvalidOperationException">No hay información de extremo predeterminada en el archivo de configuración o hay más de un extremo en el archivo o no hay ningún archivo de configuración.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.ClientBase`1" /> utilizando la dirección de enlace y de destino especificada. </summary>
      <param name="binding">El enlace con el que realizar llamadas al servicio.</param>
      <param name="remoteAddress">La dirección del extremo de servicio.</param>
      <exception cref="T:System.ArgumentNullException">El enlace es null.</exception>
      <exception cref="T:System.ArgumentNullException">La dirección remota es null.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.ClientBase`1" /> utilizando la información de configuración especificada por <paramref name="endpointConfigurationName" /> en el archivo de configuración de aplicación. </summary>
      <param name="endpointConfigurationName">Nombre del extremo en el archivo de configuración de la aplicación.</param>
      <exception cref="T:System.ArgumentNullException">La información de extremo especificada es null.</exception>
      <exception cref="T:System.InvalidOperationException">No se puede encontrar el extremo o el contrato del extremo no es válido.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.String,System.ServiceModel.EndpointAddress)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.ClientBase`1" /> con la dirección de destino e información de extremo especificadas. </summary>
      <param name="endpointConfigurationName">Nombre del extremo en el archivo de configuración de la aplicación.</param>
      <param name="remoteAddress">Dirección del servicio.</param>
      <exception cref="T:System.ArgumentNullException">El extremo es null.</exception>
      <exception cref="T:System.ArgumentNullException">La dirección remota es null.</exception>
      <exception cref="T:System.InvalidOperationException">No se puede encontrar el extremo o el contrato del extremo no es válido.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.String,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.ClientBase`1" />.</summary>
      <param name="endpointConfigurationName">Nombre del extremo en el archivo de configuración de la aplicación.</param>
      <param name="remoteAddress">Dirección del servicio.</param>
      <exception cref="T:System.ArgumentNullException">El extremo es null.</exception>
      <exception cref="T:System.ArgumentNullException">La dirección remota es null.</exception>
      <exception cref="T:System.InvalidOperationException">No se puede encontrar el extremo o el contrato del extremo no es válido.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.Abort">
      <summary>Provoca que el objeto <see cref="T:System.ServiceModel.ClientBase`1" /> pase inmediatamente de su estado actual al estado cerrado.</summary>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.Channel">
      <summary>Obtiene el canal interno utilizado para enviar mensajes a extremos de servicio configurados de distinta manera.</summary>
      <returns>Un canal con un determinado tipo.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelFactory">
      <summary>Obtiene el objeto <see cref="T:System.ServiceModel.ChannelFactory`1" /> subyacente.</summary>
      <returns>Un objeto <see cref="T:System.ServiceModel.ChannelFactory`1" />.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ClientCredentials">
      <summary>Obtiene las credenciales de cliente utilizadas para llamar a una operación.</summary>
      <returns>Devuelve <see cref="T:System.ServiceModel.Description.ClientCredentials" /> que representa la prueba de identidad presentada por el cliente.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.CreateChannel">
      <summary>Devuelve un canal nuevo al servicio.</summary>
      <returns>Un canal del tipo del contrato de servicio.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.Endpoint">
      <summary>Obtiene el extremo de destino para el servicio al que puede conectarse el cliente WCF.</summary>
      <returns>El extremo de destino.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.GetDefaultValueForInitialization``1">
      <summary>Replica el comportamiento de la palabra clave predeterminada en C#.</summary>
      <returns>Devuelve null si T es un tipo de referencia y cero si T es un tipo de valor numérico.</returns>
      <typeparam name="T">El tipo que se identifica como referencia o valor numérico por la palabra clave.</typeparam>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.InnerChannel">
      <summary>Obtiene la implementación <see cref="T:System.ServiceModel.IClientChannel" /> subyacente.</summary>
      <returns>Canal de cliente para el objeto de cliente WCF.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase{`0}.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase{`0}.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)">
      <summary>Proporciona compatibilidad para implementar el modelo asincrónico basado en eventos.Para obtener más información sobre este modelo, vea Información general sobre el modelo asincrónico basado en eventos.</summary>
      <param name="beginOperationDelegate">Un delegado que se utiliza para llamar a la operación asincrónica.</param>
      <param name="inValues">Los valores de entrada a la llamada asincrónica.</param>
      <param name="endOperationDelegate">Un delegado que se utiliza para finalizar la llamada asincrónica después de que se haya completado.</param>
      <param name="operationCompletedCallback">Una devolución de llamada proporcionada por el cliente que se invoca cuando el método asincrónico ha finalizado.La devolución de llamada se pasa a <see cref="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate" />.</param>
      <param name="userState">Objeto <paramref name="userState" /> a asociar a la llamada asincrónica.</param>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.State">
      <summary>Obtiene el estado actual del objeto <see cref="T:System.ServiceModel.ClientBase`1" />.</summary>
      <returns>El valor de <see cref="T:System.ServiceModel.CommunicationState" /> del objeto.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)">
      <summary>Comienza una operación asincrónica para cerrar <see cref="T:System.ServiceModel.ClientBase`1" />.</summary>
      <returns>El objeto <see cref="T:System.IAsyncResult" /> que hace referencia a la operación de cierre asincrónica.</returns>
      <param name="callback">Método que recibe la devolución de llamada al completarse.</param>
      <param name="state">Datos de estado.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Comienza una operación asincrónica para cerrar <see cref="T:System.ServiceModel.ClientBase`1" /> con un tiempo de espera especificado.</summary>
      <returns>El <see cref="T:System.IAsyncResult" /> que hace referencia a la operación de inicio de cierre asincrónica.</returns>
      <param name="timeout">El período dentro del que la llamada se debe completar.</param>
      <param name="callback">El objeto de devolución de llamada invocado cuando la operación se completa.</param>
      <param name="state">Datos de estado.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)">
      <summary>Comienza una operación asincrónica para abrir el objeto <see cref="T:System.ServiceModel.ClientBase`1" />.</summary>
      <returns>El objeto <see cref="T:System.IAsyncResult" /> que hace referencia a la operación de apertura asincrónica. </returns>
      <param name="callback">Método que recibe la devolución de llamada al completarse.</param>
      <param name="state">Datos de estado.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Comienza una operación asincrónica para abrir el objeto <see cref="T:System.ServiceModel.ClientBase`1" /> dentro de un intervalo de tiempo especificado.</summary>
      <returns>El objeto <see cref="T:System.IAsyncResult" /> que hace referencia a la operación de apertura asincrónica.</returns>
      <param name="timeout">El período dentro del que la llamada se debe completar.</param>
      <param name="callback">Método que recibe la devolución de llamada al completarse.</param>
      <param name="state">Datos de estado.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Close"></member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)">
      <summary>Provoca que el objeto <see cref="T:System.ServiceModel.ClientBase`1" /> pase de su estado actual al estado cerrado.</summary>
      <param name="timeout">El período dentro del que la llamada se debe completar.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Closed">
      <summary>El controlador de eventos que se invoca cuando el objeto <see cref="T:System.ServiceModel.ClientBase`1" /> ha pasado desde su estado actual al estado cerrado.</summary>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Closing">
      <summary>El controlador de eventos que se invoca cuando el objeto <see cref="T:System.ServiceModel.ClientBase`1" /> pasa desde su estado actual al estado cerrado.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)">
      <summary>Completa una operación asincrónica para cerrar el objeto <see cref="T:System.ServiceModel.ClientBase`1" />.</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> que se utiliza para completar la operación de cierre asincrónica.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)">
      <summary>Completa una operación asincrónica para abrir el objeto <see cref="T:System.ServiceModel.ClientBase`1" />.</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> utilizado para completar el fin de la operación de apertura asincrónica.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Faulted">
      <summary>El controlador de eventos que se invoca cuando se produce un error mientras se realiza una operación en el objeto <see cref="T:System.ServiceModel.ClientBase`1" />.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Open"></member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)">
      <summary>Provoca que el objeto <see cref="T:System.ServiceModel.ClientBase`1" /> pase del estado creado al estado abierto dentro de un intervalo de tiempo especificado.</summary>
      <param name="timeout">El período dentro del que la llamada se debe completar.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Opened">
      <summary>El controlador de eventos que se invoca cuando el objeto <see cref="T:System.ServiceModel.ClientBase`1" /> pasa desde el estado creado al estado abierto.</summary>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Opening">
      <summary>El controlador de eventos que se invoca cuando el objeto <see cref="T:System.ServiceModel.ClientBase`1" /> pasa desde el estado creado al estado abierto.</summary>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate">
      <summary>Un delegado utilizado por <see cref="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" /> para llamar a las operaciones asincrónicas en el cliente. </summary>
      <param name="inValues">Los valores de entrada a la llamada asincrónica.</param>
      <param name="asyncCallback">Referencia al método que se va a llamar cuando finalice la operación asincrónica correspondiente.</param>
      <param name="state">Un <see cref="T:System.Object" /> que permite al cliente distinguir entre diferentes llamadas asincrónicas.Se pone a disposición del cliente en el parámetro de argumentos de la devolución de llamada de realización de evento.</param>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1.ChannelBase`1">
      <summary>Representa la clase genérica ChannelBase.</summary>
      <typeparam name="T">Clase genérica.</typeparam>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.#ctor(System.ServiceModel.ClientBase{`1})">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.ClientBase`1.ChannelBase`1" /> a partir de una instancia existente de la clase.</summary>
      <param name="client">Objeto de la clase usado para inicializar la nueva instancia de la clase.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
      <summary>Inicia una llamada asincrónica de un método especificado por nombre.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia al método asincrónico invocado.</returns>
      <param name="methodName">Nombre del método que se va a llamar de forma asincrónica.</param>
      <param name="args">Matriz de argumentos para el método invocado.</param>
      <param name="callback">Delegado <see cref="T:System.AsyncCallback" />.</param>
      <param name="state">Objeto de estado.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.EndInvoke(System.String,System.Object[],System.IAsyncResult)">
      <summary>Completa una invocación asincrónica por el nombre de un método especificado.</summary>
      <returns>Salida de <see cref="T:System.Object" /> por el método invocado.</returns>
      <param name="methodName">Nombre del método llamado de forma asincrónica.</param>
      <param name="args">Matriz de argumentos para el método invocado.</param>
      <param name="result">Resultado devuelto por una llamada.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#IDisposable#Dispose">
      <summary>Realiza tareas definidas por la aplicación a la liberación o al restablecimiento de recursos no administrados con el canal.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IChannel#GetProperty``1">
      <summary>Devuelve un objeto con tipo solicitado, si lo hay, de la capa adecuada de la pila de canales.</summary>
      <returns>El parámetro T del objeto con tipo solicitado si está presente o una null si no lo está.</returns>
      <typeparam name="TProperty">El objeto de tipo que el método está consultando.</typeparam>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>Comienza una operación asincrónica para transmitir un mensaje al destino del canal de salida.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia a la transmisión asincrónica de un mensaje.</returns>
      <param name="message">Mensaje que se está enviando en el canal de salida.</param>
      <param name="callback">Delegado <see cref="T:System.AsyncCallback" />.</param>
      <param name="state">Objeto, especificado por la aplicación, que contiene información de estado asociada a la operación de envío asincrónica.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Comienza una operación asincrónica para transmitir un mensaje al destino del canal de salida dentro de un intervalo de tiempo especificado.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia a la operación de envío asincrónica.</returns>
      <param name="message">Mensaje que se está enviando en el canal de salida.</param>
      <param name="timeout">Duración que especifica el tiempo con el que cuenta la operación de envío para completarse antes de que se agote el tiempo de espera.</param>
      <param name="callback">El delegado <see cref="T:System.AsyncCallback" /> que recibe la notificación de la finalización de la operación de envío asincrónica.</param>
      <param name="state">Objeto, especificado por la aplicación, que contiene información de estado asociada a la operación de envío asincrónica.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#EndSend(System.IAsyncResult)">
      <summary>Termina una operación asincrónica para transmitir un mensaje al destino del canal de salida.</summary>
      <param name="result">Resultado devuelto por una llamada.</param>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#RemoteAddress">
      <summary>Obtiene el destino del servicio al que se mandan los mensajes en el canal de salida.</summary>
      <returns>
        <see cref="T:System.ServiceModel.EndpointAddress" /> del servicio al que el canal de salida envía los mensajes.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send(System.ServiceModel.Channels.Message)">
      <summary>Transmite un mensaje al destino del canal de salida.</summary>
      <param name="message">Mensaje que se está enviando en el canal de salida.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <summary>Envía un mensaje en el canal de salida actual dentro de un intervalo de tiempo especificado.</summary>
      <param name="message">Mensaje que se está enviando en el canal de salida.</param>
      <param name="timeout">Duración que especifica el tiempo con el que cuenta la operación de envío para completarse antes de que se agote el tiempo de espera.</param>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Via">
      <summary>Obtiene el URI que contiene la dirección de transporte a la que se envían los mensajes en el canal de salida.</summary>
      <returns>
        <see cref="T:System.Uri" /> que contiene la dirección de transporte a la que se envían los mensajes en el canal de salida.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>Inicia una operación asincrónica para transmitir un mensaje de solicitud al lado correspondiente a la respuesta de un intercambio de mensajes de solicitud y respuesta.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia a la transmisión asincrónica de un mensaje.</returns>
      <param name="message">Mensaje de solicitud que se va a transmitir.</param>
      <param name="callback">El delegado <see cref="T:System.AsyncCallback" /> que recibe la notificación de la realización de la operación asincrónica que transmite un mensaje de solicitud.</param>
      <param name="state">Un objeto, especificado por la aplicación, que contiene información de estado asociada a la operación asincrónica que transmite un mensaje de solicitud.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Comienza una operación asincrónica para transmitir un mensaje de solicitud al lado de la respuesta intercambio de mensajes solicitud-respuesta dentro de un intervalo de tiempo especificado.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia a la transmisión asincrónica de un mensaje.</returns>
      <param name="message">Mensaje de solicitud que se va a transmitir.</param>
      <param name="timeout">Duración que especifica el intervalo de tiempo dentro del cual se debe recibir una respuesta.</param>
      <param name="callback">El delegado <see cref="T:System.AsyncCallback" /> que recibe la notificación de la realización de la operación asincrónica que transmite un mensaje de solicitud.</param>
      <param name="state">Un objeto, especificado por la aplicación, que contiene información de estado asociada a la operación asincrónica que transmite un mensaje de solicitud.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#EndRequest(System.IAsyncResult)">
      <summary>Completa una operación asincrónica para devolver una respuesta basada en mensaje a una solicitud transmitida.</summary>
      <returns>Mensaje recibido en respuesta a la solicitud.</returns>
      <param name="result">Resultado de la operación.</param>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#RemoteAddress">
      <summary>Obtiene la dirección remota a la que el canal de solicitudes envía los mensajes.</summary>
      <returns>
        <see cref="T:System.ServiceModel.EndpointAddress" /> al que el canal de solicitudes envía los mensajes.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request(System.ServiceModel.Channels.Message)">
      <summary>Envía una solicitud basada en mensaje y devuelve la respuesta basada en mensaje correlacionada.</summary>
      <returns>Mensaje recibido en respuesta a la solicitud.</returns>
      <param name="message">Mensaje de solicitud que se va a transmitir.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <summary>Envía una solicitud basada en mensaje y devuelve la respuesta basada en mensaje correlacionada dentro de un intervalo de tiempo especificado.</summary>
      <returns>Mensaje recibido en respuesta a la solicitud.</returns>
      <param name="message">Mensaje de solicitud que se va a transmitir.</param>
      <param name="timeout">Duración que especifica el intervalo de tiempo dentro del cual se debe recibir una respuesta.</param>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Via">
      <summary>Obtiene la dirección de transporte a la se envía la solicitud.</summary>
      <returns>
        <see cref="T:System.Uri" /> que contiene la dirección de transporte a la que se envía un mensaje.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#AllowInitializationUI">
      <summary>Obtiene o establece un valor que indica si el canal de cliente permite una UI de inicialización</summary>
      <returns>True si el canal de cliente permite un URI de inicialización; si no, false.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#BeginDisplayInitializationUI(System.AsyncCallback,System.Object)">
      <summary>Llamada asincrónica para empezar a usar una interfaz de usuario con el fin de obtener información de las credenciales.</summary>
      <returns>El <see cref="T:System.IAsyncResult" /> que se debe usar para volver a llamar cuando el procesamiento haya terminado.</returns>
      <param name="callback">Método al que se llama cuando se completa este método.</param>
      <param name="state">Información sobre el estado del canal.</param>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#DidInteractiveInitialization">
      <summary>Obtiene un valor que indica si se realizó una llamada a una interfaz de usuario para obtener información de la credencial.</summary>
      <returns>True si se realizó una llamada a una interfaz de usuario para obtener información de credenciales; si no, false.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#DisplayInitializationUI">
      <summary>Especifica una llamada a una interfaz de usuario para obtener información de la credencial.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#EndDisplayInitializationUI(System.IAsyncResult)">
      <summary>Se llama cuando la llamada a BeginDisplayInitializationUI ha terminado.</summary>
      <param name="result">Resultado de la operación.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#UnknownMessageReceived">
      <summary>Controlador de eventos que se invoca cuando el objeto ClientBase recibe un mensaje desconocido.</summary>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#Via">
      <summary>Obtiene el URI que contiene la dirección de transporte a la que se envían los mensajes en el canal de cliente.</summary>
      <returns>URI que contiene la dirección de transporte a la que se envían los mensajes en el canal.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Abort">
      <summary>Hace que un objeto de comunicación pase inmediatamente de su estado actual al estado cerrado.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)">
      <summary>Comienza una operación asincrónica para cerrar un objeto de comunicación.</summary>
      <returns>El objeto <see cref="T:System.IAsyncResult" /> que hace referencia a la operación de cierre asincrónica.</returns>
      <param name="callback">Delegado de <see cref="T:System.AsyncCallback" /> que recibe la notificación de la finalización de la operación de cierre asincrónica.</param>
      <param name="state">Objeto especificado por la aplicación que contiene la información de estado asociada a la operación de cierre asincrónica.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Comienza una operación asincrónica para cerrar un objeto de comunicación con un tiempo de espera especificado.</summary>
      <returns>El objeto <see cref="T:System.IAsyncResult" /> que hace referencia a la operación de cierre asincrónica.</returns>
      <param name="timeout">Duración que especifica el tiempo con el que cuenta la operación de envío para completarse antes de que se agote el tiempo de espera.</param>
      <param name="callback">Delegado de <see cref="T:System.AsyncCallback" /> que recibe la notificación de la finalización de la operación de cierre asincrónica.</param>
      <param name="state">Objeto, especificado por la aplicación, que contiene la información de estado asociada a la operación de cierre asincrónica.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)">
      <summary>Comienza una operación asincrónica para abrir un objeto de comunicación.</summary>
      <returns>El objeto <see cref="T:System.IAsyncResult" /> que hace referencia a la operación de apertura asincrónica.</returns>
      <param name="callback">El delegado de <see cref="T:System.AsyncCallback" /> que recibe la notificación de la finalización de la operación de apertura asincrónica.</param>
      <param name="state">Objeto, especificado por la aplicación, que contiene la información de estado asociada a la operación de apertura asincrónica.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Comienza una operación asincrónica para abrir un objeto de comunicación dentro de un intervalo de tiempo especificado.</summary>
      <returns>El objeto <see cref="T:System.IAsyncResult" /> que hace referencia a la operación de apertura asincrónica.</returns>
      <param name="timeout">Duración que especifica el tiempo con el que cuenta la operación de envío para completarse antes de que se agote el tiempo de espera.</param>
      <param name="callback">El delegado de <see cref="T:System.AsyncCallback" /> que recibe la notificación de la finalización de la operación de apertura asincrónica.</param>
      <param name="state">Objeto, especificado por la aplicación, que contiene la información de estado asociada a la operación de apertura asincrónica.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close">
      <summary>Hace que un objeto de comunicación pase de su estado actual al estado cerrado.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)">
      <summary>Hace que un objeto de comunicación pase de su estado actual al estado cerrado.</summary>
      <param name="timeout">Duración que especifica el tiempo con el que cuenta la operación de envío para completarse antes de que se agote el tiempo de espera.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Closed">
      <summary>El controlador de eventos que se invoca cuando el objeto ClientBase ha pasado desde su estado actual al estado cerrado.</summary>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Closing">
      <summary>El controlador de eventos que se invoca cuando el objeto ClientBase pasa desde su estado actual al estado cerrado.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)">
      <summary>Completa una operación asincrónica para cerrar un objeto de comunicación.</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> que se devuelve al llamar al método BeginClose().</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)">
      <summary>Completa una operación asincrónica para abrir un objeto de comunicación.</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> que se devuelve al llamar al método BeginOpen().</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Faulted">
      <summary>Controlador de eventos que se invoca cuando se produce un error mientras se realiza una operación en el objeto ClientBase.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open">
      <summary>Hace que un objeto de comunicación pase del estado creado al estado abierto.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)">
      <summary>Hace que un objeto de comunicación pase del estado creado al estado abierto dentro de un intervalo de tiempo especificado.</summary>
      <param name="timeout">Duración que especifica el tiempo con el que cuenta la operación de envío para completarse antes de que se agote el tiempo de espera.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Opened">
      <summary>El controlador de eventos que se invoca cuando el objeto ClientBase ha pasado desde el estado creado al estado abierto.</summary>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Opening">
      <summary>El controlador de eventos que se invoca cuando el objeto ClientBase pasa desde el estado creado al estado abierto.</summary>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#State">
      <summary>Obtiene el estado actual del objeto orientado a la comunicación.</summary>
      <returns>El valor de <see cref="T:System.ServiceModel.CommunicationState" /> del objeto.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#AllowOutputBatching">
      <summary>Obtiene o establece un valor que indica si el procesamiento por lotes de mensajes salientes está permitido; de lo contrario, false.</summary>
      <returns>True si se permite el procesamiento por lotes de mensajes salientes; de lo contrario, false.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#InputSession">
      <summary>Obtiene la sesión de entrada para el canal.</summary>
      <returns>Sesión de entrada para el canal.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#LocalAddress">
      <summary>Obtiene el extremo local para el canal.</summary>
      <returns>Extremo local para el canal.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#OperationTimeout">
      <summary>Obtiene o establece el período de tiempo dentro del cual deberá completarse una operación o iniciarse una excepción.</summary>
      <returns>Duración que especifica el periodo de tiempo en el que debería completarse una operación.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#OutputSession">
      <summary>Obtiene la sesión de salida asociada con el canal, si la hubiera.</summary>
      <returns>Implementación de <see cref="T:System.ServiceModel.Channels.IOutputSession" /> si existe una sesión de entrada; de lo contrario, null.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#RemoteAddress">
      <summary>Obtiene la dirección remota asociada al canal.</summary>
      <returns>El <see cref="T:System.ServiceModel.EndpointAddress" /> remoto para el canal.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#SessionId">
      <summary>Obtiene un identificador para la sesión actual, si lo hubiera.</summary>
      <returns>El identificador de la sesión actual, si lo hubiera.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IExtensibleObject{T}#Extensions">
      <summary>Obtiene una colección de objetos de extensión para este objeto extensible.</summary>
      <returns>
        <see cref="T:System.ServiceModel.IExtensionCollection`1" /> de objetos de extensión.</returns>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1.EndOperationDelegate">
      <summary>Representa un delegado que invoca <see cref="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" /> completar correctamente la llamada realizada por <see cref="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" /> a <see cref="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate" />.</summary>
      <param name="result">El resultado devuelto por la llamada realizada por <see cref="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" />a <see cref="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate" />.</param>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1.InvokeAsyncCompletedEventArgs">
      <summary>Almacena los resultados de una llamada asincrónica realizada por el cliente.</summary>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.InvokeAsyncCompletedEventArgs.Results">
      <summary>Obtiene los resultados de una llamada asincrónica realizada por el cliente.</summary>
      <returns>Una matriz de <see cref="T:System.Object" /> que contiene los resultados de una llamada asincrónica realizada por el cliente.</returns>
    </member>
    <member name="T:System.ServiceModel.CommunicationException">
      <summary>Representa un error de comunicación en el servicio o aplicación cliente.</summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationException.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.CommunicationException" />. </summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.CommunicationException" /> utilizando el mensaje especificado.</summary>
      <param name="message">Descripción de la condición de error.</param>
    </member>
    <member name="M:System.ServiceModel.CommunicationException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.CommunicationException" /> con el mensaje y la excepción interna especificados.</summary>
      <param name="message">Descripción de la condición de error.</param>
      <param name="innerException">La excepción interna que se va a utilizar.</param>
    </member>
    <member name="T:System.ServiceModel.CommunicationObjectAbortedException">
      <summary>La excepción que se produce cuando se realiza una llamada a un objeto <see cref="T:System.ServiceModel.ICommunicationObject" /> que se ha anulado.</summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.CommunicationObjectAbortedException" />.  </summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.CommunicationObjectAbortedException" /> con el mensaje especificado. </summary>
      <param name="message">El mensaje transportado por la excepción.</param>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.CommunicationObjectAbortedException" /> con el mensaje y la excepción interna especificados. </summary>
      <param name="message">Mensaje de la excepción.</param>
      <param name="innerException">Excepción interna.</param>
    </member>
    <member name="T:System.ServiceModel.CommunicationObjectFaultedException">
      <summary>La excepción que se produce cuando se realiza una llamada a un objeto de comunicación que tiene un error. </summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" />. </summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" /> utilizando el mensaje especificado.</summary>
      <param name="message">Mensaje que describe la excepción.</param>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" /> con el mensaje y la excepción interna especificados.</summary>
      <param name="message">Mensaje de la excepción.</param>
      <param name="innerException">Excepción interna.</param>
    </member>
    <member name="T:System.ServiceModel.CommunicationState">
      <summary>Define los estados en los que un <see cref="T:System.ServiceModel.ICommunicationObject" /> puede existir. </summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Closed">
      <summary>Indica que el objeto de comunicación se ha cerrado y ya no se puede utilizar. </summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Closing">
      <summary>Indica que el objeto de comunicación está pasando al estado <see cref="F:System.ServiceModel.CommunicationState.Closed" />. </summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Created">
      <summary>Indica que se ha creado una instancia del objeto de comunicación y se puede configurar, pero ni se puede abrir todavía ni está lista para su uso.</summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Faulted">
      <summary>Indica que el objeto de comunicación ha encontrado un error del que no se puede recuperar y debido al cual ya no se puede utilizar. </summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Opened">
      <summary>Indica que el objeto de comunicación ya está abierto y listo para su uso. </summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Opening">
      <summary>Indica que el objeto de comunicación se está pasando del estado <see cref="F:System.ServiceModel.CommunicationState.Created" /> al estado <see cref="F:System.ServiceModel.CommunicationState.Opened" />. </summary>
    </member>
    <member name="T:System.ServiceModel.DataContractFormatAttribute">
      <summary>Indica a la infraestructura de Windows Communication Foundation (WCF) que use <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</summary>
    </member>
    <member name="M:System.ServiceModel.DataContractFormatAttribute.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.DataContractFormatAttribute" />. </summary>
    </member>
    <member name="P:System.ServiceModel.DataContractFormatAttribute.Style">
      <summary>Obtiene o establece el estilo SOAP de los datos serializados.</summary>
      <returns>Uno de los valores de <see cref="T:System.ServiceModel.OperationFormatStyle" />.El valor predeterminado es <see cref="F:System.ServiceModel.OperationFormatStyle.Document" />.</returns>
    </member>
    <member name="T:System.ServiceModel.EndpointAddress">
      <summary>Proporciona una dirección de red única que usa un cliente para comunicarse con un extremo de servicio.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.EndpointAddress" /> con una cadena URI especificada.</summary>
      <param name="uri">URI que identifica el extremo.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.#ctor(System.Uri,System.ServiceModel.Channels.AddressHeader[])">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.EndpointAddress" /> con un URI y encabezados especificados.</summary>
      <param name="uri">
        <see cref="T:System.Uri" /> que identifica la ubicación del extremo.</param>
      <param name="addressHeaders">
        <see cref="T:System.Array" /> de tipo <see cref="T:System.ServiceModel.Channels.AddressHeader" /> que contiene información de la dirección utilizada para interactuar con el extremo.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.#ctor(System.Uri,System.ServiceModel.EndpointIdentity,System.ServiceModel.Channels.AddressHeader[])">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.EndpointAddress" /> con un URI, identidad y encabezados especificados.</summary>
      <param name="uri">
        <see cref="T:System.Uri" /> que identifica la ubicación del extremo.</param>
      <param name="identity">La <see cref="T:System.ServiceModel.EndpointIdentity" /> para el extremo.</param>
      <param name="addressHeaders">
        <see cref="T:System.Array" /> de tipo <see cref="T:System.ServiceModel.Channels.AddressHeader" /> que contiene información de la dirección utilizada para interactuar con el extremo.</param>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.AnonymousUri">
      <summary>Obtiene una representación de versión neutra del URI anónimo.</summary>
      <returns>Un <see cref="T:System.Uri" /> con el valor http://schemas.microsoft.com/2005/12/ServiceModel/Addressing/Anonymous.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.ApplyTo(System.ServiceModel.Channels.Message)">
      <summary>Asigna el URI y las propiedades de la dirección del extremo a los valores de los encabezados de un mensaje especificado.</summary>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> cuyos valores de encabezado se están asignando.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> es null.</exception>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.Equals(System.Object)">
      <summary>Devuelve un valor que indica si un objeto especificado es equivalente a la dirección del extremo actual.</summary>
      <returns>true si el objeto especificado es equivalente a la dirección actual; de lo contrario, false.</returns>
      <param name="obj">El <see cref="T:System.Object" /> que se va a comparar con la dirección del extremo actual.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.GetHashCode">
      <summary>Proporciona un código hash único para la dirección del extremo actual. </summary>
      <returns>Un código hash único para la dirección del extremo actual.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.Headers">
      <summary>Obtiene la colección de encabezados de dirección para los extremos que el generador puede crear.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.AddressHeaderCollection" /> que contiene información de la dirección para el extremo.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.Identity">
      <summary>Obtiene la identidad del extremo utilizado para autenticarlo.</summary>
      <returns>La <see cref="T:System.ServiceModel.EndpointIdentity" /> para el extremo.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.IsAnonymous">
      <summary>Obtiene un valor que indica si el extremo es anónimo.</summary>
      <returns>true si el extremo es <see cref="P:System.ServiceModel.EndpointAddress.AnonymousUri" />; en caso contrario, false.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.IsNone">
      <summary>Obtiene un valor que indica si el URI del extremo es el <see cref="P:System.ServiceModel.EndpointAddress.NoneUri" />.</summary>
      <returns>true si el URI del extremo es <see cref="P:System.ServiceModel.EndpointAddress.NoneUri" />; de lo contrario, false. </returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.NoneUri">
      <summary>Obtiene un URI de versión neutra utilizado para la dirección de un extremo al que no se debe enviar un mensaje.</summary>
      <returns>Un <see cref="T:System.Uri" /> con el valor http://schemas.microsoft.com/2005/12/ServiceModel/Addressing/None.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.op_Equality(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress)">
      <summary>Devuelve un valor que indica si las direcciones de extremos especificadas no son equivalentes.</summary>
      <returns>true si las direcciones del extremo son equivalentes; de lo contrario, false.</returns>
      <param name="address1">Uno de los objetos <see cref="T:System.ServiceModel.EndpointAddress" /> que se comparan.</param>
      <param name="address2">Uno de los objetos <see cref="T:System.ServiceModel.EndpointAddress" /> que se comparan.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.op_Inequality(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress)">
      <summary>Devuelve un valor que indica si las direcciones de extremos especificadas no son equivalentes.</summary>
      <returns>true si las direcciones del extremo no son equivalentes; de lo contrario, false.</returns>
      <param name="address1">Uno de los objetos <see cref="T:System.ServiceModel.EndpointAddress" /> que se comparan.</param>
      <param name="address2">Uno de los objetos <see cref="T:System.ServiceModel.EndpointAddress" /> que se comparan.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.ReadFrom(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryReader)">
      <summary>Lee una dirección de extremo para una versión de dirección especificada desde un lector de diccionarios XML especificado.</summary>
      <returns>La <see cref="T:System.ServiceModel.EndpointAddress" /> leída desde el lector de diccionarios XML.</returns>
      <param name="addressingVersion">La <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> de la dirección del extremo actual.</param>
      <param name="reader">El <see cref="T:System.Xml.XmlDictionaryReader" /> del que se obtiene la dirección del extremo.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.ToString">
      <summary>Devuelve una representación de cadena canónica del URI que se contiene en la dirección del extremo.</summary>
      <returns>URI que identifica el extremo.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.Uri">
      <summary>Obtiene el URI del extremo.</summary>
      <returns>
        <see cref="T:System.Uri" /> del extremo.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.WriteContentsTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryWriter)">
      <summary>Guarda todos los nodos secundarios del nodo en el sistema de escritura de diccionarios XML especificado.</summary>
      <param name="addressingVersion">La <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> de la dirección del extremo actual.</param>
      <param name="writer">El <see cref="T:System.Xml.XmlDictionaryWriter" /> en el que se guarda la dirección del extremo.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> o <paramref name="addressingVersion" /> es null.</exception>
    </member>
    <member name="T:System.ServiceModel.EndpointAddressBuilder">
      <summary>Un generador para producir nuevas direcciones de extremos (inmutables) con valores de propiedad concretos.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressBuilder.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.EndpointAddressBuilder" />.  </summary>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressBuilder.#ctor(System.ServiceModel.EndpointAddress)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.EndpointAddressBuilder" /> a partir de una dirección de extremo existente.</summary>
      <param name="address">
        <see cref="T:System.ServiceModel.EndpointAddress" />, cuyos valores de propiedad se utilizan para inicializar los valores de propiedad de esta instancia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> es null.</exception>
    </member>
    <member name="P:System.ServiceModel.EndpointAddressBuilder.Headers">
      <summary>Obtiene la lista de encabezados de direcciones para los extremos que el generador puede crear.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.List`1" /> de tipo <see cref="T:System.ServiceModel.Channels.AddressHeader" /> que contiene los encabezados de dirección para los extremos que el generador puede crear.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddressBuilder.Identity">
      <summary>Obtiene o establece la identidad para los extremos que el generador puede crear.</summary>
      <returns>La <see cref="T:System.ServiceModel.EndpointIdentity" /> para el extremo.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressBuilder.ToEndpointAddress">
      <summary>Crea una nueva dirección del extremo inicializada con los valores de propiedad del generador de direcciones de extremo actual.</summary>
      <returns>
        <see cref="T:System.ServiceModel.EndpointAddress" />, cuya propiedad se inicializa con los valores del generador de direcciones de extremo actual.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddressBuilder.Uri">
      <summary>Obtiene o define el URI para los extremos que el generador puede crear.</summary>
      <returns>
        <see cref="T:System.Uri" /> que especifica la dirección del extremo.</returns>
    </member>
    <member name="T:System.ServiceModel.EndpointIdentity">
      <summary>Una clase abstracta que, cuando se implementa, proporciona una identidad que habilita la autenticación de un extremo por parte de clientes que intercambian mensajes con él.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointIdentity.#ctor">
      <summary>Crea una instancia de <see cref="T:System.ServiceModel.EndpointIdentity" /> vacía.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointIdentity.Equals(System.Object)">
      <summary>Devuelve un valor que determina si un objeto especificado equivale al objeto de identidad actual o si tienen propiedades de seguridad equivalentes.</summary>
      <returns>true si el objeto <paramref name="obj" /> especificado es equivalente a la identidad actual o contiene las mismas propiedades de seguridad; de lo contrario, false.</returns>
      <param name="obj">
        <see cref="T:System.Object" /> cuya igualdad con la identidad actual se ha comparado.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointIdentity.GetHashCode">
      <summary>Proporciona un código hash para la instancia actual de la identidad.</summary>
      <returns>Código hash para la identidad actual.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointIdentity.ToString">
      <summary>Devuelve la identidad.</summary>
      <returns>Valor de tipo <see cref="T:System.String" /> con el formato "identidad(cadena)" donde la cadena es igual que la propiedad <see cref="P:System.ServiceModel.EndpointIdentity.IdentityClaim" />.</returns>
    </member>
    <member name="T:System.ServiceModel.EndpointNotFoundException">
      <summary>La excepción que se produce cuando un extremo remoto no se pudo encontrar ni alcanzar.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointNotFoundException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.EndpointNotFoundException" /> con el mensaje de error especificado.</summary>
      <param name="message">Mensaje de error que explica la razón de la excepción.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.EndpointNotFoundException" /> con los parámetros especificados: un mensaje de error y una excepción interna que originó la excepción actual.</summary>
      <param name="message">Mensaje de error que explica la razón de la excepción.</param>
      <param name="innerException">La excepción <see cref="T:System.Exception" /> que provocó que se iniciara la excepción actual.</param>
    </member>
    <member name="T:System.ServiceModel.EnvelopeVersion">
      <summary>Contiene información relacionada con la versión de SOAP asociada a un mensaje y su intercambio.</summary>
    </member>
    <member name="M:System.ServiceModel.EnvelopeVersion.GetUltimateDestinationActorValues">
      <summary>Obtiene una cadena que contiene el nombre del URI para el rol de SOAP asociado con la versión de mensaje actual para el último destino.</summary>
      <returns>Una cadena vacía si se utiliza SOAP1.1; una cadena que contiene http://www.w3.org/2003/05/soap-envelope/role/ultimateReceiver si se usa SOAP1.2.</returns>
    </member>
    <member name="P:System.ServiceModel.EnvelopeVersion.NextDestinationActorValue">
      <summary>Obtiene una cadena que contiene el nombre del URI para el rol de SOAP asociado con la versión del mensaje actual para el destino siguiente.</summary>
      <returns>Se utiliza una cadena que contiene http://schemas.xmlsoap.org/soap/actor/next si se usa SOAP1.1; una cadena que contiene http://www.w3.org/2003/05/soap-envelope/role/next si se usa SOAP1.2; y una cadena vacía si no hay versión del mensaje.</returns>
    </member>
    <member name="P:System.ServiceModel.EnvelopeVersion.None">
      <summary>Obtiene la versión de sobre que no usa una versión de SOAP.</summary>
      <returns>La versión de sobre no usa un formato de SOAP.</returns>
    </member>
    <member name="P:System.ServiceModel.EnvelopeVersion.Soap11">
      <summary>Obtiene la versión de sobre de SOAP1.1.</summary>
      <returns>Objeto SOAP1.1 <see cref="T:System.ServiceModel.EnvelopeVersion" />.</returns>
    </member>
    <member name="P:System.ServiceModel.EnvelopeVersion.Soap12">
      <summary>Obtiene la versión de sobre de SOAP1.2.</summary>
      <returns>Objeto SOAP1.2 <see cref="T:System.ServiceModel.EnvelopeVersion" />.</returns>
    </member>
    <member name="M:System.ServiceModel.EnvelopeVersion.ToString">
      <summary>Obtiene una cadena que representa la versión de sobre actual.</summary>
      <returns>Representación de cadena de la versión del sobre actual.</returns>
    </member>
    <member name="T:System.ServiceModel.ExceptionDetail">
      <summary>Representa la información de los detalles del error.</summary>
    </member>
    <member name="M:System.ServiceModel.ExceptionDetail.#ctor(System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.ExceptionDetail" /> a partir de la excepción. </summary>
      <param name="exception">La excepción que se va a serializar como un objeto <see cref="T:System.ServiceModel.ExceptionDetail" />.</param>
      <exception cref="T:System.ArgumentNullException">El valor del parámetro <paramref name="exception" /> es null.</exception>
    </member>
    <member name="P:System.ServiceModel.ExceptionDetail.HelpLink">
      <summary>Obtiene o establece el vínculo de ayuda a partir de la excepción pasada al constructor.</summary>
      <returns>La información del vínculo de ayuda de la excepción.</returns>
    </member>
    <member name="P:System.ServiceModel.ExceptionDetail.InnerException">
      <summary>Obtiene o establece el objeto que <see cref="T:System.ServiceModel.ExceptionDetail" /> que representa la excepción interna.</summary>
      <returns>La información de excepción interna.</returns>
    </member>
    <member name="P:System.ServiceModel.ExceptionDetail.Message">
      <summary>Obtiene o establece el mensaje a partir de la excepción pasada al constructor.</summary>
      <returns>Mensaje de la excepción.</returns>
    </member>
    <member name="P:System.ServiceModel.ExceptionDetail.StackTrace">
      <summary>Obtiene o establece la información de seguimiento de la pila a partir de la excepción pasada al constructor.</summary>
      <returns>El seguimiento de la pila de la excepción.</returns>
    </member>
    <member name="M:System.ServiceModel.ExceptionDetail.ToString">
      <summary>Devuelve la información de detalle de excepción para la excepción pasada al constructor.</summary>
      <returns>El mensaje y seguimiento de pila de la excepción.</returns>
    </member>
    <member name="P:System.ServiceModel.ExceptionDetail.Type">
      <summary>Obtiene o establece la cadena de tipo para la excepción pasada al constructor.</summary>
      <returns>La cadena de tipo para la excepción pasada al constructor.</returns>
    </member>
    <member name="T:System.ServiceModel.FaultCode">
      <summary>Representa un código de error de SOAP. </summary>
    </member>
    <member name="M:System.ServiceModel.FaultCode.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.FaultCode" />.  </summary>
      <param name="name">El nombre del código de error.</param>
    </member>
    <member name="M:System.ServiceModel.FaultCode.#ctor(System.String,System.ServiceModel.FaultCode)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.FaultCode" />. </summary>
      <param name="name">El nombre del código de error.</param>
      <param name="subCode">Subcódigo del error.</param>
    </member>
    <member name="M:System.ServiceModel.FaultCode.#ctor(System.String,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.FaultCode" /> con el nombre y el espacio de nombres especificados. </summary>
      <param name="name">El nombre local del código de error. </param>
      <param name="ns">El nombre del espacio de nombres del código de error. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> o <paramref name="ns" /> es null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="name" /> es una cadena vacía. </exception>
    </member>
    <member name="M:System.ServiceModel.FaultCode.#ctor(System.String,System.String,System.ServiceModel.FaultCode)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.FaultCode" /> con el nombre, el espacio de nombres y el subcódigo de error especificados. </summary>
      <param name="name">El nombre local del código de error. </param>
      <param name="ns">El nombre del espacio de nombres del código de error. </param>
      <param name="subCode">Objeto <see cref="T:System.ServiceModel.FaultCode" /> que representa el subcódigo de error. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> o <paramref name="ns" /> es null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="name" /> es una cadena vacía. </exception>
    </member>
    <member name="M:System.ServiceModel.FaultCode.CreateSenderFaultCode(System.ServiceModel.FaultCode)">
      <summary>Crea un código de error del remitente con el subcódigo especificado. </summary>
      <returns>Objeto <see cref="T:System.ServiceModel.FaultCode" /> con el subcódigo de error SOAP creado en la propiedad <see cref="P:System.ServiceModel.FaultCode.SubCode" />. </returns>
      <param name="subCode">Objeto <see cref="T:System.ServiceModel.FaultCode" /> que representa el subcódigo de error. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="subCode" /> es null. </exception>
    </member>
    <member name="P:System.ServiceModel.FaultCode.IsPredefinedFault">
      <summary>Obtiene un valor que indica si es un error de SOAP 1.1 o SOAP 1.2.</summary>
      <returns>true si es un error de SOAP 1.1 o SOAP 1.2; de lo contrario, false.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.IsReceiverFault">
      <summary>Obtiene un valor que indica si es un error de servidor de SOAP 1.1 o un error de receptor de SOAP 1.2.</summary>
      <returns>true si el error es un error del servidor de SOAP 1.1 o un error de receptor de SOAP 1.2; de lo contrario, false.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.IsSenderFault">
      <summary>Obtiene un valor que indica si es un error de cliente de SOAP 1.1 o un error del remitente de SOAP 1.2.</summary>
      <returns>true si se trata de un error de cliente de SOAP 1.1 o un error de remitente de SOAP 1.2; de lo contrario, false.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.Name">
      <summary>Obtiene el nombre local del código de error. </summary>
      <returns>El nombre local del código de error. </returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.Namespace">
      <summary>Obtiene el espacio de nombres para el código de error. </summary>
      <returns>Un nombre de recursos uniforme (URI) para el nombre del espacio de nombres. </returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.SubCode">
      <summary>Obtiene el subcódigo de error. </summary>
      <returns>Objeto <see cref="T:System.ServiceModel.FaultCode" /> que representa el subcódigo de error. </returns>
    </member>
    <member name="T:System.ServiceModel.FaultContractAttribute">
      <summary>Especifica uno o más errores de SOAP que se devuelven cuando se producen errores de procesamiento en una operación de servicio.</summary>
    </member>
    <member name="M:System.ServiceModel.FaultContractAttribute.#ctor(System.Type)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.FaultContractAttribute" />.  </summary>
      <param name="detailType">El tipo serializable que contiene información de error para el autor de la llamada.</param>
      <exception cref="T:System.ArgumentNullException">El argumento <paramref name="detailType" /> es null.</exception>
    </member>
    <member name="P:System.ServiceModel.FaultContractAttribute.Action">
      <summary>Obtiene o establece la acción del mensaje de error de SOAP que se especifica como parte del contrato de la operación.</summary>
      <returns>El valor de la acción para el mensaje de error de SOAP.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultContractAttribute.DetailType">
      <summary>Obtiene el tipo de un objeto serializable que contiene información de error.</summary>
      <returns>El tipo que representa la clase de error serializable. </returns>
    </member>
    <member name="P:System.ServiceModel.FaultContractAttribute.Name">
      <summary>Obtiene o establece el nombre del mensaje de error en el Lenguaje de descripción de servicios Web (WSDL).</summary>
      <returns>El nombre del mensaje de error .El valor predeterminado es el nombre del tipo utilizado como detalle del error.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultContractAttribute.Namespace">
      <summary>Obtiene o establece el espacio de nombres del error de SOAP.</summary>
      <returns>El espacio de nombres del error de SOAP.</returns>
    </member>
    <member name="T:System.ServiceModel.FaultException">
      <summary>Representa un error de SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.FaultException.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.FaultException" />.  </summary>
    </member>
    <member name="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.Channels.MessageFault,System.String)">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.FaultException" /> con los valores de error del mensaje especificados y la cadena de acciones proporcionada.</summary>
      <param name="fault">El error del mensaje que contiene los valores de error de SOAP predeterminados que se van a usar.</param>
      <param name="action">La acción del error de SOAP.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.FaultReason,System.ServiceModel.FaultCode,System.String)">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.FaultException" /> con la razón, código de error y valor de acción especificados.</summary>
      <param name="reason">La razón del error de SOAP.</param>
      <param name="code">El código de error para el error de SOAP.</param>
      <param name="action">El valor de la acción para el error de SOAP.</param>
    </member>
    <member name="P:System.ServiceModel.FaultException.Action">
      <summary>Obtiene el valor de la acción de SOAP para el mensaje de error.</summary>
      <returns>El valor de la acción de SOAP para el mensaje de error.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultException.Code">
      <summary>Obtiene el código de error para el error de SOAP.</summary>
      <returns>El código de error para el error de SOAP.</returns>
    </member>
    <member name="M:System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.String,System.Type[])">
      <summary>Devuelve un objeto <see cref="T:System.ServiceModel.Channels.FaultException" /> desde el error del mensaje, la acción y una matriz de tipos de detalle especificados.</summary>
      <returns>Un objeto <see cref="T:System.ServiceModel.FaultException" /> que puede iniciar para indicar que se recibió un mensaje de error de SOAP.</returns>
      <param name="messageFault">El error del mensaje que contiene la información del error de SOAP predeterminado.</param>
      <param name="action">El valor de la acción del error.</param>
      <param name="faultDetailTypes">Una matriz de tipos que contiene los detalles del error.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.Type[])">
      <summary>Devuelve un objeto <see cref="T:System.ServiceModel.Channels.FaultException" /> desde el error del mensaje especificado y una matriz de tipos de detalle.</summary>
      <returns>Un objeto <see cref="T:System.ServiceModel.FaultException" /> que puede iniciar para indicar que se recibió un mensaje de error de SOAP.</returns>
      <param name="messageFault">El error del mensaje que contiene la información del error de SOAP predeterminado.</param>
      <param name="faultDetailTypes">Una matriz de tipos que contiene los detalles del error.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException.CreateMessageFault">
      <summary>Devuelve un objeto <see cref="T:System.ServiceModel.Channels.MessageFault" />.</summary>
      <returns>La representación en memoria de un error de SOAP que se puede pasar a <see cref="Overload:System.ServiceModel.Channels.Message.CreateMessage" /> para crear un mensaje que contiene un error.Para los objetos <see cref="T:System.ServiceModel.FaultException" /> que son el resultado de los mensajes de error, este objeto <see cref="T:System.ServiceModel.Channels.MessageFault" /> será el error que llegue.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultException.Message">
      <summary>Obtiene el mensaje para la excepción.</summary>
      <returns>Mensaje de la excepción.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultException.Reason">
      <summary>Obtiene <see cref="T:System.ServiceModel.FaultReason" /> para el error de SOAP.</summary>
      <returns>La razón del error de SOAP.</returns>
    </member>
    <member name="T:System.ServiceModel.FaultException`1">
      <summary>Se utiliza en una aplicación cliente para detectar los errores de SOAP especificados contractualmente.</summary>
      <typeparam name="TDetail">El tipo de detalle de error serializable.</typeparam>
    </member>
    <member name="M:System.ServiceModel.FaultException`1.#ctor(`0,System.ServiceModel.FaultReason,System.ServiceModel.FaultCode,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.FaultException`1" /> que utiliza el objeto de detalle especificado, la razón del error de SOAP, el código y los valores de la acción. </summary>
      <param name="detail">El objeto utilizado como detalle de error de SOAP.</param>
      <param name="reason">La razón del error de SOAP.</param>
      <param name="code">El código de error para el error de SOAP.</param>
      <param name="action">La acción del error de SOAP.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException`1.CreateMessageFault">
      <summary>Crea un objeto <see cref="T:System.ServiceModel.Channels.MessageFault" /> que se puede utilizar para crear un <see cref="T:System.ServiceModel.Channels.Message" /> que representa el error de SOAP.</summary>
      <returns>El error del mensaje creado.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultException`1.Detail">
      <summary>Obtiene el objeto que contiene la información del detalle de la condición del error.</summary>
      <returns>El objeto de detalle que es el parámetro de tipo del objeto <see cref="T:System.ServiceModel.FaultException`1" />.</returns>
    </member>
    <member name="M:System.ServiceModel.FaultException`1.ToString">
      <summary>Devuelve una cadena para el objeto <see cref="T:System.ServiceModel.FaultException`1" />.</summary>
      <returns>La cadena para el error de SOAP.</returns>
    </member>
    <member name="T:System.ServiceModel.FaultReason">
      <summary>Proporciona una descripción de texto de un error de SOAP. </summary>
    </member>
    <member name="M:System.ServiceModel.FaultReason.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.FaultReasonText})">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.FaultReason" /> utilizando la lista especificada de traducciones de error. </summary>
      <param name="translations">Una lista de objetos <see cref="T:System.ServiceModel.FaultReasonText" />. Cada uno de ellos describe el error en un idioma concreto. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="translations" /> es null. </exception>
      <exception cref="T:System.ArgumentException">El valor <paramref name="translations" /> está vacío o uno o más elementos es null. </exception>
    </member>
    <member name="M:System.ServiceModel.FaultReason.#ctor(System.ServiceModel.FaultReasonText)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.FaultReason" /> con el elemento de texto especificado que describe el error en un lenguaje concreto. </summary>
      <param name="translation">Una matriz de objetos <see cref="T:System.ServiceModel.FaultReasonText" /> que se corresponden con las descripciones de error en lenguajes diferentes. </param>
    </member>
    <member name="M:System.ServiceModel.FaultReason.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.FaultReason" /> utilizando la descripción de error especificada. </summary>
      <param name="text">Descripción de la razón por la que se produjo el error. </param>
    </member>
    <member name="M:System.ServiceModel.FaultReason.GetMatchingTranslation">
      <summary>Obtiene la descripción del error en el lenguaje utilizado por el subproceso actual. </summary>
      <returns>Objeto <see cref="T:System.ServiceModel.FaultReasonText" /> que contiene la descripción del error. </returns>
    </member>
    <member name="M:System.ServiceModel.FaultReason.GetMatchingTranslation(System.Globalization.CultureInfo)">
      <summary>Obtiene la descripción del error en el lenguaje especificado. </summary>
      <returns>El texto del error en el lenguaje especificado.</returns>
      <param name="cultureInfo">Un objeto <see cref="T:System.Globalization.CultureInfo" /> que especifica el lenguaje de la descripción del error. </param>
      <exception cref="T:System.ArgumentNullException">La propiedad <see cref="T:System.Globalization.CultureInfo" /> es null.</exception>
    </member>
    <member name="M:System.ServiceModel.FaultReason.ToString">
      <summary>Devuelve la razón del error como una cadena.</summary>
      <returns>Una cadena que contiene la razón para el error.</returns>
    </member>
    <member name="T:System.ServiceModel.FaultReasonText">
      <summary>Representa el texto de la razón de un error de SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.FaultReasonText.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.FaultReasonText" /> que utiliza el texto del error especificado.</summary>
      <param name="text">El texto que es la razón del error de SOAP.</param>
    </member>
    <member name="M:System.ServiceModel.FaultReasonText.#ctor(System.String,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.FaultReasonText" />. </summary>
      <param name="text">El texto de la razón del error.</param>
      <param name="xmlLang">El idioma del error.</param>
    </member>
    <member name="M:System.ServiceModel.FaultReasonText.Matches(System.Globalization.CultureInfo)">
      <summary>Devuelve un valor que indica si el idioma de la descripción coincide con el objeto <see cref="T:System.Globalization.CultureInfo" /> proporcionado.</summary>
      <returns>true si el <see cref="T:System.Globalization.CultureInfo" /> especificado coincide; de lo contrario, false.</returns>
      <param name="cultureInfo">El objeto <see cref="T:System.Globalization.CultureInfo" /> que se debe comparar con el idioma de la descripción.</param>
    </member>
    <member name="P:System.ServiceModel.FaultReasonText.Text">
      <summary>Obtiene el texto de la razón del error de SOAP.</summary>
      <returns>El texto de la razón del error de SOAP.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultReasonText.XmlLang">
      <summary>Obtiene el idioma de la razón del error de SOAP.</summary>
      <returns>El idioma de la razón del error de SOAP.</returns>
    </member>
    <member name="T:System.ServiceModel.IClientChannel">
      <summary>Define el comportamiento de la solicitud saliente y de los canales de solicitud/respuesta utilizados por las aplicaciones cliente.</summary>
    </member>
    <member name="P:System.ServiceModel.IClientChannel.AllowInitializationUI">
      <summary>Obtiene o establece un valor que indica si <see cref="M:System.ServiceModel.IClientChannel.DisplayInitializationUI" /> intenta llamar a los objetos <see cref="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer" /> en la propiedad <see cref="P:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers" /> o se inicia si esa colección no está vacía. </summary>
      <returns>true si se permite que Windows Communication Foundation (WCF) invoque los inicializadores de canales interactivos; de lo contrario, false. </returns>
    </member>
    <member name="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)">
      <summary>Llamada asincrónica para empezar a usar una interfaz de usuario con el fin de obtener información de las credenciales.</summary>
      <returns>El <see cref="T:System.IAsyncResult" /> que se debe usar para volver a llamar cuando el procesamiento haya terminado.</returns>
      <param name="callback">Método al que se llama cuando se completa este método.</param>
      <param name="state">Información sobre el estado del canal.</param>
    </member>
    <member name="P:System.ServiceModel.IClientChannel.DidInteractiveInitialization">
      <summary>Obtiene un valor que indica si se realizó una llamada a una interfaz de usuario para obtener información de la credencial. </summary>
      <returns>true si se llamara al método <see cref="M:System.ServiceModel.IClientChannel.DisplayInitializationUI" />, o los métodos <see cref="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" /> y <see cref="M:System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)" />; de lo contrario, false.</returns>
    </member>
    <member name="M:System.ServiceModel.IClientChannel.DisplayInitializationUI">
      <summary>Una llamada a una interfaz de usuario para obtener información de la credencial.</summary>
    </member>
    <member name="M:System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)">
      <summary>Se le llama cuando ha finalizado la llamada a <see cref="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" />.</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" />.</param>
    </member>
    <member name="E:System.ServiceModel.IClientChannel.UnknownMessageReceived">
      <summary>Este es un evento reservado. </summary>
    </member>
    <member name="P:System.ServiceModel.IClientChannel.Via">
      <summary>Obtiene el URI que contiene la dirección de transporte a la que se envían los mensajes en el canal de cliente.</summary>
      <returns>El <see cref="T:System.Uri" /> que contiene la dirección de transporte a la que se envían los mensajes en el canal.</returns>
    </member>
    <member name="T:System.ServiceModel.ICommunicationObject">
      <summary>Define el contrato para la máquina de estados básicos para todos los objetos orientados a la comunicación en el sistema, incluidos los canales, administradores de canales, generadores, agentes de escucha, distribuidores y hosts de servicio.</summary>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Abort">
      <summary>Hace que un objeto de comunicación pase inmediatamente de su estado actual al estado cerrado.  </summary>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
      <summary>Comienza una operación asincrónica para cerrar un objeto de comunicación.</summary>
      <returns>El objeto <see cref="T:System.IAsyncResult" /> que hace referencia a la operación de cierre asincrónica. </returns>
      <param name="callback">Delegado de <see cref="T:System.AsyncCallback" /> que recibe la notificación de la finalización de la operación de cierre asincrónica.</param>
      <param name="state">Objeto, especificado por la aplicación, que contiene la información de estado asociada a la operación de cierre asincrónica.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Se llamó a <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" /> en un objeto con el estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">El tiempo de espera predeterminado transcurrió antes de que <see cref="T:System.ServiceModel.ICommunicationObject" /> pudiera cerrarse correctamente.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Comienza una operación asincrónica para cerrar un objeto de comunicación con un tiempo de espera especificado.</summary>
      <returns>El objeto <see cref="T:System.IAsyncResult" /> que hace referencia a la operación de cierre asincrónica.</returns>
      <param name="timeout">El objeto <see cref="T:System.Timespan" /> que especifica el tiempo con el que cuenta la operación de envío para completarse antes de que se agote el tiempo de espera.</param>
      <param name="callback">Delegado de <see cref="T:System.AsyncCallback" /> que recibe la notificación de la finalización de la operación de cierre asincrónica.</param>
      <param name="state">Objeto, especificado por la aplicación, que contiene la información de estado asociada a la operación de cierre asincrónica.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Se llamó a <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" /> en un objeto con el estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">El tiempo de espera predeterminado transcurrió antes de que <see cref="T:System.ServiceModel.ICommunicationObject" /> pudiera cerrarse correctamente.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
      <summary>Comienza una operación asincrónica para abrir un objeto de comunicación.</summary>
      <returns>El objeto <see cref="T:System.IAsyncResult" /> que hace referencia a la operación de apertura asincrónica. </returns>
      <param name="callback">El delegado de <see cref="T:System.AsyncCallback" /> que recibe la notificación de la finalización de la operación de apertura asincrónica.</param>
      <param name="state">Objeto, especificado por la aplicación, que contiene la información de estado asociada a la operación de apertura asincrónica.</param>
      <exception cref="T:System.ServiceModel.CommunicationException">El <see cref="T:System.ServiceModel.ICommunicationObject" /> no pudo abrirse y ha entrado en el estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">El tiempo de espera para la apertura predeterminado transcurrió antes de que <see cref="T:System.ServiceModel.ICommunicationObject" /> pudiera introducir el estado <see cref="F:System.ServiceModel.CommunicationState.Opened" /> y ha introducido el estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Comienza una operación asincrónica para abrir un objeto de comunicación dentro de un intervalo de tiempo especificado.</summary>
      <returns>El objeto <see cref="T:System.IAsyncResult" /> que hace referencia a la operación de apertura asincrónica. </returns>
      <param name="timeout">El objeto <see cref="T:System.Timespan" /> que especifica el tiempo con el que cuenta la operación de envío para completarse antes de que se agote el tiempo de espera.</param>
      <param name="callback">El delegado de <see cref="T:System.AsyncCallback" /> que recibe la notificación de la finalización de la operación de apertura asincrónica.</param>
      <param name="state">Objeto, especificado por la aplicación, que contiene la información de estado asociada a la operación de apertura asincrónica.</param>
      <exception cref="T:System.ServiceModel.CommunicationException">El <see cref="T:System.ServiceModel.ICommunicationObject" /> no pudo abrirse y ha entrado en el estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">El tiempo de espera especificado transcurrió antes de que <see cref="T:System.ServiceModel.ICommunicationObject" /> pudiera introducir el estado <see cref="F:System.ServiceModel.CommunicationState.Opened" /> y ha introducido el estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Close">
      <summary>Hace que un objeto de comunicación pase de su estado actual al estado cerrado.  </summary>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Se llamó a <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> en un objeto con el estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">El tiempo de espera predeterminado transcurrió antes de que <see cref="T:System.ServiceModel.ICommunicationObject" /> pudiera cerrarse correctamente.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)">
      <summary>Hace que un objeto de comunicación pase de su estado actual al estado cerrado.  </summary>
      <param name="timeout">El objeto <see cref="T:System.Timespan" /> que especifica el tiempo con el que cuenta la operación de envío para completarse antes de que se agote el tiempo de espera.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Se llamó a <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> en un objeto con el estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">El tiempo de espera transcurrido antes de que <see cref="T:System.ServiceModel.ICommunicationObject" /> pudiera cerrarse correctamente.</exception>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Closed">
      <summary>Se produce cuando el objeto de comunicación completa su transición del estado de cierre al estado cerrado.</summary>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Closing">
      <summary>Se produce cuando el objeto de comunicación introduce primero el estado de cierre.</summary>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)">
      <summary>Completa una operación asincrónica para cerrar un objeto de comunicación.</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> que se devuelve al llamar al método <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" />.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Se llamó a <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" /> en un objeto con el estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">El tiempo de espera transcurrido antes de que <see cref="T:System.ServiceModel.ICommunicationObject" /> pudiera cerrarse correctamente.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)">
      <summary>Completa una operación asincrónica para abrir un objeto de comunicación.</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> que se devuelve al llamar al método <see cref="M:System.ServiceModel.ICommunicationObject.BeginOpen" />.</param>
      <exception cref="T:System.ServiceModel.CommunicationException">El <see cref="T:System.ServiceModel.ICommunicationObject" /> no pudo abrirse y ha entrado en el estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">El tiempo de espera especificado transcurrió antes de que <see cref="T:System.ServiceModel.ICommunicationObject" /> pudiera introducir el estado <see cref="F:System.ServiceModel.CommunicationState.Opened" /> y ha introducido el estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Faulted">
      <summary>Se produce cuando el objeto de comunicación introduce primero el estado de error.</summary>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Open">
      <summary>Hace que un objeto de comunicación pase del estado creado al estado abierto.  </summary>
      <exception cref="T:System.ServiceModel.CommunicationException">El <see cref="T:System.ServiceModel.ICommunicationObject" /> no pudo abrirse y ha entrado en el estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">El tiempo de espera para la apertura predeterminado transcurrió antes de que <see cref="T:System.ServiceModel.ICommunicationObject" /> pudiera introducir el estado <see cref="F:System.ServiceModel.CommunicationState.Opened" /> y ha introducido el estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)">
      <summary>Hace que un objeto de comunicación pase del estado creado al estado abierto dentro de un intervalo de tiempo especificado.</summary>
      <param name="timeout">El objeto <see cref="T:System.Timespan" /> que especifica el tiempo con el que cuenta la operación de envío para completarse antes de que se agote el tiempo de espera.</param>
      <exception cref="T:System.ServiceModel.CommunicationException">El <see cref="T:System.ServiceModel.ICommunicationObject" /> no pudo abrirse y ha entrado en el estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">El tiempo de espera especificado transcurrió antes de que <see cref="T:System.ServiceModel.ICommunicationObject" /> pudiera introducir el estado <see cref="F:System.ServiceModel.CommunicationState.Opened" /> y ha introducido el estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Opened">
      <summary>Se produce cuando el objeto de comunicación completa su transición del estado de apertura al estado abierto.</summary>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Opening">
      <summary>Se produce cuando el objeto de comunicación introduce primero el estado de apertura.</summary>
    </member>
    <member name="P:System.ServiceModel.ICommunicationObject.State">
      <summary>Obtiene el estado actual del objeto orientado a la comunicación.</summary>
      <returns>El valor de <see cref="T:System.ServiceModel.CommunicationState" /> del objeto.</returns>
    </member>
    <member name="T:System.ServiceModel.IContextChannel">
      <summary>Define la interfaz para el control de contexto de un canal.</summary>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.AllowOutputBatching">
      <summary>Obtiene o establece un valor que indica a Windows Communication Foundation (WCF) que almacene un conjunto de mensajes antes de entregar los mensajes al transporte.</summary>
      <returns>true si se permite el procesamiento por lotes de mensajes salientes; de lo contrario, false.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.InputSession">
      <summary>Obtiene la sesión de entrada para el canal.</summary>
      <returns>La clase <see cref="T:System.ServiceModel.Channels.IInputSession" /> del canal.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.LocalAddress">
      <summary>Obtiene el extremo local para el canal.</summary>
      <returns>El <see cref="T:System.ServiceModel.EndpointAddress" /> local para el canal.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.OperationTimeout">
      <summary>Obtiene o establece el período de tiempo dentro del cual deberá completarse una operación o iniciarse una excepción.</summary>
      <returns>El <see cref="T:System.TimeSpan" /> que especifica el periodo de tiempo en el que debería completarse una operación.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.OutputSession">
      <summary>Obtiene la sesión de salida asociada con el canal, si la hubiera.</summary>
      <returns>Una implementación de <see cref="T:System.ServiceModel.Channels.IOutputSession" /> si existe una sesión de entrada; de lo contrario, null.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.RemoteAddress">
      <summary>Obtiene la dirección remota asociada al canal.</summary>
      <returns>El <see cref="T:System.ServiceModel.EndpointAddress" /> remoto para el canal.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.SessionId">
      <summary>Devuelve un identificador para la sesión actual, si lo hubiera.</summary>
      <returns>El identificador de la sesión actual, si lo hubiera.</returns>
    </member>
    <member name="T:System.ServiceModel.IDefaultCommunicationTimeouts">
      <summary>Define la interfaz para especificar tiempos de espera de la comunicación utilizados por canales, administradores de canal como agentes de escucha del canal o generadores de canales y hosts del servicio.</summary>
    </member>
    <member name="P:System.ServiceModel.IDefaultCommunicationTimeouts.CloseTimeout">
      <summary>Obtiene el intervalo de tiempo después del cual el método de cierre, invocado por un objeto de comunicación, caduca.</summary>
      <returns>
        <see cref="T:System.Timespan" /> que especifica el intervalo de tiempo de espera para que caduque el método de cierre.</returns>
    </member>
    <member name="P:System.ServiceModel.IDefaultCommunicationTimeouts.OpenTimeout">
      <summary>Obtiene el intervalo de tiempo después del cual el método de apertura, invocado por un objeto de comunicación, caduca.</summary>
      <returns>
        <see cref="T:System.Timespan" /> que especifica el intervalo de tiempo de espera para que caduque el método de apertura.</returns>
    </member>
    <member name="P:System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout">
      <summary>Obtiene el intervalo de tiempo después del cual el método de recepción, invocado por un objeto de comunicación, caduca.</summary>
      <returns>
        <see cref="T:System.Timespan" /> que especifica el intervalo de tiempo de espera para que caduque el método de recepción.</returns>
    </member>
    <member name="P:System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout">
      <summary>Obtiene el intervalo de tiempo después del cual el método de envío, invocado por un objeto de comunicación, caduca.</summary>
      <returns>
        <see cref="T:System.Timespan" /> que especifica el intervalo de tiempo de espera para que caduque el método de envío.</returns>
    </member>
    <member name="T:System.ServiceModel.IExtensibleObject`1">
      <summary>Permita que un objeto participe en el comportamiento personalizado, como registrarse para eventos o inspeccionar las transiciones de estado.</summary>
      <typeparam name="T">El tipo de la clase de extensión. </typeparam>
    </member>
    <member name="P:System.ServiceModel.IExtensibleObject`1.Extensions">
      <summary>Obtiene una colección de objetos de extensión para este objeto extensible.</summary>
      <returns>Un <see cref="T:System.ServiceModel.IExtensionCollection`1" /> de objetos de extensión.</returns>
    </member>
    <member name="T:System.ServiceModel.IExtension`1">
      <summary>Permite a un objeto extender otro objeto a través de la agregación.</summary>
      <typeparam name="T">El objeto que participa en el comportamiento personalizado.</typeparam>
    </member>
    <member name="M:System.ServiceModel.IExtension`1.Attach(`0)">
      <summary>Permite a un objeto de extensión averiguar cuándo se ha agregado.Se llama cuando la extensión se añade a la propiedad <see cref="P:System.ServiceModel.IExtensibleObject`1.Extensions" />.</summary>
      <param name="owner">El objeto extensible que agrega esta extensión.</param>
    </member>
    <member name="M:System.ServiceModel.IExtension`1.Detach(`0)">
      <summary>Permite a un objeto averiguar cuándo deja de agregarse.Se llama cuando se quita una extensión de la propiedad <see cref="P:System.ServiceModel.IExtensibleObject`1.Extensions" />.</summary>
      <param name="owner">El objeto extensible que agrega esta extensión.</param>
    </member>
    <member name="T:System.ServiceModel.IExtensionCollection`1">
      <summary>Una colección de objetos <see cref="T:System.ServiceModel.IExtension`1" /> que permiten recuperar <see cref="T:System.ServiceModel.IExtension`1" /> por su tipo.</summary>
      <typeparam name="T">El tipo de los objetos de extensión.</typeparam>
    </member>
    <member name="M:System.ServiceModel.IExtensionCollection`1.Find``1">
      <summary>Busca el objeto de extensión especificado en la colección.</summary>
      <returns>El objeto de extensión que se encontró.</returns>
      <typeparam name="E">El tipo de objeto de extensión.</typeparam>
    </member>
    <member name="M:System.ServiceModel.IExtensionCollection`1.FindAll``1">
      <summary>Busca todos los objetos de extensión de tipo <paramref name="E" /> en la colección.</summary>
      <returns>Una colección de todos los objetos de extensión en la colección que implementan el tipo especificado.</returns>
      <typeparam name="E">El tipo de objeto de extensión.</typeparam>
    </member>
    <member name="T:System.ServiceModel.InvalidMessageContractException">
      <summary>Representa un contrato de mensaje que no es válido.</summary>
    </member>
    <member name="M:System.ServiceModel.InvalidMessageContractException.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.InvalidMessageContractException" />. </summary>
    </member>
    <member name="M:System.ServiceModel.InvalidMessageContractException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.InvalidMessageContractException" /> utilizando el mensaje especificado.</summary>
      <param name="message">Mensaje de la excepción.</param>
    </member>
    <member name="M:System.ServiceModel.InvalidMessageContractException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.InvalidMessageContractException" /> que utiliza el mensaje y la excepción interna especificados.</summary>
      <param name="message">Mensaje de la excepción.</param>
      <param name="innerException">Excepción interna.</param>
    </member>
    <member name="T:System.ServiceModel.MessageBodyMemberAttribute">
      <summary>Especifica que un miembro se serializa como un elemento dentro del cuerpo de SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageBodyMemberAttribute.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.MessageBodyMemberAttribute" />. </summary>
    </member>
    <member name="P:System.ServiceModel.MessageBodyMemberAttribute.Order">
      <summary>Obtiene o establece un valor que indica la posición en la que se serializa el miembro en el cuerpo de SOAP.</summary>
      <returns>La ubicación del elemento en el cuerpo de SOAP.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor pasado al establecedor de la propiedad es un entero negativo.</exception>
    </member>
    <member name="T:System.ServiceModel.MessageContractAttribute">
      <summary>Define una clase fuertemente tipada que corresponde a un mensaje SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageContractAttribute.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.MessageContractAttribute" />. </summary>
    </member>
    <member name="P:System.ServiceModel.MessageContractAttribute.IsWrapped">
      <summary>Obtiene o establece un valor que especifica si el cuerpo del mensaje tiene un elemento contenedor.</summary>
      <returns>true si el cuerpo del mensaje tiene un elemento contenedor; de lo contrario, false.El valor predeterminado es true.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageContractAttribute.WrapperName">
      <summary>Obtiene o establece el nombre del elemento contenedor del cuerpo del mensaje.</summary>
      <returns>El nombre del elemento contenedor en el cuerpo del mensaje.</returns>
      <exception cref="T:System.ArgumentNullException">El valor es null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor es una cadena vacía.</exception>
    </member>
    <member name="P:System.ServiceModel.MessageContractAttribute.WrapperNamespace">
      <summary>Obtiene o establece el espacio de nombres del elemento contenedor del cuerpo del mensaje.</summary>
      <returns>El espacio de nombres del elemento contenedor.</returns>
    </member>
    <member name="T:System.ServiceModel.MessageContractMemberAttribute">
      <summary>Declara los miembros base para <see cref="T:System.ServiceModel.MessageBodyMemberAttribute" /> y <see cref="T:System.ServiceModel.MessageHeaderAttribute" />.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageContractMemberAttribute.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.MessageContractMemberAttribute" />.</summary>
    </member>
    <member name="P:System.ServiceModel.MessageContractMemberAttribute.Name">
      <summary>Especifica el nombre del elemento que se corresponde a este miembro. </summary>
      <returns>El nombre del elemento que se corresponde a este miembro.Esta cadena debe ser un nombre de elemento XML válido.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageContractMemberAttribute.Namespace">
      <summary>Especifica el espacio de nombres del elemento que se corresponde a este miembro. </summary>
      <returns>Un URI de espacio de nombres del elemento que se corresponde con este miembro. </returns>
    </member>
    <member name="T:System.ServiceModel.MessageCredentialType">
      <summary>Enumera los tipos de credencial de mensaje válidos.</summary>
    </member>
    <member name="F:System.ServiceModel.MessageCredentialType.Certificate">
      <summary>Especifica la autenticación del cliente mediante un certificado.</summary>
    </member>
    <member name="F:System.ServiceModel.MessageCredentialType.IssuedToken">
      <summary>Especifica la autenticación del cliente mediante un token emitido.</summary>
    </member>
    <member name="F:System.ServiceModel.MessageCredentialType.None">
      <summary>Especifica la autenticación anónima.</summary>
    </member>
    <member name="F:System.ServiceModel.MessageCredentialType.UserName">
      <summary>Especifica la autenticación del cliente mediante UserName.</summary>
    </member>
    <member name="F:System.ServiceModel.MessageCredentialType.Windows">
      <summary>Especifica la autenticación del cliente mediante Windows.</summary>
    </member>
    <member name="T:System.ServiceModel.MessageHeader`1">
      <summary>Representa el contenido de un encabezado SOAP.</summary>
      <typeparam name="T">El tipo de encabezado del mensaje.</typeparam>
    </member>
    <member name="M:System.ServiceModel.MessageHeader`1.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.MessageHeader`1" />.  </summary>
    </member>
    <member name="M:System.ServiceModel.MessageHeader`1.#ctor(`0)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.MessageHeader`1" /> con el contenido del encabezado especificado.</summary>
      <param name="content">El contenido del nuevo encabezado.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeader`1.#ctor(`0,System.Boolean,System.String,System.Boolean)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.MessageHeader`1" /> con el contenido del encabezado y los metadatos especificados. </summary>
      <param name="content">El contenido del nuevo encabezado.</param>
      <param name="mustUnderstand">Un valor que indica si se debe entender el encabezado.</param>
      <param name="actor">El destinatario previsto del encabezado del mensaje.</param>
      <param name="relay">Un valor que indica si se debería retransmitir el encabezado.</param>
    </member>
    <member name="P:System.ServiceModel.MessageHeader`1.Actor">
      <summary>Obtiene o establece el destinatario previsto del encabezado del mensaje.</summary>
      <returns>El destinatario previsto del encabezado del mensaje.El valor predeterminado es una cadena vacía ("").</returns>
    </member>
    <member name="P:System.ServiceModel.MessageHeader`1.Content">
      <summary>Obtiene o establece el contenido del encabezado.</summary>
      <returns>Contenido del encabezado.</returns>
    </member>
    <member name="M:System.ServiceModel.MessageHeader`1.GetUntypedHeader(System.String,System.String)">
      <summary>Obtiene el encabezado del mensaje con el espacio de nombres especificado y el nombre local.</summary>
      <returns>Un encabezado del mensaje con el espacio de nombres especificado y el nombre local.</returns>
      <param name="name">El nombre local del elemento XML del encabezado</param>
      <param name="ns">Espacio de nombres URI del elemento XML de encabezado.</param>
    </member>
    <member name="P:System.ServiceModel.MessageHeader`1.MustUnderstand">
      <summary>Obtiene o establece un valor que indica si se debe entender el encabezado, tal y como se indicado en la especificación SOAP 1.1/1.2. </summary>
      <returns>true si se debe entender el encabezado; de lo contrario, false.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageHeader`1.Relay">
      <summary>Obtiene un valor que indica si debe retransmitirse el encabezado.</summary>
      <returns>true si se debería retransmitir el encabezado; de lo contrario, false.</returns>
    </member>
    <member name="T:System.ServiceModel.MessageHeaderException">
      <summary>La excepción que se produce cuando no se satisfacen las expectativas con respecto a los encabezados de un mensaje SOAP cuando se procesa el mensaje.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.MessageHeaderException" /> con el mensaje especificado.</summary>
      <param name="message">El mensaje transportado por la excepción.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Boolean)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.MessageHeaderException" /> utilizando el mensaje especificado y un valor que indica si el encabezado del mensaje es un duplicado o falta.</summary>
      <param name="message">Mensaje de la excepción.</param>
      <param name="isDuplicate">true si el encabezado de varios mensajes es un duplicado; false si no hay ningún encabezado de mensaje.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.MessageHeaderException" /> utilizando el mensaje y la excepción interna especificados que haya provocado la excepción.</summary>
      <param name="message">Mensaje de la excepción.</param>
      <param name="innerException">
        <see cref="T:System.Exception" /> que contiene la excepción interna que produjo la excepción.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.MessageHeaderException" /> utilizando el mensaje especificado, el nombre del encabezado y el espacio de nombres especificados.</summary>
      <param name="message">Mensaje de la excepción.</param>
      <param name="headerName">El nombre del encabezado del mensaje.</param>
      <param name="ns">El espacio de nombres del encabezado del mensaje.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.MessageHeaderException" /> mediante el mensaje especificado, el nombre del encabezado y el espacio de nombres y un valor que indica si el encabezado del mensaje es un duplicado o si falta.</summary>
      <param name="message">Mensaje de la excepción.</param>
      <param name="headerName">El nombre del encabezado del mensaje.</param>
      <param name="ns">El espacio de nombres del encabezado del mensaje.</param>
      <param name="isDuplicate">true si el encabezado de varios mensajes es un duplicado; false si no hay ningún encabezado de mensaje.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.MessageHeaderException" /> mediante el mensaje especificado, el nombre del encabezado y el espacio de nombres, un valor que indica si el encabezado del mensaje es un duplicado o falta, y la excepción interna que produjo la excepción.</summary>
      <param name="message">Mensaje de la excepción.</param>
      <param name="headerName">El nombre del encabezado del mensaje.</param>
      <param name="ns">El espacio de nombres del encabezado del mensaje.</param>
      <param name="isDuplicate">true si el encabezado de varios mensajes es un duplicado; false si no hay ningún encabezado de mensaje.</param>
      <param name="innerException">
        <see cref="T:System.Exception" /> que contiene la excepción interna que produjo la excepción.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.MessageHeaderException" /> mediante el mensaje, el nombre del encabezado y el espacio de nombres, y la excepción interna especificados que hayan provocado la excepción.</summary>
      <param name="message">Mensaje de la excepción.</param>
      <param name="headerName">El nombre del encabezado del mensaje.</param>
      <param name="ns">El espacio de nombres del encabezado del mensaje.</param>
      <param name="innerException">
        <see cref="T:System.Exception" /> que contiene la excepción interna que produjo la excepción.</param>
    </member>
    <member name="P:System.ServiceModel.MessageHeaderException.HeaderName">
      <summary>Obtiene el nombre del encabezado SOAP que produjo la excepción.</summary>
      <returns>Nombre del encabezado SOAP.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageHeaderException.HeaderNamespace">
      <summary>Obtiene el espacio de nombres del encabezado SOAP que produjo la excepción.</summary>
      <returns>El espacio de nombres del encabezado SOAP.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageHeaderException.IsDuplicate">
      <summary>Obtiene un valor que indica si hay varios encabezados de mensaje o ninguno.</summary>
      <returns>true si el encabezado de varios mensajes es un duplicado; false si no hay ningún encabezado de mensaje.</returns>
    </member>
    <member name="T:System.ServiceModel.MessageParameterAttribute">
      <summary>Controla el nombre de los nombres de parámetros de respuesta y solicitud.No se puede utilizar con <see cref="T:System.ServiceModel.Channels.Message" /> ni contratos de mensajes.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageParameterAttribute.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.MessageParameterAttribute" />. </summary>
    </member>
    <member name="P:System.ServiceModel.MessageParameterAttribute.Name">
      <summary>Obtiene o establece el atributo de nombre del parámetro en el esquema XML (XSD).</summary>
      <returns>El atributo de nombre del parámetro en el XSD.</returns>
    </member>
    <member name="T:System.ServiceModel.OperationContext">
      <summary>Proporciona acceso al contexto de ejecución de un método de servicio.</summary>
    </member>
    <member name="M:System.ServiceModel.OperationContext.#ctor(System.ServiceModel.IContextChannel)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.OperationContext" /> que usa el <see cref="T:System.ServiceModel.IContextChannel" /> especificado en una aplicación cliente. </summary>
      <param name="channel">El <see cref="T:System.ServiceModel.IContextChannel" /> utilizado para crear un nuevo <see cref="T:System.ServiceModel.OperationContext" /> de cliente.</param>
      <exception cref="T:System.ArgumentNullException">El valor del canal es null.</exception>
    </member>
    <member name="P:System.ServiceModel.OperationContext.Current">
      <summary>Obtiene o define el contexto de ejecución del subproceso actual.</summary>
      <returns>El <see cref="T:System.ServiceModel.OperationContext" /> que representa el contexto de mensajería y ejecución del método actual.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.Extensions">
      <summary>Recibe la colección de extensiones de servicio desde el contexto del mensaje actual.</summary>
      <returns>Una colección de extensiones de <see cref="T:System.ServiceModel.OperationContext" />.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.IncomingMessageHeaders">
      <summary>Obtiene los encabezados de mensaje entrante para <see cref="T:System.ServiceModel.OperationContext" />.</summary>
      <returns>Un objeto <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> que contiene los encabezados de mensaje entrante.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.IncomingMessageProperties">
      <summary>Obtiene las propiedades de mensaje para el mensaje entrante en <see cref="T:System.ServiceModel.OperationContext" />.</summary>
      <returns>Un objeto <see cref="T:System.ServiceModel.Channels.MessageProperties" /> que contiene las propiedades del mensaje en el mensaje entrante.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.IncomingMessageVersion">
      <summary>Obtiene la versión del mensaje SOAP entrante para <see cref="T:System.ServiceModel.OperationContext" />.</summary>
      <returns>La versión de SOAP del mensaje entrante.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.IsUserContext">
      <summary>Esta propiedad está pensada para su uso por el sistema y los usuarios no deberían recurrir a ella.</summary>
      <returns>true.</returns>
    </member>
    <member name="E:System.ServiceModel.OperationContext.OperationCompleted">
      <summary>Se produce cuando la operación se ha completado. </summary>
    </member>
    <member name="P:System.ServiceModel.OperationContext.OutgoingMessageHeaders">
      <summary>Obtiene los encabezados de mensajes salientes para el <see cref="T:System.ServiceModel.OperationContext" /> activo.</summary>
      <returns>Un objeto <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> que contiene los encabezados de mensajes salientes para el <see cref="T:System.ServiceModel.OperationContext" /> activo.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.OutgoingMessageProperties">
      <summary>Obtiene las propiedades del mensaje para el mensaje saliente en el <see cref="T:System.ServiceModel.OperationContext" /> activo.</summary>
      <returns>Un objeto <see cref="T:System.ServiceModel.Channels.MessageProperties" /> que contiene las propiedades del mensaje en el mensaje saliente.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.RequestContext">
      <summary>Obtiene o establece la implementación de <see cref="T:System.ServiceModel.Channels.RequestContext" /> para este método.</summary>
      <returns>Una implementación <see cref="T:System.ServiceModel.Channels.RequestContext" /> o null si no hay ningún contexto de la solicitud.</returns>
    </member>
    <member name="T:System.ServiceModel.OperationContextScope">
      <summary>Crea un bloque dentro del cual un objeto <see cref="T:System.ServiceModel.OperationContext" /> se encontrará dentro del ámbito.</summary>
    </member>
    <member name="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.IContextChannel)">
      <summary>Inicializa un nueva instancia de la clase <see cref="T:System.ServiceModel.OperationContextScope" /> que utiliza el <see cref="T:System.ServiceModel.IContextChannel" /> especificado para crear un nuevo <see cref="T:System.ServiceModel.OperationContext" /> para el ámbito.</summary>
      <param name="channel">El canal que usar para crear el ámbito para un nuevo <see cref="T:System.ServiceModel.OperationContext" />.</param>
    </member>
    <member name="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.OperationContext)">
      <summary>Inicializa un nueva instancia de la clase <see cref="T:System.ServiceModel.OperationContextScope" /> para crear un ámbito para el objeto <see cref="T:System.ServiceModel.OperationContext" /> especificado.</summary>
      <param name="context">El <see cref="T:System.ServiceModel.OperationContext" /> activo en el ámbito creado.</param>
    </member>
    <member name="M:System.ServiceModel.OperationContextScope.Dispose">
      <summary>Restaura el <see cref="T:System.ServiceModel.OperationContext" /> original al contexto activo y recicla el objeto <see cref="T:System.ServiceModel.OperationContextScope" />.</summary>
    </member>
    <member name="T:System.ServiceModel.OperationContractAttribute">
      <summary>Indica que un método define una operación que forma parte de un contrato de servicio en una aplicación Windows Communication Foundation (WCF). </summary>
    </member>
    <member name="M:System.ServiceModel.OperationContractAttribute.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.OperationContractAttribute" />. </summary>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.Action">
      <summary>Obtiene o establece la acción WS-Addressing del mensaje de solicitud. </summary>
      <returns>La acción que utilizar al generar el encabezado de la acción WS-Addressing.</returns>
      <exception cref="T:System.ArgumentNullException">El valor es null.</exception>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.AsyncPattern">
      <summary>Indica que una operación se implementa utilizando de forma asincrónica un par de métodos Begin&lt;nombreDeMétodo&gt; and End&lt;nombreDeMétodo&gt; en un contrato de servicio. </summary>
      <returns>true si el método Begin&lt;methodName&gt; coincide con un método End&lt;methodName&gt; y la infraestructura puede tratarlo como una operación que se implementa como un par de métodos asincrónicos en la interfaz de servicio; de lo contrario, false.El valor predeterminado es false.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
      <summary>Obtiene o establece un valor que indica si una operación devuelve un mensaje de respuesta.</summary>
      <returns>true si este método recibe un mensaje de solicitud y no devuelve ningún mensaje de respuesta; de lo contrario, false.El valor predeterminado es false.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.Name">
      <summary>Obtiene o establece el nombre de la operación.</summary>
      <returns>Nombre de la operación.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.ServiceModel.OperationContractAttribute.Name" /> es null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor es una cadena vacía.</exception>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.ReplyAction">
      <summary>Obtiene o establece el valor de la acción SOAP para el mensaje de respuesta de la operación.</summary>
      <returns>El valor de la acción de SOAP para el mensaje de respuesta.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.ServiceModel.OperationContractAttribute.ReplyAction" /> es null.</exception>
    </member>
    <member name="T:System.ServiceModel.OperationFormatStyle">
      <summary>Representa el estilo SOAP que determina cómo se da formato a los metadatos de WSDL para el servicio.</summary>
    </member>
    <member name="F:System.ServiceModel.OperationFormatStyle.Document">
      <summary>Provoca que la representación de WSDL contenga un elemento único que representa el documento que se intercambia para la operación.</summary>
    </member>
    <member name="F:System.ServiceModel.OperationFormatStyle.Rpc">
      <summary>Provoca la representación de WSDL de los mensajes intercambiados para una operación y contiene parámetros como si fuera una llamada de procedimiento remoto.</summary>
    </member>
    <member name="T:System.ServiceModel.ProtocolException">
      <summary>La excepción vista en el cliente que se inicia cuando la comunicación con la parte remota es imposible debido a que los protocolos de transferencia de datos no están igualados.</summary>
    </member>
    <member name="M:System.ServiceModel.ProtocolException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.ProtocolException" /> con el mensaje de error especificado.</summary>
      <param name="message">Mensaje de error que explica la razón de la excepción.</param>
    </member>
    <member name="M:System.ServiceModel.ProtocolException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.ProtocolException" /> con un mensaje de error especificado y una referencia a la excepción interna que es la causa de la excepción.</summary>
      <param name="message">Mensaje de error que explica la razón de la excepción.</param>
      <param name="innerException">La excepción <see cref="T:System.Exception" /> que provocó que se iniciara la excepción actual. </param>
    </member>
    <member name="T:System.ServiceModel.QuotaExceededException">
      <summary>La excepción que se produce cuando se ha superado una cuota de mensajes.</summary>
    </member>
    <member name="M:System.ServiceModel.QuotaExceededException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.QuotaExceededException" /> con el mensaje de error especificado.</summary>
      <param name="message">Mensaje de error que explica la razón de la excepción.</param>
    </member>
    <member name="M:System.ServiceModel.QuotaExceededException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.QuotaExceededException" /> con un mensaje de error especificado y una referencia a la excepción interna que es la causa de la excepción.</summary>
      <param name="message">Mensaje de error que explica la razón de la excepción.</param>
      <param name="innerException">La excepción <see cref="T:System.Exception" /> que provocó que se iniciara la excepción actual.</param>
    </member>
    <member name="T:System.ServiceModel.SecurityMode">
      <summary>Determina los valores de seguridad de un enlace.</summary>
    </member>
    <member name="F:System.ServiceModel.SecurityMode.Message">
      <summary>La seguridad se proporciona mediante la seguridad del mensaje SOAP.</summary>
    </member>
    <member name="F:System.ServiceModel.SecurityMode.None">
      <summary>La seguridad está deshabilitada.</summary>
    </member>
    <member name="F:System.ServiceModel.SecurityMode.Transport">
      <summary>La seguridad se proporciona utilizando un transporte seguro (por ejemplo, HTTPS).</summary>
    </member>
    <member name="F:System.ServiceModel.SecurityMode.TransportWithMessageCredential">
      <summary>Un transporte seguro (por ejemplo, HTTPS) proporciona integridad, confidencialidad y autenticación de servidor mientras la seguridad del mensaje SOAP proporciona la autenticación del cliente.</summary>
    </member>
    <member name="T:System.ServiceModel.ServerTooBusyException">
      <summary>La excepción que se produce cuando un servidor está demasiado ocupado para aceptar un mensaje.</summary>
    </member>
    <member name="M:System.ServiceModel.ServerTooBusyException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.ServerTooBusyException" /> con el mensaje de error especificado.</summary>
      <param name="message">Mensaje de error que explica la razón de la excepción.</param>
    </member>
    <member name="M:System.ServiceModel.ServerTooBusyException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.ServerTooBusyException" /> con un mensaje de error especificado y una referencia a la excepción interna que es la causa de la excepción.</summary>
      <param name="message">Mensaje de error que explica la razón de la excepción.</param>
      <param name="innerException">La excepción <see cref="T:System.Exception" /> que provocó que se iniciara la excepción actual.</param>
    </member>
    <member name="T:System.ServiceModel.ServiceActivationException">
      <summary>La excepción que se produce cuando un servicio no se activa.</summary>
    </member>
    <member name="M:System.ServiceModel.ServiceActivationException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.ServiceActivationException" /> con el mensaje de error especificado.</summary>
      <param name="message">Mensaje de error que explica la razón de la excepción.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceActivationException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.ServiceActivationException" /> con el mensaje de error y la excepción interna especificados.  </summary>
      <param name="message">Mensaje de error que explica la razón de la excepción.</param>
      <param name="innerException">La excepción <see cref="T:System.Exception" /> que provocó que se iniciara la excepción actual. </param>
    </member>
    <member name="T:System.ServiceModel.ServiceContractAttribute">
      <summary>Indica que una interfaz o una clase define un contrato de servicio en una aplicación Windows Communication Foundation (WCF). </summary>
    </member>
    <member name="M:System.ServiceModel.ServiceContractAttribute.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.ServiceContractAttribute" />. </summary>
    </member>
    <member name="P:System.ServiceModel.ServiceContractAttribute.CallbackContract">
      <summary>Obtiene o establece el tipo de contrato de devolución de llamada cuando el contrato es un contrato dúplex.</summary>
      <returns>
        <see cref="T:System.Type" /> que indica el contrato de devolución de llamada.El valor predeterminado es null.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceContractAttribute.ConfigurationName">
      <summary>Obtiene o establece el nombre utilizado para buscar el servicio en un archivo de configuración de la aplicación.</summary>
      <returns>El nombre utilizado para buscar el elemento de servicio en un archivo de configuración de la aplicación.El valor predeterminado es el nombre de la clase de implementación de servicio.</returns>
      <exception cref="T:System.ArgumentNullException">El valor es NULL.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor es una cadena vacía.</exception>
    </member>
    <member name="P:System.ServiceModel.ServiceContractAttribute.Name">
      <summary>Obtiene o establece el nombre para el elemento &lt;portType&gt; en el lenguaje de descripción de servicios Web (WSDL). </summary>
      <returns>El valor predeterminado es el nombre de la clase o interfaz a la que se aplica <see cref="T:System.ServiceModel.ServiceContractAttribute" />. </returns>
      <exception cref="T:System.ArgumentNullException">El valor es NULL.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor es una cadena vacía.</exception>
    </member>
    <member name="P:System.ServiceModel.ServiceContractAttribute.Namespace">
      <summary>Obtiene o establece el espacio de nombres del elemento &lt;portType&gt; en el lenguaje de descripción de servicios Web (WSDL).</summary>
      <returns>El espacio de nombres WSDL del elemento &lt;portType&gt;.El valor predeterminado es "http://tempuri.org".</returns>
    </member>
    <member name="T:System.ServiceModel.ServiceKnownTypeAttribute">
      <summary>Especifica los tipos conocidos que un servicio va a usar cuando se serializa o deserializa.</summary>
    </member>
    <member name="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.ServiceKnownTypeAttribute" /> y especifica el nombre de un método que devuelve los tipos conocidos.</summary>
      <param name="methodName">El nombre de un método que devuelve los tipos conocidos.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.String,System.Type)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.ServiceKnownTypeAttribute" /> con el nombre de un método que devuelve los tipos conocidos y el tipo que contiene el método (o métodos) que devuelve los tipos conocidos.</summary>
      <param name="methodName">El nombre de un método que devuelve los tipos conocidos.</param>
      <param name="declaringType">El tipo que puede utilizar los tipos conocidos en su gráfico de objetos.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.Type)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.ServiceKnownTypeAttribute" /> con el tipo conocido especificado.</summary>
      <param name="type">Especifica un tipo conocido que se puede usar en un parámetro o el valor devuelto definido por el servicio.</param>
    </member>
    <member name="P:System.ServiceModel.ServiceKnownTypeAttribute.DeclaringType">
      <summary>Obtiene el tipo que contiene los métodos que devuelven los tipos conocidos.</summary>
      <returns>El tipo <see cref="T:System.Type" /> que contiene los métodos que devuelven los tipos conocidos.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceKnownTypeAttribute.MethodName">
      <summary>Obtiene el nombre de un método que devuelve la colección de tipos conocidos.</summary>
      <returns>El nombre del método que devuelve los tipos conocidos.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceKnownTypeAttribute.Type">
      <summary>El tipo conocido que puede estar incluido en un gráfico de objetos.</summary>
      <returns>
        <see cref="T:System.Type" /> del tipo conocido.</returns>
    </member>
    <member name="T:System.ServiceModel.TransferMode">
      <summary>Indica si un canal utiliza modos transmitidos o almacenados en búfer para la transferencia de mensajes de solicitud y de respuesta.</summary>
    </member>
    <member name="F:System.ServiceModel.TransferMode.Buffered">
      <summary>Los mensajes de solicitud y respuesta están almacenados en búfer.</summary>
    </member>
    <member name="F:System.ServiceModel.TransferMode.Streamed">
      <summary>Se transmiten los mensajes de solicitud y respuesta.</summary>
    </member>
    <member name="F:System.ServiceModel.TransferMode.StreamedRequest">
      <summary>Se transmite el mensaje de solicitud y se almacena en búfer el mensaje de respuesta.</summary>
    </member>
    <member name="F:System.ServiceModel.TransferMode.StreamedResponse">
      <summary>Se almacena en búfer el mensaje de solicitud y se transmite el mensaje de respuesta.</summary>
    </member>
    <member name="T:System.ServiceModel.UnknownMessageReceivedEventArgs">
      <summary>Contiene el mensaje recibido por un canal y no puede estar asociado con cualquier operación de devolución de llamada o solicitud pendiente.</summary>
    </member>
    <member name="P:System.ServiceModel.UnknownMessageReceivedEventArgs.Message">
      <summary>Obtiene el mensaje desconocido que fue la causa del evento.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Message" /> que fue la causa del evento.</returns>
    </member>
    <member name="T:System.ServiceModel.XmlSerializerFormatAttribute">
      <summary>Indica a la infraestructura de Windows Communication Foundation (WCF) que utilice <see cref="T:System.Xml.Serialization.XmlSerializer" /> en lugar de <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</summary>
    </member>
    <member name="M:System.ServiceModel.XmlSerializerFormatAttribute.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.XmlSerializerFormatAttribute" />. </summary>
    </member>
    <member name="P:System.ServiceModel.XmlSerializerFormatAttribute.Style">
      <summary>Obtiene o establece el estilo de SOAP de <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <returns>Uno de los valores de <see cref="T:System.ServiceModel.OperationFormatStyle" />.El valor predeterminado es <see cref="F:System.ServiceModel.OperationFormatStyle.Document" />.</returns>
    </member>
    <member name="P:System.ServiceModel.XmlSerializerFormatAttribute.SupportFaults">
      <summary>Obtiene o establece un valor que indica que <see cref="T:System.Xml.Serialization.XmlSerializer" /> se debería utilizar para leer y escribir los errores. </summary>
      <returns>true si <see cref="T:System.Xml.Serialization.XmlSerializer" /> se debería utilizar para leer y escribir los errores; false si se debería utilizar <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.El valor predeterminado es false.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.AddressHeader">
      <summary>Representa un encabezado que encapsula un elemento de información de dirección utilizado para identificar un extremo o para interactuar con él.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.AddressHeader" />.  </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.CreateAddressHeader(System.String,System.String,System.Object)">
      <summary>Crea una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.AddressHeader" /> con valor, nombre y espacio de nombres especificados.</summary>
      <returns>La clase <see cref="T:System.ServiceModel.Channels.AddressHeader" /> con el parámetro <paramref name="name" /> especificado y el parámetro <paramref name="ns" /> que contiene el elemento de información especificado por el parámetro <paramref name="value" />.</returns>
      <param name="name">Nombre del encabezado de dirección.</param>
      <param name="ns">El espacio de nombres del encabezado de dirección.</param>
      <param name="value">Elemento de información del encabezado de dirección.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="name" /> es null o <paramref name="name" />.Length == 0.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.CreateAddressHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Crea una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.AddressHeader" /> con nombre y espacio de nombres especificados que utiliza un formateador especificado para serializar el elemento de información a partir de un objeto especificado.</summary>
      <returns>La clase <see cref="T:System.ServiceModel.Channels.AddressHeader" /> con el parámetro <paramref name="name" /> especificado y el parámetro <paramref name="ns" /> que contiene el elemento de información especificado por el parámetro <paramref name="value" />.</returns>
      <param name="name">Nombre del encabezado de dirección.</param>
      <param name="ns">El espacio de nombres del encabezado de dirección.</param>
      <param name="value">Elemento de información del encabezado de dirección.</param>
      <param name="serializer">
        <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> utilizado para serializar el objeto especificado en el parámetro <paramref name="value" />.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="name" /> o <paramref name="serializer" /> es null o <paramref name="name" />.Length == 0.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.Equals(System.Object)">
      <summary>Determina si el elemento de información en un objeto especificado es igual al objeto contenido en el encabezado de dirección actual.</summary>
      <returns>true si el elemento de información en un <paramref name="obj" /> especificado es equivalente al elemento de información contenido en el encabezado de dirección actual; de lo contrario, false.En particular, devuelve false si <paramref name="obj" /> es null.</returns>
      <param name="obj">La clase <see cref="T:System.Object" /> para comparar con el objeto contenido en el encabezado de dirección actual.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.GetAddressHeaderReader">
      <summary>Devuelve un lector de XML que puede serializar el objeto de encabezado de dirección actual.</summary>
      <returns>Una instancia de <see cref="T:System.Xml.XmlDictionaryReader" /> que puede serializar el objeto de encabezado de dirección actual.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.GetHashCode">
      <summary>Proporciona un código hash único para un encabezado de dirección. </summary>
      <returns>Un código hash único para el encabezado de dirección actual.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.GetValue``1">
      <summary>Deserializa el elemento de información desde el encabezado de dirección actual a un objeto de un tipo especificado.</summary>
      <returns>Una instancia de una clase de tipo <paramref name="T" /> con sus campos y propiedades establecidos en los valores proporcionados por el objeto de encabezado de dirección actual.</returns>
      <typeparam name="T">Una clase de tipo <paramref name="T" /> con sus campos y propiedades establecidos en los valores proporcionados por el objeto de encabezado de dirección actual.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.GetValue``1(System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Deserializa el elemento de información desde el encabezado de dirección actual a un objeto de un tipo especificado que utiliza un formateador especificado para serializar esta información.</summary>
      <returns>Una instancia de una clase de tipo <paramref name="T" /> con sus campos y propiedades establecidos en los valores proporcionados por el objeto de encabezado de dirección actual.</returns>
      <param name="serializer">
        <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> utilizado para deserializar el elemento de información del objeto de encabezado de dirección actual.</param>
      <typeparam name="T">Una clase de tipo <paramref name="T" /> con sus campos y propiedades establecidos en los valores proporcionados por el objeto de encabezado de dirección actual.</typeparam>
      <exception cref="T:System.ArgumentNullException">La propiedad <paramref name="serializer" /> es null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.AddressHeader.Name">
      <summary>Cuando se implementa, obtiene el nombre del encabezado de dirección.</summary>
      <returns>Nombre del encabezado de dirección.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.AddressHeader.Namespace">
      <summary>Cuando se implementa, obtiene el espacio de nombres del encabezado de dirección.</summary>
      <returns>El espacio de nombres del encabezado de dirección.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.OnWriteAddressHeaderContents(System.Xml.XmlDictionaryWriter)">
      <summary>Cuando se invalida en una clase derivada, se invoca cuando el contenido de encabezado de dirección se escribe en una secuencia o archivo.</summary>
      <param name="writer">La clase <see cref="T:System.Xml.XmlDictionaryWriter" /> usada para escribir el contenido del encabezado de dirección en un flujo o en un archivo.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.OnWriteStartAddressHeader(System.Xml.XmlDictionaryWriter)">
      <summary>Cuando se invalida en una clase derivada, se invoca cuando el contenido del encabezado de dirección empieza a escribirse en un flujo o en un archivo.</summary>
      <param name="writer">La clase <see cref="T:System.Xml.XmlDictionaryWriter" /> usada para escribir el encabezado de dirección en un flujo o en un archivo.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.ToMessageHeader">
      <summary>Ajusta el encabezado de dirección como un encabezado del mensaje.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageHeader" /> que ajusta el encabezado de dirección actual.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.WriteAddressHeader(System.Xml.XmlDictionaryWriter)">
      <summary>Escribe el encabezado de dirección en una secuencia o archivo usando un <see cref="T:System.Xml.XmlDictionaryWriter" /> especificado.</summary>
      <param name="writer">La clase <see cref="T:System.Xml.XmlDictionaryWriter" /> usada para escribir el encabezado de dirección en un flujo o en un archivo.</param>
      <exception cref="T:System.ArgumentNullException">La propiedad <paramref name="writer" /> es null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.WriteAddressHeader(System.Xml.XmlWriter)">
      <summary>Escribe el encabezado de dirección en una secuencia o archivo usando un <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="writer">La clase <see cref="T:System.Xml.XmlWriter" /> usada para escribir el encabezado de dirección en un flujo o en un archivo.</param>
      <exception cref="T:System.ArgumentNullException">La propiedad <paramref name="writer" /> es null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.WriteAddressHeaderContents(System.Xml.XmlDictionaryWriter)">
      <summary>Escribe el contenido del encabezado de dirección en un flujo o en un archivo.</summary>
      <param name="writer">La clase <see cref="T:System.Xml.XmlDictionaryWriter" /> usada para escribir el contenido del encabezado de dirección en un flujo o en un archivo.</param>
      <exception cref="T:System.ArgumentNullException">La propiedad <paramref name="writer" /> es null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.WriteStartAddressHeader(System.Xml.XmlDictionaryWriter)">
      <summary>Comienza a escribir el contenido de encabezado de dirección en una secuencia o en un archivo.</summary>
      <param name="writer">La clase <see cref="T:System.Xml.XmlDictionaryWriter" /> usada para escribir el encabezado de dirección en un flujo o en un archivo.</param>
      <exception cref="T:System.ArgumentNullException">La propiedad <paramref name="writer" /> es null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.AddressHeaderCollection">
      <summary>Representa una colección de encabezados de dirección de solo lectura y segura para la ejecución de subprocesos.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.AddressHeaderCollection" />.  </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.Channels.AddressHeader})">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.AddressHeaderCollection" /> a partir de un conjunto enumerable de encabezados de dirección.</summary>
      <param name="addressHeaders">El conjunto de la interfaz <see cref="T:System.Collections.Generic.IEnumerable`1" /> de los objetos <see cref="T:System.ServiceModel.Channels.AddressHeader" /> que se usan para inicializar la colección.</param>
      <exception cref="T:System.ArgumentException">Uno de los encabezados de dirección en el parámetro <paramref name="addressHeaders" /> es null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.AddHeadersTo(System.ServiceModel.Channels.Message)">
      <summary>Agrega los encabezados de la colección a los encabezados de un mensaje especificado.</summary>
      <param name="message">La clase <see cref="T:System.ServiceModel.Channels.Message" /> a la que se agregan los encabezados.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> es null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.FindAll(System.String,System.String)">
      <summary>Busca todos los encabezados de dirección de la colección con nombre y espacio de nombres especificados.</summary>
      <returns>La clase <see cref="T:System.Array" /> de tipo <see cref="T:System.ServiceModel.Channels.AddressHeader" /> que contiene todos los encabezados de la colección con nombre y espacio de nombres especificados.</returns>
      <param name="name">El nombre del encabezado de dirección que se va a buscar.</param>
      <param name="ns">El espacio de nombres del encabezado de dirección que se va a buscar.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> o <paramref name="ns" /> es null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.FindHeader(System.String,System.String)">
      <summary>Busca el primer encabezado de dirección de la colección con nombre y espacio de nombres especificados.</summary>
      <returns>La clase <see cref="T:System.ServiceModel.Channels.AddressHeader" /> de la colección con nombre y espacio de nombres especificados.</returns>
      <param name="name">El nombre del encabezado de dirección que se va a buscar.</param>
      <param name="ns">El espacio de nombres del encabezado de dirección que se va a buscar.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> o <paramref name="ns" /> es null.</exception>
      <exception cref="T:System.ArgumentException">Hay más de un encabezado con los parámetros <paramref name="name" /> y <paramref name="ns" /> especificados.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.AddressingVersion">
      <summary>Versión de WS-Addressing asociada con un mensaje SOAP o entendida por un extremo.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.AddressingVersion.None">
      <summary>Obtiene la versión de dirección que no está adjuntada a la versión WS-Addressing.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> que no está asociado a una versión de WS-Addressing.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressingVersion.ToString">
      <summary>Devuelve una representación de la versión de direccionamiento actual.</summary>
      <returns>Una cadena que representa la versión de direccionamiento actual.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.AddressingVersion.WSAddressing10">
      <summary>Obtiene un identificador para la versión de dirección asociada a WS-Addressing 1.0.</summary>
      <returns>Una instancia singleton que identifica <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> asociado a WS-Addressing 1.0.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement">
      <summary>El elemento de enlace que especifica el formato binario de .NET para XML utilizado para codificar los mensajes.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Compila la pila del generador de canales en el cliente que crea un tipo especificado de canal para un contexto determinado.</summary>
      <returns>Interfaz <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> de tipo <paramref name="TChannel" /> para el contexto especificado.</returns>
      <param name="context">La clase <see cref="T:System.ServiceModel.Channels.BindingContext" /> del canal.</param>
      <typeparam name="TChannel">El tipo de canal que genera el generador de canales.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.Clone">
      <summary>Crea una nueva clase <see cref="T:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement" /> inicializada a partir de la actual.</summary>
      <returns>Objeto <see cref="T:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement" /> cuyos valores de propiedad son iguales a los del elemento actual.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.CompressionFormat">
      <summary>Obtiene o establece el formato de compresión del elemento de enlace.</summary>
      <returns>Formato de compresión del elemento de enlace.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.CreateMessageEncoderFactory">
      <summary>Crea un generador para los codificadores de mensajes binarios que emplean las versiones de SOAP y WS-Addressing y la codificación de caracteres especificada por el elemento de enlace de la codificación actual.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" /> que crea este elemento de enlace.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Devuelve un objeto con tipo solicitado de la capa adecuada en la pila de elementos de enlace si está presente.</summary>
      <returns>El objeto escrito solicitado <paramref name="T" />, si está presente, o null si no lo está.</returns>
      <param name="context">La clase <see cref="T:System.ServiceModel.Channels.BindingContext" /> del elemento de enlace.</param>
      <typeparam name="T">El objeto con tipo que el método está consultando.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.MaxSessionSize">
      <summary>Obtiene o establece la cantidad de memoria máxima disponible dentro de una sesión para optimizar los procedimientos de transmisión.</summary>
      <returns>El tamaño máximo, en bytes, de la sesión.El valor predeterminado es 2048 bytes.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor es menor o igual que cero.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.MessageVersion">
      <summary>Obtiene o establece las versiones del mensaje SOAP y de WS-Addressing que se utilizan o se esperan.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageVersion" /> que se utiliza o espera.</returns>
      <exception cref="T:System.ArgumentNullException">El valor establecido es null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El conjunto de valores es una versión de envoltura no compatible.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.ReaderQuotas">
      <summary>Obtiene restricciones en la complejidad de mensajes XML que pueden ser procesados por extremos configurados con este elemento de enlace.</summary>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> que especifica las restricciones de complejidad en los mensajes SOAP intercambiados.Los valores predeterminados para estas restricciones se proporcionan en la sección de comentarios siguiente.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.Binding">
      <summary>Contiene los elementos de enlace que especifican los protocolos, transportes y codificadores de mensaje utilizados para la comunicación entre clientes y servicios.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.Binding" /> con un nombre y un espacio de nombres predeterminados. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.#ctor(System.String,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.Binding" /> a partir de un enlace especificado del servicio.</summary>
      <param name="name">La propiedad <see cref="P:System.ServiceModel.Channels.Binding.Name" /> del enlace.</param>
      <param name="ns">La propiedad <see cref="P:System.ServiceModel.Channels.Binding.Namespace" /> del enlace.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> es null o una cadena vacía.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ns" /> es null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])">
      <summary>Compila la pila de generador de canales en el cliente que crea un tipo especificado de canal y eso satisface las características especificadas por una matriz de objetos.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> de tipo <paramref name="TChannel" /> que satisface las características especificadas por la colección.</returns>
      <param name="parameters">La matriz de objetos que especifica los requisitos para el generador del canal compilado.</param>
      <typeparam name="TChannel">El tipo de canal que genera el generador de canales.</typeparam>
      <exception cref="T:System.InvalidOperationException">El elemento de transporte falta o no está disponible o el esquema no es válido o la versión de mensaje no está especificada.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Compila la pila de generador de canales en el cliente que crea un tipo especificado de canal y satisface las características especificadas por una colección de parámetros de enlace.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> de tipo <paramref name="TChannel" /> que satisface las características especificadas por la colección.</returns>
      <param name="parameters">
        <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> que especifica los requisitos para el generador del canal compilado.</param>
      <typeparam name="TChannel">El tipo de canal que genera el generador de canales.</typeparam>
      <exception cref="T:System.InvalidOperationException">El elemento de transporte falta o no está disponible o el esquema no es válido o la versión de mensaje no está especificada.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])">
      <summary>Devuelve un valor que indica si el enlace actual puede compilar una pila de generador de canales en el cliente que satisfaga los requisitos especificados por una matriz de objetos.</summary>
      <returns>true si se puede crear la pila del generador de canales especificada en el cliente; de lo contrario, false.</returns>
      <param name="parameters">La matriz de objetos que especifica los requisitos para el generador del canal compilado.</param>
      <typeparam name="TChannel">El tipo de canal para el que se prueba el generador.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Devuelve un valor que indica si el enlace actual puede compilar una pila de generador de canales en el cliente que satisfaga la colección especificada de parámetros de enlace.</summary>
      <returns>true si se puede crear la pila del generador de canales especificada en el cliente; de lo contrario, false.</returns>
      <param name="parameters">La clase <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> que especifica los requisitos para el generador de canales compilado.</param>
      <typeparam name="TChannel">El tipo de canal para el que se prueba el generador.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.CloseTimeout">
      <summary>Obtiene o establece el intervalo de tiempo proporcionado para que una conexión se cierre antes de que el transporte genere una excepción.</summary>
      <returns>
        <see cref="T:System.Timespan" /> que especifica el tiempo con el que cuenta la operación de cierre para completarse antes de que se agote el tiempo de espera.El valor predeterminado es 1 minuto.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor es menor que cero o demasiado grande.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.CreateBindingElements">
      <summary>Cuando se invalida en una clase derivada, crea una colección que contiene los elementos de enlace que forman parte del enlace actual. </summary>
      <returns>Un objeto <see cref="T:System.Collections.Generic.ICollection`1" /> de tipo <see cref="T:System.ServiceModel.Channels.BindingElement" /> que contiene los elementos de enlace del objeto de enlace actual en el orden correcto.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Devuelve un objeto escrito solicitado de la capa adecuada en la pila de enlace si está presente.</summary>
      <returns>El objeto escrito solicitado <paramref name="T" />, si está presente, o null si no lo está.</returns>
      <param name="parameters">
        <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> que especifica los requisitos para el agente de escucha del canal compilado.</param>
      <typeparam name="T">El objeto con tipo que el método está consultando.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.MessageVersion">
      <summary>Obtiene la versión de mensaje usada por los clientes y servicios configurados con el enlace.</summary>
      <returns>La clase <see cref="T:System.ServiceModel.Channels.MessageVersion" /> usada por los clientes y servicios configurados con el enlace.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.Name">
      <summary>Obtiene o establece el nombre del enlace.</summary>
      <returns>Nombre del enlace.El nombre predeterminado es null.</returns>
      <exception cref="T:System.ArgumentException">El conjunto de valores no puede ser null ni una cadena vacía.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.Namespace">
      <summary>Obtiene o establece el espacio de nombres XML del enlace.</summary>
      <returns>Espacio de nombres XML del enlace.El valor predeterminado es "http://tempuri.org/".</returns>
      <exception cref="T:System.ArgumentNullException">El conjunto de valores no puede ser null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.OpenTimeout">
      <summary>Obtiene o establece el intervalo de tiempo proporcionado para que una conexión se abra antes de que el transporte genere una excepción.</summary>
      <returns>La estructura <see cref="T:System.Timespan" /> que especifica el tiempo con el que cuenta la operación de apertura para completarse antes de que se agote el tiempo de espera.El valor predeterminado es 1 minuto.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor es menor que cero o demasiado grande.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.ReceiveTimeout">
      <summary>Obtiene o establece el intervalo de tiempo que una conexión puede permanecer inactiva, durante el cual no se recibe ningún mensaje de la aplicación, antes de interrumpir la conexión.</summary>
      <returns>
        <see cref="T:System.Timespan" /> que especifica el tiempo con el que cuenta la aplicación para recibir un mensaje antes de que se agote el tiempo de espera.El valor predeterminado es 10 minuto.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor es menor que cero o demasiado grande.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.Scheme">
      <summary>Cuando se implementa en una clase derivada, establece el esquema del URI que especifica el transporte utilizado por los generadores de canal y de agente de escucha compilados por los enlaces.</summary>
      <returns>El esquema del URI utilizado por los canales o agentes de escucha creados por los generadores y compilado por el enlace actual.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.SendTimeout">
      <summary>Obtiene o establece el intervalo de tiempo proporcionado para que una operación de escritura se complete antes de que el transporte genere una excepción.</summary>
      <returns>El <see cref="T:System.Timespan" /> que especifica el tiempo con el que cuenta la operación de escritura para completarse antes de que se agote el tiempo de espera.El valor predeterminado es 1 minuto.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor es menor que cero o demasiado grande.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.BindingContext">
      <summary>Proporciona información sobre las direcciones, enlaces, elementos de enlace y parámetros de enlace exigidos para compilar los agentes de escucha del canal y los generadores del canal.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.#ctor(System.ServiceModel.Channels.CustomBinding,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.BindingContext" /> para un enlace especificado y una colección de parámetros de enlace.</summary>
      <param name="binding">La clase <see cref="T:System.ServiceModel.Channels.CustomBinding" /> del canal.</param>
      <param name="parameters">La clase <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> del canal.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binding" /> es null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.BindingContext.Binding">
      <summary>Obtiene el enlace para el canal compilado en el contexto actual.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.CustomBinding" /> para el canal compilado en el contexto actual.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.BindingContext.BindingParameters">
      <summary>Obtiene la colección de parámetros de enlace para el canal compilado en el contexto actual.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> para el canal compilado en el contexto actual.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.BuildInnerChannelFactory``1">
      <summary>Compila el generador de canales interno para los canales de un tipo especificado bajo el generador de canales actual.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> del tipo <see cref="T:System.ServiceModel.Channels.IChannel" /> que representa el generador del canal interno del generador del canal actual.</returns>
      <typeparam name="TChannel">El tipo del objeto <see cref="T:System.ServiceModel.Channels.IChannel" /> que genera el generador del canal interno.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.CanBuildInnerChannelFactory``1">
      <summary>Devuelve un valor que indica si el generador de canales interno puede generar un tipo especificado de canal.</summary>
      <returns>true si el generador de canales interno puede generar el <paramref name="TChannel" /> especificado; de lo contrario, false.</returns>
      <typeparam name="TChannel">El tipo del objeto <see cref="T:System.ServiceModel.Channels.IChannel" /> que genera el generador del canal interno.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.Clone">
      <summary>Devuelve una copia del contexto de compilación del canal actual.</summary>
      <returns>Objeto <see cref="T:System.ServiceModel.Channels.BindingContext" /> que es una copia del contexto de compilación del canal actual.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.GetInnerProperty``1">
      <summary>Devuelve un objeto escrito solicitado de la capa adecuada en la pila de enlace si está presente.</summary>
      <returns>El objeto escrito solicitado <paramref name="T" />, si está presente, o null si no lo está.</returns>
      <typeparam name="T">El objeto con tipo que el método está consultando.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.BindingContext.RemainingBindingElements">
      <summary>Obtiene los elementos de enlace utilizados por otros elementos de enlace para construir la pila del canal.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> que contiene los elementos de enlace utilizados por otros elementos de enlace para construir la pila del canal.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.BindingElement">
      <summary>Los elementos de los enlaces que compilan los generadores de canales y las escuchas del canal para varios tipos de canales que se utilizan para procesar mensajes salientes y entrantes.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.BindingElement" />.  </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.#ctor(System.ServiceModel.Channels.BindingElement)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.BindingElement" /> a partir de un elemento de enlace especificado.</summary>
      <param name="elementToBeCloned">
        <see cref="T:System.ServiceModel.Channels.BindingElement" /> que se va a clonar.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Inicializa un generador de canales para generar canales de un tipo especificado a partir del contexto de enlace.</summary>
      <returns>La interfaz <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> de tipo <paramref name="TChannel" /> inicializada a partir del parámetro <paramref name="context" />.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" /> que proporciona el contexto para el elemento de enlace. </param>
      <typeparam name="TChannel">El Tipo de canal que compila el generador.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> es null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Devuelve un valor que indica si el elemento de enlace puede compilar un generador de canales para un tipo específico de canal.</summary>
      <returns>true si <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> de tipo <paramref name="TChannel" /> puede ser creado por el elemento de enlace; de lo contrario, false.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" /> que proporciona el contexto para el elemento de enlace. </param>
      <typeparam name="TChannel">El tipo de canal que genera el generador de canales.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> es null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.Clone">
      <summary>Devuelve una copia del objeto de elemento de enlace cuando se invalida en una clase derivada.</summary>
      <returns>Un objeto <see cref="T:System.ServiceModel.Channels.BindingElement" /> que es un clon profundo del original.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Cuando se invalida en una clase derivada, devuelve un objeto escrito solicitado, de estar presente, del nivel apropiado en la pila de enlace.</summary>
      <returns>El objeto <paramref name="T" /> con tipo solicitado, si está presente, o null, si no lo está.</returns>
      <param name="context">La clase <see cref="T:System.ServiceModel.Channels.BindingContext" /> del elemento de enlace.</param>
      <typeparam name="T">El objeto con tipo que el método está consultando.</typeparam>
    </member>
    <member name="T:System.ServiceModel.Channels.BindingElementCollection">
      <summary>Representa la colección de elementos de enlace utilizada en un enlace.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.BindingElementCollection" />.  </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.Channels.BindingElement})">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> a partir de un conjunto enumerable de elementos de enlace.</summary>
      <param name="elements">Interfaz <see cref="T:System.Collections.Generic.IEnumerable`1" /> de la clase <see cref="T:System.ServiceModel.Channels.BindingElement" /> de tipo genérico que se usa para inicializar la colección.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elements" /> es null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.#ctor(System.ServiceModel.Channels.BindingElement[])">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> a partir de una matriz de elementos de enlace.</summary>
      <param name="elements">Clase <see cref="T:System.Array" /> de tipo <see cref="T:System.ServiceModel.Channels.BindingElement" /> que se usa para inicializar la colección.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elements" /> es null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.AddRange(System.ServiceModel.Channels.BindingElement[])">
      <summary>Agrega un elemento de enlace de una matriz a la colección de elementos de enlace.</summary>
      <param name="elements">La clase <see cref="T:System.Array" /> de tipo <see cref="T:System.ServiceModel.Channels.BindingElement" /> que se va a agregar a la colección.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elements" /> es null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.Clone">
      <summary>Crea una copia de la colección de elementos de enlace.</summary>
      <returns>Una copia de <see cref="T:System.ServiceModel.Channels.BindingElementCollection" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.Contains(System.Type)">
      <summary>Devuelve un valor que indica si un tipo especificado de elemento de enlace pertenece a la colección de elementos de enlace.</summary>
      <returns>true si el tipo de elemento de enlace especificado está contenido en la colección; de lo contrario, false.</returns>
      <param name="bindingElementType">El tipo de elemento de enlace que se prueba para su inclusión en la colección.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bindingElementType" /> es null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.Find``1">
      <summary>Devuelve el primer elemento de un tipo especificado de la colección de elementos de enlace.</summary>
      <returns>El elemento de tipo <see cref="T:System.Type" /> si se encuentra; si no se encuentra, 0 si <paramref name="T" /> es un tipo de valor y null si <paramref name="T" /> es un tipo de referencia.</returns>
      <typeparam name="T">
        <see cref="T:System.Type" /> del elemento que se va a buscar.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.FindAll``1">
      <summary>Devuelve todos los elementos de un tipo especificado de la colección de elementos de enlace.</summary>
      <returns>
        <see cref="T:System.Collections.ObjectModel.Collection`1" /> de todos los elementos de tipo <see cref="T:System.Type" /> si se encuentra; si no se encuentra ninguno, 0 si <paramref name="T" /> es un tipo de valor y null si <paramref name="T" /> es un tipo de referencia.</returns>
      <typeparam name="T">
        <see cref="T:System.Type" /> del elemento que se va a buscar.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.InsertItem(System.Int32,System.ServiceModel.Channels.BindingElement)">
      <summary>Inserta un elemento de enlace en una ubicación especificada dentro de una colección de elementos de enlace.</summary>
      <param name="index">Ubicación donde se debe insertar el elemento de enlace en la colección.</param>
      <param name="item">Objeto <see cref="T:System.ServiceModel.Channels.BindingElement" /> que se va a insertar.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> es null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.Remove``1">
      <summary>Quita un elemento de enlace de un tipo especificado de la colección de elementos de enlace.</summary>
      <returns>El elemento de tipo <see cref="T:System.Type" /> quitado.</returns>
      <typeparam name="T">
        <see cref="T:System.Type" /> del elemento que se va a buscar.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.RemoveAll``1">
      <summary>Quita todos los elementos de enlace de un tipo especificado de la colección de elementos de enlace.</summary>
      <returns>
        <see cref="T:System.Collections.ObjectModel.Collection`1" /> de todos los elementos del tipo <see cref="T:System.Type" /> encontrados.</returns>
      <typeparam name="T">
        <see cref="T:System.Type" /> del elemento que se va a buscar.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.SetItem(System.Int32,System.ServiceModel.Channels.BindingElement)">
      <summary>Reemplaza un elemento de enlace en el índice especificado de la colección de elementos de enlace.</summary>
      <param name="index">Índice de base cero del elemento que se va a reemplazar.</param>
      <param name="item">Nuevo valor del elemento <see cref="T:System.ServiceModel.Channels.BindingElement" /> del parámetro <paramref name="index" /> especificado.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> es null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.BindingParameterCollection">
      <summary>Representa una colección de parámetros de enlace que almacenan información utilizada por elementos de enlace para generar los generadores.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingParameterCollection.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingParameterCollection.GetKeyForItem(System.Object)">
      <summary>Obtiene la clave de un elemento de la colección. </summary>
      <returns>El objeto <see cref="T:System.Type" /> que representa la clave especificada <paramref name="item" /> en la colección.</returns>
      <param name="item">El elemento de la colección cuya clave se va a recuperar.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingParameterCollection.InsertItem(System.Int32,System.Object)">
      <summary>Inserta un elemento en el índice especificado de esta colección.</summary>
      <param name="index">Índice de base cero donde en la colección en la que se deben insertar el <paramref name="item" />.</param>
      <param name="item">Objeto que se va a insertar en la colección.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingParameterCollection.SetItem(System.Int32,System.Object)">
      <summary>Reemplaza el elemento situado en el índice especificado con un nuevo objeto.</summary>
      <param name="index">Índice de base cero donde se establece el <paramref name="item" /> nuevo.</param>
      <param name="item">Objeto que se va a establecer en la colección.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.BodyWriter">
      <summary>Representa el sistema de escritura del cuerpo del mensaje.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BodyWriter.#ctor(System.Boolean)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.BodyWriter" /> que indica explícitamente si se debe almacenar en búfer.</summary>
      <param name="isBuffered">true si se puede llamar al sistema de escritura del cuerpo varias veces; de lo contrario false.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.BodyWriter.CreateBufferedCopy(System.Int32)">
      <summary>Crea una copia del cuerpo almacenada en búfer.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.BodyWriter" /> que contiene una copia de este objeto.</returns>
      <param name="maxBufferSize">El tamaño máximo del búfer para el cuerpo.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="maxBufferSize" /> es menor que cero.</exception>
      <exception cref="T:System.InvalidOperationException">El cuerpo ya se ha escrito y no se puede escribir de nuevo. De lo contrario, el sistema de escritura del cuerpo no se almacenará en búfer.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.BodyWriter.IsBuffered">
      <summary>Obtiene un valor que indica si se puede llamar al método de escritura varias veces.</summary>
      <returns>true si se puede llamar al sistema de escritura del cuerpo varias veces; de lo contrario false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BodyWriter.OnCreateBufferedCopy(System.Int32)">
      <summary>Proporciona un punto de extensibilidad cuando se escribe el contenido del cuerpo.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.BodyWriter" /> con el tamaño de búfer máximo especificado.</returns>
      <param name="maxBufferSize">El tamaño máximo del búfer para el cuerpo.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.BodyWriter.OnWriteBodyContents(System.Xml.XmlDictionaryWriter)">
      <summary>Cuando se implementa, proporciona un punto de extensibilidad cuando se escribe el contenido del cuerpo.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> utilizado para escribir el cuerpo del mensaje.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.BodyWriter.WriteBodyContents(System.Xml.XmlDictionaryWriter)">
      <summary>Escribe el contenido del cuerpo del mensaje.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> utilizado para escribir el cuerpo del mensaje.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> es null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.BufferManager">
      <summary>Muchas características Windows Communication Foundation (WCF) requieren el uso de búferes, que son caros de crear y destruir.Puede utilizar la clase <see cref="T:System.ServiceModel.Channels.BufferManager" /> para gestionar un grupo de búferes.El grupo y sus búferes se crean al crear una instancia de esta clase y se destruye cuando la recolección de elementos no utilizados reclama el grupo de búferes.Cada vez que necesita utilizar un búfer, toma uno del grupo, lo utiliza y lo devuelve al grupo cuando ha acabado.Este proceso es mucho más rápido que crear y destruir un búfer cada vez que necesita utilizar uno.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.BufferManager" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.Clear">
      <summary>Libera los búferes actualmente almacenados en la memoria caché en el administrador.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.CreateBufferManager(System.Int64,System.Int32)">
      <summary>Crea un nuevo BufferManager con un tamaño máximo especificado del grupo de búferes y un tamaño máximo para cada búfer individual en el grupo.</summary>
      <returns>Devuelve un objeto <see cref="T:System.ServiceModel.Channels.BufferManager" /> con los parámetros especificados.</returns>
      <param name="maxBufferPoolSize">El tamaño máximo del grupo.</param>
      <param name="maxBufferSize">El tamaño máximo de un búfer individual.</param>
      <exception cref="T:System.InsufficientMemoryException">En las API de .NET para aplicaciones de la Tienda Windows o en la Biblioteca de clases portable, encuentre la excepción de la clase base, <see cref="T:System.OutOfMemoryException" />, en su lugar.Memoria insuficiente para crear el grupo de búferes solicitado.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="maxBufferPoolSize" /> o <paramref name="maxBufferSize" /> era menor que cero.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.ReturnBuffer(System.Byte[])">
      <summary>Devuelve un búfer al grupo.</summary>
      <param name="buffer">Referencia al búfer que se devuelve.</param>
      <exception cref="T:System.ArgumentNullException">La referencia <paramref name="buffer" /> no puede ser null.</exception>
      <exception cref="T:System.ArgumentException">La longitud del parámetro <paramref name="buffer" /> no coincide con la propiedad de longitud del búfer del grupo.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.TakeBuffer(System.Int32)">
      <summary>Recibe un búfer de por lo menos el tamaño especificado del grupo. </summary>
      <returns>Una matriz de bytes que es el tamaño solicitado del búfer.</returns>
      <param name="bufferSize">El tamaño, en bytes, del búfer solicitado.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">El parámetro <paramref name="bufferSize" /> no puede ser menor que cero.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelBase">
      <summary>Proporciona la implementación base para los canales personalizados.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelBase.#ctor(System.ServiceModel.Channels.ChannelManagerBase)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.ChannelBase" />.  </summary>
      <param name="channelManager">La clase <see cref="T:System.ServiceModel.Channels.ChannelManagerBase" /> que proporciona los tiempos de espera predeterminados para las operaciones de canal (enviar, recibir, abrir y cerrar).</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="channelManager" /> es null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.DefaultCloseTimeout">
      <summary>Obtiene el intervalo de tiempo predeterminado proporcionado para completar una operación de cierre.</summary>
      <returns>
        <see cref="T:System.Timespan" /> predeterminado que especifica el tiempo con el que cuenta la operación de cierre para completarse antes de que se agote el tiempo de espera.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.DefaultOpenTimeout">
      <summary>Obtiene el intervalo de tiempo predeterminado proporcionado para que se complete una operación de apertura.</summary>
      <returns>
        <see cref="T:System.Timespan" /> predeterminado que especifica el tiempo con el que cuenta la operación de apertura para completarse antes de que se agote el tiempo de espera.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.DefaultReceiveTimeout">
      <summary>Obtiene el intervalo de tiempo predeterminado proporcionado para que se complete una operación de recepción.</summary>
      <returns>
        <see cref="T:System.Timespan" /> predeterminado que especifica el tiempo con el que cuenta la operación de recepción para completarse antes de que se agote el tiempo de espera.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.DefaultSendTimeout">
      <summary>Obtiene el intervalo de tiempo predeterminado proporcionado para que se complete una operación de envío.</summary>
      <returns>
        <see cref="T:System.Timespan" /> predeterminado que especifica el tiempo con el que cuenta la operación de envío para completarse antes de que se agote el tiempo de espera.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelBase.GetProperty``1">
      <summary>Devuelve el objeto con tipo solicitado del nivel adecuado de la pila de canales, si está presente.</summary>
      <returns>El objeto <paramref name="T" /> con tipo solicitado, si está presente, o null, si no lo está.</returns>
      <typeparam name="T">El objeto con tipo que el método está consultando.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.Manager">
      <summary>Obtiene el administrador del canal que está asociado al canal actual.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.ChannelManagerBase" /> que está asociado al canal actual.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelBase.OnClosed">
      <summary>Utiliza traza de diagnóstico durante la transición al estado del cierre.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#CloseTimeout">
      <summary>Obtiene el intervalo de tiempo después del cual el método de cierre, invocado por un objeto de comunicación, caduca.</summary>
      <returns>
        <see cref="T:System.Timespan" /> que especifica el intervalo de tiempo de espera para que caduque el método de cierre.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#OpenTimeout">
      <summary>Obtiene el intervalo de tiempo después del cual el método de apertura, invocado por un objeto de comunicación, caduca.</summary>
      <returns>
        <see cref="T:System.Timespan" /> que especifica el intervalo de tiempo de espera para que caduque el método de apertura.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#ReceiveTimeout">
      <summary>Obtiene el intervalo de tiempo después del cual el método de recepción, invocado por un objeto de comunicación, caduca.</summary>
      <returns>
        <see cref="T:System.Timespan" /> que especifica el intervalo de tiempo de espera para que caduque el método de recepción.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#SendTimeout">
      <summary>Obtiene el intervalo de tiempo después del cual el método de envío, invocado por un objeto de comunicación, caduca.</summary>
      <returns>
        <see cref="T:System.Timespan" /> que especifica el intervalo de tiempo de espera para que caduque el método de envío.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelFactoryBase">
      <summary>Proporciona una implementación base común para todos los generadores de canal personalizados.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.ChannelFactoryBase" />.  </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.ChannelFactoryBase" /> con los tiempos de espera de comunicación predeterminados especificados.</summary>
      <param name="timeouts">
        <see cref="T:System.ServiceModel.IDefaultCommunicationTimeouts" /> que especifica los tiempos de espera predeterminados para operaciones de apertura, envío y cierre al intercambiar los mensajes. </param>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelFactoryBase.DefaultCloseTimeout">
      <summary>Obtiene el intervalo de tiempo predeterminado proporcionado para completar una operación de cierre.</summary>
      <returns>
        <see cref="T:System.Timespan" /> predeterminado que especifica el tiempo con el que cuenta la operación de cierre para completarse antes de que se agote el tiempo de espera.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelFactoryBase.DefaultOpenTimeout">
      <summary>Obtiene el intervalo de tiempo predeterminado proporcionado para que se complete una operación de apertura.</summary>
      <returns>
        <see cref="T:System.Timespan" /> predeterminado que especifica el tiempo con el que cuenta la operación de apertura para completarse antes de que se agote el tiempo de espera.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelFactoryBase.DefaultReceiveTimeout">
      <summary>Obtiene el intervalo de tiempo predeterminado proporcionado para que se complete una operación de recepción.</summary>
      <returns>
        <see cref="T:System.Timespan" /> predeterminado que especifica el tiempo con el que cuenta la operación de recepción para completarse antes de que se agote el tiempo de espera.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelFactoryBase.DefaultSendTimeout">
      <summary>Obtiene el intervalo de tiempo predeterminado proporcionado para que se complete una operación de envío.</summary>
      <returns>
        <see cref="T:System.Timespan" /> predeterminado que especifica el tiempo con el que cuenta la operación de envío para completarse antes de que se agote el tiempo de espera.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.GetProperty``1">
      <summary>Devuelve un objeto con tipo solicitado, si lo hay, de la capa adecuada de la pila de canales.</summary>
      <returns>El objeto escrito T solicitado, si está presente, o null si no lo está.</returns>
      <typeparam name="T">El objeto con tipo que el método está consultando.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.OnAbort">
      <summary>Inserta el procesamiento en un objeto de comunicación después de que éste pase al estado de cierre debido a la invocación de una operación sincrónica de interrupción.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Comienza una operación asincrónica para cerrar cada uno de los canales creados por el generador.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia a la operación de cierre asincrónica. </returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> que especifica el tiempo con el que cuenta la operación de cierre para completarse antes de que se agote el tiempo de espera.</param>
      <param name="callback">Delegado de <see cref="T:System.AsyncCallback" /> que recibe la notificación de la finalización de la operación de cierre asincrónica.</param>
      <param name="state">Objeto, especificado por la aplicación, que contiene información de estado asociada a la operación de cierre asincrónica.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.OnClose(System.TimeSpan)">
      <summary>Inserta el procesamiento en un objeto de comunicación después que éste pase al estado de apertura que debe completarse dentro de un intervalo de tiempo especificado.</summary>
      <param name="timeout">
        <see cref="T:System.Timespan" /> que especifica el tiempo con el que cuenta la operación de cierre para completarse antes de que se agote el tiempo de espera.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.OnEndClose(System.IAsyncResult)">
      <summary>Completa una operación asincrónica para cerrar los canales abiertos por el generador.</summary>
      <param name="result">La interfaz <see cref="T:System.IAsyncResult" /> devuelta por una llamada al método <see cref="M:System.ServiceModel.Channels.ChannelFactoryBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelFactoryBase`1">
      <summary>Proporciona una implementación base común para los generadores del canal del cliente para crear canales de un tipo especificado conectados a una dirección especificada.</summary>
      <typeparam name="TChannel">El Tipo de canal que produce el generador.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.ChannelFactoryBase`1" />.  </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.ChannelFactoryBase`1" /> con los tiempos de espera de comunicación predeterminados especificados.</summary>
      <param name="timeouts">
        <see cref="T:System.ServiceModel.IDefaultCommunicationTimeouts" /> que especifica los tiempos de espera predeterminados para operaciones de apertura, envío y cierre al intercambiar los mensajes.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.CreateChannel(System.ServiceModel.EndpointAddress)">
      <summary>Crea un tipo determinado de canal con una dirección de extremo especificada.</summary>
      <returns>Canal de tipo <paramref name="TChannel" /> con el parámetro <paramref name="address" /> especificado.</returns>
      <param name="address">La clase <see cref="T:System.ServiceModel.EndpointAddress" /> del extremo remoto al que el canal envía los mensajes.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> es null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>Crea un tipo determinado de canal con transporte y direcciones del extremo especificados.</summary>
      <returns>Un canal de tipo <paramref name="TChannel" /> con las direcciones remota y de transporte especificadas.</returns>
      <param name="address">La clase <see cref="T:System.ServiceModel.EndpointAddress" /> del extremo remoto al que el canal envía los mensajes.</param>
      <param name="via">
        <see cref="T:System.Uri" /> que contiene la dirección de transporte a la que se envían los mensajes en el canal de salida.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnAbort">
      <summary>Anula todos los canal administrados por el generador del canal.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Comienza una operación asincrónica para cerrar todos los canales asociados al generador del canal dentro de un intervalo de tiempo especificado.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia a la operación de cierre asincrónica. </returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> que especifica el tiempo con el que cuenta la operación de cierre para completarse antes de que se agote el tiempo de espera.</param>
      <param name="callback">Delegado de <see cref="T:System.AsyncCallback" /> que recibe la notificación de la finalización asincrónica de la operación de cierre.</param>
      <param name="state">Objeto, especificado por la aplicación, que contiene información de estado asociada a la operación de cierre asincrónica.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnClose(System.TimeSpan)">
      <summary>Cierra todos los canales asociados al generador del canal dentro de un intervalo de tiempo especificado.</summary>
      <param name="timeout">
        <see cref="T:System.Timespan" /> que especifica el tiempo con el que cuenta la operación de cierre para completarse antes de que se agote el tiempo de espera.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnCreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>Cuando se implementa en una clase derivada, proporciona un punto de extensibilidad al crear canales.</summary>
      <returns>Un canal de tipo <paramref name="TChannel" /> con las direcciones especificadas.</returns>
      <param name="address">La clase <see cref="T:System.ServiceModel.EndpointAddress" /> del extremo remoto al que el canal envía los mensajes.</param>
      <param name="via">
        <see cref="T:System.Uri" /> que contiene la dirección de transporte a la que se envían los mensajes en el canal de salida.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnEndClose(System.IAsyncResult)">
      <summary>Completa una operación asincrónica para cerrar todos los canales asociados al generador del canal dentro de un intervalo de tiempo especificado.</summary>
      <param name="result">La interfaz <see cref="T:System.IAsyncResult" /> devuelta por una llamada al método <see cref="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.ValidateCreateChannel">
      <summary>Confirma que el generador del canal está abierto y preparado para crear los canales.</summary>
      <exception cref="T:System.ObjectDisposedException">El objeto de comunicación está en un estado de <see cref="F:System.ServiceModel.CommunicationState.Closing" /> o <see cref="F:System.ServiceModel.CommunicationState.Closed" />.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">El objeto de comunicación está en un estado de <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.InvalidOperationException">El generador del canal actual no está en el estado <see cref="F:System.ServiceModel.CommunicationState.Opened" />.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelManagerBase">
      <summary>Proporciona una implementación base para administrar los tiempos de espera predeterminados que están asociados al canal y a los generadores de escucha.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelManagerBase.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.ChannelManagerBase" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.DefaultReceiveTimeout">
      <summary>Cuando se invalida en una clase derivada, obtiene el intervalo predeterminado de tiempo en el que un canal tiene que completar la recepción de un mensaje.</summary>
      <returns>El <see cref="T:System.Timespan" /> predeterminado que especifica cuánto tiempo el canal tiene para completar la recepción de un mensaje antes de expirar el tiempo de espera una vez se ha invocado el método de recepción.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.DefaultSendTimeout">
      <summary>Cuando se invalida en una clase derivada, obtiene el intervalo predeterminado de tiempo en el que un canal tiene que completar el envío de un mensaje.</summary>
      <returns>El <see cref="T:System.Timespan" /> predeterminado que especifica cuánto tiempo el canal tiene para completar el envío de un mensaje antes de expirar el tiempo de espera una vez se ha invocado el método de envío.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#CloseTimeout">
      <summary>Obtiene el intervalo de tiempo después del cual el método de cierre, invocado por un objeto de comunicación, caduca.</summary>
      <returns>
        <see cref="T:System.Timespan" /> que especifica el intervalo de tiempo de espera para que caduque el método de cierre.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#OpenTimeout">
      <summary>Obtiene el intervalo de tiempo después del cual el método de apertura, invocado por un objeto de comunicación, caduca.</summary>
      <returns>
        <see cref="T:System.Timespan" /> que especifica el intervalo de tiempo de espera para que caduque el método de apertura.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#ReceiveTimeout">
      <summary>Obtiene el intervalo de tiempo después del cual el método de recepción, invocado por un objeto de comunicación, caduca.</summary>
      <returns>
        <see cref="T:System.Timespan" /> que especifica el intervalo de tiempo de espera para que caduque el método de recepción.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#SendTimeout">
      <summary>Obtiene el intervalo de tiempo después del cual el método de envío, invocado por un objeto de comunicación, caduca.</summary>
      <returns>
        <see cref="T:System.Timespan" /> que especifica el intervalo de tiempo de espera para que caduque el método de envío.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelParameterCollection">
      <summary>Representa una colección de parámetros de canal.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.ChannelParameterCollection" />.  </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.#ctor(System.ServiceModel.Channels.IChannel)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.ChannelParameterCollection" />.  </summary>
      <param name="channel">El canal cuyos parámetros están en esta colección.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelParameterCollection.Channel">
      <summary>Obtiene el canal cuyos parámetros están en esta colección. </summary>
      <returns>El <see cref="T:System.ServiceModel.Channels.IChannel" /> cuyos parámetros están en esta colección.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.ClearItems">
      <summary>Borra los parámetros de la colección.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.InsertItem(System.Int32,System.Object)">
      <summary>Inserta el elemento especificado en la colección utilizando el índice especificado.</summary>
      <param name="index">Índice del elemento de la colección.</param>
      <param name="item">Elemento que se va a agregar a la colección.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.PropagateChannelParameters(System.ServiceModel.Channels.IChannel)">
      <summary>Agrega los parámetros en la colección actual a <see cref="T:System.ServiceModel.Channels.ChannelParameterCollection" /> de un canal especificado.</summary>
      <param name="innerChannel">El canal que recibe los parámetros de la colección actual.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.RemoveItem(System.Int32)">
      <summary>Quita un parámetro de la colección.</summary>
      <param name="index">Índice del parámetro que se va a quitar.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.SetItem(System.Int32,System.Object)">
      <summary>Reemplaza un elemento de la colección en un índice especificado.</summary>
      <param name="index">Índice del elemento que se va a reemplazar.</param>
      <param name="item">Valor del elemento de reemplazo.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.CommunicationObject">
      <summary>Proporciona una implementación base común para la máquina de estados básicos común a todos los objetos orientados a la comunicación en el sistema, incluyendo canales, escuchas y los generadores de canales y escuchas.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.CommunicationObject" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.#ctor(System.Object)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.CommunicationObject" /> con el bloqueo mutuamente excluyente para proteger las transiciones de estado especificadas.</summary>
      <param name="mutex">El bloqueo mutuamente excluyente que protege la instancia de clase durante una transición de estado.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Abort">
      <summary>Provoca que un objeto de comunicación pase inmediatamente de su estado actual al estado de cierre.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
      <summary>Comienza una operación asincrónica para cerrar un objeto de comunicación.</summary>
      <returns>El objeto <see cref="T:System.IAsyncResult" /> que hace referencia a la operación de cierre asincrónica. </returns>
      <param name="callback">Delegado de <see cref="T:System.AsyncCallback" /> que recibe la notificación de la finalización de la operación de cierre asincrónica.</param>
      <param name="state">Objeto, especificado por la aplicación, que contiene la información de estado asociada a la operación de cierre asincrónica.</param>
      <exception cref="T:System.InvalidOperationException">El objeto de comunicación no está en un estado <see cref="F:System.ServiceModel.CommunicationState.Opened" /> ni <see cref="F:System.ServiceModel.CommunicationState.Opening" /> y no se puede modificar.</exception>
      <exception cref="T:System.ObjectDisposedException">El objeto de comunicación está en un estado de <see cref="F:System.ServiceModel.CommunicationState.Closing" /> o <see cref="F:System.ServiceModel.CommunicationState.Closed" /> y no se puede modificar.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">El objeto de comunicación está en un estado de <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> y no se puede modificar.</exception>
      <exception cref="T:System.TimeoutException">El intervalo de tiempo predeterminado asignado a la operación se ha superado antes de completarse la operación.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Comienza una operación asincrónica para cerrar un objeto de comunicación con un tiempo de espera especificado.</summary>
      <returns>El objeto <see cref="T:System.IAsyncResult" /> que hace referencia a la operación de cierre asincrónica.</returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> que especifica el tiempo con el que cuenta la operación de cierre para completarse antes de que se agote el tiempo de espera.</param>
      <param name="callback">Delegado de <see cref="T:System.AsyncCallback" /> que recibe la notificación de la finalización de la operación de cierre asincrónica.</param>
      <param name="state">Objeto, especificado por la aplicación, que contiene la información de estado asociada a la operación de cierre asincrónica.</param>
      <exception cref="T:System.InvalidOperationException">El objeto de comunicación no está en un estado <see cref="F:System.ServiceModel.CommunicationState.Opened" /> ni <see cref="F:System.ServiceModel.CommunicationState.Opening" /> y no se puede modificar.</exception>
      <exception cref="T:System.ObjectDisposedException">El objeto de comunicación está en un estado de <see cref="F:System.ServiceModel.CommunicationState.Closing" /> o <see cref="F:System.ServiceModel.CommunicationState.Closed" /> y no se puede modificar.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">El objeto de comunicación está en un estado de <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> y no se puede modificar.</exception>
      <exception cref="T:System.TimeoutException">El intervalo de tiempo predeterminado asignado a la operación se ha superado antes de completarse la operación.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
      <summary>Comienza una operación asincrónica para abrir un objeto de comunicación.</summary>
      <returns>El objeto <see cref="T:System.IAsyncResult" /> que hace referencia a la operación de apertura asincrónica. </returns>
      <param name="callback">El delegado de <see cref="T:System.AsyncCallback" /> que recibe la notificación de la finalización de la operación de apertura asincrónica.</param>
      <param name="state">Objeto, especificado por la aplicación, que contiene la información de estado asociada a la operación de apertura asincrónica.</param>
      <exception cref="T:System.InvalidOperationException">El objeto de comunicación no está en un estado <see cref="F:System.ServiceModel.CommunicationState.Opened" /> ni <see cref="F:System.ServiceModel.CommunicationState.Opening" /> y no se puede modificar.</exception>
      <exception cref="T:System.ObjectDisposedException">El objeto de comunicación está en un estado de <see cref="F:System.ServiceModel.CommunicationState.Closing" /> o <see cref="F:System.ServiceModel.CommunicationState.Closed" /> y no se puede modificar.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">El objeto de comunicación está en un estado de <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> y no se puede modificar.</exception>
      <exception cref="T:System.TimeoutException">El intervalo de tiempo predeterminado asignado a la operación se ha superado antes de completarse la operación.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Comienza una operación asincrónica para abrir un objeto de comunicación dentro de un intervalo de tiempo especificado.</summary>
      <returns>El objeto <see cref="T:System.IAsyncResult" /> que hace referencia a la operación de apertura asincrónica. </returns>
      <param name="timeout">El objeto <see cref="T:System.Timespan" /> que especifica el tiempo con el que cuenta la operación de envío para completarse antes de que se agote el tiempo de espera.</param>
      <param name="callback">El delegado de <see cref="T:System.AsyncCallback" /> que recibe la notificación de la finalización de la operación de apertura asincrónica.</param>
      <param name="state">Objeto, especificado por la aplicación, que contiene la información de estado asociada a la operación de apertura asincrónica.</param>
      <exception cref="T:System.InvalidOperationException">El objeto de comunicación no está en un estado <see cref="F:System.ServiceModel.CommunicationState.Opened" /> ni <see cref="F:System.ServiceModel.CommunicationState.Opening" /> y no se puede modificar.</exception>
      <exception cref="T:System.ObjectDisposedException">El objeto de comunicación está en un estado de <see cref="F:System.ServiceModel.CommunicationState.Closing" /> o <see cref="F:System.ServiceModel.CommunicationState.Closed" /> y no se puede modificar.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">El objeto de comunicación está en un estado de <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> y no se puede modificar.</exception>
      <exception cref="T:System.TimeoutException">El intervalo de tiempo predeterminado asignado a la operación se ha superado antes de completarse la operación.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Close">
      <summary>Hace que un objeto de comunicación pase de su estado actual al estado cerrado.</summary>
      <exception cref="T:System.InvalidOperationException">El objeto de comunicación no está en un estado <see cref="F:System.ServiceModel.CommunicationState.Opened" /> ni <see cref="F:System.ServiceModel.CommunicationState.Opening" /> y no se puede modificar.</exception>
      <exception cref="T:System.ObjectDisposedException">El objeto de comunicación está en un estado de <see cref="F:System.ServiceModel.CommunicationState.Closing" /> o <see cref="F:System.ServiceModel.CommunicationState.Closed" /> y no se puede modificar.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">El objeto de comunicación está en un estado de <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> y no se puede modificar.</exception>
      <exception cref="T:System.TimeoutException">El intervalo de tiempo predeterminado asignado a la operación se ha superado antes de completarse la operación.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)">
      <summary>Provoca que un objeto de comunicación pase su estado actual al estado cerrado dentro de un intervalo de tiempo especificado.</summary>
      <param name="timeout">
        <see cref="T:System.Timespan" /> que especifica el tiempo con el que cuenta la operación de cierre para completarse antes de que se agote el tiempo de espera.</param>
      <exception cref="T:System.InvalidOperationException">El objeto de comunicación no está en un estado <see cref="F:System.ServiceModel.CommunicationState.Opened" /> ni <see cref="F:System.ServiceModel.CommunicationState.Opening" /> y no se puede modificar.</exception>
      <exception cref="T:System.ObjectDisposedException">El objeto de comunicación está en un estado de <see cref="F:System.ServiceModel.CommunicationState.Closing" /> o <see cref="F:System.ServiceModel.CommunicationState.Closed" /> y no se puede modificar.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">El objeto de comunicación está en un estado de <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> y no se puede modificar.</exception>
      <exception cref="T:System.TimeoutException">El intervalo de tiempo predeterminado asignado a la operación se ha superado antes de completarse la operación.</exception>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Closed">
      <summary>Se produce cuando un objeto de comunicación realiza una transición al estado de cerrado.</summary>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Closing">
      <summary>Se produce cuando un objeto de comunicación realiza una transición al estado de cerrando.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.DefaultCloseTimeout">
      <summary>Cuando se invalida en una clase derivada, obtiene el intervalo de tiempo predeterminado proporcionado para que se complete una operación de cierre.</summary>
      <returns>
        <see cref="T:System.Timespan" /> predeterminado que especifica el tiempo con el que cuenta la operación de cierre para completarse antes de que se agote el tiempo de espera.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.DefaultOpenTimeout">
      <summary>Cuando se invalida en una clase derivada, obtiene el intervalo de tiempo predeterminado proporcionado para que se complete una operación de apertura.</summary>
      <returns>
        <see cref="T:System.Timespan" /> predeterminado que especifica el tiempo con el que cuenta la operación de apertura para completarse antes de que se agote el tiempo de espera.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)">
      <summary>Completa una operación asincrónica para cerrar un objeto de comunicación.</summary>
      <param name="result">La interfaz <see cref="T:System.IAsyncResult" /> que se devuelve al llamar al método <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.BeginClose" />.</param>
      <exception cref="T:System.InvalidOperationException">El objeto de comunicación no está en un estado <see cref="F:System.ServiceModel.CommunicationState.Opened" /> ni <see cref="F:System.ServiceModel.CommunicationState.Opening" /> y no se puede modificar.</exception>
      <exception cref="T:System.ObjectDisposedException">El objeto de comunicación está en un estado de <see cref="F:System.ServiceModel.CommunicationState.Closing" /> o <see cref="F:System.ServiceModel.CommunicationState.Closed" /> y no se puede modificar.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">El objeto de comunicación está en un estado de <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> y no se puede modificar.</exception>
      <exception cref="T:System.TimeoutException">El intervalo de tiempo predeterminado asignado a la operación se ha superado antes de completarse la operación.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)">
      <summary>Completa una operación asincrónica para abrir un objeto de comunicación.</summary>
      <param name="result">La interfaz <see cref="T:System.IAsyncResult" /> que se devuelve al llamar al método <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.BeginClose" />.</param>
      <exception cref="T:System.InvalidOperationException">El objeto de comunicación no está en un estado <see cref="F:System.ServiceModel.CommunicationState.Opened" /> ni <see cref="F:System.ServiceModel.CommunicationState.Opening" /> y no se puede modificar.</exception>
      <exception cref="T:System.ObjectDisposedException">El objeto de comunicación está en un estado de <see cref="F:System.ServiceModel.CommunicationState.Closing" /> o <see cref="F:System.ServiceModel.CommunicationState.Closed" /> y no se puede modificar.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">El objeto de comunicación está en un estado de <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> y no se puede modificar.</exception>
      <exception cref="T:System.TimeoutException">El intervalo de tiempo predeterminado asignado a la operación se ha superado antes de completarse la operación.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Fault">
      <summary>Provoca que un objeto de comunicación pase de su estado actual al estado de error.</summary>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Faulted">
      <summary>Se produce cuando un objeto de comunicación realiza una transición al estado de error.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType">
      <summary>Obtiene el tipo de objeto de comunicación.</summary>
      <returns>El tipo de objeto de comunicación.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.IsDisposed">
      <summary>Obtiene un valor que indica si el objeto de comunicación se ha eliminado.</summary>
      <returns>true si el objeto de comunicación está en un estado cerrado; de lo contrario, false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnAbort">
      <summary>Inserta el procesamiento en un objeto de comunicación después de que éste pase al estado de cierre debido a la invocación de una operación sincrónica de interrupción.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Inserta el procesamiento después de que un objeto de comunicación pase al estado de cierre debido a la invocación de una operación asincrónica de cierre.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia a la operación de cierre asincrónica. </returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> que especifica el tiempo con el que cuenta la operación de cierre para completarse antes de que se agote el tiempo de espera.</param>
      <param name="callback">El delegado <see cref="T:System.AsyncCallback" /> que recibe la notificación de la finalización asincrónica de la operación de cierre.</param>
      <param name="state">Objeto, especificado por la aplicación, que contiene información de estado asociada a la operación de cierre asincrónica.</param>
      <exception cref="T:System.InvalidOperationException">El objeto de comunicación no está en un estado <see cref="F:System.ServiceModel.CommunicationState.Opened" /> ni <see cref="F:System.ServiceModel.CommunicationState.Opening" /> y no se puede modificar.</exception>
      <exception cref="T:System.ObjectDisposedException">El objeto de comunicación está en un estado de <see cref="F:System.ServiceModel.CommunicationState.Closing" /> o <see cref="F:System.ServiceModel.CommunicationState.Closed" /> y no se puede modificar.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">El objeto de comunicación está en un estado de <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> y no se puede modificar.</exception>
      <exception cref="T:System.TimeoutException">El intervalo de tiempo predeterminado asignado a la operación se ha superado antes de completarse la operación.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Inserta el procesamiento en un objeto de comunicación después de que éste pase al estado de apertura debido a la invocación de una operación asincrónica de apertura.</summary>
      <returns>La interfaz <see cref="T:System.IAsyncResult" /> que hace referencia a la operación de apertura asincrónica. </returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> que especifica el tiempo con el que cuenta la operación de apertura para completarse antes de que se agote el tiempo de espera.</param>
      <param name="callback">El delegado <see cref="T:System.AsyncCallback" /> que recibe la notificación de la finalización de la operación de apertura asincrónica.</param>
      <param name="state">Objeto, especificado por la aplicación, que contiene información de estado asociada con la operación de apertura asincrónica.</param>
      <exception cref="T:System.InvalidOperationException">El objeto de comunicación no está en un estado <see cref="F:System.ServiceModel.CommunicationState.Opened" /> ni <see cref="F:System.ServiceModel.CommunicationState.Opening" /> y no se puede modificar.</exception>
      <exception cref="T:System.ObjectDisposedException">El objeto de comunicación está en un estado de <see cref="F:System.ServiceModel.CommunicationState.Closing" /> o <see cref="F:System.ServiceModel.CommunicationState.Closed" /> y no se puede modificar.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">El objeto de comunicación está en un estado de <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> y no se puede modificar.</exception>
      <exception cref="T:System.TimeoutException">El intervalo de tiempo predeterminado asignado a la operación se ha superado antes de completarse la operación.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)">
      <summary>Inserta el procesamiento en un objeto de comunicación después de que éste pase al estado de cierre debido a la invocación de una operación sincrónica de cierre.</summary>
      <param name="timeout">
        <see cref="T:System.Timespan" /> que especifica el tiempo con el que cuenta la operación de cierre para completarse antes de que se agote el tiempo de espera.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Se llamó al método <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.Close" /> en un objeto con el estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">El intervalo de tiempo predeterminado asignado a la operación se ha superado antes de completarse la operación.</exception>
      <exception cref="T:System.ServiceModel.CommunicationException">Error de comunicación al cerrar el objeto.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnClosed">
      <summary>Se invoca durante la transición de un objeto de comunicación al estado de cierre.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnClosing">
      <summary>Se invoca durante la transición de un objeto de comunicación al estado de cierre.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)">
      <summary>Completa una operación asincrónica en el cierre de un objeto de comunicación.</summary>
      <param name="result">La interfaz <see cref="T:System.IAsyncResult" /> que se devuelve al llamar al método <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)" />.</param>
      <exception cref="T:System.InvalidOperationException">El objeto de comunicación no está en un estado <see cref="F:System.ServiceModel.CommunicationState.Opened" /> ni <see cref="F:System.ServiceModel.CommunicationState.Opening" /> y no se puede modificar.</exception>
      <exception cref="T:System.ObjectDisposedException">El objeto de comunicación está en un estado de <see cref="F:System.ServiceModel.CommunicationState.Closing" /> o <see cref="F:System.ServiceModel.CommunicationState.Closed" /> y no se puede modificar.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">El objeto de comunicación está en un estado de <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> y no se puede modificar.</exception>
      <exception cref="T:System.TimeoutException">El intervalo de tiempo predeterminado asignado a la operación se ha superado antes de completarse la operación.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)">
      <summary>Completa una operación asincrónica en la apertura de un objeto de comunicación.</summary>
      <param name="result">La interfaz <see cref="T:System.IAsyncResult" /> que se devuelve al llamar al método <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)" />.</param>
      <exception cref="T:System.InvalidOperationException">El objeto de comunicación no está en un estado <see cref="F:System.ServiceModel.CommunicationState.Opened" /> ni <see cref="F:System.ServiceModel.CommunicationState.Opening" /> y no se puede modificar.</exception>
      <exception cref="T:System.ObjectDisposedException">El objeto de comunicación está en un estado de <see cref="F:System.ServiceModel.CommunicationState.Closing" /> o <see cref="F:System.ServiceModel.CommunicationState.Closed" /> y no se puede modificar.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">El objeto de comunicación está en un estado de <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> y no se puede modificar.</exception>
      <exception cref="T:System.TimeoutException">El intervalo de tiempo predeterminado asignado a la operación se ha superado antes de completarse la operación.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnFaulted">
      <summary>Inserta el procesamiento en un objeto de comunicación después de que éste pase al estado de error debido a la invocación de una operación sincrónica de error.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)">
      <summary>Inserta el procesamiento en un objeto de comunicación después que éste pase al estado de apertura que debe completarse dentro de un intervalo de tiempo especificado.</summary>
      <param name="timeout">
        <see cref="T:System.Timespan" /> que especifica el tiempo con el que cuenta la operación de apertura para completarse antes de que se agote el tiempo de espera.</param>
      <exception cref="T:System.InvalidOperationException">El objeto de comunicación no está en un estado <see cref="F:System.ServiceModel.CommunicationState.Opened" /> ni <see cref="F:System.ServiceModel.CommunicationState.Opening" /> y no se puede modificar.</exception>
      <exception cref="T:System.ObjectDisposedException">El objeto de comunicación está en un estado de <see cref="F:System.ServiceModel.CommunicationState.Closing" /> o <see cref="F:System.ServiceModel.CommunicationState.Closed" /> y no se puede modificar.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">El objeto de comunicación está en un estado de <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> y no se puede modificar.</exception>
      <exception cref="T:System.TimeoutException">El intervalo de tiempo predeterminado asignado a la operación se ha superado antes de completarse la operación.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnOpened">
      <summary>Se invoca durante la transición de un objeto de comunicación al estado de abierto.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnOpening">
      <summary>Se invoca durante la transición de un objeto de comunicación al estado de abriendo.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Open">
      <summary>Hace que un objeto de comunicación pase del estado creado al estado abierto.</summary>
      <exception cref="T:System.InvalidOperationException">El objeto de comunicación no está en un estado <see cref="F:System.ServiceModel.CommunicationState.Opened" /> ni <see cref="F:System.ServiceModel.CommunicationState.Opening" /> y no se puede modificar.</exception>
      <exception cref="T:System.ObjectDisposedException">El objeto de comunicación está en un estado de <see cref="F:System.ServiceModel.CommunicationState.Closing" /> o <see cref="F:System.ServiceModel.CommunicationState.Closed" /> y no se puede modificar.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">El objeto de comunicación está en un estado de <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> y no se puede modificar.</exception>
      <exception cref="T:System.TimeoutException">El intervalo de tiempo predeterminado asignado a la operación se ha superado antes de completarse la operación.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)">
      <summary>Hace que un objeto de comunicación pase del estado creado al estado abierto dentro de un intervalo de tiempo especificado.</summary>
      <param name="timeout">La estructura <see cref="T:System.Timespan" /> que especifica el tiempo con el que cuenta la operación de apertura para completarse antes de que se agote el tiempo de espera.</param>
      <exception cref="T:System.InvalidOperationException">El objeto de comunicación no está en un estado <see cref="F:System.ServiceModel.CommunicationState.Opened" /> ni <see cref="F:System.ServiceModel.CommunicationState.Opening" /> y no se puede modificar.</exception>
      <exception cref="T:System.ObjectDisposedException">El objeto de comunicación está en un estado de <see cref="F:System.ServiceModel.CommunicationState.Closing" /> o <see cref="F:System.ServiceModel.CommunicationState.Closed" /> y no se puede modificar.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">El objeto de comunicación está en un estado de <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> y no se puede modificar.</exception>
      <exception cref="T:System.TimeoutException">El intervalo de tiempo predeterminado asignado a la operación se ha superado antes de completarse la operación.</exception>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Opened">
      <summary>Se produce cuando un objeto de comunicación realiza una transición al estado de abierto.</summary>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Opening">
      <summary>Se produce cuando un objeto de comunicación realiza una transición al estado de abriendo.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.State">
      <summary>Obtiene un valor que indica el estado actual del objeto de comunicación.</summary>
      <returns>Un valor de la enumeración <see cref="T:System.ServiceModel.CommunicationState" /> que indica el estado actual del objeto.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.ThisLock">
      <summary>Obtiene el bloqueo mutuamente excluyente que protege la instancia de clase durante una transición de estado.</summary>
      <returns>El bloqueo mutuamente excluyente que protege la instancia de clase durante una transición de estado.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.CompressionFormat">
      <summary>Especifica el formato de compresión de los canales.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.CompressionFormat.Deflate">
      <summary>Formato de compresión Deflate.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.CompressionFormat.GZip">
      <summary>Formato de compresión Gzip.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.CompressionFormat.None">
      <summary>El formato de compresión ninguno.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.CustomBinding">
      <summary>Define un enlace de una lista de elementos de enlace. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.CustomBinding" />.  </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.Channels.BindingElement})">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.CustomBinding" /> con los elementos de enlace de una pila de canales completa.</summary>
      <param name="bindingElementsInTopDownChannelStackOrder">La interfaz <see cref="T:System.Collections.Generic.IEnumerable`1" /> de tipo <see cref="T:System.ServiceModel.Channels.BindingElement" /> que contiene los elementos de enlace de la pila de canales en orden descendente.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bindingElementsInTopDownChannelStackOrder" /> es null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor(System.ServiceModel.Channels.Binding)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.CustomBinding" /> a partir de los valores un enlace especificado.</summary>
      <param name="binding">La clase <see cref="T:System.ServiceModel.Channels.Binding" /> que se usa para inicializar el enlace personalizado.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binding" /> es null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor(System.ServiceModel.Channels.BindingElement[])">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.CustomBinding" /> a partir de una matriz de elementos de enlace.</summary>
      <param name="bindingElementsInTopDownChannelStackOrder">La clase <see cref="T:System.Array" /> de tipo <see cref="T:System.ServiceModel.Channels.BindingElement" /> usada para inicializar el enlace personalizado.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bindingElementsInTopDownChannelStackOrder" /> es null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor(System.String,System.String,System.ServiceModel.Channels.BindingElement[])">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.CustomBinding" /> a partir de una matriz de elementos de enlace con nombre y espacio de nombres especificados.</summary>
      <param name="name">Nombre del enlace.</param>
      <param name="ns">El espacio de nombres del enlace.</param>
      <param name="bindingElementsInTopDownChannelStackOrder">La clase <see cref="T:System.Array" /> de tipo <see cref="T:System.ServiceModel.Channels.BindingElement" /> usada para inicializar el enlace personalizado.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bindingElementsInTopDownChannelStackOrder" /> es null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.CreateBindingElements">
      <summary>Devuelve una colección genérica de los elementos de enlace del enlace personalizado.</summary>
      <returns>Un objeto <see cref="T:System.Collections.Generic.ICollection`1" /> de tipo <see cref="T:System.ServiceModel.Channels.BindingElement" /> que contiene los elementos de enlace del enlace personalizado.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CustomBinding.Elements">
      <summary>Obtiene los elementos de enlace del enlace personalizado.</summary>
      <returns>La clase <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> que contiene los elementos de enlace del enlace personalizado.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CustomBinding.Scheme">
      <summary>Obtiene el esquema URI para el transporte utilizado por el enlace personalizado.</summary>
      <returns>El esquema URI para el transporte utilizado por el enlace personalizado; o una cadena vacía si no hay transporte (<see cref="T:System.ServiceModel.Channels.TransportBindingElement" /> es null).</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.FaultConverter">
      <summary>Convierte excepciones producidas por un canal en los mensajes de error de SOAP que cumplen el protocolo del canal.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.FaultConverter" />.  </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.GetDefaultFaultConverter(System.ServiceModel.Channels.MessageVersion)">
      <summary>Obtiene el convertidor del error predeterminado.</summary>
      <returns>Instancia de <see cref="T:System.ServiceModel.Channels.FaultConverter" />.</returns>
      <param name="version">La versión del mensaje.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)">
      <summary>Intenta crear la excepción.</summary>
      <returns>true si el error se convirtió correctamente; de lo contrario, false.El valor predeterminado es false.</returns>
      <param name="message">El mensaje de error.</param>
      <param name="fault">El error.</param>
      <param name="exception">Si la conversión tiene éxito, la excepción SOAP es devuelta como un parámetro out.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)">
      <summary>Intenta crear el mensaje de error cuando el error se ha convertido en una excepción SOAP.</summary>
      <returns>true si se crea el mensaje de error correctamente; de lo contrario, false.El valor predeterminado es false.</returns>
      <param name="exception">La excepción SOAP.</param>
      <param name="message">El mensaje de error devuelto como un parámetro out.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.TryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)">
      <summary>Ajusta el método <see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" /> con comprobación de errores.</summary>
      <returns>true si el error se convirtió correctamente; de lo contrario, false.El valor predeterminado es false.</returns>
      <param name="message">El mensaje de error.</param>
      <param name="fault">El error.</param>
      <param name="exception">Si la conversión tiene éxito, la excepción SOAP es devuelta como un parámetro out.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> o <paramref name="fault" /> es null.</exception>
      <exception cref="T:System.ArgumentNullException">
        <see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" /> devuelto true pero <paramref name="exception" /> es null.</exception>
      <exception cref="T:System.ArgumentNullException">
        <see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" /> devuelto false pero <paramref name="exception" /> no es null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.IChannel">
      <summary>Define la interfaz básica que todos los objetos de canal deben implementar.Requiere que implementen la interfaz de equipo de estado compartida por todos los objetos de comunicación y que implementen un método para recuperar los objetos de la pila del canal.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannel.GetProperty``1">
      <summary>Devuelve un objeto con tipo solicitado, si lo hay, de la capa adecuada de la pila de canales.</summary>
      <returns>El objeto escrito solicitado <paramref name="T" />, si está presente, o null si no lo está.</returns>
      <typeparam name="T">El objeto con tipo que el método está consultando.</typeparam>
    </member>
    <member name="T:System.ServiceModel.Channels.IChannelFactory">
      <summary>Define la interfaz que debe implementar un generador del canal para generar canales.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannelFactory.GetProperty``1">
      <summary>Devuelve un objeto con tipo solicitado, si lo hay, de la capa adecuada de la pila de canales.</summary>
      <returns>El objeto escrito solicitado <paramref name="T" />, si está presente, o null si no lo está.</returns>
      <typeparam name="T">El objeto con tipo que el método está consultando.</typeparam>
    </member>
    <member name="T:System.ServiceModel.Channels.IChannelFactory`1">
      <summary>Define la interfaz que debe ser implementada por generadores del canal que crean los canales específicos del tipo.</summary>
      <typeparam name="TChannel">El tipo de canal que crea el generador del canal.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)">
      <summary>Crea un canal de un tipo especificado a una dirección del extremo concreta.</summary>
      <returns>Canal del tipo <paramref name="TChannel" /> para la dirección del extremo especificada.</returns>
      <param name="to">La <see cref="T:System.ServiceModel.EndpointAddress" /> que proporciona la ubicación del servicio.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>Crea un canal de un tipo especificado para una dirección del extremo y dirección de transporte especificadas a donde se envían los mensajes.</summary>
      <returns>Canal del tipo <paramref name="TChannel" /> para la dirección del extremo y la dirección de transporte especificadas.</returns>
      <param name="to">La <see cref="T:System.ServiceModel.EndpointAddress" /> que proporciona la ubicación del servicio.</param>
      <param name="via">
        <see cref="T:System.Uri" /> que contiene la dirección de transporte a la que se envía un mensaje.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.IDuplexChannel">
      <summary>Define la interfaz que un canal debe implementar para enviar y recibir mensajes. </summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IDuplexSession">
      <summary>Define la interfaz para la sesión implementada en cada lado de una comunicación bidireccional entre los extremos de la mensajería. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession(System.AsyncCallback,System.Object)">
      <summary>Comienza una operación asincrónica para finalizar la sesión saliente.</summary>
      <returns>La interfaz <see cref="T:System.IAsyncResult" /> que hace referencia a la finalización de la sesión saliente asincrónica. </returns>
      <param name="callback">Delegado <see cref="T:System.AsyncCallback" />. </param>
      <param name="state">Objeto object que contiene información de estado para esta solicitud. </param>
    </member>
    <member name="M:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Comienza una operación asincrónica para finalizar la sesión saliente con un tiempo de espera especificado dentro del que la operación debe completarse.</summary>
      <returns>La interfaz <see cref="T:System.IAsyncResult" /> que hace referencia a la finalización de la sesión saliente asincrónica. </returns>
      <param name="timeout">
        <see cref="T:System.TimeSpan" /> que especifica el intervalo de tiempo dentro del cual la operación debe completarse.</param>
      <param name="callback">Delegado <see cref="T:System.AsyncCallback" />. </param>
      <param name="state">Objeto object que contiene información de estado para esta solicitud. </param>
    </member>
    <member name="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession">
      <summary>Finaliza la sesión saliente que indica que no se enviarán más mensajes desde este extremo del canal asociado a la sesión. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession(System.TimeSpan)">
      <summary>Finaliza la sesión saliente que indica que no se enviarán más mensajes desde este extremo del canal asociado a la sesión dentro de un intervalo de tiempo especificado.</summary>
      <param name="timeout">
        <see cref="T:System.TimeSpan" /> que especifica el intervalo de tiempo dentro del cual la operación debe completarse.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IDuplexSession.EndCloseOutputSession(System.IAsyncResult)">
      <summary>Completa una operación asincrónica para finalizar la sesión saliente que indica que no se enviarán más mensajes desde este extremo del canal asociado a la sesión. </summary>
      <param name="result">La interfaz <see cref="T:System.IAsyncResult" /> devuelta por una llamada a uno de los métodos <see cref="Overload:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession" />.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.IDuplexSessionChannel">
      <summary>Define la interfaz que asocia un canal dúplex a una sesión.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IInputChannel">
      <summary>Define la interfaz que un canal debe implementar para recibir un mensaje. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.BeginReceive(System.AsyncCallback,System.Object)">
      <summary>Comienza una operación asincrónica para recibir un mensaje que tiene un objeto de estados asociado a él. </summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia a la recepción asincrónica de un mensaje. </returns>
      <param name="callback">El delegado <see cref="T:System.AsyncCallback" /> que recibe la notificación de la finalización de la operación asincrónica.</param>
      <param name="state">Objeto, especificado por la aplicación, que contiene información de estado asociada a la operación asincrónica.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.BeginReceive(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Comienza una operación asincrónica para recibir un mensaje que tiene un tiempo de espera especificado y un objeto de estados asociados a él. </summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia a la operación de recepción asincrónica.</returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> que especifica el intervalo de tiempo que hay que esperar a que haya un mensaje disponible.</param>
      <param name="callback">El delegado <see cref="T:System.AsyncCallback" /> que recibe la notificación de la finalización de la operación asincrónica.</param>
      <param name="state">Objeto, especificado por la aplicación, que contiene información de estado asociada a la operación asincrónica.</param>
      <exception cref="T:System.TimeoutException">Se supera el valor del parámetro <paramref name="timeout" /> especificado antes de que se complete la operación.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El tiempo de espera especificado es menor que cero.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.BeginTryReceive(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Comienza una operación asincrónica para recibir un mensaje que tiene un tiempo de espera especificado y un objeto de estados asociados a él. </summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia a la operación de recepción asincrónica.</returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> que especifica el intervalo de tiempo que hay que esperar a que haya un mensaje disponible.</param>
      <param name="callback">El delegado <see cref="T:System.AsyncCallback" /> que recibe la notificación de la finalización de la operación asincrónica.</param>
      <param name="state">Objeto, especificado por la aplicación, que contiene información de estado asociada a la operación asincrónica.</param>
      <exception cref="T:System.TimeoutException">Se supera el valor del parámetro <paramref name="timeout" /> especificado antes de que se complete la operación.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El tiempo de espera especificado es menor que cero.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Comienza una operación asincrónica para esperar a que llegue un mensaje que tiene un tiempo de espera especificado y un objeto de estados asociados a él. </summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia a la operación asincrónica de espera a que llegue un mensaje.</returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> que especifica el intervalo de tiempo que hay que esperar a que haya un mensaje disponible.</param>
      <param name="callback">El delegado <see cref="T:System.AsyncCallback" /> que recibe la notificación de la finalización de la operación asincrónica.</param>
      <param name="state">Objeto, especificado por la aplicación, que contiene información de estado asociada a la operación asincrónica.</param>
      <exception cref="T:System.TimeoutException">Se supera el valor del parámetro <paramref name="timeout" /> especificado antes de que se complete la operación.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El tiempo de espera especificado es menor que cero.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.EndReceive(System.IAsyncResult)">
      <summary>Completa una operación asincrónica para recibir un mensaje. </summary>
      <returns>La clase <see cref="T:System.ServiceModel.Channels.Message" /> recibida. </returns>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> devuelto por una llamada a uno de los métodos <see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.EndTryReceive(System.IAsyncResult,System.ServiceModel.Channels.Message@)">
      <summary>Completa la operación asincrónica especificada para recibir un mensaje.</summary>
      <returns>true si se recibe un mensaje antes de que transcurra un intervalo de tiempo especificado; de lo contrario false.</returns>
      <param name="result">La interfaz <see cref="T:System.IAsyncResult" /> devuelta por una llamada al método <see cref="M:System.ServiceModel.Channels.IInputChannel.BeginTryReceive(System.TimeSpan,System.AsyncCallback,System.Object)" />.</param>
      <param name="message">La clase <see cref="T:System.ServiceModel.Channels.Message" /> recibida. </param>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.EndWaitForMessage(System.IAsyncResult)">
      <summary>Completa la operación asincrónica especificada de espera por un mensaje.</summary>
      <returns>true si llega un mensaje antes de que se haya superado <paramref name="timeout" />; de lo contrario false.</returns>
      <param name="result">La interfaz <see cref="T:System.IAsyncResult" /> que identifica la operación del método <see cref="M:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage(System.TimeSpan,System.AsyncCallback,System.Object)" /> que va a finalizar y de la que se va a recuperar un resultado final.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.IInputChannel.LocalAddress">
      <summary>Obtiene la dirección en la que este canal de entrada recibe los mensajes. </summary>
      <returns>
        <see cref="T:System.ServiceModel.EndpointAddress" /> en el que el canal de entrada recibe los mensajes. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.Receive">
      <summary>Devuelve el mensaje recibido si está disponible.Si no hay un mensaje disponible, se bloquea durante un intervalo de tiempo predeterminado.</summary>
      <returns>La clase <see cref="T:System.ServiceModel.Channels.Message" /> recibida. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.Receive(System.TimeSpan)">
      <summary>Devuelve el mensaje recibido si está disponible.Si no hay un mensaje disponible, se bloquea durante un intervalo de tiempo especificado.</summary>
      <returns>La clase <see cref="T:System.ServiceModel.Channels.Message" /> recibida. </returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> que especifica cuánto tiempo tiene una operación de recepción antes de expirar e iniciar <see cref="T:System.TimeoutException" />.</param>
      <exception cref="T:System.TimeoutException">Se supera el valor del parámetro <paramref name="timeout" /> especificado antes de que se complete la operación.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El tiempo de espera especificado es menor que cero.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.TryReceive(System.TimeSpan,System.ServiceModel.Channels.Message@)">
      <summary>Intenta recibir un mensaje dentro de un intervalo de tiempo especificado. </summary>
      <returns>true si se recibe un mensaje antes de que se haya superado <paramref name="timeout" />; de lo contrario false.</returns>
      <param name="timeout">
        <see cref="T:System.IAsyncResult" /> devuelto por una llamada a uno de los métodos <see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" />.</param>
      <param name="message">La clase <see cref="T:System.ServiceModel.Channels.Message" /> recibida. </param>
      <exception cref="T:System.TimeoutException">Se supera el valor del parámetro <paramref name="timeout" /> especificado antes de que se complete la operación.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El tiempo de espera especificado es menor que cero.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.WaitForMessage(System.TimeSpan)">
      <summary>Devuelve un valor que indica si un mensaje ha llegado dentro de un intervalo especificado de hora.</summary>
      <returns>true si llega un mensaje antes de que se haya superado <paramref name="timeout" />; de lo contrario false.</returns>
      <param name="timeout">La estructura <see cref="T:System.Timespan" /> especifica el intervalo de tiempo máximo de espera anterior a la llegada de un mensaje antes de que se agote el tiempo de espera.</param>
      <exception cref="T:System.TimeoutException">Se supera el valor del parámetro <paramref name="timeout" /> especificado antes de que se complete la operación.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El tiempo de espera especificado es menor que cero.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.IInputSession">
      <summary>Define la interfaz para la sesión implementada en el lado receptor de una comunicación unidireccional entre los extremos de la mensajería. </summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IInputSessionChannel">
      <summary>Define la interfaz que asocia un canal de entrada a una sesión.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IMessageProperty">
      <summary>Define una interfaz que puede implementar para describir un conjunto de propiedades para un mensaje.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IMessageProperty.CreateCopy">
      <summary>Crea una copia de la instancia actual.</summary>
      <returns>Objeto <see cref="T:System.ServiceModel.Channels.IMessageProperty" /> que es una copia de la instancia actual.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.IOutputChannel">
      <summary>Define la interfaz que un canal debe implementar para enviar un mensaje. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>Comienza una operación asincrónica para transmitir un mensaje al destino del canal de salida. </summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia a la transmisión asincrónica de un mensaje. </returns>
      <param name="message">El <see cref="T:System.ServiceModel.Channels.Message" /> que se está enviando en el canal de salida. </param>
      <param name="callback">Delegado <see cref="T:System.AsyncCallback" />. </param>
      <param name="state">Objeto, especificado por la aplicación, que contiene información de estado asociada a la operación de envío asincrónica.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Comienza una operación asincrónica para transmitir un mensaje al destino del canal de salida dentro de un intervalo de tiempo especificado.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia a la operación de envío asincrónica.</returns>
      <param name="message">El <see cref="T:System.ServiceModel.Channels.Message" /> que se está enviando en el canal de salida.</param>
      <param name="timeout">El objeto <see cref="T:System.Timespan" /> que especifica el tiempo con el que cuenta la operación de envío para completarse antes de que se agote el tiempo de espera.</param>
      <param name="callback">El delegado <see cref="T:System.AsyncCallback" /> que recibe la notificación de la finalización de la operación de envío asincrónica.</param>
      <param name="state">Objeto, especificado por la aplicación, que contiene información de estado asociada a la operación de envío asincrónica.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IOutputChannel.EndSend(System.IAsyncResult)">
      <summary>Termina una operación asincrónica para transmitir un mensaje al destino del canal de salida. </summary>
      <param name="result">El <see cref="T:System.IAsyncResult" /> devuelto por una llamada al método <see cref="Overload:System.ServiceModel.Channels.IOutputChannel.BeginSend" />. </param>
    </member>
    <member name="P:System.ServiceModel.Channels.IOutputChannel.RemoteAddress">
      <summary>Obtiene el destino del servicio al que se mandan los mensajes en el canal de salida. </summary>
      <returns>
        <see cref="T:System.ServiceModel.EndpointAddress" /> del servicio al que el canal de salida envía los mensajes. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message)">
      <summary>Transmite un mensaje al destino del canal de salida. </summary>
      <param name="message">El <see cref="T:System.ServiceModel.Channels.Message" /> que se está enviando en el canal de salida.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <summary>Envía un mensaje en el canal de salida actual dentro de un intervalo de tiempo especificado.</summary>
      <param name="message">El <see cref="T:System.ServiceModel.Channels.Message" /> que se está enviando en el canal de salida.</param>
      <param name="timeout">El objeto <see cref="T:System.Timespan" /> que especifica el tiempo con el que cuenta la operación de envío para completarse antes de que se agote el tiempo de espera.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.IOutputChannel.Via">
      <summary>Obtiene el URI que contiene la dirección de transporte a la que se envían los mensajes en el canal de salida.</summary>
      <returns>
        <see cref="T:System.Uri" /> que contiene la dirección de transporte a la que se envían los mensajes en el canal de salida.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.IOutputSession">
      <summary>Define la interfaz para la sesión implementada en el lado emisor de una comunicación unidireccional entre los extremos de la mensajería. </summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IOutputSessionChannel">
      <summary>Define la interfaz que asocia un canal de salida a una sesión. </summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IRequestChannel">
      <summary>Define el contrato que un canal debe implementar para estar en el lado que realiza la solicitud de una comunicación de solicitud-respuesta entre los extremos de la mensajería. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>Inicia una operación asincrónica para transmitir un mensaje de solicitud al lado correspondiente a la respuesta de un intercambio de mensajes de solicitud y respuesta. </summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia a la transmisión asincrónica de un mensaje. </returns>
      <param name="message">La solicitud <see cref="T:System.ServiceModel.Channels.Message" /> que se va a transmitir.</param>
      <param name="callback">El delegado <see cref="T:System.AsyncCallback" /> que recibe la notificación de la realización de la operación asincrónica que transmite un mensaje de solicitud.</param>
      <param name="state">Un objeto, especificado por la aplicación, que contiene información de estado asociada a la operación asincrónica que transmite un mensaje de solicitud.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Comienza una operación asincrónica para transmitir un mensaje de solicitud al lado de la respuesta intercambio de mensajes solicitud-respuesta dentro de un intervalo de tiempo especificado.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia a la transmisión asincrónica de un mensaje. </returns>
      <param name="message">La solicitud <see cref="T:System.ServiceModel.Channels.Message" /> que se va a transmitir.</param>
      <param name="timeout">
        <see cref="T:System.TimeSpan" /> que especifica el intervalo de tiempo dentro del cual se debe recibir una respuesta. (Para conocer los valores predeterminados, consulte la sección Comentarios.)</param>
      <param name="callback">El delegado <see cref="T:System.AsyncCallback" /> que recibe la notificación de la realización de la operación asincrónica que transmite un mensaje de solicitud.</param>
      <param name="state">Un objeto, especificado por la aplicación, que contiene información de estado asociada a la operación asincrónica que transmite un mensaje de solicitud.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IRequestChannel.EndRequest(System.IAsyncResult)">
      <summary>Completa una operación asincrónica para devolver una respuesta basada en mensaje a una solicitud transmitida. </summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Message" /> recibido en respuesta a la solicitud. </returns>
      <param name="result">La interfaz <see cref="T:System.IAsyncResult" /> devuelta por una llamada al método <see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" />. </param>
    </member>
    <member name="P:System.ServiceModel.Channels.IRequestChannel.RemoteAddress">
      <summary>Obtiene la dirección remota a la que el canal de solicitudes envía los mensajes. </summary>
      <returns>
        <see cref="T:System.ServiceModel.EndpointAddress" /> al que el canal de solicitudes envía los mensajes. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message)">
      <summary>Envía una solicitud basada en mensaje y devuelve la respuesta basada en mensaje correlacionada. </summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Message" /> recibido en respuesta a la solicitud. </returns>
      <param name="message">La solicitud <see cref="T:System.ServiceModel.Channels.Message" /> que se va a transmitir.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <summary>Envía una solicitud basada en mensaje y devuelve la respuesta basada en mensaje correlacionada dentro de un intervalo de tiempo especificado.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Message" /> recibido en respuesta a la solicitud. </returns>
      <param name="message">La solicitud <see cref="T:System.ServiceModel.Channels.Message" /> que se va a transmitir.</param>
      <param name="timeout">
        <see cref="T:System.TimeSpan" /> que especifica el intervalo de tiempo dentro del cual se debe recibir una respuesta.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.IRequestChannel.Via">
      <summary>Obtiene la dirección de transporte a la se envía la solicitud.</summary>
      <returns>
        <see cref="T:System.Uri" /> que contiene la dirección de transporte a la que se envía un mensaje.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.IRequestSessionChannel">
      <summary>Define la interfaz para asociar un canal de la solicitud a una sesión.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.ISession">
      <summary>Define la interfaz para establecer un contexto compartido entre las partes que intercambian los mensajes proporcionando una id. para la sesión de comunicaciones. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.ISession.Id">
      <summary>Obtiene el identificador que identifica de forma exclusiva la sesión. </summary>
      <returns>El identificador que identifica de forma exclusiva la sesión. </returns>
    </member>
    <member name="T:System.ServiceModel.Channels.ISessionChannel`1">
      <summary>Define la interfaz que asocia un canal a un tipo específico de sesión.</summary>
      <typeparam name="TSession">Tipo de <see cref="T:System.ServiceModel.Channels.ISession" /> asociado al canal.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.ISessionChannel`1.Session">
      <summary>Obtiene el tipo de sesión de salida asociada con este canal. </summary>
      <returns>Tipo de <see cref="T:System.ServiceModel.Channels.ISession" /> asociado con este canal. </returns>
    </member>
    <member name="T:System.ServiceModel.Channels.Message">
      <summary>Representa la unidad de comunicación entre los extremos de un entorno distribuido. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.Message" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.Close">
      <summary>Cierra <see cref="T:System.ServiceModel.Channels.Message" /> y libera los recursos. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateBufferedCopy(System.Int32)">
      <summary>Almacena un <see cref="T:System.ServiceModel.Channels.Message" /> completo en un búfer de la memoria para accesos futuros.</summary>
      <returns>Objeto <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> recién creado.</returns>
      <param name="maxBufferSize">El tamaño máximo del búfer que se debe crear.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="maxBufferSize " /> es menor que cero.</exception>
      <exception cref="T:System.ObjectDisposedException">El mensaje está cerrado.</exception>
      <exception cref="T:System.InvalidOperationException">El mensaje se ha copiado, leído o escrito.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String)">
      <summary>Crea un mensaje que contiene una versión y una acción.</summary>
      <returns>Objeto <see cref="T:System.ServiceModel.Channels.Message" /> para el mensaje creado. </returns>
      <param name="version">Objeto <see cref="T:System.ServiceModel.Channels.MessageVersion" /> que especifica la versión de SOAP que se usará para el mensaje.</param>
      <param name="action">Descripción de cómo se debe procesar el mensaje.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" /> o <paramref name="action" /> es null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.Object)">
      <summary>Crea un mensaje con la versión especificada, acción y cuerpo. </summary>
      <returns>Objeto <see cref="T:System.ServiceModel.Channels.Message" /> para el mensaje creado. </returns>
      <param name="version">Objeto <see cref="T:System.ServiceModel.Channels.MessageVersion" /> que especifica la versión de SOAP que se usará para el mensaje. </param>
      <param name="action">Descripción de cómo se debe procesar el mensaje. </param>
      <param name="body">El cuerpo del mensaje.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" />, <paramref name="action" /> o <paramref name="body" /> es null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Crea un mensaje mediante la versión especificada, acción, cuerpo del mensaje y serializador.</summary>
      <returns>Objeto <see cref="T:System.ServiceModel.Channels.Message" /> para el mensaje creado. </returns>
      <param name="version">Objeto <see cref="T:System.ServiceModel.Channels.MessageVersion" /> que especifica la versión de SOAP que se usará para el mensaje. </param>
      <param name="action">Descripción de cómo se debe procesar el mensaje. </param>
      <param name="body">El cuerpo del mensaje. </param>
      <param name="serializer">Un objeto de <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> utilizado para serializar el mensaje.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" />, <paramref name="fault" /> o <paramref name="action" /> es null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.ServiceModel.Channels.BodyWriter)">
      <summary>Crea un mensaje con un cuerpo que está compuesto de una matriz de bytes.</summary>
      <returns>Objeto <see cref="T:System.ServiceModel.Channels.Message" /> para el mensaje creado. </returns>
      <param name="version">Objeto <see cref="T:System.ServiceModel.Channels.MessageVersion" /> que especifica la versión de SOAP que se usará para el mensaje. </param>
      <param name="action">Descripción de cómo se debe procesar el mensaje. </param>
      <param name="body">Clase <see cref="T:System.ServiceModel.Channels.BodyWriter" /> de tipo byte. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Version" />, <paramref name="action" /> o <paramref name="body" /> es null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.Xml.XmlDictionaryReader)">
      <summary>Crea un mensaje con la versión especificada, acción y cuerpo.</summary>
      <returns>Objeto <see cref="T:System.ServiceModel.Channels.Message" /> para el mensaje creado. </returns>
      <param name="version">Objeto <see cref="T:System.ServiceModel.Channels.MessageVersion" /> que especifica la versión de SOAP que se usará para el mensaje. </param>
      <param name="action">Descripción de cómo se debe procesar el mensaje. </param>
      <param name="body">El cuerpo del mensaje.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" />, <paramref name="action" /> o <paramref name="body" /> es null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.Xml.XmlReader)">
      <summary>Crea un mensaje mediante el lector especificado, acción y versión.</summary>
      <returns>Objeto <see cref="T:System.ServiceModel.Channels.Message" /> para el mensaje creado. </returns>
      <param name="version">Objeto <see cref="T:System.ServiceModel.Channels.MessageVersion" /> que especifica la versión de SOAP que se usará para el mensaje. </param>
      <param name="action">Descripción de cómo se debe procesar el mensaje. </param>
      <param name="body">El objeto <see cref="T:System.Xml.XmlReader" /> que se debe utilizar para leer el mensaje SOAP.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" />, <paramref name="action" /> o <paramref name="body" /> es null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.Xml.XmlDictionaryReader,System.Int32,System.ServiceModel.Channels.MessageVersion)">
      <summary>Crea un mensaje mediante el lector especificado, acción y versión.</summary>
      <returns>Objeto <see cref="T:System.ServiceModel.Channels.Message" /> para el mensaje creado. </returns>
      <param name="envelopeReader">El objeto <see cref="T:System.Xml.XmlDictionaryReader" /> que se va a utilizar para leer el mensaje SOAP.</param>
      <param name="maxSizeOfHeaders">El tamaño máximo en bytes de un encabezado. </param>
      <param name="version">Valor de la clase <see cref="T:System.ServiceModel.Channels.MessageVersion" /> válido que especifica la versión SOAP que se va a usar para el mensaje. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="envelopeReader" /> o <paramref name="version" /> es null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.Xml.XmlReader,System.Int32,System.ServiceModel.Channels.MessageVersion)">
      <summary>Crea un mensaje mediante el lector especificado, acción y versión.</summary>
      <returns>Objeto <see cref="T:System.ServiceModel.Channels.Message" /> para el mensaje creado. </returns>
      <param name="envelopeReader">El objeto <see cref="T:System.Xml.XmlReader" /> que se debe utilizar para leer el mensaje SOAP.</param>
      <param name="maxSizeOfHeaders">El tamaño máximo en bytes de un encabezado. </param>
      <param name="version">Objeto <see cref="T:System.ServiceModel.Channels.MessageVersion" /> que especifica la versión de SOAP que se usará para el mensaje. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="envelopeReader" /> o <paramref name="version" /> es null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.GetBody``1">
      <summary>Recupera el cuerpo de esta instancia de <see cref="T:System.ServiceModel.Channels.Message" />.</summary>
      <returns>Un objeto de tipo <paramref name="T" /> que contiene el cuerpo de este mensaje.</returns>
      <typeparam name="T">El cuerpo del mensaje.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.GetBody``1(System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Recupera el cuerpo de <see cref="T:System.ServiceModel.Channels.Message" /> utilizando el serializador especificado.</summary>
      <returns>Un objeto de tipo <paramref name="T" /> que contiene el cuerpo de este mensaje.</returns>
      <param name="serializer">Un objeto de <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> usado para leer el cuerpo del mensaje.</param>
      <typeparam name="T">El cuerpo del mensaje.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serializer" /> es null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.GetBodyAttribute(System.String,System.String)">
      <summary>Recupera los atributos del cuerpo del mensaje.</summary>
      <returns>Los atributos del cuerpo del mensaje.</returns>
      <param name="localName">El nombre local del nodo XML.El nombre del elemento que se corresponde a este miembro.Esta cadena debe ser un nombre de elemento XML válido.</param>
      <param name="ns">El espacio de nombres al que pertenece este elemento XML.El URI de espacio de nombres del elemento que se corresponde con este miembro.El sistema no valida los URI que no sean direcciones de transporte.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localName" /> o <paramref name="ns" /> es null. </exception>
      <exception cref="T:System.ObjectDisposedException">El mensaje está cerrado.</exception>
      <exception cref="T:System.InvalidOperationException">El mensaje se ha copiado, leído o escrito.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.GetReaderAtBodyContents">
      <summary>Obtiene el lector del diccionario de XML que tiene acceso al contenido del cuerpo de este mensaje.</summary>
      <returns>Un objeto de <see cref="T:System.Xml.XmlDictionaryReader" /> que tiene acceso al contenido del cuerpo de este mensaje.</returns>
      <exception cref="T:System.ObjectDisposedException">El mensaje está cerrado.</exception>
      <exception cref="T:System.InvalidOperationException">El mensaje está vacío o se ha copiado, leído o escrito.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.Headers">
      <summary>Cuando se invalida en una clase derivada, obtiene los encabezados del mensaje. </summary>
      <returns>Un objeto <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> que representa los encabezados del mensaje. </returns>
      <exception cref="T:System.ObjectDisposedException">El mensaje se ha eliminado.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.IsDisposed">
      <summary>Devuelve un valor que indica si la clase <see cref="T:System.ServiceModel.Channels.Message" /> se elimina. </summary>
      <returns>true si el mensaje se ha eliminado; de lo contrario, false. </returns>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.IsEmpty">
      <summary>Devuelve un valor que indica si la clase <see cref="T:System.ServiceModel.Channels.Message" /> está vacía. </summary>
      <returns>true si el mensaje está vacío; de lo contrario, false. </returns>
      <exception cref="T:System.ObjectDisposedException">El mensaje se ha eliminado.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.IsFault">
      <summary>Obtiene un valor que indica si este mensaje genera un error de SOAP.</summary>
      <returns>true si este mensaje genera un error de SOAP; de lo contrario, false.</returns>
      <exception cref="T:System.ObjectDisposedException">El mensaje se ha eliminado.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnBodyToString(System.Xml.XmlDictionaryWriter)">
      <summary>Se llama cuando el cuerpo del mensaje se convierte en una cadena.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> que se utiliza para convertir el cuerpo del mensaje en una cadena. </param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnClose">
      <summary>Se llama cuando el mensaje se está cerrando.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnCreateBufferedCopy(System.Int32)">
      <summary>Se llama cuando un búfer del mensaje se crea para almacenar este mensaje.</summary>
      <returns>Objeto <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> para la copia de mensaje recién creada.</returns>
      <param name="maxBufferSize">El tamaño máximo del búfer que se debe crear.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnGetBody``1(System.Xml.XmlDictionaryReader)">
      <summary>Se llama cuando se recupera el cuerpo del mensaje.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> que representa el cuerpo del mensaje.</returns>
      <param name="reader">Un objeto de <see cref="T:System.Xml.XmlDictionaryReader)" /> usado para leer el cuerpo del mensaje.</param>
      <typeparam name="T">Tipo del cuerpo del mensaje.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnGetBodyAttribute(System.String,System.String)">
      <summary>Se llama cuando se recuperan los atributos del cuerpo del mensaje.</summary>
      <returns>Los atributos del cuerpo del mensaje.</returns>
      <param name="localName">El nombre local del nodo XML.El nombre del elemento que se corresponde a este miembro.Esta cadena debe ser un nombre de elemento XML válido.</param>
      <param name="ns">El espacio de nombres al que pertenece este elemento XML.El URI de espacio de nombres del elemento que se corresponde con este miembro.El sistema no valida los URI que no sean direcciones de transporte.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnGetReaderAtBodyContents">
      <summary>Se llama cuando se recupera un lector del diccionario de XML que puede tener acceso al contenido del cuerpo de este mensaje.</summary>
      <returns>Un objeto de <see cref="T:System.Xml.XmlDictionaryReader" /> que tiene acceso al contenido del cuerpo de este mensaje.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnWriteBodyContents(System.Xml.XmlDictionaryWriter)">
      <summary>Llamado cuando el cuerpo del mensaje se escribe en un archivo XML.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> que se utiliza para escribir este cuerpo del mensaje en un archivo XML.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnWriteMessage(System.Xml.XmlDictionaryWriter)">
      <summary>Llamado cuando el mensaje entero se escribe en un archivo XML.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> que se utiliza para escribir este mensaje en un archivo XML.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnWriteStartBody(System.Xml.XmlDictionaryWriter)">
      <summary>Llamado cuando el cuerpo del inicio se escribe en un archivo XML.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> que se utiliza para escribir el cuerpo del inicio en un archivo XML.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnWriteStartEnvelope(System.Xml.XmlDictionaryWriter)">
      <summary>Llamado cuando la envoltura del inicio se escribe en un archivo XML.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> que se utiliza para escribir la envoltura del inicio en un archivo XML.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnWriteStartHeaders(System.Xml.XmlDictionaryWriter)">
      <summary>Llamado cuando el encabezado del inicio se escribe en un archivo XML.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> que se utiliza para escribir el encabezado del inicio en un archivo XML.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.Properties">
      <summary>Cuando se invalida en una clase derivada, obtiene un conjunto de anotaciones del nivel de procesamiento en el mensaje. </summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageProperties" /> que contiene un conjunto de anotaciones del nivel de procesamiento en el mensaje.</returns>
      <exception cref="T:System.ObjectDisposedException">El mensaje se ha eliminado.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.State">
      <summary>Obtiene el estado actual de <see cref="T:System.ServiceModel.Channels.Message" />.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageState" /> que contiene el estado actual de <see cref="T:System.ServiceModel.Channels.Message" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.System#IDisposable#Dispose">
      <summary>Cierra todos los recursos utilizados por este mensaje.Este método no puede heredarse.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.ToString">
      <summary>Devuelve una cadena que representa la instancia de <see cref="T:System.ServiceModel.Channels.Message" /> actual. </summary>
      <returns>Representación de cadena de la instancia <see cref="T:System.ServiceModel.Channels.Message" /> actual. </returns>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.Version">
      <summary>Cuando se invalida en una clase derivada, obtiene la versión SOAP del mensaje.</summary>
      <returns>Un objeto <see cref="T:System.ServiceModel.Channels.MessageVersion" /> que representa la versión SOAP. </returns>
      <exception cref="T:System.ObjectDisposedException">El mensaje se ha eliminado.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteBody(System.Xml.XmlDictionaryWriter)">
      <summary>Escribe el elemento Body mediante la clase <see cref="T:System.Xml.XmlDictionaryWriter" /> especificada. </summary>
      <param name="writer">Objeto <see cref="T:System.Xml.XmlDictionaryWriter" /> que se va a usar para escribir el elemento Body.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> es null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteBody(System.Xml.XmlWriter)">
      <summary>Serializa el cuerpo del mensaje mediante la clase <see cref="T:System.Xml.XmlWriter" /> especificada. </summary>
      <param name="writer">El objeto <see cref="T:System.Xml.XmlWriter" /> que se va a usar para escribir el cuerpo del mensaje.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> es null. </exception>
      <exception cref="T:System.ObjectDisposedException">El mensaje se elimina. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteBodyContents(System.Xml.XmlDictionaryWriter)">
      <summary>Serializa el contenido del cuerpo mediante la clase <see cref="T:System.Xml.XmlDictionaryWriter" /> especificada. </summary>
      <param name="writer">Objeto <see cref="T:System.Xml.XmlDictionaryWriter" /> que se va a usar para escribir el elemento Body.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="writer " />es null.</exception>
      <exception cref="T:System.ObjectDisposedException">El mensaje está cerrado.</exception>
      <exception cref="T:System.InvalidOperationException">El mensaje se ha copiado, leído o escrito.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteMessage(System.Xml.XmlDictionaryWriter)">
      <summary>Serializa el mensaje completo mediante la clase <see cref="T:System.Xml.XmlDictionaryWriter" /> especificada. </summary>
      <param name="writer">Objeto <see cref="T:System.Xml.XmlDictionaryWriter" /> que se va a usar para escribir el mensaje.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> es null. </exception>
      <exception cref="T:System.ObjectDisposedException">El mensaje está cerrado.</exception>
      <exception cref="T:System.InvalidOperationException">El mensaje se ha copiado, leído o escrito.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteMessage(System.Xml.XmlWriter)">
      <summary>Serializa el mensaje completo mediante la clase <see cref="T:System.Xml.XmlWriter" /> especificada. </summary>
      <param name="writer">Objeto <see cref="T:System.Xml.XmlWriter" /> que se va a usar para escribir la totalidad del mensaje.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> es null. </exception>
      <exception cref="T:System.ObjectDisposedException">El mensaje está cerrado.</exception>
      <exception cref="T:System.InvalidOperationException">El mensaje se ha copiado, leído o escrito.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteStartBody(System.Xml.XmlDictionaryWriter)">
      <summary>Serializa el cuerpo del inicio del mensaje mediante la clase <see cref="T:System.Xml.XmlDictionaryWriter" /> especificada. </summary>
      <param name="writer">Objeto <see cref="T:System.Xml.XmlDictionaryWriter" /> que se va a usar para escribir el cuerpo del inicio.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> es null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteStartBody(System.Xml.XmlWriter)">
      <summary>Serializa el cuerpo del inicio del mensaje mediante la clase <see cref="T:System.Xml.XmlDictionaryWriter" /> especificada. </summary>
      <param name="writer">El objeto <see cref="T:System.Xml.XmlDictionaryWriter" /> que se va a usar para escribir el cuerpo del inicio del mensaje.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> es null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteStartEnvelope(System.Xml.XmlDictionaryWriter)">
      <summary>Serializa la envoltura del inicio mediante la clase <see cref="T:System.Xml.XmlDictionaryWriter" /> especificada. </summary>
      <param name="writer">Objeto <see cref="T:System.Xml.XmlDictionaryWriter" /> que se va a usar para escribir la envoltura del inicio.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="writer " />es null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageBuffer">
      <summary>Representa un búfer de la memoria que almacena un mensaje completo para su futura utilización.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.MessageBuffer" />.  </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageBuffer.BufferSize">
      <summary>Obtiene el número aproximado de bytes utilizado por <see cref="T:System.ServiceModel.Channels.MessageBuffer" />. </summary>
      <returns>El número aproximado de bytes utilizado por <see cref="T:System.ServiceModel.Channels.MessageBuffer" />. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.Close">
      <summary>Termina de trabajar con el búfer.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.CreateMessage">
      <summary>Devuelve una copia del mensaje original.</summary>
      <returns>Copia idéntica de la instancia de la clase <see cref="T:System.ServiceModel.Channels.Message" /> original que proporcionó previamente al método <see cref="M:System.ServiceModel.Channels.Message.CreateBufferedCopy(System.Int32)" /> de una instancia de la clase <see cref="T:System.ServiceModel.Channels.Message" />. </returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageBuffer.MessageContentType">
      <summary>Obtiene el tipo de contenido del mensaje almacenado en este búfer.</summary>
      <returns>El tipo de contenido del mensaje almacenado en este búfer.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.System#IDisposable#Dispose">
      <summary>Libera los recursos no administrados que utiliza <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> y libera los recursos administrados de forma opcional.Este método no puede heredarse.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.WriteMessage(System.IO.Stream)">
      <summary>Escribe el contenido completo de este búfer en la secuencia de E/S especificada.</summary>
      <param name="stream">Una secuencia E/S en la que se escribe el contenido completo de este búfer.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageEncoder">
      <summary>El codificador es el componente que se utiliza para escribir los mensajes en una secuencia y leerlos de una secuencia.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.MessageEncoder" />.  </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncoder.ContentType">
      <summary>Cuando se invalida en una clase derivada, obtiene el tipo de contenido de MIME que usa el codificador.</summary>
      <returns>Tipo de contenido que admite el codificador del mensaje.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.GetProperty``1">
      <summary>Devuelve un objeto con tipo solicitado, si lo hay, de la capa adecuada de la pila de canales.</summary>
      <returns>El objeto con tipo <paramref name="T " /> solicitado, si está presente, o null, si no lo está.</returns>
      <typeparam name="T">El objeto con tipo que el método está consultando.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.IsContentTypeSupported(System.String)">
      <summary>Devuelve un valor que indica si el codificador de mensajes admite el valor especificado para el tipo de contenido de nivel de mensaje.</summary>
      <returns>true si se admite el tipo de contenido especificado del nivel de mensaje; de lo contrario, false.</returns>
      <param name="contentType">El tipo de contenido del nivel de mensaje que se está probando.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncoder.MediaType">
      <summary>Cuando se invalida en una clase derivada, obtiene el valor del tipo de medio que usa el codificador.</summary>
      <returns>Tipo de medio que admite el codificador del mensaje.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncoder.MessageVersion">
      <summary>Cuando se invalida en una clase derivada, obtiene el valor de la versión de los mensajes que usa el codificador.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageVersion" /> que utiliza el codificador.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.ArraySegment{System.Byte},System.ServiceModel.Channels.BufferManager)">
      <summary>Cuando se invalida en una clase derivada, lee un mensaje del búfer especificado.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Message" /> que se lee del búfer especificado.</returns>
      <param name="buffer">
        <see cref="T:System.ArraySegment`1" /> de tipo <see cref="T:System.Byte" /> que proporciona el búfer desde donde se deserializa el mensaje.</param>
      <param name="bufferManager">
        <see cref="T:System.ServiceModel.Channels.BufferManager" /> que administra el búfer desde donde se deserializa el mensaje.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.ArraySegment{System.Byte},System.ServiceModel.Channels.BufferManager,System.String)">
      <summary>Cuando se invalida en una clase derivada, lee un mensaje de la secuencia especificada.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Message" /> que se lee de la secuencia especificada.</returns>
      <param name="buffer">
        <see cref="T:System.ArraySegment`1" /> de tipo <see cref="T:System.Byte" /> que proporciona el búfer desde donde se deserializa el mensaje.</param>
      <param name="bufferManager">
        <see cref="T:System.ServiceModel.Channels.BufferManager" /> que administra el búfer desde donde se deserializa el mensaje.</param>
      <param name="contentType">Tipo de contenido de nivel de mensaje MIME.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.IO.Stream,System.Int32)">
      <summary>Cuando se invalida en una clase derivada, lee un mensaje de la secuencia especificada.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Message" /> que se lee de la secuencia especificada.</returns>
      <param name="stream">Objeto <see cref="T:System.IO.Stream" /> desde el que se lee el mensaje.</param>
      <param name="maxSizeOfHeaders">Tamaño máximo de los encabezados que se pueden leer del mensaje.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.IO.Stream,System.Int32,System.String)">
      <summary>Cuando se invalida en una clase derivada, lee un mensaje de la secuencia especificada.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Message" /> que se lee de la secuencia especificada.</returns>
      <param name="stream">Objeto <see cref="T:System.IO.Stream" /> desde el que se lee el mensaje.</param>
      <param name="maxSizeOfHeaders">Tamaño máximo de los encabezados que se pueden leer del mensaje.</param>
      <param name="contentType">Tipo de contenido de nivel de mensaje MIME.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ToString">
      <summary>Devuelve el tipo de contenido que usa el codificador del mensaje.</summary>
      <returns>Tipo de contenido que usa el codificador del mensaje.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.Int32,System.ServiceModel.Channels.BufferManager)">
      <summary>Escribe un mensaje menor que un tamaño especificado en un búfer de la matriz de bytes.</summary>
      <returns>
        <see cref="T:System.ArraySegment`1" /> de tipo byte que proporciona el búfer al que se serializa el mensaje.</returns>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> para escribir en el búfer de mensajes.</param>
      <param name="maxMessageSize">Tamaño máximo de los mensajes que se puede escribir.</param>
      <param name="bufferManager">La clase <see cref="T:System.ServiceModel.Channels.BufferManager" /> que administra el búfer en el que se escribe el mensaje.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.Int32,System.ServiceModel.Channels.BufferManager,System.Int32)">
      <summary>Cuando se invalida en una clase derivada, escribe un mensaje menor de un tamaño especificado en un búfer de una matriz de bytes en la posición especificada.</summary>
      <returns>
        <see cref="T:System.ArraySegment`1" /> de tipo byte que proporciona el búfer al que se serializa el mensaje.</returns>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> para escribir en el búfer de mensajes.</param>
      <param name="maxMessageSize">Tamaño máximo de los mensajes que se puede escribir.</param>
      <param name="bufferManager">La clase <see cref="T:System.ServiceModel.Channels.BufferManager" /> que administra el búfer en el que se escribe el mensaje.</param>
      <param name="messageOffset">El desplazamiento del segmento que comienza en el inicio de la matriz de bytes que proporciona el búfer.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.IO.Stream)">
      <summary>Cuando se invalida en una clase derivada, escribe un mensaje en un flujo especificado.</summary>
      <param name="message">La clase <see cref="T:System.ServiceModel.Channels.Message" /> que va a escribir en el parámetro <paramref name="stream" />.</param>
      <param name="stream">El objeto <see cref="T:System.IO.Stream" /> donde se escribe el parámetro <paramref name="message" />.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageEncoderFactory">
      <summary>Una clase base abstracta que representa el generador para generar codificadores del mensaje que pueden leer los mensajes de una secuencia y escribirlos en una secuencia para varios tipos de codificación del mensaje.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoderFactory.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoderFactory.CreateSessionEncoder">
      <summary>Devuelve un codificador de mensajes que se puede utilizar para poner en correlación los mensajes en intercambios basados en sesión.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageEncoder" /> que se utiliza en intercambios de mensajes basados en sesión.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncoderFactory.Encoder">
      <summary>Cuando se invalida en una clase derivada, obtiene el codificador de mensajes generado por el generador.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageEncoder" /> utilizado por el generador.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncoderFactory.MessageVersion">
      <summary>Cuando se invalida en una clase derivada, obtiene la versión de mensaje que utilizan los codificadores generados por el generador para codificar los mensajes.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageVersion" /> utilizado por el generador.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageEncodingBindingElement">
      <summary>El elemento de enlace que especifica la versión de mensaje utilizada para codificar los mensajes.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncodingBindingElement.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.MessageEncodingBindingElement" />.  </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncodingBindingElement.#ctor(System.ServiceModel.Channels.MessageEncodingBindingElement)">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.Channels.MessageEncodingBindingElement" /> inicializada a partir de un elemento existente.</summary>
      <param name="elementToBeCloned">
        <see cref="T:System.ServiceModel.Channels.MessageEncodingBindingElement" /> que se va a clonar.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncodingBindingElement.CreateMessageEncoderFactory">
      <summary>Cuando se invalida en una clase derivada, crea un generador para generar los codificadores del mensaje.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" /> utilizado para generar los codificadores del mensaje.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Devuelve el objeto con tipo solicitado del nivel adecuado de la pila de canales, si está presente.</summary>
      <returns>El objeto escrito solicitado <paramref name="T" />, si está presente, o null si no lo está.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" /> para el elemento de enlace actual.</param>
      <typeparam name="T">El objeto con tipo que el método está consultando.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> es null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncodingBindingElement.MessageVersion">
      <summary>Cuando se invalida en una clase derivada, obtiene o establece la versión de mensaje que puede ser controlada por los codificadores de mensaje producidos por el generador de codificadores de mensajes.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageVersion" /> utilizado por los codificadores generados por el generador del codificador del mensaje.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageFault">
      <summary>Representa una representación en memoria de un error de SOAP que se puede pasar a <see cref="Overload:System.ServiceModel.Channels.Message.CreateMessage" /> para crear un mensaje que contiene un error. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.#ctor">
      <summary>Cuando se llama en una clase derivada, inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.MessageFault" />.  </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.Actor">
      <summary>Obtiene o establece el valor predeterminado del actor.</summary>
      <returns>El valor del actor.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.Code">
      <summary>Obtiene el código de error de SOAP. </summary>
      <returns>
        <see cref="T:System.ServiceModel.FaultCode" /> que contiene el código de error SOAP.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.CreateFault(System.ServiceModel.Channels.Message,System.Int32)">
      <summary>Devuelve un nuevo objeto <see cref="T:System.ServiceModel.Channels.MessageFault" /> que utiliza el <see cref="T:System.ServiceModel.Channels.Message" /> especificado y el tamaño de búfer máximo especificado para el búfer de mensajes.</summary>
      <returns>Objeto de <see cref="T:System.ServiceModel.Channels.MessageFault" /> con valores iniciales de los parámetros pasados.</returns>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> especificado que hay que utilizar para crear el objeto <see cref="T:System.ServiceModel.Channels.MessageFault" />.</param>
      <param name="maxBufferSize">El tamaño de búfer máximo especificado para el búfer de mensajes</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.GetDetail``1">
      <summary>Devuelve el objeto de detalle del error del mensaje.</summary>
      <returns>El objeto de detalle del error del mensaje.</returns>
      <typeparam name="T">El tipo del objeto de detalle.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.GetDetail``1(System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Devuelve el objeto de detalle que utiliza el <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> especificado.</summary>
      <returns>El objeto de detalle contenido en la clase <see cref="T:System.ServiceModel.Channels.MessageFault" />.</returns>
      <param name="serializer">
        <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> que hay que utilizar al deserializar el objeto de detalle. </param>
      <typeparam name="T">El tipo del objeto de detalle.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.GetReaderAtDetailContents">
      <summary>Devuelve un objeto <see cref="T:System.Xml.XmlDictionaryReader" /> que se coloca en el objeto de detalle de la clase <see cref="T:System.ServiceModel.Channels.MessageFault" />.</summary>
      <returns>Un objeto <see cref="T:System.Xml.XmlDictionaryReader" /> que se coloca en el objeto de detalle de <see cref="T:System.ServiceModel.Channels.MessageFault" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.HasDetail">
      <summary>Obtiene un valor que indica si <see cref="T:System.ServiceModel.Channels.MessageFault" /> tiene un objeto de detalle.</summary>
      <returns>true si <see cref="T:System.ServiceModel.Channels.MessageFault" /> tiene un objeto de detalle; de lo contrario, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.Node">
      <summary>Obtiene el nodo SOAP que contiene información sobre el nodo SOAP de una ruta de acceso de mensajes que produce el error.</summary>
      <returns>El nodo SOAP que contiene información sobre el nodo SOAP de una ruta de acceso de mensajes que produce el error.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.OnGetReaderAtDetailContents">
      <summary>Cuando se llama a una clase derivada, devuelve un objeto <see cref="T:System.Xml.XmlDictionaryReader" /> que se coloca en el objeto de detalle de <see cref="T:System.ServiceModel.Channels.MessageFault" />.</summary>
      <returns>Un objeto <see cref="T:System.Xml.XmlDictionaryReader" /> que se coloca en el objeto de detalle de <see cref="T:System.ServiceModel.Channels.MessageFault" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.OnWriteDetail(System.Xml.XmlDictionaryWriter,System.ServiceModel.EnvelopeVersion)">
      <summary>Se invoca antes de escribir el contenido del detalle.</summary>
      <param name="writer">La clase <see cref="T:System.Xml.XmlDictionaryWriter" /> usada para escribir el elemento de detalle.</param>
      <param name="version">La versión de la envoltura SOAP que se va a escribir.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.OnWriteDetailContents(System.Xml.XmlDictionaryWriter)">
      <summary>Cuando se invalida en una clase derivada no abstracta, escribe el contenido del elemento de detalle. </summary>
      <param name="writer">La clase <see cref="T:System.Xml.XmlDictionaryWriter" /> usada para escribir el elemento de detalle.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.OnWriteStartDetail(System.Xml.XmlDictionaryWriter,System.ServiceModel.EnvelopeVersion)">
      <summary>Escribe el elemento de inicio mediante el <see cref="T:System.Xml.XmlDictionaryWriter" /> especificado y la versión de la envoltura SOAP.</summary>
      <param name="writer">La clase <see cref="T:System.Xml.XmlDictionaryWriter" /> usada para escribir el elemento de detalle.</param>
      <param name="version">La versión de la envoltura SOAP que se va a escribir.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.Reason">
      <summary>Obtiene una descripción textual de un error de SOAP. </summary>
      <returns>Un <see cref="T:System.ServiceModel.FaultReason" /> que contiene una descripción textual de un error de SOAP.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageHeader">
      <summary>Representa el contenido de un encabezado SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.MessageHeader" />.  </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeader.Actor">
      <summary>Obtiene o establece el destinatario previsto del encabezado del mensaje.</summary>
      <returns>El destinatario previsto del encabezado del mensaje.El valor predeterminado es una cadena vacía ("").</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object)">
      <summary>Crea un nuevo encabezado del mensaje con los datos especificados.</summary>
      <returns>Nuevo objeto <see cref="T:System.ServiceModel.Channels.MessageHeader" /> con los datos especificados.</returns>
      <param name="name">El nombre local del elemento XML del encabezado.</param>
      <param name="ns">Espacio de nombres URI del elemento XML de encabezado.</param>
      <param name="value">Contenido del encabezado que se va a crear.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Boolean)">
      <summary>Crea un nuevo encabezado del mensaje con los datos especificados.</summary>
      <returns>Nuevo objeto <see cref="T:System.ServiceModel.Channels.MessageHeader" /> con los datos especificados.</returns>
      <param name="name">El nombre local del elemento XML del encabezado.</param>
      <param name="ns">Espacio de nombres URI del elemento XML de encabezado.</param>
      <param name="value">Contenido del encabezado que se va a crear.</param>
      <param name="mustUnderstand">Un valor que indica si se debe entender el encabezado.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Boolean,System.String)">
      <summary>Crea un nuevo encabezado del mensaje con los datos especificados.</summary>
      <returns>Nuevo objeto <see cref="T:System.ServiceModel.Channels.MessageHeader" /> con los datos especificados.</returns>
      <param name="name">El nombre local del elemento XML del encabezado.</param>
      <param name="ns">Espacio de nombres URI del elemento XML de encabezado.</param>
      <param name="value">Contenido del encabezado que se va a crear.</param>
      <param name="mustUnderstand">Un valor que indica si se debe entender el encabezado.</param>
      <param name="actor">El destinatario previsto del encabezado del mensaje.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Boolean,System.String,System.Boolean)">
      <summary>Crea un nuevo encabezado del mensaje con los datos especificados.</summary>
      <returns>Nuevo objeto <see cref="T:System.ServiceModel.Channels.MessageHeader" /> con los datos especificados.</returns>
      <param name="name">El nombre local del elemento XML del encabezado.</param>
      <param name="ns">Espacio de nombres URI del elemento XML de encabezado.</param>
      <param name="value">Contenido del encabezado que se va a crear.</param>
      <param name="mustUnderstand">Un valor que indica si se debe entender el encabezado.</param>
      <param name="actor">El destinatario previsto del encabezado del mensaje.</param>
      <param name="relay">Un valor que indica si se debería retransmitir el encabezado.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Crea un encabezado a partir de un objeto que se va a serializar utilizando XmlFormatter. </summary>
      <returns>Nuevo objeto <see cref="T:System.ServiceModel.Channels.MessageHeader" /> con los datos especificados.</returns>
      <param name="name">El nombre local del elemento XML del encabezado.</param>
      <param name="ns">Espacio de nombres URI del elemento XML de encabezado.</param>
      <param name="value">Contenido del encabezado que se va a crear.</param>
      <param name="serializer">
        <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> que se utiliza para serializar el encabezado.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer,System.Boolean)">
      <summary>Crea un nuevo encabezado del mensaje con los datos especificados.</summary>
      <returns>Nuevo objeto <see cref="T:System.ServiceModel.Channels.MessageHeader" /> con los datos especificados.</returns>
      <param name="name">El nombre local del elemento XML del encabezado.</param>
      <param name="ns">Espacio de nombres URI del elemento XML de encabezado.</param>
      <param name="value">Contenido del encabezado que se va a crear.</param>
      <param name="serializer">
        <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> que se utiliza para serializar el encabezado.</param>
      <param name="mustUnderstand">Un valor que indica si se debe entender el encabezado.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer,System.Boolean,System.String)">
      <summary>Crea un nuevo encabezado del mensaje con los datos especificados.</summary>
      <returns>Nuevo objeto <see cref="T:System.ServiceModel.Channels.MessageHeader" /> con los datos especificados.</returns>
      <param name="name">El nombre local del elemento XML del encabezado.</param>
      <param name="ns">Espacio de nombres URI del elemento XML de encabezado.</param>
      <param name="value">Contenido del encabezado que se va a crear.</param>
      <param name="serializer">
        <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> que se utiliza para serializar el encabezado.</param>
      <param name="mustUnderstand">Un valor que indica si se debe entender el encabezado.</param>
      <param name="actor">El destinatario previsto del encabezado del mensaje.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer,System.Boolean,System.String,System.Boolean)">
      <summary>Crea un nuevo encabezado del mensaje con los datos especificados.</summary>
      <returns>Nuevo objeto <see cref="T:System.ServiceModel.Channels.MessageHeader" /> con los datos especificados.</returns>
      <param name="name">El nombre local del elemento XML del encabezado.</param>
      <param name="ns">Espacio de nombres URI del elemento XML de encabezado.</param>
      <param name="value">Contenido del encabezado que se va a crear.</param>
      <param name="serializer">
        <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> que se utiliza para serializar el encabezado.</param>
      <param name="mustUnderstand">Un valor que indica si se debe entender el encabezado.</param>
      <param name="actor">El destinatario previsto del encabezado del mensaje.</param>
      <param name="relay">Un valor que indica si se debería retransmitir el encabezado.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.IsMessageVersionSupported(System.ServiceModel.Channels.MessageVersion)">
      <summary>Comprueba si se admite la versión de mensaje especificada.</summary>
      <returns>true si se admite la versión de mensaje especificada; de lo contrario, false.</returns>
      <param name="messageVersion">Objeto que contiene información relacionada con la versión de SOAP asociada a un mensaje y su intercambio.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeader.IsReferenceParameter">
      <summary>Obtiene un valor que especifica si este encabezado del mensaje contiene parámetros de referencia de una referencia del extremo.</summary>
      <returns>true si este encabezado del mensaje contiene parámetros de referencia de una referencia del extremo; de lo contrario, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeader.MustUnderstand">
      <summary>Obtiene o establece un valor que indica si el encabezado debe entenderse conforme a la especificación SOAP 1.1/1.2. </summary>
      <returns>true si se debe entender el encabezado; de lo contrario, false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.OnWriteHeaderContents(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Se le llama cuando el contenido del encabezado se serializa mediante el sistema de escritura XML especificado. </summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> que se utiliza para serializar el contenido de encabezado.</param>
      <param name="messageVersion">Objeto que contiene información relacionada con la versión de SOAP asociada a un mensaje y su intercambio.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.OnWriteStartHeader(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Llamado cuando el encabezado de inicio se serializa utilizando el sistema de escritura XML especificado. </summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> que se utiliza para serializar el encabezado de inicio.</param>
      <param name="messageVersion">Objeto que contiene información relacionada con la versión de SOAP asociada a un mensaje y su intercambio.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeader.Relay">
      <summary>Obtiene un valor que indica si debe retransmitirse el encabezado.</summary>
      <returns>true si se debería retransmitir el encabezado; de lo contrario, false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.ToString">
      <summary>Devuelve la representación en forma de cadena de este encabezado de mensaje.</summary>
      <returns>La representación en forma de cadena de este encabezado de mensaje.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.WriteHeader(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Serializa el encabezado mediante el sistema de escritura XML especificado. </summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> que se utiliza para serializar el encabezado.</param>
      <param name="messageVersion">Objeto que contiene información relacionada con la versión de SOAP asociada a un mensaje y su intercambio.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.WriteHeader(System.Xml.XmlWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Serializa el encabezado mediante el sistema de escritura XML especificado. </summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" /> que se utiliza para serializar el encabezado.</param>
      <param name="messageVersion">Objeto que contiene información relacionada con la versión de SOAP asociada a un mensaje y su intercambio.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.WriteHeaderAttributes(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Serializa los atributos del encabezado mediante el sistema de escritura XML especificado. </summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> que se utiliza para serializar los atributos de encabezado.</param>
      <param name="messageVersion">Objeto que contiene información relacionada con la versión de SOAP asociada a un mensaje y su intercambio.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.WriteHeaderContents(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Serializa el contenido del encabezado mediante el sistema de escritura XML especificado. </summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" /> que se utiliza para serializar el contenido de encabezado.</param>
      <param name="messageVersion">Objeto que contiene información relacionada con la versión de SOAP asociada a un mensaje y su intercambio.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.WriteStartHeader(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Serializa el encabezado inicial mediante el sistema de escritura XML especificado. </summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> que se utiliza para serializar el encabezado de inicio.</param>
      <param name="messageVersion">Objeto que contiene información relacionada con la versión de SOAP asociada a un mensaje y su intercambio.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageHeaderInfo">
      <summary>Representa información del sistema con respecto a un encabezado del mensaje SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaderInfo.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.MessageHeaderInfo" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.Actor">
      <summary>Obtiene o establece el destinatario previsto del encabezado del mensaje.</summary>
      <returns>Un identificador URI que indica al destinatario previsto del encabezado del mensaje.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.IsReferenceParameter">
      <summary>Obtiene un valor que especifica si el encabezado del mensaje representa los parámetros de referencia de una referencia del extremo.</summary>
      <returns>true si el encabezado del mensaje representa parámetros de referencia de una referencia del extremo; de lo contrario, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.MustUnderstand">
      <summary>Obtiene o establece un valor que indica si procesar el encabezado del mensaje es obligatorio u opcional.</summary>
      <returns>true si es obligatorio procesar el encabezado del mensaje; de lo contrario, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.Name">
      <summary>Obtiene el nombre del encabezado del mensaje.</summary>
      <returns>El nombre del encabezado del mensaje.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.Namespace">
      <summary>Obtiene el espacio de nombres del encabezado del mensaje.</summary>
      <returns>El espacio de nombres del encabezado del mensaje.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.Relay">
      <summary>Obtiene o establece un valor que indica si se puede retransmitir el encabezado del mensaje.</summary>
      <returns>true si se puede retransmitir el encabezado del mensaje; de lo contrario, false.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageHeaders">
      <summary>Representa una colección de encabezados del mensaje para un mensaje.Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.#ctor(System.ServiceModel.Channels.MessageHeaders)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> con la colección especificada de encabezados del mensaje.</summary>
      <param name="collection">Una colección de encabezados de mensaje.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.#ctor(System.ServiceModel.Channels.MessageVersion)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> con la versión de mensaje especificada.</summary>
      <param name="version">Versión de SOAP del mensaje.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.#ctor(System.ServiceModel.Channels.MessageVersion,System.Int32)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> con la versión y el tamaño especificados del mensaje.</summary>
      <param name="version">Versión de SOAP del mensaje.</param>
      <param name="initialSize">Tamaño del encabezado.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.Action">
      <summary>Obtiene o establece una descripción de cómo se debería procesar el mensaje.</summary>
      <returns>Descripción de cómo se debe procesar el mensaje.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.Add(System.ServiceModel.Channels.MessageHeader)">
      <summary>Agrega el encabezado de mensaje especificado a la colección.</summary>
      <param name="header">Encabezado de mensaje que se agregará a la colección.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.Clear">
      <summary>Quita todos los encabezados de la colección.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.CopyHeaderFrom(System.ServiceModel.Channels.Message,System.Int32)">
      <summary>Copia el contenido del encabezado situado en el índice especificado del mensaje especificado a esta instancia.</summary>
      <param name="message">Mensaje del que el encabezado se copia.</param>
      <param name="headerIndex">La ubicación del encabezado del mensaje original, del que se copia el contenido.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.CopyHeaderFrom(System.ServiceModel.Channels.MessageHeaders,System.Int32)">
      <summary>Copia el contenido del encabezado situado en el índice especificado de la colección del encabezado del mensaje especificado a esta instancia.</summary>
      <param name="collection">Objeto de la colección <see cref="T:System.ServiceModel.Channels.MessageHeaders" />.</param>
      <param name="headerIndex">La ubicación del encabezado del mensaje original, del que se copia el contenido.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.CopyHeadersFrom(System.ServiceModel.Channels.Message)">
      <summary>Copia el contenido de todos los encabezados del mensaje especificado a esta instancia.</summary>
      <param name="message">Mensaje del que los encabezados se copian.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.CopyHeadersFrom(System.ServiceModel.Channels.MessageHeaders)">
      <summary>Copia el contenido de la colección del encabezado especificado a esta instancia.</summary>
      <param name="collection">Un objeto de colección de <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> del que los encabezados se copian en esta instancia.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.CopyTo(System.ServiceModel.Channels.MessageHeaderInfo[],System.Int32)">
      <summary>Copia los encabezados de esta colección a una matriz, comenzando en un índice determinado de la matriz. </summary>
      <param name="array">Matriz unidimensional que es el destino de los objetos de encabezado de mensaje copiados de esta instancia.La matriz debe tener una indización de base cero.</param>
      <param name="index">Índice de base cero de la matriz donde comienza la copia. </param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.Count">
      <summary>Obtiene el número de encabezados de mensaje de esta colección.</summary>
      <returns>El número de encabezados de mensaje de esta colección.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.FaultTo">
      <summary>Obtiene o establece la dirección del nodo al que se deberían enviar los errores.</summary>
      <returns>Clase <see cref="T:System.ServiceModel.EndpointAddress" /> del nodo al que se deben enviar los errores.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.FindHeader(System.String,System.String)">
      <summary>Busca un encabezado del mensaje en esta colección por el LocalName especificado y espacio de nombres URI del elemento de encabezado.</summary>
      <returns>Índice del encabezado del mensaje en esta colección si se encuentra o -1 si no existe el encabezado especificado.</returns>
      <param name="name">LocalName del elemento XML del encabezado.</param>
      <param name="ns">Espacio de nombres URI del elemento XML de encabezado.</param>
      <exception cref="T:System.ArgumentNullException">Los argumentos son null.</exception>
      <exception cref="T:System.ServiceModel.MessageHeaderException">El encabezado especificado por los argumentos existe varias veces.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.FindHeader(System.String,System.String,System.String[])">
      <summary>Busca un encabezado del mensaje en esta colección por el LocalName especificado, el espacio de nombres URI y los actores del elemento de encabezado.</summary>
      <returns>Índice del encabezado del mensaje en esta colección si se encuentra, o -1 si no existe el encabezado especificado.</returns>
      <param name="name">LocalName del elemento XML del encabezado.</param>
      <param name="ns">Espacio de nombres URI del elemento XML de encabezado.</param>
      <param name="actors">El destinatario previsto del encabezado del mensaje.</param>
      <exception cref="T:System.ArgumentNullException">Los argumentos son null.</exception>
      <exception cref="T:System.ServiceModel.MessageHeaderException">El encabezado especificado por los argumentos existe varias veces.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.From">
      <summary>Obtiene o establece la dirección del nodo que envió el mensaje.</summary>
      <returns>Clase <see cref="T:System.ServiceModel.EndpointAddress" /> del nodo que envió el mensaje.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetEnumerator">
      <summary>Devuelve un enumerador para recorrer en iteración la recolección.Este método no puede heredarse.</summary>
      <returns>Objeto <see cref="T:System.Collections.IEnumerator" /> que se puede utilizar para recorrer en iteración la colección.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetHeader``1(System.Int32)">
      <summary>Recupera un encabezado del mensaje en una posición concreta en esta colección.</summary>
      <returns>Encabezado de mensaje en el índice especificado.</returns>
      <param name="index">El índice de base cero del encabezado que se va a obtener.</param>
      <typeparam name="T">Tipo del encabezado del mensaje.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetHeader``1(System.Int32,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Recupera un encabezado del mensaje en una posición concreta en esta colección.</summary>
      <returns>Encabezado de mensaje en el índice especificado.</returns>
      <param name="index">El índice de base cero del encabezado que se va a obtener.</param>
      <param name="serializer">
        <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> que se utiliza para serializar el encabezado.</param>
      <typeparam name="T">Tipo del encabezado del mensaje.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetHeader``1(System.String,System.String)">
      <summary>Busca un encabezado del mensaje en esta colección por el LocalName especificado y espacio de nombres URI del elemento de encabezado.</summary>
      <returns>Encabezado de mensaje con el nombre especificado.</returns>
      <param name="name">LocalName del elemento XML del encabezado.</param>
      <param name="ns">Espacio de nombres URI del elemento XML de encabezado.</param>
      <typeparam name="T">Tipo del encabezado del mensaje.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetHeader``1(System.String,System.String,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Recupera un encabezado del mensaje en esta colección por el LocalName especificado, el espacio de nombres URI y el serializador.</summary>
      <returns>Encabezado de mensaje con el nombre especificado.</returns>
      <param name="name">LocalName del elemento XML del encabezado.</param>
      <param name="ns">Espacio de nombres URI del elemento XML de encabezado.</param>
      <param name="serializer">
        <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> que se utiliza para serializar el encabezado.</param>
      <typeparam name="T">Tipo del encabezado del mensaje.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetHeader``1(System.String,System.String,System.String[])">
      <summary>Recupera un encabezado del mensaje en esta colección por el LocalName especificado, el espacio de nombres URI y los actores del elemento de encabezado.</summary>
      <returns>Encabezado de mensaje con el nombre especificado.</returns>
      <param name="name">LocalName del elemento XML del encabezado.</param>
      <param name="ns">Espacio de nombres URI del elemento XML de encabezado.</param>
      <param name="actors">El destinatario previsto del encabezado del mensaje.</param>
      <typeparam name="T">Tipo del encabezado del mensaje.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetReaderAtHeader(System.Int32)">
      <summary>Obtiene un lector del diccionario de XML que consume el encabezado del mensaje en la ubicación especificada de la colección.</summary>
      <returns>Objeto <see cref="T:System.Xml.XmlDictionaryReader" /> que consume el encabezado del mensaje en la ubicación especificada de la colección.</returns>
      <param name="headerIndex">El índice de base cero del encabezado que se va a obtener.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.HaveMandatoryHeadersBeenUnderstood">
      <summary>Comprueba si todos los encabezados del mensaje marcados con MustUnderstand se han interpretado y procesado correctamente. </summary>
      <returns>true si los destinatarios especificados a través de <paramref name="actors" /> han interpretado y procesado correctamente todos los encabezados del mensaje marcados con MustUnderstand; de lo contrario, false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.HaveMandatoryHeadersBeenUnderstood(System.String[])">
      <summary>Comprueba si los destinatarios especificados han interpretado y procesado correctamente todos los encabezados del mensaje marcados con MustUnderstand. </summary>
      <returns>true si los destinatarios especificados a través de <paramref name="actors" /> han interpretado y procesado correctamente todos los encabezados del mensaje marcados con MustUnderstand; de lo contrario, false.</returns>
      <param name="actors">El destinatario previsto del encabezado del mensaje.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.Insert(System.Int32,System.ServiceModel.Channels.MessageHeader)">
      <summary>Inserta un encabezado del mensaje en la colección en el índice especificado.</summary>
      <param name="headerIndex">Índice basado en cero en el que debe insertarse <paramref name="header" />.</param>
      <param name="header">Un encabezado del mensaje para insertar.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.Item(System.Int32)">
      <summary>Recupera un encabezado en el índice especificado.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageHeaderInfo" /> de la colección.Si <paramref name="index" /> es mayor o igual que el número de encabezados de la lista, esto devuelve null.</returns>
      <param name="index">Índice de base cero del encabezado en la lista.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.MessageId">
      <summary>Obtiene o establece el identificador único del mensaje.</summary>
      <returns>El identificador único del mensaje.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.MessageVersion">
      <summary>Obtiene la versión de SOAP del mensaje.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageVersion" /> que es la versión SOAP del mensaje.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.RelatesTo">
      <summary>Obtiene los identificadores de los mensajes relacionados con este mensaje.</summary>
      <returns>Los identificadores de los mensajes relacionados con este mensaje.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.RemoveAll(System.String,System.String)">
      <summary>Quita de la colección todos los encabezados con el nombre y el espacio de nombres especificados.</summary>
      <param name="name">LocalName del elemento XML del encabezado.</param>
      <param name="ns">Espacio de nombres URI del elemento XML de encabezado.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.RemoveAt(System.Int32)">
      <summary>Quita el encabezado del mensaje en el índice especificado de la colección.</summary>
      <param name="headerIndex">Índice de base cero del encabezado que se va a quitar.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.ReplyTo">
      <summary>Obtiene o establece la dirección del nodo al que se debe enviar una respuesta para una solicitud.</summary>
      <returns>Clase <see cref="T:System.ServiceModel.EndpointAddress" /> del nodo al que se debe enviar una respuesta para una solicitud.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.SetAction(System.Xml.XmlDictionaryString)">
      <summary>Establece el elemento de acción del encabezado.</summary>
      <param name="action">Descripción de cómo se debe procesar el mensaje.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.System#Collections#IEnumerable#GetEnumerator">
      <summary>Devuelve un enumerador para recorrer en iteración la recolección.Este método no puede heredarse.</summary>
      <returns>Objeto <see cref="T:System.Collections.IEnumerator" /> que se puede utilizar para recorrer en iteración la colección.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.To">
      <summary>Obtiene o establece el extremo de destino de un mensaje.</summary>
      <returns>URI que contiene el extremo de destino de un mensaje.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteHeader(System.Int32,System.Xml.XmlDictionaryWriter)">
      <summary>Serializa el encabezado de la ubicación especificada utilizando el escritor XML especificado. </summary>
      <param name="headerIndex">El índice de base cero del encabezado que se va a serializar.</param>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> que se utiliza para serializar el encabezado.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteHeader(System.Int32,System.Xml.XmlWriter)">
      <summary>Serializa el encabezado de la ubicación especificada utilizando el escritor XML especificado. </summary>
      <param name="headerIndex">El índice de base cero del encabezado que se va a serializar.</param>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" /> que se utiliza para serializar el encabezado.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteHeaderContents(System.Int32,System.Xml.XmlDictionaryWriter)">
      <summary>Serializa el contenido del encabezado especificado mediante el escritor XML especificado. </summary>
      <param name="headerIndex">El índice de base cero del encabezado que se va a serializar.</param>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> que se utiliza para serializar el contenido de encabezado.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteHeaderContents(System.Int32,System.Xml.XmlWriter)">
      <summary>Serializa el contenido del encabezado especificado mediante el escritor XML especificado. </summary>
      <param name="headerIndex">El índice de base cero del encabezado que se va a serializar.</param>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" /> que se utiliza para serializar el contenido de encabezado.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteStartHeader(System.Int32,System.Xml.XmlDictionaryWriter)">
      <summary>Serializa el encabezado inicial mediante el sistema de escritura XML especificado. </summary>
      <param name="headerIndex">El índice de base cero del encabezado que se va a serializar.</param>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> que se utiliza para serializar el encabezado de inicio.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteStartHeader(System.Int32,System.Xml.XmlWriter)">
      <summary>Serializa el encabezado inicial mediante el sistema de escritura XML especificado. </summary>
      <param name="headerIndex">El índice de base cero del encabezado que se va a serializar.</param>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" /> que se utiliza para serializar el encabezado de inicio.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageProperties">
      <summary>Representa un conjunto de propiedades para un mensaje.Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.MessageProperties" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.#ctor(System.ServiceModel.Channels.MessageProperties)">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.Channels.MessageProperties" /> con propiedades predefinidas.</summary>
      <param name="properties">
        <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.Add(System.String,System.Object)">
      <summary>Agrega un elemento con la propiedad y el nombre especificados a la colección <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</summary>
      <param name="name">El nombre del elemento que se va a agregar.</param>
      <param name="property">Valor del elemento que se va a agregar. </param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.AllowOutputBatching">
      <summary>Obtiene o establece un valor que especifica si se almacena este mensaje antes de entregarlo al transporte. </summary>
      <returns>true si se permite el procesamiento por lotes de mensajes salientes; de lo contrario, false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.Clear">
      <summary>Quita todos los elementos de la colección <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.ContainsKey(System.String)">
      <summary>Determina si el objeto <see cref="T:System.ServiceModel.Channels.MessageProperties" /> contiene un nombre, una clave o un identificador específico.</summary>
      <returns>Es true si <see cref="T:System.ServiceModel.Channels.MessageProperties" /> contiene un elemento con <paramref name="name" /> especificado; en caso contrario, es false.</returns>
      <param name="name">Nombre, clave o identificador para ubicar en <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.CopyProperties(System.ServiceModel.Channels.MessageProperties)">
      <summary>Copia el contenido de la clase <see cref="T:System.ServiceModel.Channels.MessageProperties" /> especificada a esta instancia.</summary>
      <param name="properties">Un objeto de <see cref="T:System.ServiceModel.Channels.MessageProperties" /> del que se va a copiar.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Count">
      <summary>Obtiene el número total de propiedades de la clase <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</summary>
      <returns>El número total de propiedades de la clase <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.Dispose">
      <summary>Libera todos los recursos que utiliza la clase <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Encoder">
      <summary>Obtiene el codificador que se utiliza para escribir mensajes en una secuencia y leer mensajes de una secuencia.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageEncoder" /> que se utiliza para escribir mensajes en una secuencia y para leer mensajes de una secuencia.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.IsFixedSize">
      <summary>Obtiene un valor que indica si el objeto <see cref="T:System.ServiceModel.Channels.MessageProperties" /> tiene un tamaño fijo.</summary>
      <returns>Es true si la interfaz <see cref="T:System.ServiceModel.Channels.MessageProperties" /> tiene un tamaño fijo; de lo contrario, es false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Item(System.String)">
      <summary>Recupera una propiedad con el nombre, identificador o valor de clave especificado.</summary>
      <returns>La propiedad con el <paramref name="name" /> especificado, o null si la propiedad no existe.</returns>
      <param name="name">El nombre de la propiedad que se va a obtener de la colección.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Keys">
      <summary>Obtiene una interfaz <see cref="T:System.Collections.ICollection" /> que contiene las claves del objeto <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</summary>
      <returns>Interfaz <see cref="T:System.Collections.ICollection" /> que contiene las claves del objeto <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.Remove(System.String)">
      <summary>Quita el elemento con el nombre especificado de la clase <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</summary>
      <returns>true si <see cref="T:System.ServiceModel.Channels.MessageProperties" /> contiene un elemento con el <paramref name="name" /> especificado y se puede quitar; de lo contrario, false.</returns>
      <param name="name">El nombre del elemento que se va a quitar.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#ICollection{T}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Agrega un elemento con la propiedad y el nombre especificados a <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</summary>
      <param name="pair">Un par clave-valor que contiene el nombre y el valor del elemento que se va a agregar.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#ICollection{T}#Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Determina si la clase <see cref="T:System.ServiceModel.Channels.MessageProperties" /> contiene un nombre específico.</summary>
      <returns>true si <see cref="T:System.ServiceModel.Channels.MessageProperties" /> contiene un elemento con el nombre y valor en el <paramref name="pair" /> especificado; de lo contrario, false.</returns>
      <param name="pair">Un par clave-valor que contiene el nombre y valor del elemento que se va a buscar en <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#ICollection{T}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary>Copia el contenido de las <see cref="T:System.ServiceModel.Channels.MessageProperties" /> especificadas en una matriz, a partir del índice especificado.</summary>
      <param name="array">
        <see cref="T:System.Array" /> en la que se va a copiar la colección.</param>
      <param name="index">Índice por el que se va a comenzar.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>Obtiene un valor que indica si este conjunto de propiedades es de solo lectura.</summary>
      <returns>true si este conjunto de propiedades es de solo lectura; de lo contrario, false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#ICollection{T}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Quita el elemento con el nombre especificado de la clase <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</summary>
      <returns>true si <see cref="T:System.ServiceModel.Channels.MessageProperties" /> contiene un elemento con el nombre y valor especificados en el parámetro <paramref name="pair" /> y se puede quitar; de lo contrario, false.</returns>
      <param name="pair">Un par clave-valor que contiene el nombre y el valor del elemento que se va a quitar.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>Devuelve un enumerador que puede recorrer en iteración una colección.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> que se puede utilizar para recorrer en iteración la colección.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#IEnumerable#GetEnumerator">
      <summary>Devuelve un enumerador que puede recorrer en iteración una colección.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> que se puede utilizar para recorrer en iteración la colección.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.TryGetValue(System.String,System.Object@)">
      <summary>Determina si la clase <see cref="T:System.ServiceModel.Channels.MessageProperties" /> contiene un nombre específico y recupera su valor. </summary>
      <returns>Es true si <see cref="T:System.ServiceModel.Channels.MessageProperties" /> contiene un elemento con <paramref name="name" /> especificado; en caso contrario, es false.</returns>
      <param name="name">El nombre del elemento que se va a buscar.</param>
      <param name="value">El valor del elemento encontrado. </param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Values">
      <summary>Obtiene un objeto <see cref="T:System.Collections.ICollection" /> que contiene los valores de <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</summary>
      <returns>Interfaz <see cref="T:System.Collections.ICollection" /> que contiene los valores incluidos en el objeto <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Via">
      <summary>Obtiene o establece la dirección de transporte que se utiliza para enviar los mensajes.</summary>
      <returns>Un URI que contiene la dirección de transporte que se utiliza para enviar los mensajes.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageState">
      <summary>Especifica el estado de un mensaje. </summary>
    </member>
    <member name="F:System.ServiceModel.Channels.MessageState.Closed">
      <summary>El mensaje se ha cerrado y ya no se puede acceder a él.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.MessageState.Copied">
      <summary>Se ha copiado el mensaje.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.MessageState.Created">
      <summary>Se ha creado el mensaje. </summary>
    </member>
    <member name="F:System.ServiceModel.Channels.MessageState.Read">
      <summary>Se está leyendo el mensaje.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.MessageState.Written">
      <summary>Se ha escrito el mensaje.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageVersion">
      <summary>Especifica las versiones de SOAP y WS-Addressing asociadas a un mensaje y a su intercambio.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Addressing">
      <summary>Obtiene o establece la versión de WS-Addressing asociada a la versión de mensaje actual.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> asociado a la versión actual de mensaje.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion)">
      <summary>Crea un objeto de versión de mensaje que utiliza WS-Addressing 1.0 con una versión SOAP especificada.</summary>
      <returns>La clase <see cref="T:System.ServiceModel.Channels.MessageVersion" /> que usa la versión especificada de SOAP y WS-Addressing 1.0.</returns>
      <param name="envelopeVersion">
        <see cref="T:System.ServiceModel.EnvelopeVersion" /> que indica la versión SOAP que se va a utilizar.</param>
      <exception cref="T:System.ArgumentNullException">La propiedad <paramref name="envelopeVersion" /> es null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion,System.ServiceModel.Channels.AddressingVersion)">
      <summary>Crea un objeto de versión de mensaje con versiones especificadas de SOAP y WS-Addressing.</summary>
      <returns>La clase <see cref="T:System.ServiceModel.Channels.MessageVersion" /> que usa las versiones especificadas de WS-Addressing y SOAP.</returns>
      <param name="envelopeVersion">
        <see cref="T:System.ServiceModel.EnvelopeVersion" /> que indica la versión SOAP.</param>
      <param name="addressingVersion">
        <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> que indica la versión de WS-Addressing.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="envelopeVersion" /> o <paramref name="addressingVersion" /> es null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Default">
      <summary>Obtiene la versión de mensaje predeterminada usada por Windows Communication Foundation (WCF).</summary>
      <returns>La clase <see cref="T:System.ServiceModel.Channels.MessageVersion" /> que usa WS-Addressing 1.0 y SOAP1.2.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Envelope">
      <summary>Obtiene la versión SOAP asociada a la versión de mensaje actual.</summary>
      <returns>
        <see cref="T:System.ServiceModel.EnvelopeVersion" /> asociado a la versión actual de mensaje.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageVersion.Equals(System.Object)">
      <summary>Devuelve un valor que indica si la versión de mensaje actual equivale a un objeto especificado.</summary>
      <returns>Es true si el objeto especificado es igual al objeto <see cref="T:System.ServiceModel.Channels.MessageVersion" /> actual; en caso contrario, es false.</returns>
      <param name="obj">La clase <see cref="T:System.Object" /> que se va a comparar con la versión de mensaje actual.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageVersion.GetHashCode">
      <summary>Obtiene un código hash para la versión de mensaje actual.</summary>
      <returns>Un código hash único para la <see cref="T:System.ServiceModel.Channels.MessageVersion" /> actual.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.None">
      <summary>Obtiene la versión de mensaje que no usa SOAP ni WS-Addressing.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageVersion" /> que no utiliza SOAP ni WS-Addressing.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Soap11">
      <summary>Obtiene la versión de mensaje mediante SOAP 1.1.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageVersion" /> que utiliza SOAP 1.1 pero ninguna versión de WS-Addressing.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Soap12WSAddressing10">
      <summary>Obtiene la versión de mensaje mediante WS-Addressing 1.0 y SOAP 1.2.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageVersion" /> que utiliza la versión de WS-Addressing 1.0 y SOAP 1.2.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageVersion.ToString">
      <summary>Devuelve la representación de cadena de la versión del mensaje actual.</summary>
      <returns>Representación de cadena de la versión del mensaje actual.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.RequestContext">
      <summary>Proporciona una respuesta que está correlacionada con una solicitud entrante.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.RequestContext" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Abort">
      <summary>Cuando se invalida en una clase derivada, se anula el procesamiento de la solicitud asociada al contexto. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>Cuando se invalida en una clase derivada, comienza una operación asincrónica para responder a la solicitud asociada al contexto actual.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia a la operación de respuesta asincrónica.</returns>
      <param name="message">El <see cref="T:System.ServiceModel.Channels.Message" /> entrante que contiene la solicitud.</param>
      <param name="callback">El delegado <see cref="T:System.AsyncCallback" /> que recibe la notificación de la finalización de la operación de respuesta asincrónica.</param>
      <param name="state">Un objeto, especificado por la aplicación, que contiene información de estado asociada a la operación de respuesta asincrónica.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Cuando se invalida en una clase derivada, comienza una operación asincrónica para contestar a la solicitud asociada con el contexto actual dentro del intervalo de tiempo especificado.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia a la operación de respuesta asincrónica.</returns>
      <param name="message">El <see cref="T:System.ServiceModel.Channels.Message" /> entrante que contiene la solicitud.</param>
      <param name="timeout">
        <see cref="T:System.Timespan" /> que especifica el intervalo de tiempo que hay que esperar para contestar a una solicitud disponible.</param>
      <param name="callback">El delegado <see cref="T:System.AsyncCallback" /> que recibe la notificación de la finalización de la operación de respuesta asincrónica.</param>
      <param name="state">Un objeto, especificado por la aplicación, que contiene información de estado asociada a la operación de respuesta asincrónica.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Close">
      <summary>Cuando se invalida en una clase derivada, cierra la operación que está respondiendo al contexto de la solicitud asociada al contexto actual.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Close(System.TimeSpan)">
      <summary>Cuando se invalida en una clase derivada, cierra la operación que está respondiendo al contexto de la solicitud asociada al contexto actual dentro de un intervalo de tiempo especificado.</summary>
      <param name="timeout">
        <see cref="T:System.Timespan" /> que especifica el intervalo de tiempo dentro del cual la operación de la respuesta asociada al contexto actual se debe cerrar.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Dispose(System.Boolean)">
      <summary>Libera los recursos asociados con el contexto.</summary>
      <param name="disposing">Es true para liberar tanto recursos administrados como no administrados; es false para liberar únicamente recursos no administrados. </param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.EndReply(System.IAsyncResult)">
      <summary>Cuando se invalida en una clase derivada, completa una operación asincrónica para contestar a un mensaje de solicitud.</summary>
      <param name="result">La interfaz <see cref="T:System.IAsyncResult" /> devuelta por una llamada a uno de los métodos <see cref="Overload:System.ServiceModel.Channels.RequestContext.BeginReply" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message)">
      <summary>Cuando se invalida en una clase derivada, responde a un mensaje de solicitud.</summary>
      <param name="message">El <see cref="T:System.ServiceModel.Channels.Message" /> entrante que contiene la solicitud.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <summary>Cuando se invalida en una clase derivada, responde a un mensaje de solicitud dentro de un intervalo de tiempo especificado.</summary>
      <param name="message">El <see cref="T:System.ServiceModel.Channels.Message" /> entrante que contiene la solicitud.</param>
      <param name="timeout">
        <see cref="T:System.Timespan" /> que especifica el intervalo de tiempo a esperar para la respuesta a una solicitud.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.RequestContext.RequestMessage">
      <summary>Cuando se invalida en una clase derivada, se obtiene el mensaje que contiene la solicitud.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Message" /> que contiene la solicitud.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.System#IDisposable#Dispose">
      <summary>Libera los recursos administrados y no administrados asociados al contexto.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement">
      <summary>El elemento de enlace que especifica la codificación de caracteres y la versión del mensaje que se utilizan para mensajes SOAP basados en texto.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.#ctor(System.ServiceModel.Channels.MessageVersion,System.Text.Encoding)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement" /> con una versión y codificación especificada de mensaje.</summary>
      <param name="messageVersion">La clase <see cref="T:System.ServiceModel.Channels.MessageVersion" /> que se usa para la versión de mensaje.</param>
      <param name="writeEncoding">La clase <see cref="T:System.Text.Encoding" /> que se usa para formatear los caracteres del mensaje.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="messageVersion" /> o <paramref name="writeEncoding" /> es null.</exception>
      <exception cref="T:System.ArgumentException">El valor de <paramref name="writeEncoding" /> no es válido.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Compila la pila del generador de canales en el cliente que crea un tipo especificado de canal para un contexto determinado.</summary>
      <returns>Interfaz <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> de tipo <paramref name="TChannel" /> para el contexto especificado.</returns>
      <param name="context">La clase <see cref="T:System.ServiceModel.Channels.BindingContext" /> del canal.</param>
      <typeparam name="TChannel">El tipo de canal que genera el generador de canales.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.Clone">
      <summary>Crea un nuevo objeto <see cref="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement" /> inicializado a partir del actual.</summary>
      <returns>Un objeto <see cref="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement" /> con valores de propiedad iguales a los del elemento actual.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.CreateMessageEncoderFactory">
      <summary>Crea un generador para los codificadores del mensaje de texto que emplea la versión de mensaje y la codificación de caracteres especificadas por el elemento de enlace de la codificación actual.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" /> que crea este generador.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Devuelve un objeto con tipo solicitado de la capa adecuada en la pila de elementos de enlace si está presente.</summary>
      <returns>El objeto escrito solicitado <paramref name="T" />, si está presente, o null si no lo está.</returns>
      <param name="context">La clase <see cref="T:System.ServiceModel.Channels.BindingContext" /> del elemento de enlace.</param>
      <typeparam name="T">El objeto con tipo que el método está consultando.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.TextMessageEncodingBindingElement.MessageVersion">
      <summary>Obtiene o establece las versiones de SOAP y de WS-Addressing que se utilizan para dar formato al mensaje de texto.</summary>
      <returns>La clase <see cref="T:System.ServiceModel.Channels.MessageVersion" /> que se usa para formatear los mensajes.El valor predeterminado es <see cref="P:System.ServiceModel.Channels.MessageVersion.Soap12WSAddressing10" />.</returns>
      <exception cref="T:System.ArgumentNullException">El valor es null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.TextMessageEncodingBindingElement.ReaderQuotas">
      <summary>Obtiene o establece restricciones en la complejidad de mensajes SOAP que pueden ser procesados por extremos configurados con este enlace.</summary>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> que especifica las restricciones de complejidad en los mensajes SOAP intercambiados.Los valores predeterminados para estas restricciones se proporcionan en la sección Notas siguiente.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.TextMessageEncodingBindingElement.WriteEncoding">
      <summary>Obtiene o establece la codificación que se usa para formatear los caracteres en el mensaje de texto.</summary>
      <returns>La clase <see cref="T:System.Text.Encoding" /> que se usa para formatear los caracteres en el mensaje de texto.La codificación de texto predeterminada es el formato UTF-8.</returns>
      <exception cref="T:System.ArgumentNullException">El valor es null.</exception>
      <exception cref="T:System.ArgumentException">El valor de <paramref name="writeEncoding" /> no es válido.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.TransportBindingElement">
      <summary>Una clase base abstract que representa un elemento de enlace de transporte.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportBindingElement.#ctor">
      <summary>Crea una nueva instancia de esta clase .</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportBindingElement.#ctor(System.ServiceModel.Channels.TransportBindingElement)">
      <summary>Crea una nueva instancia de esta clase a partir de una instancia existente.</summary>
      <param name="elementToBeCloned">
        <see cref="T:System.ServiceModel.Channels.TransportBindingElement" /> que se va a clonar. </param>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Obtiene una propiedad a partir de <see cref="T:System.ServiceModel.Channels.BindingContext" /> especificado.</summary>
      <returns>La propiedad del <see cref="T:System.ServiceModel.Channels.BindingContext" /> especificado.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="T">Propiedad que se va a obtener.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.TransportBindingElement.ManualAddressing">
      <summary>Obtiene o establece un valor que indica si se requiere el direccionamiento manual del mensaje.</summary>
      <returns>true si se requiere la dirección manual del mensaje; de lo contrario, false.El valor predeterminado es false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize">
      <summary>Obtiene y establece el tamaño máximo permitido del mensaje, en bytes, que se puede recibir.</summary>
      <returns>El tamaño máximo permitido del mensaje que se puede recibir.El valor predeterminado es 65,536 bytes.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.TransportBindingElement.Scheme">
      <summary>Obtiene el esquema URI para el transporte.</summary>
      <returns>Devuelve el esquema URI para el transporte, que varía dependiendo de qué clase derivada implementa este método.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.ClientCredentials">
      <summary>Le permite al usuario configurar las credenciales del cliente y del servicio, así como los valores de autenticación de la credencial de servicio para el uso en la parte de la comunicación del cliente.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Description.ClientCredentials" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.#ctor(System.ServiceModel.Description.ClientCredentials)">
      <summary>Éste es un constructor de copias. </summary>
      <param name="other">
        <see cref="T:System.ServiceModel.Description.ClientCredentials" />.Todas las propiedades de la instancia construida recientemente reflejan los valores de este parámetro.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <summary>Aplica el comportamiento del cliente especificado al extremo.</summary>
      <param name="serviceEndpoint">Extremo al que se aplicará el comportamiento del cliente especificado.</param>
      <param name="behavior">El comportamiento del cliente que será aplicado al extremo especificado.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceEndpoint" /> o <paramref name=" behavior" /> es null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.Clone">
      <summary>Crea una nueva copia de esta instancia de <see cref="T:System.ServiceModel.Description.ClientCredentials" />.</summary>
      <returns>Instancia de <see cref="T:System.ServiceModel.Description.ClientCredentials" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.CloneCore">
      <summary>Crea una nueva copia de esta instancia de <see cref="T:System.ServiceModel.Description.ClientCredentials" />.</summary>
      <returns>Instancia de <see cref="T:System.ServiceModel.Description.ClientCredentials" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ClientCredentials.HttpDigest">
      <summary>Obtiene la credencial de HTTP Digest actual.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Security.HttpDigestClientCredential" /> que representa la credencial que el cliente utiliza para autenticar en el servicio cuando se elige el método de autenticación implícita de HTTP. </returns>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.System#ServiceModel#Description#IEndpointBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Agrega esta instancia de esta clase a una colección de parámetros obligatoria.</summary>
      <param name="serviceEndpoint">
        <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> que se va a sumar.</param>
      <param name="bindingParameters">La colección de parámetros de enlace.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.System#ServiceModel#Description#IEndpointBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
      <summary>Implementa una modificación o extensión del servicio en este extremo.</summary>
      <param name="serviceEndpoint">El extremo que expone el contrato.</param>
      <param name="endpointDispatcher">Distribuidor del extremo que se va a modificar o extender.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.System#ServiceModel#Description#IEndpointBehavior#Validate(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Reservado para un uso futuro.</summary>
      <param name="serviceEndpoint">
        <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> que se va a validar.</param>
    </member>
    <member name="P:System.ServiceModel.Description.ClientCredentials.UserName">
      <summary>Obtiene un objeto de credencial que puede utilizar para establecer el nombre de usuario y contraseña que el cliente utiliza para autenticarse en el servicio. </summary>
      <returns>
        <see cref="T:System.ServiceModel.Security.UserNamePasswordClientCredential" /> que representa la credencial actual de UserName.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ClientCredentials.Windows">
      <summary>Obtiene un objeto utilizado para controlar la credencial de Windows que el cliente utiliza para autenticarse en el servicio. </summary>
      <returns>
        <see cref="T:System.ServiceModel.Security.WindowsClientCredential" /> que representa la credencial Windows actual.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.ContractDescription">
      <summary>Describe un contrato Windows Communication Foundation (WCF) que especifica lo que un extremo comunica al mundo exterior.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ContractDescription.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Description.ContractDescription" /> con el nombre especificado.</summary>
      <param name="name">Nombre del contrato.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> es null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="name" /> está vacío.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.ContractDescription.#ctor(System.String,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Description.ContractDescription" /> con un nombre completo de espacio de nombres concreto.</summary>
      <param name="name">Nombre del contrato.</param>
      <param name="ns">Espacio de nombres que contiene el nombre del contrato.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> es null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="name" /> está vacío.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.CallbackContractType">
      <summary>Obtiene o establece el tipo de contrato de devolución de llamada que la descripción del contrato especifica.</summary>
      <returns>
        <see cref="T:System.Type" /> de contrato de devolución de llamada que la descripción del contrato especifica.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.ConfigurationName">
      <summary>Obtiene o establece el nombre de la configuración para la descripción del contrato.</summary>
      <returns>Nombre de la configuración del contrato.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.ContractBehaviors">
      <summary>Obtiene la colección de comportamientos para el contrato.</summary>
      <returns>La colección de comportamientos para el contrato.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.ContractType">
      <summary>Obtiene o establece el tipo de contrato que especifica su descripción.</summary>
      <returns>
        <see cref="T:System.Type" /> de contrato que la descripción del contrato especifica.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.Name">
      <summary>Obtiene o establece el nombre del contrato.</summary>
      <returns>Nombre de la descripción del contrato.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.Namespace">
      <summary>Obtiene o establece el espacio de nombres del contrato.</summary>
      <returns>Espacio de nombres del contrato.</returns>
      <exception cref="T:System.ArgumentNullException">El valor establecido es null.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.Operations">
      <summary>Obtiene la colección de descripciones de la operación asociada al contrato.</summary>
      <returns>La <see cref="T:System.ServiceModel.Description.OperationDescriptionCollection" /> que contiene las descripciones de la operación asociadas a la descripción del contrato.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.DataContractSerializerOperationBehavior">
      <summary>Representa el comportamiento en tiempo de ejecución de <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerOperationBehavior.#ctor(System.ServiceModel.Description.OperationDescription)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Description.DataContractSerializerOperationBehavior" /> con la descripción de operación especificada.</summary>
      <param name="operation">Clase <see cref="T:System.ServiceModel.Description.OperationDescription" /> que representa la operación.</param>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerOperationBehavior.#ctor(System.ServiceModel.Description.OperationDescription,System.ServiceModel.DataContractFormatAttribute)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Description.DataContractSerializerOperationBehavior" /> con la descripción de operación especificada y el formato del contrato de datos.</summary>
      <param name="operation">Clase <see cref="T:System.ServiceModel.Description.OperationDescription" /> que representa la operación.</param>
      <param name="dataContractFormatAttribute">
        <see cref="T:System.ServiceModel.DataContractFormatAttribute" /> que se usa para controlar el proceso de serialización.</param>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerOperationBehavior.CreateSerializer(System.Type,System.String,System.String,System.Collections.Generic.IList{System.Type})">
      <summary>Crea una instancia de una clase que hereda de <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> para los procesos de serialización y deserialización.</summary>
      <returns>Instancia de una clase que hereda de la clase <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />. </returns>
      <param name="type">
        <see cref="T:System.Type" /> para la que se va a crear el serializador.</param>
      <param name="name">El nombre del tipo generado.</param>
      <param name="ns">Espacio de nombres del tipo generado.</param>
      <param name="knownTypes">
        <see cref="T:System.Collections.Generic.IList`1" /> de <see cref="T:System.Type" /> que contiene los tipos conocidos.</param>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerOperationBehavior.CreateSerializer(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IList{System.Type})">
      <summary>Crea una instancia de una clase que hereda de <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> para los procesos de serialización y deserialización con la clase <see cref="T:System.Xml.XmlDictionaryString" /> que contiene el espacio de nombres.</summary>
      <returns>Instancia de una clase que hereda de la clase <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />. </returns>
      <param name="type">El tipo que se va a serializar o deserializar.</param>
      <param name="name">Nombre del tipo serializado.</param>
      <param name="ns">Una <see cref="T:System.Xml.XmlDictionaryString" /> que contiene el espacio de nombres del tipo serializado.</param>
      <param name="knownTypes">
        <see cref="T:System.Collections.Generic.IList`1" /> de <see cref="T:System.Type" /> que contiene los tipos conocidos.</param>
    </member>
    <member name="P:System.ServiceModel.Description.DataContractSerializerOperationBehavior.DataContractFormatAttribute">
      <summary>Obtiene la clase <see cref="T:System.ServiceModel.DataContractFormatAttribute" /> asociada con la operación.</summary>
      <returns>La clase <see cref="T:System.ServiceModel.DataContractFormatAttribute" /> asociada con la operación.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.DataContractSerializerOperationBehavior.DataContractResolver">
      <summary>Obtiene o establece una implementación de la clase <see cref="T:System.Runtime.Serialization.DataContractResolver" /> que se usa para asignar tipos de forma dinámica durante los procesos de serialización y deserialización. </summary>
      <returns>Escriba: <see cref="T:System.Runtime.Serialization.DataContractResolver" />.Clase que asigna un xsi:type a un tipo de contrato de datos conocido.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.DataContractSerializerOperationBehavior.MaxItemsInObjectGraph">
      <summary>Obtiene o define el número máximo de elementos en el gráfico de objetos que se vaya a serializar o deserializar.</summary>
      <returns>El número máximo de elementos del gráfico de objeto que se van a serializar o deserializar.El valor predeterminado es <see cref="F:System.Int32.MaxValue" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerOperationBehavior.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Agrega una colección de parámetros al comportamiento. </summary>
      <param name="description">La clase <see cref="T:System.ServiceModel.Description.OperationDescription" /> a la que se van a agregar los parámetros.</param>
      <param name="parameters">La clase <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> que contiene los parámetros que se van a agregar.</param>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerOperationBehavior.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)">
      <summary>Asocia un comportamiento de cliente a la operación.</summary>
      <param name="description">La clase <see cref="T:System.ServiceModel.Description.OperationDescription" /> que representa la operación.</param>
      <param name="proxy">Clase <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /> que representa un cliente.</param>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerOperationBehavior.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)">
      <summary>Aplica el comportamiento a la operación.</summary>
      <param name="description">Clase <see cref="T:System.ServiceModel.Description.OperationDescription" /> que representa la operación.</param>
      <param name="dispatch">El <see cref="T:System.ServiceModel.Dispatcher.DispatchOperation" /> al que se adjuntará el comportamiento.</param>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerOperationBehavior.System#ServiceModel#Description#IOperationBehavior#Validate(System.ServiceModel.Description.OperationDescription)">
      <summary>Valida la operación.</summary>
      <param name="description">Clase <see cref="T:System.ServiceModel.Description.OperationDescription" /> que representa la operación que se va a validar.</param>
    </member>
    <member name="T:System.ServiceModel.Description.FaultDescription">
      <summary>Representa un error de SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.FaultDescription.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Description.FaultDescription" /> utilizando el valor de acción especificado.</summary>
      <param name="action">Acción del mensaje del error de SOAP.</param>
    </member>
    <member name="P:System.ServiceModel.Description.FaultDescription.Action">
      <summary>Valor de la acción en el mensaje de error de SOAP.</summary>
      <returns>La acción del error de SOAP.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.FaultDescription.DetailType">
      <summary>Tipo de detalle del error de SOAP.</summary>
      <returns>Tipo de objeto del detalle serializable.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.FaultDescription.Name">
      <summary>Obtiene o establece el nombre del error de SOAP.</summary>
      <returns>Nombre del error de SOAP.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.FaultDescription.Namespace">
      <summary>Obtiene o establece el espacio de nombres del error de SOAP.</summary>
      <returns>El espacio de nombres del error de SOAP.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.FaultDescriptionCollection">
      <summary>Representa una colección de objetos <see cref="T:System.ServiceModel.Description.FaultDescription" /> que pueden usarse para obtener información sobre los errores SOAP de un contrato.</summary>
    </member>
    <member name="T:System.ServiceModel.Description.IContractBehavior">
      <summary>Implementa métodos que pueden utilizarse para extender el comportamiento de tiempo de ejecución de un contrato en un servicio o aplicación cliente.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.IContractBehavior.AddBindingParameters(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Configura cualquier elemento de enlace para admitir el comportamiento del contrato.</summary>
      <param name="contractDescription">Descripción del contrato que se va a modificar.</param>
      <param name="endpoint">El extremo que se va a modificar.</param>
      <param name="bindingParameters">Los objetos necesarios para que los elementos de enlace admitan el comportamiento.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <summary>Implementa una modificación o extensión del cliente en este contrato.</summary>
      <param name="contractDescription">La descripción del contrato para el que se diseñó la extensión.</param>
      <param name="endpoint">Extremo.</param>
      <param name="clientRuntime">Tiempo de ejecución del cliente.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)">
      <summary>Implementa una modificación o extensión del cliente en este contrato.</summary>
      <param name="contractDescription">Descripción del contrato que se va a modificar.</param>
      <param name="endpoint">El extremo que expone el contrato.</param>
      <param name="dispatchRuntime">Tiempo de ejecución del envío que controla la ejecución del servicio.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IContractBehavior.Validate(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Implemente para confirmar que el contrato y extremo pueden admitir el comportamiento del contrato.</summary>
      <param name="contractDescription">Contrato que se va a validar.</param>
      <param name="endpoint">El extremo que se va a validar.</param>
    </member>
    <member name="T:System.ServiceModel.Description.IEndpointBehavior">
      <summary>Implementa métodos que se pueden utilizar para extender el comportamiento de tiempo de ejecución de un extremo en un servicio o aplicación cliente.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Implemente para pasar los datos a los enlaces en tiempo de ejecución y admitir el comportamiento personalizado.</summary>
      <param name="endpoint">El extremo que se va a modificar.</param>
      <param name="bindingParameters">Los objetos necesarios para que los elementos de enlace admitan el comportamiento.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <summary>Implementa una modificación o extensión del cliente en este extremo.</summary>
      <param name="endpoint">Extremo que se va a personalizar.</param>
      <param name="clientRuntime">Tiempo de ejecución del cliente que debe personalizarse.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
      <summary>Implementa una modificación o extensión del servicio en este extremo.</summary>
      <param name="endpoint">El extremo que expone el contrato.</param>
      <param name="endpointDispatcher">Distribuidor del extremo que se va a modificar o extender.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IEndpointBehavior.Validate(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Implemente para confirmar que el extremo cumple algunos de los criterios previstos.</summary>
      <param name="endpoint">El extremo que se va a validar.</param>
    </member>
    <member name="T:System.ServiceModel.Description.IOperationBehavior">
      <summary>Implementa métodos que pueden utilizarse para extender el comportamiento de tiempo de ejecución de una operación en un servicio o aplicación cliente.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Implemente para pasar los datos a los enlaces en tiempo de ejecución y admitir el comportamiento personalizado.</summary>
      <param name="operationDescription">La operación que se está examinando.Sólo se utiliza para el examen.Si se modifica la descripción de la operación, los resultados son indefinidos.</param>
      <param name="bindingParameters">La colección de objetos necesaria para que los elementos de enlace admitan el comportamiento.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)">
      <summary>Implementa una modificación o extensión del cliente en esta operación.</summary>
      <param name="operationDescription">La operación que se está examinando.Sólo se utiliza para el examen.Si se modifica la descripción de la operación, los resultados son indefinidos.</param>
      <param name="clientOperation">El objeto en tiempo de ejecución que expone las propiedades de personalización para la operación descrita por <paramref name="operationDescription" />.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)">
      <summary>Implementa una modificación o extensión del servicio en esta operación.</summary>
      <param name="operationDescription">La operación que se está examinando.Sólo se utiliza para el examen.Si se modifica la descripción de la operación, los resultados son indefinidos.</param>
      <param name="dispatchOperation">El objeto en tiempo de ejecución que expone las propiedades de personalización para la operación descrita por <paramref name="operationDescription" />.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IOperationBehavior.Validate(System.ServiceModel.Description.OperationDescription)">
      <summary>Implemente para confirmar que la operación cumple algunos de los criterios previstos.</summary>
      <param name="operationDescription">La operación que se está examinando.Sólo se utiliza para el examen.Si se modifica la descripción de la operación, los resultados son indefinidos.</param>
    </member>
    <member name="T:System.ServiceModel.Description.MessageBodyDescription">
      <summary>Representa el cuerpo de un mensaje SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessageBodyDescription.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Description.MessageBodyDescription" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Description.MessageBodyDescription.Parts">
      <summary>Obtiene las partes del cuerpo del mensaje SOAP.</summary>
      <returns>Partes del cuerpo que puede inspeccionar o modificar.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageBodyDescription.ReturnValue">
      <summary>Obtiene o establece la parte del mensaje SOAP que contiene el valor devuelto.</summary>
      <returns>Valor devuelto, en caso de haberlo.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageBodyDescription.WrapperName">
      <summary>Obtiene o establece el nombre del elemento contenedor dentro del elemento del cuerpo SOAP, si lo hubiera.</summary>
      <returns>Elemento contenedor, en caso de haberlo.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageBodyDescription.WrapperNamespace">
      <summary>Obtiene o establece el espacio de nombres del elemento contenedor en el cuerpo SOAP, si lo hubiera.</summary>
      <returns>Espacio de nombres del elemento contenedor, si lo hay.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.MessageDescription">
      <summary>Representa la descripción de un mensaje.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessageDescription.#ctor(System.String,System.ServiceModel.Description.MessageDirection)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Description.MessageDescription" /> con una acción y dirección especificadas.</summary>
      <param name="action">Parámetro de acción del mensaje SOAP que identifica la intención del mensaje.</param>
      <param name="direction">
        <see cref="F:System.ServiceModel.Description.MessageDirection.Input" /> si el mensaje es de entrada, o <see cref="F:System.ServiceModel.Description.MessageDirection.Output" />, si es de salida.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="direction" /> no es ni <see cref="F:System.ServiceModel.Description.MessageDirection.Input" /> ni <see cref="F:System.ServiceModel.Description.MessageDirection.Output" />.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.Action">
      <summary>Obtiene o establece el parámetro de acción del mensaje SOAP que identifica la intención del mensaje.</summary>
      <returns>
        <see cref="T:System.String" /> que contiene el identificador URI de la acción.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.Body">
      <summary>Obtiene el cuerpo del mensaje SOAP.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.MessagePartDescriptionCollection" /> que contiene el cuerpo del mensaje.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.Direction">
      <summary>Obtiene la dirección que indica si el mensaje es de entrada o de salida.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.MessageDirection" /> que indica si el mensaje sale o entra del servicio.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.Headers">
      <summary>Obtiene la descripción de los encabezados del mensaje SOAP.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.MessageHeaderDescriptionCollection" /> que contiene descripciones de los encabezados del mensaje SOAP.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.MessageType">
      <summary>Obtiene o establece un tipo que identifica el tipo de contrato del mensaje.</summary>
      <returns>
        <see cref="T:System.Type" /> que identifica el tipo de contrato del mensaje.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.Properties">
      <summary>Obtiene una descripción de las propiedades del mensaje SOAP.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.MessagePropertyDescriptionCollection" /> que contiene las descripciones de las propiedades del mensaje SOAP.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.MessageDescriptionCollection">
      <summary>Proporciona una colección que se utiliza para almacenar descripciones de los mensajes que constituyen una operación que pertenece a un contrato.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessageDescriptionCollection.Find(System.String)">
      <summary>Busca y devuelve la primera descripción del mensaje en una colección, para un mensaje con una acción especificada.</summary>
      <returns>Primer <see cref="T:System.ServiceModel.Description.MessageDescription" /> de la colección cuyo mensaje tiene el <paramref name="action" /> especificado y null si no se encuentra ningún <paramref name="action" /> correspondiente.</returns>
      <param name="action">La acción del mensaje que se busca.</param>
    </member>
    <member name="M:System.ServiceModel.Description.MessageDescriptionCollection.FindAll(System.String)">
      <summary>Busca y devuelve todas las descripciones del mensaje en una colección cuyos mensajes tienen una acción especificada.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.MessageDescriptionCollection" /> que contiene las descripciones de los mensajes de la colección actual cuyos mensajes tienen la <paramref name="action" /> especificada.Si no se encuentran objetos <see cref="T:System.ServiceModel.Description.MessageDescription" /> coincidentes, se devuelve una colección vacía.</returns>
      <param name="action">La acción de los mensajes que se están buscando.</param>
    </member>
    <member name="T:System.ServiceModel.Description.MessageDirection">
      <summary>Especifica la dirección del mensaje.</summary>
    </member>
    <member name="F:System.ServiceModel.Description.MessageDirection.Input">
      <summary>Mensaje entrante.</summary>
    </member>
    <member name="F:System.ServiceModel.Description.MessageDirection.Output">
      <summary>Mensaje saliente.</summary>
    </member>
    <member name="T:System.ServiceModel.Description.MessageHeaderDescription">
      <summary>Representa un encabezado de mensaje SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessageHeaderDescription.#ctor(System.String,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Description.MessageHeaderDescription" /> con un nombre completo especificado.</summary>
      <param name="name">El nombre del encabezado del mensaje.</param>
      <param name="ns">El espacio de nombres del encabezado del mensaje.</param>
    </member>
    <member name="P:System.ServiceModel.Description.MessageHeaderDescription.Actor">
      <summary>Obtiene o establece el destinatario previsto del encabezado del mensaje.</summary>
      <returns>Un identificador URI que indica al destinatario previsto del encabezado del mensaje.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageHeaderDescription.MustUnderstand">
      <summary>Obtiene o establece un valor que indica si el encabezado debe entenderse conforme a la especificación SOAP 1.1 y 1.2.</summary>
      <returns>true si es obligatorio procesar el encabezado del mensaje; de lo contrario, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageHeaderDescription.Relay">
      <summary>Obtiene un valor que indica si debe retransmitirse el encabezado.</summary>
      <returns>true si se puede retransmitir el encabezado del mensaje; de lo contrario, false.El valor predeterminado es falso conforme a la especificación SOAP 1.1.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageHeaderDescription.TypedHeader">
      <summary>Obtiene o establece un valor que indica si el encabezado del mensaje es un encabezado de contrato de mensaje.</summary>
      <returns>true si el encabezado del mensaje es un encabezado de contrato de mensaje; de lo contrario, false.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.MessageHeaderDescriptionCollection">
      <summary>Representa una colección de objetos <see cref="T:System.ServiceModel.Description.MessageHeaderDescription" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessageHeaderDescriptionCollection.GetKeyForItem(System.ServiceModel.Description.MessageHeaderDescription)">
      <summary>Cuando lo llama una clase derivada, devuelve la clase <see cref="T:System.Xml.XmlQualifiedName" /> del encabezado del mensaje.</summary>
      <returns>
        <see cref="T:System.Xml.XmlQualifiedName" /> del encabezado del mensaje.</returns>
      <param name="item">Clase <see cref="T:System.ServiceModel.Description.MessageHeaderDescription" /> que se va a localizar.</param>
    </member>
    <member name="T:System.ServiceModel.Description.MessagePartDescription">
      <summary>Representa una descripción de una parte del mensaje SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessagePartDescription.#ctor(System.String,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Description.MessagePartDescription" />.  </summary>
      <param name="name">Nombre XML de la parte de mensaje.</param>
      <param name="ns">Espacio de nombre XML de la parte de mensaje.</param>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.Index">
      <summary>Obtiene o establece el índice de la parte de mensaje.</summary>
      <returns>Índice de la parte de mensaje.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.MemberInfo">
      <summary>Obtiene o establece la información de miembros de la parte de mensaje.</summary>
      <returns>Información de miembros de esta parte de mensaje.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.Multiple">
      <summary>Obtiene o establece un valor que controla si la parte del mensaje puede producirse más de una vez en el mensaje.</summary>
      <returns>true si puede haber más de una; de lo contrario, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.Name">
      <summary>Obtiene o establece el nombre de la parte de mensaje.</summary>
      <returns>Nombre de la parte de mensaje.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.Namespace">
      <summary>Obtiene o establece el espacio de nombres de la parte de mensaje.</summary>
      <returns>Espacio de nombres de la parte de mensaje.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.Type">
      <summary>Obtiene o establece el tipo de la parte de mensaje.</summary>
      <returns>Tipo de la parte de mensaje.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.MessagePartDescriptionCollection">
      <summary>Representa una colección de objetos <see cref="T:System.ServiceModel.Description.MessagePartDescription" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessagePartDescriptionCollection.GetKeyForItem(System.ServiceModel.Description.MessagePartDescription)">
      <summary>Cuando lo llama una clase derivada, devuelve el <see cref="T:System.Xml.XmlQualifiedName" /> de <see cref="T:System.ServiceModel.Description.MessagePartDescription" />.</summary>
      <returns>
        <see cref="T:System.Xml.XmlQualifiedName" /> del paquete <see cref="T:System.ServiceModel.Description.MessagePartDescription" />.</returns>
      <param name="item">Clase <see cref="T:System.ServiceModel.Description.MessagePartDescription" /> que se va a localizar.</param>
    </member>
    <member name="T:System.ServiceModel.Description.MessagePropertyDescription">
      <summary>Representa una propiedad de mensaje especificada por <see cref="T:System.ServiceModel.MessagePropertyAttribute" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessagePropertyDescription.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Description.MessagePropertyDescription" />.  </summary>
      <param name="name">Nombre de la propiedad.</param>
    </member>
    <member name="T:System.ServiceModel.Description.MessagePropertyDescriptionCollection">
      <summary>Representa una colección de objetos <see cref="T:System.ServiceModel.Description.MessagePropertyDescription" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessagePropertyDescriptionCollection.GetKeyForItem(System.ServiceModel.Description.MessagePropertyDescription)">
      <summary>Devuelve un <see cref="T:System.Xml.XmlQualifiedName" /> para una <see cref="T:System.ServiceModel.Description.MessagePropertyDescription" />.</summary>
      <returns>
        <see cref="T:System.Xml.XmlQualifiedName" /> del paquete <see cref="T:System.ServiceModel.Description.MessagePropertyDescription" />.</returns>
      <param name="item">Clase <see cref="T:System.ServiceModel.Description.MessagePropertyDescription" /> que se va a localizar.</param>
    </member>
    <member name="T:System.ServiceModel.Description.OperationDescription">
      <summary>Representa la descripción de una operación de contrato que proporciona una descripción de los mensajes que constituyen la operación.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescription.#ctor(System.String,System.ServiceModel.Description.ContractDescription)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Description.OperationDescription" /> con un nombre y descripción de contrato especificados.</summary>
      <param name="name">Nombre de la descripción de la operación.</param>
      <param name="declaringContract">
        <see cref="T:System.ServiceModel.Description.ContractDescription" /> utilizada para inicializar la descripción de la operación.</param>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.DeclaringContract">
      <summary>Obtiene o establece el contrato al que pertenece la operación.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.ContractDescription" /> para la operación.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.Faults">
      <summary>Obtiene las descripciones de los errores asociados a la descripción de la operación.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.FaultDescriptionCollection" /> que contiene información acerca de los errores asociados a la descripción de la operación.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.IsOneWay">
      <summary>Obtiene o establece un valor que indica si una operación devuelve un mensaje de respuesta.</summary>
      <returns>true si este método recibe un mensaje de solicitud y no devuelve ningún mensaje de respuesta; de lo contrario, false.El valor predeterminado es false.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.KnownTypes">
      <summary>Obtiene los tipos conocidos asociados a la descripción de la operación.</summary>
      <returns>Colección de tipos conocidos asociada a la descripción de la operación.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.Messages">
      <summary>Obtiene o establece las descripciones de los mensajes que constituyen la operación.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.MessageDescriptionCollection" /> que contiene descripciones de los mensajes que constituye la operación.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.Name">
      <summary>Obtiene o establece el nombre de la descripción de la operación.</summary>
      <returns>Nombre de la descripción de la operación.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.OperationBehaviors">
      <summary>Obtiene el conjunto de comportamientos de la operación.</summary>
      <returns>El conjunto de comportamientos de la operación.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.TaskMethod">
      <summary>Obtiene o establece el método utilizado para la operación de tarea.</summary>
      <returns>Método usado para la operación de tarea.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.OperationDescriptionCollection">
      <summary>Representa una colección que contiene las descripciones de la operación.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescriptionCollection.Find(System.String)">
      <summary>Devuelve una descripción de operación con un nombre especificado de la colección de descripciones de la operación.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.OperationDescription" /> con el nombre especificado.</returns>
      <param name="name">Nombre de la operación.</param>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescriptionCollection.FindAll(System.String)">
      <summary>Devuelve una colección de todas las descripciones de la operación de la colección con el nombre especificado.</summary>
      <returns>
        <see cref="T:System.Collections.ObjectModel.Collection`1" /> de tipo <see cref="T:System.ServiceModel.Description.OperationDescription" /> que contiene las descripciones de la operación con el nombre especificado.</returns>
      <param name="name">Nombre de la operación.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> es null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescriptionCollection.InsertItem(System.Int32,System.ServiceModel.Description.OperationDescription)">
      <summary>Inserta un elemento en la colección de descripciones de la operación en el índice especificado.</summary>
      <param name="index">Índice basado en cero en el que debe insertarse <paramref name="item" />.</param>
      <param name="item">
        <see cref="T:System.ServiceModel.Description.OperationDescription" /> que se va a insertar.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> es null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescriptionCollection.SetItem(System.Int32,System.ServiceModel.Description.OperationDescription)">
      <summary>Reemplaza el elemento de la descripción de la operación en el índice especificado de la colección.</summary>
      <param name="index">Índice basado en cero en el que debe insertarse <paramref name="item" />.</param>
      <param name="item">Objeto <see cref="T:System.ServiceModel.Description.OperationDescription" /> que se va a establecer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> es null.</exception>
    </member>
    <member name="T:System.ServiceModel.Description.ServiceEndpoint">
      <summary>Representa el extremo de un servicio que permite a los clientes del mismo buscar y comunicarse con el servicio.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceEndpoint.#ctor(System.ServiceModel.Description.ContractDescription)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> para un contrato concreto.</summary>
      <param name="contract">
        <see cref="T:System.ServiceModel.Description.ContractDescription" /> para el extremo de servicio.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceEndpoint.#ctor(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> con un contrato, enlace y dirección especificados.</summary>
      <param name="contract">
        <see cref="T:System.ServiceModel.Description.ContractDescription" /> para el extremo de servicio.</param>
      <param name="binding">
        <see cref="T:System.ServiceModel.Channels.Binding" /> que especifica cómo el extremo de servicio se comunica con el mundo.</param>
      <param name="address">
        <see cref="T:System.ServiceModel.EndpointAddress" /> para el extremo de servicio.</param>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceEndpoint.Address">
      <summary>Obtiene o establece la dirección para el extremo del servicio.</summary>
      <returns>
        <see cref="T:System.ServiceModel.EndpointAddress" /> que especifica la ubicación del extremo de servicio.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceEndpoint.Binding">
      <summary>Obtiene o establece el enlace para el extremo del servicio.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Binding" /> para el extremo de servicio.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceEndpoint.Contract">
      <summary>Obtiene los contratos para el extremo de servicio.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.ContractDescription" /> que especifica el contrato para el extremo de servicio.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceEndpoint.EndpointBehaviors">
      <summary>Obtiene los comportamientos para el extremo de servicio.</summary>
      <returns>Comportamientos del extremo para el servicio.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceEndpoint.Name">
      <summary>Obtiene o establece el nombre del extremo de servicio.</summary>
      <returns>Nombre del extremo de servicio.El valor predeterminado es la concatenación del nombre de enlace y el nombre de la descripción de contrato.Por ejemplo, <see cref="P:System.ServiceModel.Channels.Binding.Name" /> +'_' + <see cref="P:System.ServiceModel.Description.ContractDescription.Name" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.ClientOperation">
      <summary>Se utiliza para modificar o extender el comportamiento de ejecución de una operación de contrato concreta en un objeto de cliente u objeto de canal de cliente.Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ClientOperation.#ctor(System.ServiceModel.Dispatcher.ClientRuntime,System.String,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /> mediante los valores especificados de <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" />, nombre y acción. </summary>
      <param name="parent">Objeto <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" /> contenedor.</param>
      <param name="name">Nombre de la operación.</param>
      <param name="action">Acción de la operación.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ClientOperation.#ctor(System.ServiceModel.Dispatcher.ClientRuntime,System.String,System.String,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /> mediante los valores especificados de <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" />, nombre, acción y respuesta. </summary>
      <param name="parent">Objeto <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" /> contenedor.</param>
      <param name="name">Nombre de la operación.</param>
      <param name="action">Acción de la operación.</param>
      <param name="replyAction">Acción del mensaje de respuesta.</param>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.Action">
      <summary>Obtiene la acción de la operación.</summary>
      <returns>Acción de la operación.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.ClientParameterInspectors">
      <summary>Obtiene una colección de objetos de inspector de parámetro utilizados para ver o modificar los parámetros antes o después de una llamada del cliente.</summary>
      <returns>Colección de objetos de inspector de parámetro usados para ver o modificar los parámetros antes o después de una llamada del cliente.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.DeserializeReply">
      <summary>Obtiene o establece un valor que indica si el valor de la propiedad <see cref="P:System.ServiceModel.Dispatcher.ClientOperation.Formatter" /> se utiliza para deserializar el mensaje de respuesta.</summary>
      <returns>true  si el tipo devuelto no es un <see cref="T:System.ServiceModel.Channels.Message" />; de lo contrario, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.Formatter">
      <summary>Obtiene o establece el formateador que serializa objetos en mensajes y deserializa mensajes en objetos.</summary>
      <returns>Implementación de <see cref="T:System.ServiceModel.Dispatcher.IClientMessageFormatter" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.IsOneWay">
      <summary>Obtiene o establece un valor que indica si la operación es una operación unidireccional.</summary>
      <returns>true si el cliente indigo2 no debe esperar una respuesta; de lo contrario, false.El valor predeterminado es false.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.Name">
      <summary>Obtiene el nombre de la operación.</summary>
      <returns>Nombre de la operación.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.Parent">
      <summary>Obtiene el objeto <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" /> contenedor.</summary>
      <returns>Objeto <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" /> contenedor.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.ReplyAction">
      <summary>Obtiene la acción del mensaje de respuesta para esta operación.</summary>
      <returns>Acción de la respuesta.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.SerializeRequest">
      <summary>Obtiene o establece un valor que especifica si el objeto <see cref="P:System.ServiceModel.Dispatcher.ClientOperation.Formatter" /> serializa un mensaje saliente.</summary>
      <returns>true si la propiedad <see cref="P:System.ServiceModel.Dispatcher.ClientOperation.Formatter" /> serializa los valores devueltos en un mensaje de respuesta; de lo contrario, false.El valor predeterminado es true.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.TaskMethod">
      <summary>Obtiene o establece el método asociado a una tarea.</summary>
      <returns>Un objeto de <see cref="T:System.Reflection.MethodInfo" /> que representa el método asociado a una tarea.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.TaskTResult">
      <summary>Obtiene o establece el tipo de resultado del método que está asociado a una tarea.</summary>
      <returns>
        <see cref="T:System.Type" /> del resultado del método que está asociado a una tarea.</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.ClientRuntime">
      <summary>Representa el punto de inserción para las clases que extienden la funcionalidad de objetos de cliente Windows Communication Foundation (WCF) para todos los mensajes controlados por una aplicación cliente.</summary>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ClientMessageInspectors">
      <summary>Obtiene una colección de objetos de inspector de mensaje utilizados para ver o modificar mensajes de una operación de servicio determinada.</summary>
      <returns>Colección de objetos de inspector de mensaje usada para ver o modificar mensajes de una operación de servicio determinada.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ClientOperations">
      <summary>Obtiene una colección de objetos de operación de cliente utilizados para adjuntar objetos de extensión que inspeccionan o modifican los mensajes y el comportamiento de una operación de servicio en concreto.</summary>
      <returns>Colección de objetos de operación de cliente usados para adjuntar objetos de extensión que inspeccionan o modifican los mensajes y el comportamiento de una operación de servicio en concreto.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ContractClientType">
      <summary>Obtiene o establece el tipo del contrato asociado a un cliente.</summary>
      <returns>Objeto <see cref="T:System.Type" /> que representa el contrato asociado a este cliente.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ContractName">
      <summary>Obtiene el nombre del contrato asociado a un cliente.</summary>
      <returns>Nombre del contrato para un cliente.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ContractNamespace">
      <summary>Obtiene el espacio de nombres del contrato asociado a un cliente.</summary>
      <returns>Espacio de nombres del contrato asociado a un cliente.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ManualAddressing">
      <summary>Obtiene o establece un valor que indica si el cliente agrega encabezados de direccionamiento a mensajes de solicitud-respuesta.</summary>
      <returns>true si el cliente no agrega ningún encabezado de direccionamiento; de lo contrario, false.El valor predeterminado es false.Vea la sección Comentarios.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.MaxFaultSize">
      <summary>Obtiene o establece el tamaño máximo del error.</summary>
      <returns>Entero que representa el tamaño máximo del error.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.OperationSelector">
      <summary>Obtiene o establece una implementación <see cref="T:System.ServiceModel.Dispatcher.IClientOperationSelector" /> que se puede utilizar para seleccionar un objeto <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" />.</summary>
      <returns>Objeto <see cref="T:System.ServiceModel.Dispatcher.IClientOperationSelector" /> que selecciona un objeto <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.UnhandledClientOperation">
      <summary>Obtiene la operación del cliente para los métodos que no tienen ningún objeto <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /> correspondiente en la colección de la propiedad <see cref="P:System.ServiceModel.Dispatcher.ClientRuntime.Operations" />.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /> que representa el método al que se enruta el contenido del mensaje actual cuando el selector de operaciones no encuentra ninguna operación que coincida con el mensaje.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.Via">
      <summary>Obtiene o establece la dirección de transporte que se utiliza para enviar los mensajes a través del cliente.</summary>
      <returns>
        <see cref="T:System.Uri" /> que es la dirección de destino del transporte.El valor predeterminado es el valor de <see cref="P:System.ServiceModel.EndpointAddress.Uri" /> para el cliente.</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.DispatchOperation">
      <summary>Se usa para modificar o extender el comportamiento de ejecución de una operación del servicio concreta de un extremo de servicio.Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.DispatchOperation.#ctor(System.ServiceModel.Dispatcher.DispatchRuntime,System.String,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Dispatcher.DispatchOperation" /> usando los valores especificados de tiempo de ejecución de envío, nombre y acción.</summary>
      <param name="parent">Objeto <see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" /> asociado.</param>
      <param name="name">Nombre de la operación de envío. Se utiliza como clave de la colección <see cref="P:System.ServiceModel.Dispatcher.DispatchRuntime.Operations" />.</param>
      <param name="action">Acción de mensaje para la que se crea esta operación de envío.</param>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.Action">
      <summary>Obtiene el valor de la acción para esta operación.</summary>
      <returns>Valor de la acción para esta operación.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.AutoDisposeParameters">
      <summary>Obtiene o establece si los parámetros se van a eliminar automáticamente.</summary>
      <returns>true si los parámetros se van a eliminar automáticamente; de lo contrario false.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.DeserializeRequest">
      <summary>Obtiene o establece un valor que indica si el valor de la propiedad <see cref="P:System.ServiceModel.Dispatcher.DispatchOperation.Formatter" /> se utiliza para deserializar el mensaje de solicitud.</summary>
      <returns>false si el tipo de valor devuelto es <see cref="T:System.ServiceModel.Channels.Message" /> y no hay parámetros de salida; de lo contrario, true.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.IsOneWay">
      <summary>Obtiene un valor que indica si la operación es una operación unidireccional.</summary>
      <returns>true si la operación tiene sólo una entrada; de lo contrario, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.Name">
      <summary>Obtiene el nombre de la operación.</summary>
      <returns>Nombre de la operación.Se usa como clave de la colección <see cref="P:System.ServiceModel.Dispatcher.DispatchRuntime.Operations" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.Parent">
      <summary>Obtiene el objeto <see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" /> asociado.</summary>
      <returns>Objeto <see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" /> asociado.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.SerializeReply">
      <summary>Obtiene o establece un valor que especifica si el objeto <see cref="P:System.ServiceModel.Dispatcher.DispatchOperation.Formatter" /> serializa los mensajes de respuesta.</summary>
      <returns>true si la propiedad <see cref="P:System.ServiceModel.Dispatcher.DispatchOperation.Formatter" /> serializa los valores devueltos en un mensaje de respuesta; de lo contrario, false. </returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.DispatchRuntime">
      <summary>Expone propiedades que se pueden utilizar para modificar el comportamiento del servicio predeterminado y adjunta objetos personalizados que pueden modificar el modo en que los mensajes entrantes se transforman en objetos y envían a las operaciones.Esta clase no puede heredarse.</summary>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.EndpointDispatcher">
      <summary>Representa el tiempo de ejecución que expone propiedades que permiten insertar extensiones o modificaciones en tiempo de ejecución para los mensajes de aplicaciones de servicio.</summary>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IClientMessageFormatter">
      <summary>Define métodos que se utilizan para controlar la conversión de mensajes en objetos y de objetos en mensajes para aplicaciones cliente.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IClientMessageFormatter.DeserializeReply(System.ServiceModel.Channels.Message,System.Object[])">
      <summary>Convierte un mensaje en un valor devuelto y en parámetros out que se devuelven a la operación de llamada.</summary>
      <returns>El valor devuelto de la operación.</returns>
      <param name="message">Mensaje entrante.</param>
      <param name="parameters">Cualquier valor out.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IClientMessageFormatter.SerializeRequest(System.ServiceModel.Channels.MessageVersion,System.Object[])">
      <summary>Convierte una matriz de <see cref="T:System.Object" /> en una clase <see cref="T:System.ServiceModel.Channels.Message" /> saliente. </summary>
      <returns>Mensaje de SOAP enviado a la operación de servicio.</returns>
      <param name="messageVersion">Versión del mensaje SOAP que se debe usar.</param>
      <param name="parameters">Los parámetros que se pasan a la operación de cliente de WCF.</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IClientMessageInspector">
      <summary>Define un objeto inspector de mensajes que se puede agregar a la colección <see cref="P:System.ServiceModel.Dispatcher.ClientRuntime.MessageInspectors" /> para ver o modificar mensajes.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IClientMessageInspector.AfterReceiveReply(System.ServiceModel.Channels.Message@,System.Object)">
      <summary>Habilita la inspección o modificación de un mensaje una vez recibido un mensaje de respuesta, pero antes de devolverlo a la aplicación cliente.</summary>
      <param name="reply">Mensaje que se va a transformar en tipos y se va a devolver a la aplicación cliente.</param>
      <param name="correlationState">Datos de estado de la correlación.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IClientMessageInspector.BeforeSendRequest(System.ServiceModel.Channels.Message@,System.ServiceModel.IClientChannel)">
      <summary>Habilita la inspección o modificación de un mensaje antes de que se envíe un mensaje de solicitud a un servicio.</summary>
      <returns>El objeto que se devuelve como argumento <paramref name="correlationState " />del método <see cref="M:System.ServiceModel.Dispatcher.IClientMessageInspector.AfterReceiveReply(System.ServiceModel.Channels.Message@,System.Object)" />.Es null si no se utiliza ningún estado de correlación.El procedimiento recomendado es convertirlo en <see cref="T:System.Guid" /> para garantizar que no hay dos objetos <paramref name="correlationState" /> iguales.</returns>
      <param name="request">Mensaje que se va a enviar al servicio.</param>
      <param name="channel">Canal de objeto de cliente de WCF.</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IClientOperationSelector">
      <summary>Define el contrato para un selector de operaciones.</summary>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.IClientOperationSelector.AreParametersRequiredForSelection">
      <summary>Obtiene un valor que indica si se requieren parámetros para determinar la selección.</summary>
      <returns>true si se requieren parámetros; de lo contrario, false.</returns>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IClientOperationSelector.SelectOperation(System.Reflection.MethodBase,System.Object[])">
      <summary>Devuelve la operación seleccionada.</summary>
      <returns>Operación seleccionada por el selector de operaciones personalizado.</returns>
      <param name="method">Método invocado.</param>
      <param name="parameters">Parámetros que se han pasado al método.</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IParameterInspector">
      <summary>Define el contrato implementado por inspectores de parámetros personalizados que permite inspeccionar o modificar la información antes y después de la realización de llamadas en el cliente o el servicio.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IParameterInspector.AfterCall(System.String,System.Object[],System.Object,System.Object)">
      <summary>Se llama a este método una vez que se devuelven las llamadas del cliente y antes de que se envíen las respuestas del servicio.</summary>
      <param name="operationName">Nombre de la operación invocada.</param>
      <param name="outputs">Cualquier objeto de salida.</param>
      <param name="returnValue">El valor devuelto de la operación.</param>
      <param name="correlationState">Cualquier estado de correlación devuelto desde el método <see cref="M:System.ServiceModel.Dispatcher.IParameterInspector.BeforeCall(System.String,System.Object[])" />, o null. </param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IParameterInspector.BeforeCall(System.String,System.Object[])">
      <summary>Se llama a este método antes de enviar las llamadas del cliente y antes de que se devuelvan las respuestas del servicio.</summary>
      <returns>Estado de correlación devuelto como parámetro <paramref name="correlationState" /> en <see cref="M:System.ServiceModel.Dispatcher.IParameterInspector.AfterCall(System.String,System.Object[],System.Object,System.Object)" />.Devuelve null si no se piensa utilizar el estado de correlación.</returns>
      <param name="operationName">Nombre de la operación.</param>
      <param name="inputs">Objetos que el cliente pasa al método.</param>
    </member>
    <member name="T:System.ServiceModel.Security.HttpDigestClientCredential">
      <summary>Se utiliza para la autenticación implícita de clientes HTTP.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.HttpDigestClientCredential.ClientCredential">
      <summary>Obtiene o establece la credencial de red que se va a utilizar para la autenticación implícita.</summary>
      <returns>
        <see cref="T:System.Net.NetworkCredential" /> que se va a utilizar para la autenticación implícita.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.MessageSecurityException">
      <summary>Representa una excepción que se produjo cuando hay algún error con la seguridad aplicada en un mensaje. </summary>
    </member>
    <member name="M:System.ServiceModel.Security.MessageSecurityException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Security.MessageSecurityException" /> con una cadena de error.</summary>
      <param name="message">Mensaje de error.</param>
    </member>
    <member name="M:System.ServiceModel.Security.MessageSecurityException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Security.MessageSecurityException" /> con una cadena de error y una referencia a la excepción interna que origina esta excepción.</summary>
      <param name="message">Mensaje de error.</param>
      <param name="innerException">Referencia a la excepción interna.</param>
    </member>
    <member name="T:System.ServiceModel.Security.SecurityAccessDeniedException">
      <summary>Representa la excepción de seguridad que se inicia cuando falla una solicitud de autorización de seguridad.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityAccessDeniedException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Security.SecurityAccessDeniedException" /> utilizando el mensaje especificado. </summary>
      <param name="message">Descripción de la condición de error.</param>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityAccessDeniedException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Security.SecurityAccessDeniedException" /> con el mensaje de error y la excepción interna especificados. </summary>
      <param name="message">Descripción de la condición de error.</param>
      <param name="innerException">La excepción interna que se va a utilizar.</param>
    </member>
    <member name="T:System.ServiceModel.Security.UserNamePasswordClientCredential">
      <summary>Representa una credencial del cliente basada en el nombre de usuario y la contraseña.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.UserNamePasswordClientCredential.Password">
      <summary>Obtiene o establece la contraseña.</summary>
      <returns>Contraseña.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.UserNamePasswordClientCredential.UserName">
      <summary>Obtiene o establece el nombre del usuario.</summary>
      <returns>Nombre del usuario.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.WindowsClientCredential">
      <summary>Le permite especificar propiedades relacionadas con las credenciales de Windows que se van a utilizar para representar al cliente.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.WindowsClientCredential.AllowedImpersonationLevel">
      <summary>Obtiene o establece el nivel de suplantación permitido. </summary>
      <returns>Uno de los valores de <see cref="T:System.Security.Principal.TokenImpersonationLevel" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.WindowsClientCredential.ClientCredential">
      <summary>Obtiene o establece la credencial de cliente de Windows.</summary>
      <returns>
        <see cref="T:System.Net.NetworkCredential" /> para el cliente.</returns>
    </member>
  </members>
</doc>